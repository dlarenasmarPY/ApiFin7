using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.Extensions.Configuration;
using Microsoft.EntityFrameworkCore.Metadata;


namespace Web.Api.Infrastructure.Data.EntityFramework.Entities;

public partial class Fin700Context : DbContext
{
    protected readonly IConfiguration _configuration;
    public Fin700Context(IConfiguration configuration)
    {
        _configuration = configuration;
    }

    public Fin700Context(DbContextOptions<Fin700Context> options)
        : base(options)
    {
    }

    public virtual DbSet<Aba> Abas { get; set; }

    public virtual DbSet<AcuTBodega> AcuTBodegas { get; set; }

    public virtual DbSet<AdqTClausulaCompra> AdqTClausulaCompras { get; set; }

    public virtual DbSet<AdqTClausulaCompraDocto> AdqTClausulaCompraDoctos { get; set; }

    public virtual DbSet<AdqTCondicionPago> AdqTCondicionPagos { get; set; }

    public virtual DbSet<AdqTConfiguracion> AdqTConfiguracions { get; set; }

    public virtual DbSet<AdqTCotizacionCab> AdqTCotizacionCabs { get; set; }

    public virtual DbSet<AdqTCotizacionCabCom> AdqTCotizacionCabComs { get; set; }

    public virtual DbSet<AdqTCotizacionCabFlete> AdqTCotizacionCabFletes { get; set; }

    public virtual DbSet<AdqTCotizacionCabGlosa> AdqTCotizacionCabGlosas { get; set; }

    public virtual DbSet<AdqTCotizacionDet> AdqTCotizacionDets { get; set; }

    public virtual DbSet<AdqTCotizacionDetEspTec> AdqTCotizacionDetEspTecs { get; set; }

    public virtual DbSet<AdqTCotizacionDetGlosa> AdqTCotizacionDetGlosas { get; set; }

    public virtual DbSet<AdqTCotizacionDetResp> AdqTCotizacionDetResps { get; set; }

    public virtual DbSet<AdqTCotizacionReserva> AdqTCotizacionReservas { get; set; }

    public virtual DbSet<AdqTDoctosAsoc> AdqTDoctosAsocs { get; set; }

    public virtual DbSet<AdqTEmpresaCompradora> AdqTEmpresaCompradoras { get; set; }

    public virtual DbSet<AdqTFleteProvCab> AdqTFleteProvCabs { get; set; }

    public virtual DbSet<AdqTFleteProvDet> AdqTFleteProvDets { get; set; }

    public virtual DbSet<AdqTFormatosOc> AdqTFormatosOcs { get; set; }

    public virtual DbSet<AdqTGlosa> AdqTGlosas { get; set; }

    public virtual DbSet<AdqTGlosasEspHo> AdqTGlosasEspHos { get; set; }

    public virtual DbSet<AdqTImagenesOcHo> AdqTImagenesOcHos { get; set; }

    public virtual DbSet<AdqTListaPrecioCompraCab> AdqTListaPrecioCompraCabs { get; set; }

    public virtual DbSet<AdqTListaPrecioCompraDet> AdqTListaPrecioCompraDets { get; set; }

    public virtual DbSet<AdqTMotivosBloqueo> AdqTMotivosBloqueos { get; set; }

    public virtual DbSet<AdqTOcCab> AdqTOcCabs { get; set; }

    public virtual DbSet<AdqTOcCabComercial> AdqTOcCabComercials { get; set; }

    public virtual DbSet<AdqTOcCabCont> AdqTOcCabConts { get; set; }

    public virtual DbSet<AdqTOcCabFecha> AdqTOcCabFechas { get; set; }

    public virtual DbSet<AdqTOcCabFlete> AdqTOcCabFletes { get; set; }

    public virtual DbSet<AdqTOcCabGlosa> AdqTOcCabGlosas { get; set; }

    public virtual DbSet<AdqTOcCabTotale> AdqTOcCabTotales { get; set; }

    public virtual DbSet<AdqTOcDet> AdqTOcDets { get; set; }

    public virtual DbSet<AdqTOcDetCont> AdqTOcDetConts { get; set; }

    public virtual DbSet<AdqTOcDetEspTec> AdqTOcDetEspTecs { get; set; }

    public virtual DbSet<AdqTOcDetGlosa> AdqTOcDetGlosas { get; set; }

    public virtual DbSet<AdqTOcDetRecetum> AdqTOcDetReceta { get; set; }

    public virtual DbSet<AdqTOcMotivo> AdqTOcMotivos { get; set; }

    public virtual DbSet<AdqTOcdetFechaEntrega> AdqTOcdetFechaEntregas { get; set; }

    public virtual DbSet<AdqTPresupuestoCompra> AdqTPresupuestoCompras { get; set; }

    public virtual DbSet<AdqTPresupuestoCompraCat> AdqTPresupuestoCompraCats { get; set; }

    public virtual DbSet<AdqTPresupuestoCompraProd> AdqTPresupuestoCompraProds { get; set; }

    public virtual DbSet<AdqTProcesoCompraCab> AdqTProcesoCompraCabs { get; set; }

    public virtual DbSet<AdqTProcesoCompraDet> AdqTProcesoCompraDets { get; set; }

    public virtual DbSet<AdqTProveedoresBloqueo> AdqTProveedoresBloqueos { get; set; }

    public virtual DbSet<AdqTRolUsuarioCentro> AdqTRolUsuarioCentros { get; set; }

    public virtual DbSet<AdqTRolUsuarioEmp> AdqTRolUsuarioEmps { get; set; }

    public virtual DbSet<AdqTRole> AdqTRoles { get; set; }

    public virtual DbSet<AdqTRubro> AdqTRubros { get; set; }

    public virtual DbSet<AdqTRubrosCategoria> AdqTRubrosCategorias { get; set; }

    public virtual DbSet<AdqTRubrosEntidade> AdqTRubrosEntidades { get; set; }

    public virtual DbSet<AdqTTipoAdjudicacion> AdqTTipoAdjudicacions { get; set; }

    public virtual DbSet<AdqTTipoOpeConvenio> AdqTTipoOpeConvenios { get; set; }

    public virtual DbSet<AdqtMetodosEnvio> AdqtMetodosEnvios { get; set; }

    public virtual DbSet<AfiTAporte> AfiTAportes { get; set; }

    public virtual DbSet<AfiTAportesBit> AfiTAportesBits { get; set; }

    public virtual DbSet<AfiTArchivoInventario> AfiTArchivoInventarios { get; set; }

    public virtual DbSet<AfiTArtProInventario> AfiTArtProInventarios { get; set; }

    public virtual DbSet<AfiTBaja> AfiTBajas { get; set; }

    public virtual DbSet<AfiTBien> AfiTBiens { get; set; }

    public virtual DbSet<AfiTBienCentroResp> AfiTBienCentroResps { get; set; }

    public virtual DbSet<AfiTBienCentroRespHist> AfiTBienCentroRespHists { get; set; }

    public virtual DbSet<AfiTBienCmvalorResidual> AfiTBienCmvalorResiduals { get; set; }

    public virtual DbSet<AfiTBienCorrMonDep> AfiTBienCorrMonDeps { get; set; }

    public virtual DbSet<AfiTBienCorrMonDepBit> AfiTBienCorrMonDepBits { get; set; }

    public virtual DbSet<AfiTBienDatCont> AfiTBienDatConts { get; set; }

    public virtual DbSet<AfiTBienDatContBit> AfiTBienDatContBits { get; set; }

    public virtual DbSet<AfiTBienDatRet> AfiTBienDatRets { get; set; }

    public virtual DbSet<AfiTBienDatSeg> AfiTBienDatSegs { get; set; }

    public virtual DbSet<AfiTBienDatTec> AfiTBienDatTecs { get; set; }

    public virtual DbSet<AfiTBienDatosCompra> AfiTBienDatosCompras { get; set; }

    public virtual DbSet<AfiTBitacoraComprobante> AfiTBitacoraComprobantes { get; set; }

    public virtual DbSet<AfiTBitacoraVidaIfr> AfiTBitacoraVidaIfrs { get; set; }

    public virtual DbSet<AfiTCalculoAporte> AfiTCalculoAportes { get; set; }

    public virtual DbSet<AfiTConfiguracion> AfiTConfiguracions { get; set; }

    public virtual DbSet<AfiTDeterioroIfr> AfiTDeterioroIfrs { get; set; }

    public virtual DbSet<AfiTEstBajaNoCalifica> AfiTEstBajaNoCalificas { get; set; }

    public virtual DbSet<AfiTEstCabProInventario> AfiTEstCabProInventarios { get; set; }

    public virtual DbSet<AfiTEstDetProInventario> AfiTEstDetProInventarios { get; set; }

    public virtual DbSet<AfiTEstInterfazInventario> AfiTEstInterfazInventarios { get; set; }

    public virtual DbSet<AfiTEstadoBien> AfiTEstadoBiens { get; set; }

    public virtual DbSet<AfiTEstadoCredito> AfiTEstadoCreditos { get; set; }

    public virtual DbSet<AfiTEstrucClasific> AfiTEstrucClasifics { get; set; }

    public virtual DbSet<AfiTEstrucClasificIfr> AfiTEstrucClasificIfrs { get; set; }

    public virtual DbSet<AfiTFormula> AfiTFormulas { get; set; }

    public virtual DbSet<AfiTGrupo> AfiTGrupos { get; set; }

    public virtual DbSet<AfiTGrupoCuenta> AfiTGrupoCuentas { get; set; }

    public virtual DbSet<AfiTHistorialInterfaz> AfiTHistorialInterfazs { get; set; }

    public virtual DbSet<AfiTIntBajasNoCalifican> AfiTIntBajasNoCalificans { get; set; }

    public virtual DbSet<AfiTInterfazAux> AfiTInterfazAuxes { get; set; }

    public virtual DbSet<AfiTInterfazAuxBaja> AfiTInterfazAuxBajas { get; set; }

    public virtual DbSet<AfiTInterfazError> AfiTInterfazErrors { get; set; }

    public virtual DbSet<AfiTInterfazErrorBaja> AfiTInterfazErrorBajas { get; set; }

    public virtual DbSet<AfiTInterfazFormato> AfiTInterfazFormatos { get; set; }

    public virtual DbSet<AfiTInterfazFormatoBaja> AfiTInterfazFormatoBajas { get; set; }

    public virtual DbSet<AfiTInterfazTmp> AfiTInterfazTmps { get; set; }

    public virtual DbSet<AfiTParalizado> AfiTParalizados { get; set; }

    public virtual DbSet<AfiTPerdidaDeterioroIfr> AfiTPerdidaDeterioroIfrs { get; set; }

    public virtual DbSet<AfiTPlanBiene> AfiTPlanBienes { get; set; }

    public virtual DbSet<AfiTPlanBienesIfr> AfiTPlanBienesIfrs { get; set; }

    public virtual DbSet<AfiTProInventarioCab> AfiTProInventarioCabs { get; set; }

    public virtual DbSet<AfiTProInventarioDet> AfiTProInventarioDets { get; set; }

    public virtual DbSet<AfiTProcesoCredito> AfiTProcesoCreditos { get; set; }

    public virtual DbSet<AfiTProyCalAporte> AfiTProyCalAportes { get; set; }

    public virtual DbSet<AfiTProyCalBienCmvalorResidual> AfiTProyCalBienCmvalorResiduals { get; set; }

    public virtual DbSet<AfiTProyCalBienCorrMonDep> AfiTProyCalBienCorrMonDeps { get; set; }

    public virtual DbSet<AfiTProyCalBienDatCont> AfiTProyCalBienDatConts { get; set; }

    public virtual DbSet<AfiTProyCalBitacoraCab> AfiTProyCalBitacoraCabs { get; set; }

    public virtual DbSet<AfiTProyCalBitacoraDet> AfiTProyCalBitacoraDets { get; set; }

    public virtual DbSet<AfiTProyCalCalculoAporte> AfiTProyCalCalculoAportes { get; set; }

    public virtual DbSet<AfiTProyCalVhorasConsumidum> AfiTProyCalVhorasConsumida { get; set; }

    public virtual DbSet<AfiTResponsable> AfiTResponsables { get; set; }

    public virtual DbSet<AfiTSubGrupo> AfiTSubGrupos { get; set; }

    public virtual DbSet<AfiTTipoCalculo> AfiTTipoCalculos { get; set; }

    public virtual DbSet<AfiTTipoOperacionCab> AfiTTipoOperacionCabs { get; set; }

    public virtual DbSet<AfiTTipoOperacionDet> AfiTTipoOperacionDets { get; set; }

    public virtual DbSet<AfiTTipoPrendum> AfiTTipoPrenda { get; set; }

    public virtual DbSet<AfiTTipoSeguro> AfiTTipoSeguros { get; set; }

    public virtual DbSet<AfiTTransferenciaCresp> AfiTTransferenciaCresps { get; set; }

    public virtual DbSet<AfiTTransferencium> AfiTTransferencia { get; set; }

    public virtual DbSet<AfiTUbicacion> AfiTUbicacions { get; set; }

    public virtual DbSet<AfiTUbicacionFisicaInv> AfiTUbicacionFisicaInvs { get; set; }

    public virtual DbSet<AfiTUnidadResp> AfiTUnidadResps { get; set; }

    public virtual DbSet<AfiTVhorasConsumidum> AfiTVhorasConsumida { get; set; }

    public virtual DbSet<ApfTBoleta> ApfTBoletas { get; set; }

    public virtual DbSet<ApfTBoletasVencimiento> ApfTBoletasVencimientos { get; set; }

    public virtual DbSet<ApfTCabAporteRescate> ApfTCabAporteRescates { get; set; }

    public virtual DbSet<ApfTConfiguracionActi> ApfTConfiguracionActis { get; set; }

    public virtual DbSet<ApfTControlDevengamiento> ApfTControlDevengamientos { get; set; }

    public virtual DbSet<ApfTControlDevengamientoBol> ApfTControlDevengamientoBols { get; set; }

    public virtual DbSet<ApfTDetAporteRescate> ApfTDetAporteRescates { get; set; }

    public virtual DbSet<ApfTDocumentoFisico> ApfTDocumentoFisicos { get; set; }

    public virtual DbSet<ApfTEntidade> ApfTEntidades { get; set; }

    public virtual DbSet<ApfTEstado> ApfTEstados { get; set; }

    public virtual DbSet<ApfTFormaPago> ApfTFormaPagos { get; set; }

    public virtual DbSet<ApfTInstrumentosFinanciero> ApfTInstrumentosFinancieros { get; set; }

    public virtual DbSet<ApfTMaterium> ApfTMateria { get; set; }

    public virtual DbSet<ApfTMediosRescate> ApfTMediosRescates { get; set; }

    public virtual DbSet<ApfTModulo> ApfTModulos { get; set; }

    public virtual DbSet<ApfTPasivosFinanciero> ApfTPasivosFinancieros { get; set; }

    public virtual DbSet<ApfTPasivosFinancierosDet> ApfTPasivosFinancierosDets { get; set; }

    public virtual DbSet<ApfTPasivosFinancierosGasto> ApfTPasivosFinancierosGastos { get; set; }

    public virtual DbSet<ApfTTipoActivoFinanciero> ApfTTipoActivoFinancieros { get; set; }

    public virtual DbSet<ApfTTipoDocumento> ApfTTipoDocumentos { get; set; }

    public virtual DbSet<ApfTTipoFondoMutuo> ApfTTipoFondoMutuos { get; set; }

    public virtual DbSet<ApfTTipoIntere> ApfTTipoInteres { get; set; }

    public virtual DbSet<ApfTTipoLineaCredito> ApfTTipoLineaCreditos { get; set; }

    public virtual DbSet<ApfTTipoLineaCreditoBco> ApfTTipoLineaCreditoBcos { get; set; }

    public virtual DbSet<ApfTTipoLineaCreditoCtaCte> ApfTTipoLineaCreditoCtaCtes { get; set; }

    public virtual DbSet<ApfTTiposPasivo> ApfTTiposPasivos { get; set; }

    public virtual DbSet<ApfTUso> ApfTUsos { get; set; }

    public virtual DbSet<AudTPresupuesto> AudTPresupuestos { get; set; }

    public virtual DbSet<B2btCuentasAsociada> B2btCuentasAsociadas { get; set; }

    public virtual DbSet<B2btEmpresasAsociada> B2btEmpresasAsociadas { get; set; }

    public virtual DbSet<B2btEmpresasRegla> B2btEmpresasReglas { get; set; }

    public virtual DbSet<B2btEntidade> B2btEntidades { get; set; }

    public virtual DbSet<B2btEntidadesCopy19042011> B2btEntidadesCopy19042011s { get; set; }

    public virtual DbSet<B2btTipoDocRegla> B2btTipoDocReglas { get; set; }

    public virtual DbSet<B2btTipoDocumento> B2btTipoDocumentos { get; set; }

    public virtual DbSet<B2btTipoDocumentosCopy19042011> B2btTipoDocumentosCopy19042011s { get; set; }

    public virtual DbSet<BconTDoctosMigrado> BconTDoctosMigrados { get; set; }

    public virtual DbSet<BconTTraspasoEmpresa> BconTTraspasoEmpresas { get; set; }

    public virtual DbSet<BesTBitacoraAprRech> BesTBitacoraAprReches { get; set; }

    public virtual DbSet<BesTBitacoraWsIcon> BesTBitacoraWsIcons { get; set; }

    public virtual DbSet<CbaTArchivoCartola> CbaTArchivoCartolas { get; set; }

    public virtual DbSet<CbaTArchivoFormato> CbaTArchivoFormatos { get; set; }

    public virtual DbSet<CbaTCartola> CbaTCartolas { get; set; }

    public virtual DbSet<CbaTCartolasBitacoraCarga> CbaTCartolasBitacoraCargas { get; set; }

    public virtual DbSet<CbaTCartolasDet> CbaTCartolasDets { get; set; }

    public virtual DbSet<CbaTCartolasPaso> CbaTCartolasPasos { get; set; }

    public virtual DbSet<CbaTCartolasTmp> CbaTCartolasTmps { get; set; }

    public virtual DbSet<CbaTConceptosBancario> CbaTConceptosBancarios { get; set; }

    public virtual DbSet<CbaTDiccionarioCartola> CbaTDiccionarioCartolas { get; set; }

    public virtual DbSet<CceTDocumento> CceTDocumentos { get; set; }

    public virtual DbSet<CceTDocumentoAgeing> CceTDocumentoAgeings { get; set; }

    public virtual DbSet<CceTMovimiento> CceTMovimientos { get; set; }

    public virtual DbSet<CceTMovimientos20170414> CceTMovimientos20170414s { get; set; }

    public virtual DbSet<CceTSaldosDocum> CceTSaldosDocums { get; set; }

    public virtual DbSet<CcoTArchivoEntidadExterna> CcoTArchivoEntidadExternas { get; set; }

    public virtual DbSet<CcoTArchivoPaso> CcoTArchivoPasos { get; set; }

    public virtual DbSet<CcoTAsociaNominaDocumento> CcoTAsociaNominaDocumentos { get; set; }

    public virtual DbSet<CcoTAsociaNominaOperacion> CcoTAsociaNominaOperacions { get; set; }

    public virtual DbSet<CcoTBitacora> CcoTBitacoras { get; set; }

    public virtual DbSet<CcoTBitacoraArchivo> CcoTBitacoraArchivos { get; set; }

    public virtual DbSet<CcoTConfiguracion> CcoTConfiguracions { get; set; }

    public virtual DbSet<CcoTCorrNomina> CcoTCorrNominas { get; set; }

    public virtual DbSet<CcoTCriticidad> CcoTCriticidads { get; set; }

    public virtual DbSet<CcoTDiccionarioArchivo> CcoTDiccionarioArchivos { get; set; }

    public virtual DbSet<CcoTDocumentoEmitido> CcoTDocumentoEmitidos { get; set; }

    public virtual DbSet<CcoTDocumentoHistorium> CcoTDocumentoHistoria { get; set; }

    public virtual DbSet<CcoTDocumentoImprimir> CcoTDocumentoImprimirs { get; set; }

    public virtual DbSet<CcoTEmpresaMovtoCuentum> CcoTEmpresaMovtoCuenta { get; set; }

    public virtual DbSet<CcoTEntidadCobModalidad> CcoTEntidadCobModalidads { get; set; }

    public virtual DbSet<CcoTEntidadCobTipoMovto> CcoTEntidadCobTipoMovtos { get; set; }

    public virtual DbSet<CcoTEntidadCobranza> CcoTEntidadCobranzas { get; set; }

    public virtual DbSet<CcoTEntidadMovimiento> CcoTEntidadMovimientos { get; set; }

    public virtual DbSet<CcoTEstadosDocumento> CcoTEstadosDocumentos { get; set; }

    public virtual DbSet<CcoTEvento> CcoTEventos { get; set; }

    public virtual DbSet<CcoTFolioDocumento> CcoTFolioDocumentos { get; set; }

    public virtual DbSet<CcoTFolioDocumentosNulo> CcoTFolioDocumentosNulos { get; set; }

    public virtual DbSet<CcoTFormatoArchivo> CcoTFormatoArchivos { get; set; }

    public virtual DbSet<CcoTFormatoLetPag> CcoTFormatoLetPags { get; set; }

    public virtual DbSet<CcoTGastoProtesto> CcoTGastoProtestos { get; set; }

    public virtual DbSet<CcoTIndicadorMovimiento> CcoTIndicadorMovimientos { get; set; }

    public virtual DbSet<CcoTInstruccionCobranza> CcoTInstruccionCobranzas { get; set; }

    public virtual DbSet<CcoTInterfazEntradum> CcoTInterfazEntrada { get; set; }

    public virtual DbSet<CcoTInterfazError> CcoTInterfazErrors { get; set; }

    public virtual DbSet<CcoTModalidadCobranza> CcoTModalidadCobranzas { get; set; }

    public virtual DbSet<CcoTNominaCobCab> CcoTNominaCobCabs { get; set; }

    public virtual DbSet<CcoTNominaCobDet> CcoTNominaCobDets { get; set; }

    public virtual DbSet<CcoTNominaExtCab> CcoTNominaExtCabs { get; set; }

    public virtual DbSet<CcoTNominaExtDet> CcoTNominaExtDets { get; set; }

    public virtual DbSet<CcoTNominaIntCab> CcoTNominaIntCabs { get; set; }

    public virtual DbSet<CcoTNominaIntDet> CcoTNominaIntDets { get; set; }

    public virtual DbSet<CcoTProrrogaCab> CcoTProrrogaCabs { get; set; }

    public virtual DbSet<CcoTProrrogaDet> CcoTProrrogaDets { get; set; }

    public virtual DbSet<CcoTRecepcionDocCab> CcoTRecepcionDocCabs { get; set; }

    public virtual DbSet<CcoTRecepcionDocDet> CcoTRecepcionDocDets { get; set; }

    public virtual DbSet<CcoTRelDocumento> CcoTRelDocumentos { get; set; }

    public virtual DbSet<CcoTRelEntDocumento> CcoTRelEntDocumentos { get; set; }

    public virtual DbSet<CcoTRelEntEstado> CcoTRelEntEstados { get; set; }

    public virtual DbSet<CcoTRelEntInstruccion> CcoTRelEntInstruccions { get; set; }

    public virtual DbSet<CcoTRelEntModalidad> CcoTRelEntModalidads { get; set; }

    public virtual DbSet<CcoTRelEntMonedum> CcoTRelEntMoneda { get; set; }

    public virtual DbSet<CcoTRelEntPlaza> CcoTRelEntPlazas { get; set; }

    public virtual DbSet<CcoTRenegociacion> CcoTRenegociacions { get; set; }

    public virtual DbSet<CcoTRenegociacionAbono> CcoTRenegociacionAbonos { get; set; }

    public virtual DbSet<CcoTRenegociacionAval> CcoTRenegociacionAvals { get; set; }

    public virtual DbSet<CcoTRenegociacionCuotum> CcoTRenegociacionCuota { get; set; }

    public virtual DbSet<CcoTRenegociacionDocto> CcoTRenegociacionDoctos { get; set; }

    public virtual DbSet<CcoTRenegociacionGasto> CcoTRenegociacionGastos { get; set; }

    public virtual DbSet<CcoTReporteNomina> CcoTReporteNominas { get; set; }

    public virtual DbSet<CcoTSituacionCob> CcoTSituacionCobs { get; set; }

    public virtual DbSet<CcoTSolicitudEmiDoc> CcoTSolicitudEmiDocs { get; set; }

    public virtual DbSet<CcoTSolicitudEmiDocDet> CcoTSolicitudEmiDocDets { get; set; }

    public virtual DbSet<CcoTTipoGasto> CcoTTipoGastos { get; set; }

    public virtual DbSet<CcoTTipoMovimiento> CcoTTipoMovimientos { get; set; }

    public virtual DbSet<CcoTTipoNomina> CcoTTipoNominas { get; set; }

    public virtual DbSet<CcoTTipoUbicacion> CcoTTipoUbicacions { get; set; }

    public virtual DbSet<CcoTUbicacionFisDoc> CcoTUbicacionFisDocs { get; set; }

    public virtual DbSet<CcpTBitacora> CcpTBitacoras { get; set; }

    public virtual DbSet<CcpTBitacoraDet> CcpTBitacoraDets { get; set; }

    public virtual DbSet<CcpTCompromiso> CcpTCompromisos { get; set; }

    public virtual DbSet<CcpTCompromisosResp> CcpTCompromisosResps { get; set; }

    public virtual DbSet<CcpTConcepGasComp> CcpTConcepGasComps { get; set; }

    public virtual DbSet<CcpTConceptosCcp> CcpTConceptosCcps { get; set; }

    public virtual DbSet<CcpTConceptosCcpSdo> CcpTConceptosCcpSdos { get; set; }

    public virtual DbSet<CcpTConceptosGasto> CcpTConceptosGastos { get; set; }

    public virtual DbSet<CcpTCtasEmpresa> CcpTCtasEmpresas { get; set; }

    public virtual DbSet<CcpTMovimiento> CcpTMovimientos { get; set; }

    public virtual DbSet<CcpTMovimientosResp> CcpTMovimientosResps { get; set; }

    public virtual DbSet<CcpTMovtosGto> CcpTMovtosGtos { get; set; }

    public virtual DbSet<CcpTParametro> CcpTParametros { get; set; }

    public virtual DbSet<CcpTTmpCompromiso> CcpTTmpCompromisos { get; set; }

    public virtual DbSet<CcpTTmpCuota> CcpTTmpCuotas { get; set; }

    public virtual DbSet<CcpTTmpPagEspecial> CcpTTmpPagEspecials { get; set; }

    public virtual DbSet<ClausulaCompra> ClausulaCompras { get; set; }

    public virtual DbSet<ConTAgruTipoCuentum> ConTAgruTipoCuenta { get; set; }

    public virtual DbSet<ConTAuditaSaldo> ConTAuditaSaldos { get; set; }

    public virtual DbSet<ConTCabeceraCom> ConTCabeceraComs { get; set; }

    public virtual DbSet<ConTCabeceraOpe> ConTCabeceraOpes { get; set; }

    public virtual DbSet<ConTCentrosResp> ConTCentrosResps { get; set; }

    public virtual DbSet<ConTCierreApertura> ConTCierreAperturas { get; set; }

    public virtual DbSet<ConTClasificaCentro> ConTClasificaCentros { get; set; }

    public virtual DbSet<ConTClasificaConcepto> ConTClasificaConceptos { get; set; }

    public virtual DbSet<ConTClasificaCuenta> ConTClasificaCuentas { get; set; }

    public virtual DbSet<ConTClasificaProyecto> ConTClasificaProyectos { get; set; }

    public virtual DbSet<ConTConceptosImp> ConTConceptosImps { get; set; }

    public virtual DbSet<ConTConfiguracion> ConTConfiguracions { get; set; }

    public virtual DbSet<ConTConfiguracionAudi> ConTConfiguracionAudis { get; set; }

    public virtual DbSet<ConTCorrPeriodo> ConTCorrPeriodos { get; set; }

    public virtual DbSet<ConTCorreccionMon> ConTCorreccionMons { get; set; }

    public virtual DbSet<ConTCorreccionMonAux> ConTCorreccionMonAuxes { get; set; }

    public virtual DbSet<ConTCorrelativo> ConTCorrelativos { get; set; }

    public virtual DbSet<ConTCtaTipoEscenario> ConTCtaTipoEscenarios { get; set; }

    public virtual DbSet<ConTCuenta> ConTCuentas { get; set; }

    public virtual DbSet<ConTCuentasEmpresa> ConTCuentasEmpresas { get; set; }

    public virtual DbSet<ConTCuentasMoneda> ConTCuentasMonedas { get; set; }

    public virtual DbSet<ConTDetalleCom> ConTDetalleComs { get; set; }

    public virtual DbSet<ConTDetalleDesglose> ConTDetalleDesgloses { get; set; }

    public virtual DbSet<ConTDiferenciaDesglose> ConTDiferenciaDesgloses { get; set; }

    public virtual DbSet<ConTEstado> ConTEstados { get; set; }

    public virtual DbSet<ConTFechaControl> ConTFechaControls { get; set; }

    public virtual DbSet<ConTGloTipicaImp> ConTGloTipicaImps { get; set; }

    public virtual DbSet<ConTGloTipicaOpe> ConTGloTipicaOpes { get; set; }

    public virtual DbSet<ConTLineaProducto> ConTLineaProductos { get; set; }

    public virtual DbSet<ConTMovimiento> ConTMovimientos { get; set; }

    public virtual DbSet<ConTNumerosConc> ConTNumerosConcs { get; set; }

    public virtual DbSet<ConTPlanCentro> ConTPlanCentros { get; set; }

    public virtual DbSet<ConTPlanConcepto> ConTPlanConceptos { get; set; }

    public virtual DbSet<ConTPlanCuenta> ConTPlanCuentas { get; set; }

    public virtual DbSet<ConTPlanProyecto> ConTPlanProyectos { get; set; }

    public virtual DbSet<ConTPlanProyectos2> ConTPlanProyectos2s { get; set; }

    public virtual DbSet<ConTSaldo> ConTSaldos { get; set; }

    public virtual DbSet<ConTTipoAuxiliar> ConTTipoAuxiliars { get; set; }

    public virtual DbSet<ConTTipoClasificaCuentum> ConTTipoClasificaCuenta { get; set; }

    public virtual DbSet<ConTTipoComprobante> ConTTipoComprobantes { get; set; }

    public virtual DbSet<ConTTipoCuentum> ConTTipoCuenta { get; set; }

    public virtual DbSet<ConTTipoOperacion> ConTTipoOperacions { get; set; }

    public virtual DbSet<ConTTipoOperacionAux> ConTTipoOperacionAuxes { get; set; }

    public virtual DbSet<ConTTipoOperacionCtum> ConTTipoOperacionCta { get; set; }

    public virtual DbSet<ConTTipoOperacionEsq> ConTTipoOperacionEsqs { get; set; }

    public virtual DbSet<ConVDetalleMov> ConVDetalleMovs { get; set; }

    public virtual DbSet<ConVPresMultimonedum> ConVPresMultimoneda { get; set; }

    public virtual DbSet<ConVRealPresCfg> ConVRealPresCfgs { get; set; }

    public virtual DbSet<ContCabeceracom20170327> ContCabeceracom20170327s { get; set; }

    public virtual DbSet<ContCabeceraope20170327> ContCabeceraope20170327s { get; set; }

    public virtual DbSet<ContCorrperiodos20161215> ContCorrperiodos20161215s { get; set; }

    public virtual DbSet<ContCorrperiodos20170410> ContCorrperiodos20170410s { get; set; }

    public virtual DbSet<DlgTAsociaDivUniVentaCompra> DlgTAsociaDivUniVentaCompras { get; set; }

    public virtual DbSet<DlgTAsociaDivisionContable> DlgTAsociaDivisionContables { get; set; }

    public virtual DbSet<DlgTAsociaOpeVentaCompra> DlgTAsociaOpeVentaCompras { get; set; }

    public virtual DbSet<DlgTBitacoraDte> DlgTBitacoraDtes { get; set; }

    public virtual DbSet<DlgTBitacoraDteRecepcion> DlgTBitacoraDteRecepcions { get; set; }

    public virtual DbSet<DlgTBitacoraDtecompra> DlgTBitacoraDtecompras { get; set; }

    public virtual DbSet<DlgTCambioSujetoCab> DlgTCambioSujetoCabs { get; set; }

    public virtual DbSet<DlgTCambioSujetoDet> DlgTCambioSujetoDets { get; set; }

    public virtual DbSet<DlgTCambioSujetoDetGlo> DlgTCambioSujetoDetGlos { get; set; }

    public virtual DbSet<DlgTCertificacion> DlgTCertificacions { get; set; }

    public virtual DbSet<DlgTCesion> DlgTCesions { get; set; }

    public virtual DbSet<DlgTCesion20170531> DlgTCesion20170531s { get; set; }

    public virtual DbSet<DlgTCesion20170616> DlgTCesion20170616s { get; set; }

    public virtual DbSet<DlgTConfiguracion> DlgTConfiguracions { get; set; }

    public virtual DbSet<DlgTDoctoLegalCab> DlgTDoctoLegalCabs { get; set; }

    public virtual DbSet<DlgTDoctoLegalCabAtr> DlgTDoctoLegalCabAtrs { get; set; }

    public virtual DbSet<DlgTDoctoLegalCabExp> DlgTDoctoLegalCabExps { get; set; }

    public virtual DbSet<DlgTDoctoLegalCabExpCon> DlgTDoctoLegalCabExpCons { get; set; }

    public virtual DbSet<DlgTDoctoLegalCabRef> DlgTDoctoLegalCabRefs { get; set; }

    public virtual DbSet<DlgTDoctoLegalCabTer> DlgTDoctoLegalCabTers { get; set; }

    public virtual DbSet<DlgTDoctoLegalDet> DlgTDoctoLegalDets { get; set; }

    public virtual DbSet<DlgTDoctoLegalDetCon> DlgTDoctoLegalDetCons { get; set; }

    public virtual DbSet<DlgTDoctoLegalDetGlo> DlgTDoctoLegalDetGlos { get; set; }

    public virtual DbSet<DlgTDoctoLegalDetImp> DlgTDoctoLegalDetImps { get; set; }

    public virtual DbSet<DlgTDoctoLegalFol> DlgTDoctoLegalFols { get; set; }

    public virtual DbSet<DlgTDoctoLegalRecibo> DlgTDoctoLegalRecibos { get; set; }

    public virtual DbSet<DlgTDoctoLegalRef> DlgTDoctoLegalRefs { get; set; }

    public virtual DbSet<DlgTDoctoLegalXml> DlgTDoctoLegalXmls { get; set; }

    public virtual DbSet<DlgTEmpresaFormato> DlgTEmpresaFormatos { get; set; }

    public virtual DbSet<DlgTFolioElectronico> DlgTFolioElectronicos { get; set; }

    public virtual DbSet<DlgTLibro> DlgTLibros { get; set; }

    public virtual DbSet<DlgTLibro20161207> DlgTLibro20161207s { get; set; }

    public virtual DbSet<DlgTLibro20170531> DlgTLibro20170531s { get; set; }

    public virtual DbSet<DlgTLibro20170616> DlgTLibro20170616s { get; set; }

    public virtual DbSet<DlgTLiquidacion> DlgTLiquidacions { get; set; }

    public virtual DbSet<DlgTMotivoRechazo> DlgTMotivoRechazos { get; set; }

    public virtual DbSet<DlgTPaqueteElectronicoCab> DlgTPaqueteElectronicoCabs { get; set; }

    public virtual DbSet<DlgTPaqueteElectronicoCab20170531> DlgTPaqueteElectronicoCab20170531s { get; set; }

    public virtual DbSet<DlgTPaqueteElectronicoCab20170616> DlgTPaqueteElectronicoCab20170616s { get; set; }

    public virtual DbSet<DlgTPaqueteElectronicoDet> DlgTPaqueteElectronicoDets { get; set; }

    public virtual DbSet<DlgTPersonaAutorizadum> DlgTPersonaAutorizada { get; set; }

    public virtual DbSet<DlgTRecepcionBitSiiError> DlgTRecepcionBitSiiErrors { get; set; }

    public virtual DbSet<DlgTRecepcionCab> DlgTRecepcionCabs { get; set; }

    public virtual DbSet<DlgTRecepcionDet> DlgTRecepcionDets { get; set; }

    public virtual DbSet<DlgTRecepcionDet20170913> DlgTRecepcionDet20170913s { get; set; }

    public virtual DbSet<DlgTRecepcionDetRef> DlgTRecepcionDetRefs { get; set; }

    public virtual DbSet<DlgTRecepcionDetRefSii> DlgTRecepcionDetRefSiis { get; set; }

    public virtual DbSet<DlgTRecepcionDetRefSiiResp> DlgTRecepcionDetRefSiiResps { get; set; }

    public virtual DbSet<DlgTRecepcionDetResp07042017> DlgTRecepcionDetResp07042017s { get; set; }

    public virtual DbSet<DlgTRecepcionMercServicio> DlgTRecepcionMercServicios { get; set; }

    public virtual DbSet<DlgTRecepcionResp> DlgTRecepcionResps { get; set; }

    public virtual DbSet<DlgTReglaNivelValidacion> DlgTReglaNivelValidacions { get; set; }

    public virtual DbSet<DlgTReglaRecepCab> DlgTReglaRecepCabs { get; set; }

    public virtual DbSet<DlgTReglaRecepCabOpe> DlgTReglaRecepCabOpes { get; set; }

    public virtual DbSet<DlgTReglaRecepDesglose> DlgTReglaRecepDesgloses { get; set; }

    public virtual DbSet<DlgTReglaRecepDet> DlgTReglaRecepDets { get; set; }

    public virtual DbSet<DlgTReglaRecepGenerica> DlgTReglaRecepGenericas { get; set; }

    public virtual DbSet<DlgTReglaRecepProceso> DlgTReglaRecepProcesos { get; set; }

    public virtual DbSet<DlgTSolicitudLegalCab> DlgTSolicitudLegalCabs { get; set; }

    public virtual DbSet<DlgTSolicitudLegalDet> DlgTSolicitudLegalDets { get; set; }

    public virtual DbSet<DlgTTipoDocumentoRefSii> DlgTTipoDocumentoRefSiis { get; set; }

    public virtual DbSet<DlgTTipoDocumentoSii> DlgTTipoDocumentoSiis { get; set; }

    public virtual DbSet<DlgTTipoEnvio> DlgTTipoEnvios { get; set; }

    public virtual DbSet<DlgTTipoInformeLegal> DlgTTipoInformeLegals { get; set; }

    public virtual DbSet<DlgTTipoLibro> DlgTTipoLibros { get; set; }

    public virtual DbSet<DlgTTipoXmlDte> DlgTTipoXmlDtes { get; set; }

    public virtual DbSet<DlgTUnidadEmisoraCab> DlgTUnidadEmisoraCabs { get; set; }

    public virtual DbSet<DlgTUnidadEmisoraDet> DlgTUnidadEmisoraDets { get; set; }

    public virtual DbSet<DlgTUnidadEmisoraDetFol> DlgTUnidadEmisoraDetFols { get; set; }

    public virtual DbSet<DlgtLibro11062015> DlgtLibro11062015s { get; set; }

    public virtual DbSet<DlgtRecepcionBitDetSii> DlgtRecepcionBitDetSiis { get; set; }

    public virtual DbSet<DlgtRecepcionBitSii> DlgtRecepcionBitSiis { get; set; }

    public virtual DbSet<DmLogTParametrosCarga> DmLogTParametrosCargas { get; set; }

    public virtual DbSet<EcuTEspAtributosEntidad> EcuTEspAtributosEntidads { get; set; }

    public virtual DbSet<EfeTClasificaFlujo> EfeTClasificaFlujos { get; set; }

    public virtual DbSet<EfeTCmbteConcil> EfeTCmbteConcils { get; set; }

    public virtual DbSet<EfeTCmbteFlujo> EfeTCmbteFlujos { get; set; }

    public virtual DbSet<EfeTCodigoFlujo> EfeTCodigoFlujos { get; set; }

    public virtual DbSet<EfeTComprobante> EfeTComprobantes { get; set; }

    public virtual DbSet<EfeTConfiguracion> EfeTConfiguracions { get; set; }

    public virtual DbSet<EfeTCtasContable> EfeTCtasContables { get; set; }

    public virtual DbSet<EfeTCuenta> EfeTCuentas { get; set; }

    public virtual DbSet<EfeTEstConciliacion> EfeTEstConciliacions { get; set; }

    public virtual DbSet<EfeTPlanFlujo> EfeTPlanFlujos { get; set; }

    public virtual DbSet<EfetComprobantesBak> EfetComprobantesBaks { get; set; }

    public virtual DbSet<EntTTipoEntidadEcu> EntTTipoEntidadEcus { get; set; }

    public virtual DbSet<ExiTBodega> ExiTBodegas { get; set; }

    public virtual DbSet<ExiTCentroConsumo> ExiTCentroConsumos { get; set; }

    public virtual DbSet<ExiTConfiguracion> ExiTConfiguracions { get; set; }

    public virtual DbSet<ExiTDatosDespacho> ExiTDatosDespachos { get; set; }

    public virtual DbSet<ExiTErroresCargaMasiva> ExiTErroresCargaMasivas { get; set; }

    public virtual DbSet<ExiTEstructuraCodigo> ExiTEstructuraCodigos { get; set; }

    public virtual DbSet<ExiTEstructuraSubdivision> ExiTEstructuraSubdivisions { get; set; }

    public virtual DbSet<ExiTEstructuraSubdivisionValore> ExiTEstructuraSubdivisionValores { get; set; }

    public virtual DbSet<ExiTGruposContable> ExiTGruposContables { get; set; }

    public virtual DbSet<ExiTGruposContablesCuenta> ExiTGruposContablesCuentas { get; set; }

    public virtual DbSet<ExiTGruposContablesTipoOpe> ExiTGruposContablesTipoOpes { get; set; }

    public virtual DbSet<ExiTIdiomaEspTecnica> ExiTIdiomaEspTecnicas { get; set; }

    public virtual DbSet<ExiTPlanta> ExiTPlantas { get; set; }

    public virtual DbSet<ExiTProducto> ExiTProductos { get; set; }

    public virtual DbSet<ExiTProductoImpEspecial> ExiTProductoImpEspecials { get; set; }

    public virtual DbSet<ExiTProductosAdicionale> ExiTProductosAdicionales { get; set; }

    public virtual DbSet<ExiTProductosCategoria> ExiTProductosCategorias { get; set; }

    public virtual DbSet<ExiTProductosClasificacion> ExiTProductosClasificacions { get; set; }

    public virtual DbSet<ExiTProductosClasificacionNivel> ExiTProductosClasificacionNivels { get; set; }

    public virtual DbSet<ExiTProductosCodigo> ExiTProductosCodigos { get; set; }

    public virtual DbSet<ExiTProductosCodigosResp29032017> ExiTProductosCodigosResp29032017s { get; set; }

    public virtual DbSet<ExiTProductosEspTecCab> ExiTProductosEspTecCabs { get; set; }

    public virtual DbSet<ExiTProductosEspTecDet> ExiTProductosEspTecDets { get; set; }

    public virtual DbSet<ExiTProductosGenEsp> ExiTProductosGenEsps { get; set; }

    public virtual DbSet<ExiTProductosLinea> ExiTProductosLineas { get; set; }

    public virtual DbSet<ExiTProductosRecetum> ExiTProductosReceta { get; set; }

    public virtual DbSet<ExiTProductosResp29032017> ExiTProductosResp29032017s { get; set; }

    public virtual DbSet<ExiTProductosUnidadesMedidum> ExiTProductosUnidadesMedida { get; set; }

    public virtual DbSet<ExiTServicio> ExiTServicios { get; set; }

    public virtual DbSet<ExiTTipoCodigo> ExiTTipoCodigos { get; set; }

    public virtual DbSet<ExiTTipoComponenteRecetum> ExiTTipoComponenteReceta { get; set; }

    public virtual DbSet<ExiTTipoPlantum> ExiTTipoPlanta { get; set; }

    public virtual DbSet<ExiTTipoServicio> ExiTTipoServicios { get; set; }

    public virtual DbSet<ExiTTipoTransporte> ExiTTipoTransportes { get; set; }

    public virtual DbSet<ExiTTipoValorizacion> ExiTTipoValorizacions { get; set; }

    public virtual DbSet<ExiTTipoVehiculo> ExiTTipoVehiculos { get; set; }

    public virtual DbSet<ExiTTransportistum> ExiTTransportista { get; set; }

    public virtual DbSet<ExiTUbicacione> ExiTUbicaciones { get; set; }

    public virtual DbSet<ExiTUnidadesMedidum> ExiTUnidadesMedida { get; set; }

    public virtual DbSet<ExiTUsuarioBodegaCentro> ExiTUsuarioBodegaCentros { get; set; }

    public virtual DbSet<ExiTUsuarioPlanta> ExiTUsuarioPlantas { get; set; }

    public virtual DbSet<FljTCabEveNoContab> FljTCabEveNoContabs { get; set; }

    public virtual DbSet<FljTCabeceraFlujo> FljTCabeceraFlujos { get; set; }

    public virtual DbSet<FljTDetEveNoContab> FljTDetEveNoContabs { get; set; }

    public virtual DbSet<FljTDetalleFlujo> FljTDetalleFlujos { get; set; }

    public virtual DbSet<GesTConfiguracion> GesTConfiguracions { get; set; }

    public virtual DbSet<GesTEstadisticasConsumo> GesTEstadisticasConsumos { get; set; }

    public virtual DbSet<GesTGruposCompra> GesTGruposCompras { get; set; }

    public virtual DbSet<GesTGruposConsumo> GesTGruposConsumos { get; set; }

    public virtual DbSet<GesTPeriodosConsumo> GesTPeriodosConsumos { get; set; }

    public virtual DbSet<GesTPuntoReorden> GesTPuntoReordens { get; set; }

    public virtual DbSet<GesTReposicion> GesTReposicions { get; set; }

    public virtual DbSet<GesTTiposOpeEst> GesTTiposOpeEsts { get; set; }

    public virtual DbSet<GlbTActividadEco> GlbTActividadEcos { get; set; }

    public virtual DbSet<GlbTAgrupaDocumento> GlbTAgrupaDocumentos { get; set; }

    public virtual DbSet<GlbTAsocUsuMoneda> GlbTAsocUsuMonedas { get; set; }

    public virtual DbSet<GlbTAsociaCentroProyecto> GlbTAsociaCentroProyectos { get; set; }

    public virtual DbSet<GlbTAsociaCuentaCentro> GlbTAsociaCuentaCentros { get; set; }

    public virtual DbSet<GlbTAsociaCuentaConcepto> GlbTAsociaCuentaConceptos { get; set; }

    public virtual DbSet<GlbTAsociaCuentaProyecto> GlbTAsociaCuentaProyectos { get; set; }

    public virtual DbSet<GlbTAudObjetosFin> GlbTAudObjetosFins { get; set; }

    public virtual DbSet<GlbTAuditoriaVd> GlbTAuditoriaVds { get; set; }

    public virtual DbSet<GlbTCabeceraMensaje> GlbTCabeceraMensajes { get; set; }

    public virtual DbSet<GlbTCaracterEspecialFe> GlbTCaracterEspecialves { get; set; }

    public virtual DbSet<GlbTCfgEspeciale> GlbTCfgEspeciales { get; set; }

    public virtual DbSet<GlbTCiudade> GlbTCiudades { get; set; }

    public virtual DbSet<GlbTClasificaEntidad> GlbTClasificaEntidads { get; set; }

    public virtual DbSet<GlbTComuna> GlbTComunas { get; set; }

    public virtual DbSet<GlbTConfigProcesosSii> GlbTConfigProcesosSiis { get; set; }

    public virtual DbSet<GlbTConfiguracion> GlbTConfiguracions { get; set; }

    public virtual DbSet<GlbTCtrUsuario> GlbTCtrUsuarios { get; set; }

    public virtual DbSet<GlbTDetalleMensaje> GlbTDetalleMensajes { get; set; }

    public virtual DbSet<GlbTDivision> GlbTDivisions { get; set; }

    public virtual DbSet<GlbTDocumento> GlbTDocumentos { get; set; }

    public virtual DbSet<GlbTDocumentoFisico> GlbTDocumentoFisicos { get; set; }

    public virtual DbSet<GlbTDocumentosSistema> GlbTDocumentosSistemas { get; set; }

    public virtual DbSet<GlbTEjercicio> GlbTEjercicios { get; set; }

    public virtual DbSet<GlbTEmpresa> GlbTEmpresas { get; set; }

    public virtual DbSet<GlbTEmpresaCentroResp> GlbTEmpresaCentroResps { get; set; }

    public virtual DbSet<GlbTEmpresaCobrador> GlbTEmpresaCobradors { get; set; }

    public virtual DbSet<GlbTEmpresaCodigoFin> GlbTEmpresaCodigoFins { get; set; }

    public virtual DbSet<GlbTEmpresaConceptoImp> GlbTEmpresaConceptoImps { get; set; }

    public virtual DbSet<GlbTEmpresaCuentaFinanza> GlbTEmpresaCuentaFinanzas { get; set; }

    public virtual DbSet<GlbTEmpresaCuentum> GlbTEmpresaCuenta { get; set; }

    public virtual DbSet<GlbTEmpresaDivCentro> GlbTEmpresaDivCentros { get; set; }

    public virtual DbSet<GlbTEmpresaDivision> GlbTEmpresaDivisions { get; set; }

    public virtual DbSet<GlbTEmpresaVendedor> GlbTEmpresaVendedors { get; set; }

    public virtual DbSet<GlbTEntidad> GlbTEntidads { get; set; }

    public virtual DbSet<GlbTEntidadAtributo> GlbTEntidadAtributos { get; set; }

    public virtual DbSet<GlbTEntidadAuditorium> GlbTEntidadAuditoria { get; set; }

    public virtual DbSet<GlbTEntidadBitacoraEstado> GlbTEntidadBitacoraEstados { get; set; }

    public virtual DbSet<GlbTEntidadContacto> GlbTEntidadContactos { get; set; }

    public virtual DbSet<GlbTEntidadDireccion> GlbTEntidadDireccions { get; set; }

    public virtual DbSet<GlbTEntidadEmpresa> GlbTEntidadEmpresas { get; set; }

    public virtual DbSet<GlbTEntidadEmpresaSucursal> GlbTEntidadEmpresaSucursals { get; set; }

    public virtual DbSet<GlbTEntidadSucursal> GlbTEntidadSucursals { get; set; }

    public virtual DbSet<GlbTEntidadSucursalContacto> GlbTEntidadSucursalContactos { get; set; }

    public virtual DbSet<GlbTEscenario> GlbTEscenarios { get; set; }

    public virtual DbSet<GlbTEstadoEntidad> GlbTEstadoEntidads { get; set; }

    public virtual DbSet<GlbTFechaControlDiv> GlbTFechaControlDivs { get; set; }

    public virtual DbSet<GlbTFormaPago> GlbTFormaPagos { get; set; }

    public virtual DbSet<GlbTFormaPagoBco> GlbTFormaPagoBcos { get; set; }

    public virtual DbSet<GlbTFormaPagoDet> GlbTFormaPagoDets { get; set; }

    public virtual DbSet<GlbTFormaPagoExterno> GlbTFormaPagoExternos { get; set; }

    public virtual DbSet<GlbTFormato> GlbTFormatos { get; set; }

    public virtual DbSet<GlbTFormatoCheque> GlbTFormatoCheques { get; set; }

    public virtual DbSet<GlbTFormatoFecha> GlbTFormatoFechas { get; set; }

    public virtual DbSet<GlbTGiro> GlbTGiros { get; set; }

    public virtual DbSet<GlbTImagenCab> GlbTImagenCabs { get; set; }

    public virtual DbSet<GlbTImagenDet> GlbTImagenDets { get; set; }

    public virtual DbSet<GlbTImpresoraMatriz> GlbTImpresoraMatrizs { get; set; }

    public virtual DbSet<GlbTIpc> GlbTIpcs { get; set; }

    public virtual DbSet<GlbTMoneda> GlbTMonedas { get; set; }

    public virtual DbSet<GlbTMotivo> GlbTMotivos { get; set; }

    public virtual DbSet<GlbTMsgReclaAcepDte> GlbTMsgReclaAcepDtes { get; set; }

    public virtual DbSet<GlbTNivele> GlbTNiveles { get; set; }

    public virtual DbSet<GlbTNumerosRefId> GlbTNumerosRefIds { get; set; }

    public virtual DbSet<GlbTPaise> GlbTPaises { get; set; }

    public virtual DbSet<GlbTPeriodo> GlbTPeriodos { get; set; }

    public virtual DbSet<GlbTPlanEntidad> GlbTPlanEntidads { get; set; }

    public virtual DbSet<GlbTProcesoNegocio> GlbTProcesoNegocios { get; set; }

    public virtual DbSet<GlbTProcesoNegocioAux> GlbTProcesoNegocioAuxes { get; set; }

    public virtual DbSet<GlbTProcesoNegocioSisFun> GlbTProcesoNegocioSisFuns { get; set; }

    public virtual DbSet<GlbTProyCalEjercicio> GlbTProyCalEjercicios { get; set; }

    public virtual DbSet<GlbTProyCalPeriodo> GlbTProyCalPeriodos { get; set; }

    public virtual DbSet<GlbTProyecto> GlbTProyectos { get; set; }

    public virtual DbSet<GlbTRegione> GlbTRegiones { get; set; }

    public virtual DbSet<GlbTRutaArchivo> GlbTRutaArchivos { get; set; }

    public virtual DbSet<GlbTSistema> GlbTSistemas { get; set; }

    public virtual DbSet<GlbTTipoCartaRut> GlbTTipoCartaRuts { get; set; }

    public virtual DbSet<GlbTTipoEntidade> GlbTTipoEntidades { get; set; }

    public virtual DbSet<GlbTTipoFlujo> GlbTTipoFlujos { get; set; }

    public virtual DbSet<GlbTTipoFlujoCuentum> GlbTTipoFlujoCuenta { get; set; }

    public virtual DbSet<GlbTTipoGasto> GlbTTipoGastos { get; set; }

    public virtual DbSet<GlbTTipoImagen> GlbTTipoImagens { get; set; }

    public virtual DbSet<GlbTTipoItem> GlbTTipoItems { get; set; }

    public virtual DbSet<GlbTTipoMonedaCnci> GlbTTipoMonedaCncis { get; set; }

    public virtual DbSet<GlbTTipoMotivo> GlbTTipoMotivos { get; set; }

    public virtual DbSet<GlbTTipoProceso> GlbTTipoProcesos { get; set; }

    public virtual DbSet<GlbTTipoSociedad> GlbTTipoSociedads { get; set; }

    public virtual DbSet<GlbTTipoVencimiento> GlbTTipoVencimientos { get; set; }

    public virtual DbSet<GlbTTiposCarta> GlbTTiposCartas { get; set; }

    public virtual DbSet<GlbTTiposCartasAtrib> GlbTTiposCartasAtribs { get; set; }

    public virtual DbSet<GlbTTiposProyecto> GlbTTiposProyectos { get; set; }

    public virtual DbSet<GlbTTmpEmpresa> GlbTTmpEmpresas { get; set; }

    public virtual DbSet<GlbTUnidadAdm> GlbTUnidadAdms { get; set; }

    public virtual DbSet<GlbTUsoFin700> GlbTUsoFin700s { get; set; }

    public virtual DbSet<GlbTUsuEmpDiv> GlbTUsuEmpDivs { get; set; }

    public virtual DbSet<GlbTUsuEmpDivUni> GlbTUsuEmpDivUnis { get; set; }

    public virtual DbSet<GlbTUsuarioEmpresa> GlbTUsuarioEmpresas { get; set; }

    public virtual DbSet<GlbTValorDiario> GlbTValorDiarios { get; set; }

    public virtual DbSet<GlbTZona> GlbTZonas { get; set; }

    public virtual DbSet<GlbtEstadosRevisaDte> GlbtEstadosRevisaDtes { get; set; }

    public virtual DbSet<GlbtProcesonegociosisfunBak> GlbtProcesonegociosisfunBaks { get; set; }

    public virtual DbSet<ImpTAgentesAduana> ImpTAgentesAduanas { get; set; }

    public virtual DbSet<ImpTClaseDocumento> ImpTClaseDocumentos { get; set; }

    public virtual DbSet<ImpTCoberturaCab> ImpTCoberturaCabs { get; set; }

    public virtual DbSet<ImpTCoberturaDet> ImpTCoberturaDets { get; set; }

    public virtual DbSet<ImpTCoberturaPago> ImpTCoberturaPagos { get; set; }

    public virtual DbSet<ImpTConceptoImportacion> ImpTConceptoImportacions { get; set; }

    public virtual DbSet<ImpTConfiguracion> ImpTConfiguracions { get; set; }

    public virtual DbSet<ImpTEmbarqueCab> ImpTEmbarqueCabs { get; set; }

    public virtual DbSet<ImpTEmbarqueCompNulo> ImpTEmbarqueCompNulos { get; set; }

    public virtual DbSet<ImpTEmbarqueDet> ImpTEmbarqueDets { get; set; }

    public virtual DbSet<ImpTEmbarqueDocto> ImpTEmbarqueDoctos { get; set; }

    public virtual DbSet<ImpTEmbarqueDoctosAge> ImpTEmbarqueDoctosAges { get; set; }

    public virtual DbSet<ImpTEmbarqueDoctosCon> ImpTEmbarqueDoctosCons { get; set; }

    public virtual DbSet<ImpTEmbarqueDoctosSeg> ImpTEmbarqueDoctosSegs { get; set; }

    public virtual DbSet<ImpTEmbarqueFecha> ImpTEmbarqueFechas { get; set; }

    public virtual DbSet<ImpTMatrizImportacion> ImpTMatrizImportacions { get; set; }

    public virtual DbSet<ImpTPreEmbarqueCab> ImpTPreEmbarqueCabs { get; set; }

    public virtual DbSet<ImpTPreEmbarqueDet> ImpTPreEmbarqueDets { get; set; }

    public virtual DbSet<ImpTTipoConceptoImp> ImpTTipoConceptoImps { get; set; }

    public virtual DbSet<InmTAdicionalTipoInm> InmTAdicionalTipoInms { get; set; }

    public virtual DbSet<InmTAdicionalVentum> InmTAdicionalVenta { get; set; }

    public virtual DbSet<InmTAfluencium> InmTAfluencia { get; set; }

    public virtual DbSet<InmTArbolProyecto> InmTArbolProyectos { get; set; }

    public virtual DbSet<InmTArbolProyectoAux> InmTArbolProyectoAuxes { get; set; }

    public virtual DbSet<InmTAtributosUsuario> InmTAtributosUsuarios { get; set; }

    public virtual DbSet<InmTAuditoriaEscrituracion> InmTAuditoriaEscrituracions { get; set; }

    public virtual DbSet<InmTBitacora> InmTBitacoras { get; set; }

    public virtual DbSet<InmTBitacoraAux> InmTBitacoraAuxes { get; set; }

    public virtual DbSet<InmTBitacoraManejoIvaCab> InmTBitacoraManejoIvaCabs { get; set; }

    public virtual DbSet<InmTBitacoraManejoIvaDet> InmTBitacoraManejoIvaDets { get; set; }

    public virtual DbSet<InmTCabIncentivo> InmTCabIncentivos { get; set; }

    public virtual DbSet<InmTCabPlanillaPromesa> InmTCabPlanillaPromesas { get; set; }

    public virtual DbSet<InmTCabeceraMailing> InmTCabeceraMailings { get; set; }

    public virtual DbSet<InmTCabeceraProgramacion> InmTCabeceraProgramacions { get; set; }

    public virtual DbSet<InmTCalculoComision> InmTCalculoComisions { get; set; }

    public virtual DbSet<InmTCalculoComisionRezagado> InmTCalculoComisionRezagados { get; set; }

    public virtual DbSet<InmTCambioVendedor> InmTCambioVendedors { get; set; }

    public virtual DbSet<InmTCamposPromesa> InmTCamposPromesas { get; set; }

    public virtual DbSet<InmTCarOfeAdicional> InmTCarOfeAdicionals { get; set; }

    public virtual DbSet<InmTCarOfeDetItemFinan> InmTCarOfeDetItemFinans { get; set; }

    public virtual DbSet<InmTCarOfeDoctoRespaldo> InmTCarOfeDoctoRespaldos { get; set; }

    public virtual DbSet<InmTCarOfeItemDescto> InmTCarOfeItemDesctos { get; set; }

    public virtual DbSet<InmTCarOfeItemFinan> InmTCarOfeItemFinans { get; set; }

    public virtual DbSet<InmTCarOfeProductoAdi> InmTCarOfeProductoAdis { get; set; }

    public virtual DbSet<InmTCargoUsuarioProyecto> InmTCargoUsuarioProyectos { get; set; }

    public virtual DbSet<InmTCargoUsuarioProyecto20170503> InmTCargoUsuarioProyecto20170503s { get; set; }

    public virtual DbSet<InmTCartaOfertum> InmTCartaOferta { get; set; }

    public virtual DbSet<InmTCategoriaCliente> InmTCategoriaClientes { get; set; }

    public virtual DbSet<InmTCausalDevolucion> InmTCausalDevolucions { get; set; }

    public virtual DbSet<InmTCausalRechazo> InmTCausalRechazos { get; set; }

    public virtual DbSet<InmTClasificacion> InmTClasificacions { get; set; }

    public virtual DbSet<InmTClienteTipoDocto> InmTClienteTipoDoctos { get; set; }

    public virtual DbSet<InmTComisionesProyectoCargo> InmTComisionesProyectoCargos { get; set; }

    public virtual DbSet<InmTConceptoIngreso> InmTConceptoIngresos { get; set; }

    public virtual DbSet<InmTConfiguraBono> InmTConfiguraBonos { get; set; }

    public virtual DbSet<InmTConfiguracion> InmTConfiguracions { get; set; }

    public virtual DbSet<InmTConveniosInst> InmTConveniosInsts { get; set; }

    public virtual DbSet<InmTCotAdicional> InmTCotAdicionals { get; set; }

    public virtual DbSet<InmTCotDetItemFinan> InmTCotDetItemFinans { get; set; }

    public virtual DbSet<InmTCotDividendo> InmTCotDividendos { get; set; }

    public virtual DbSet<InmTCotEncuestum> InmTCotEncuesta { get; set; }

    public virtual DbSet<InmTCotItemFinan> InmTCotItemFinans { get; set; }

    public virtual DbSet<InmTCotProductoAdi> InmTCotProductoAdis { get; set; }

    public virtual DbSet<InmTCotizacion> InmTCotizacions { get; set; }

    public virtual DbSet<InmTCotizacionLog> InmTCotizacionLogs { get; set; }

    public virtual DbSet<InmTCotizacionLogHistorica> InmTCotizacionLogHistoricas { get; set; }

    public virtual DbSet<InmTDestinoCompra> InmTDestinoCompras { get; set; }

    public virtual DbSet<InmTDetIncentivo> InmTDetIncentivos { get; set; }

    public virtual DbSet<InmTDetPlanillaPromesa> InmTDetPlanillaPromesas { get; set; }

    public virtual DbSet<InmTDetalleMailing> InmTDetalleMailings { get; set; }

    public virtual DbSet<InmTDetalleProgramacion> InmTDetalleProgramacions { get; set; }

    public virtual DbSet<InmTDoctoInstCredito> InmTDoctoInstCreditos { get; set; }

    public virtual DbSet<InmTDocumentosAtachado> InmTDocumentosAtachados { get; set; }

    public virtual DbSet<InmTEncuestum> InmTEncuesta { get; set; }

    public virtual DbSet<InmTEscrituracion> InmTEscrituracions { get; set; }

    public virtual DbSet<InmTEstado> InmTEstados { get; set; }

    public virtual DbSet<InmTEstadoCivil> InmTEstadoCivils { get; set; }

    public virtual DbSet<InmTEvento> InmTEventos { get; set; }

    public virtual DbSet<InmTExpectativa> InmTExpectativas { get; set; }

    public virtual DbSet<InmTFactorInstCredito> InmTFactorInstCreditos { get; set; }

    public virtual DbSet<InmTFormaContacto> InmTFormaContactos { get; set; }

    public virtual DbSet<InmTGestionCredito> InmTGestionCreditos { get; set; }

    public virtual DbSet<InmTGrupoVentum> InmTGrupoVenta { get; set; }

    public virtual DbSet<InmTHojaAntecedente> InmTHojaAntecedentes { get; set; }

    public virtual DbSet<InmTInformeGerencialCab> InmTInformeGerencialCabs { get; set; }

    public virtual DbSet<InmTInformeGerencialDet> InmTInformeGerencialDets { get; set; }

    public virtual DbSet<InmTInformeGerencialDetCantidad> InmTInformeGerencialDetCantidads { get; set; }

    public virtual DbSet<InmTInformeGerencialDetMonto> InmTInformeGerencialDetMontos { get; set; }

    public virtual DbSet<InmTInmuebleProyecto> InmTInmuebleProyectos { get; set; }

    public virtual DbSet<InmTInmuebleProyectoLog> InmTInmuebleProyectoLogs { get; set; }

    public virtual DbSet<InmTInmuebleProyectoModMasiva> InmTInmuebleProyectoModMasivas { get; set; }

    public virtual DbSet<InmTInmuebleProyectoRel> InmTInmuebleProyectoRels { get; set; }

    public virtual DbSet<InmTInstancia> InmTInstancias { get; set; }

    public virtual DbSet<InmTInstanciaVentum> InmTInstanciaVenta { get; set; }

    public virtual DbSet<InmTIntegracion> InmTIntegracions { get; set; }

    public virtual DbSet<InmTItemDescuento> InmTItemDescuentos { get; set; }

    public virtual DbSet<InmTItemFinanciamiento> InmTItemFinanciamientos { get; set; }

    public virtual DbSet<InmTItemGenerico> InmTItemGenericos { get; set; }

    public virtual DbSet<InmTLogAutorizaCotizacion> InmTLogAutorizaCotizacions { get; set; }

    public virtual DbSet<InmTLogCambioTraspasoCo> InmTLogCambioTraspasoCos { get; set; }

    public virtual DbSet<InmTLogCambiosPrecio> InmTLogCambiosPrecios { get; set; }

    public virtual DbSet<InmTLogSucursalCero> InmTLogSucursalCeros { get; set; }

    public virtual DbSet<InmTLogVendedor> InmTLogVendedors { get; set; }

    public virtual DbSet<InmTModoContacto> InmTModoContactos { get; set; }

    public virtual DbSet<InmTNotarium> InmTNotaria { get; set; }

    public virtual DbSet<InmTObservacione> InmTObservaciones { get; set; }

    public virtual DbSet<InmTOficina> InmTOficinas { get; set; }

    public virtual DbSet<InmTPagosCartaOfertum> InmTPagosCartaOferta { get; set; }

    public virtual DbSet<InmTParComisione> InmTParComisiones { get; set; }

    public virtual DbSet<InmTParCtasConfig> InmTParCtasConfigs { get; set; }

    public virtual DbSet<InmTParEstadosProyecto> InmTParEstadosProyectos { get; set; }

    public virtual DbSet<InmTParOrientacion> InmTParOrientacions { get; set; }

    public virtual DbSet<InmTParReferencium> InmTParReferencia { get; set; }

    public virtual DbSet<InmTParTipoComisione> InmTParTipoComisiones { get; set; }

    public virtual DbSet<InmTParTipoDocumento> InmTParTipoDocumentos { get; set; }

    public virtual DbSet<InmTParTipoOpeComi> InmTParTipoOpeComis { get; set; }

    public virtual DbSet<InmTParametrosInforme> InmTParametrosInformes { get; set; }

    public virtual DbSet<InmTPasivosDeuda> InmTPasivosDeudas { get; set; }

    public virtual DbSet<InmTPatrimonio> InmTPatrimonios { get; set; }

    public virtual DbSet<InmTPeriodoComision> InmTPeriodoComisions { get; set; }

    public virtual DbSet<InmTPlantillasDocumento> InmTPlantillasDocumentos { get; set; }

    public virtual DbSet<InmTProceso> InmTProcesos { get; set; }

    public virtual DbSet<InmTPromesasImpresa> InmTPromesasImpresas { get; set; }

    public virtual DbSet<InmTProyecto> InmTProyectos { get; set; }

    public virtual DbSet<InmTProyectoClasificaComision> InmTProyectoClasificaComisions { get; set; }

    public virtual DbSet<InmTProyectoEtapa> InmTProyectoEtapas { get; set; }

    public virtual DbSet<InmTProyectoEtapaInst> InmTProyectoEtapaInsts { get; set; }

    public virtual DbSet<InmTProyectoOficina> InmTProyectoOficinas { get; set; }

    public virtual DbSet<InmTRegimenConyugal> InmTRegimenConyugals { get; set; }

    public virtual DbSet<InmTRelDetalleDoc> InmTRelDetalleDocs { get; set; }

    public virtual DbSet<InmTRelDetalleDoc20112012> InmTRelDetalleDoc20112012s { get; set; }

    public virtual DbSet<InmTRelDocumento> InmTRelDocumentos { get; set; }

    public virtual DbSet<InmTRelDocumentos20112012> InmTRelDocumentos20112012s { get; set; }

    public virtual DbSet<InmTRequisito> InmTRequisitos { get; set; }

    public virtual DbSet<InmTSeguimientoCliente> InmTSeguimientoClientes { get; set; }

    public virtual DbSet<InmTSituacion> InmTSituacions { get; set; }

    public virtual DbSet<InmTTipoCliente> InmTTipoClientes { get; set; }

    public virtual DbSet<InmTTipoDesistimiento> InmTTipoDesistimientos { get; set; }

    public virtual DbSet<InmTTipoDocumento> InmTTipoDocumentos { get; set; }

    public virtual DbSet<InmTTipoGrupoVentum> InmTTipoGrupoVenta { get; set; }

    public virtual DbSet<InmTTipoInmueble> InmTTipoInmuebles { get; set; }

    public virtual DbSet<InmTTipoTraspaso> InmTTipoTraspasos { get; set; }

    public virtual DbSet<InmTTipoVentum> InmTTipoVenta { get; set; }

    public virtual DbSet<InmTTmpCotizacion> InmTTmpCotizacions { get; set; }

    public virtual DbSet<InmTTmpPagosCartaOfertum> InmTTmpPagosCartaOferta { get; set; }

    public virtual DbSet<InmTTmpPagosTraspasoCartaOfertum> InmTTmpPagosTraspasoCartaOferta { get; set; }

    public virtual DbSet<InmTUsuario> InmTUsuarios { get; set; }

    public virtual DbSet<InmTVendedore> InmTVendedores { get; set; }

    public virtual DbSet<InmTVersionCarOfeAdicional> InmTVersionCarOfeAdicionals { get; set; }

    public virtual DbSet<InmTVersionCarOfeDetItemFinan> InmTVersionCarOfeDetItemFinans { get; set; }

    public virtual DbSet<InmTVersionCarOfeDoctoRespaldo> InmTVersionCarOfeDoctoRespaldos { get; set; }

    public virtual DbSet<InmTVersionCarOfeItemFinan> InmTVersionCarOfeItemFinans { get; set; }

    public virtual DbSet<InmTVersionCarOfeProductoAdi> InmTVersionCarOfeProductoAdis { get; set; }

    public virtual DbSet<InmTVersionCartaOfertum> InmTVersionCartaOferta { get; set; }

    public virtual DbSet<InmTVersionPagosCartaOfertum> InmTVersionPagosCartaOferta { get; set; }

    public virtual DbSet<InmtArbolProyectoResp20170217> InmtArbolProyectoResp20170217s { get; set; }

    public virtual DbSet<InmtCabeceraprogramacionElSol> InmtCabeceraprogramacionElSols { get; set; }

    public virtual DbSet<InmtCotPruebaImagene> InmtCotPruebaImagenes { get; set; }

    public virtual DbSet<InmtDetalleprogramacionElSol> InmtDetalleprogramacionElSols { get; set; }

    public virtual DbSet<InmtTmpCuadraturaPago> InmtTmpCuadraturaPagos { get; set; }

    public virtual DbSet<IntTFormato> IntTFormatos { get; set; }

    public virtual DbSet<IntTInterfazAux> IntTInterfazAuxes { get; set; }

    public virtual DbSet<IntTInterfazAuxLet> IntTInterfazAuxLets { get; set; }

    public virtual DbSet<IntTInterfazBitacora> IntTInterfazBitacoras { get; set; }

    public virtual DbSet<IntTInterfazBitacoraEnt> IntTInterfazBitacoraEnts { get; set; }

    public virtual DbSet<IntTInterfazBitacoraFu> IntTInterfazBitacoraFus { get; set; }

    public virtual DbSet<IntTInterfazEntidade> IntTInterfazEntidades { get; set; }

    public virtual DbSet<IntTInterfazError> IntTInterfazErrors { get; set; }

    public virtual DbSet<IntTInterfazErrorEnt> IntTInterfazErrorEnts { get; set; }

    public virtual DbSet<IntTInterfazErrorFu> IntTInterfazErrorFus { get; set; }

    public virtual DbSet<IntTInterfazLco> IntTInterfazLcos { get; set; }

    public virtual DbSet<IntTInterfazTmp> IntTInterfazTmps { get; set; }

    public virtual DbSet<IntTInterfazTmpEnt> IntTInterfazTmpEnts { get; set; }

    public virtual DbSet<IntTInterfazTmpFu> IntTInterfazTmpFus { get; set; }

    public virtual DbSet<IntTInvBalDato> IntTInvBalDatos { get; set; }

    public virtual DbSet<IntTInvBalError> IntTInvBalErrors { get; set; }

    public virtual DbSet<IntTInvBalTmp> IntTInvBalTmps { get; set; }

    public virtual DbSet<IntTVtaCabExpInterfazAux> IntTVtaCabExpInterfazAuxes { get; set; }

    public virtual DbSet<IntTVtaCabInterfazAux> IntTVtaCabInterfazAuxes { get; set; }

    public virtual DbSet<IntTVtaInterfazAux> IntTVtaInterfazAuxes { get; set; }

    public virtual DbSet<IntTVtaInterfazAuxGlo> IntTVtaInterfazAuxGlos { get; set; }

    public virtual DbSet<IntTVtaInterfazAuxImp> IntTVtaInterfazAuxImps { get; set; }

    public virtual DbSet<IsaTMovimiento> IsaTMovimientos { get; set; }

    public virtual DbSet<ItitAsociaCuenta> ItitAsociaCuentas { get; set; }

    public virtual DbSet<LlgTCabeceraDoc> LlgTCabeceraDocs { get; set; }

    public virtual DbSet<LlgTCertificado> LlgTCertificados { get; set; }

    public virtual DbSet<LlgTClasificaIva> LlgTClasificaIvas { get; set; }

    public virtual DbSet<LlgTColumnaLibro> LlgTColumnaLibros { get; set; }

    public virtual DbSet<LlgTConfiguracion> LlgTConfiguracions { get; set; }

    public virtual DbSet<LlgTConfiguracionAuDi> LlgTConfiguracionAuDis { get; set; }

    public virtual DbSet<LlgTDesgloseImp> LlgTDesgloseImps { get; set; }

    public virtual DbSet<LlgTDocumento> LlgTDocumentos { get; set; }

    public virtual DbSet<LlgTFacturaRecep> LlgTFacturaReceps { get; set; }

    public virtual DbSet<LlgTFacturaRecepV60> LlgTFacturaRecepV60s { get; set; }

    public virtual DbSet<LlgTFormulario> LlgTFormularios { get; set; }

    public virtual DbSet<LlgTImpuestoSii> LlgTImpuestoSiis { get; set; }

    public virtual DbSet<LlgTLcoRetencionDet> LlgTLcoRetencionDets { get; set; }

    public virtual DbSet<LlgTLibro> LlgTLibros { get; set; }

    public virtual DbSet<LlgTMovimiento> LlgTMovimientos { get; set; }

    public virtual DbSet<LlgTTipoFactura> LlgTTipoFacturas { get; set; }

    public virtual DbSet<LlgTTipoOperacion> LlgTTipoOperacions { get; set; }

    public virtual DbSet<LlgTTipoOperacionDet> LlgTTipoOperacionDets { get; set; }

    public virtual DbSet<LlgTTipoOperacionDgl> LlgTTipoOperacionDgls { get; set; }

    public virtual DbSet<LlgTTipoOriDocto> LlgTTipoOriDoctos { get; set; }

    public virtual DbSet<LlgTUbicacion> LlgTUbicacions { get; set; }

    public virtual DbSet<LlgtUbicacionBak> LlgtUbicacionBaks { get; set; }

    public virtual DbSet<LogTAccionContable> LogTAccionContables { get; set; }

    public virtual DbSet<LogTCmfinanciera> LogTCmfinancieras { get; set; }

    public virtual DbSet<LogTCmtcuentaEspejo> LogTCmtcuentaEspejos { get; set; }

    public virtual DbSet<LogTCmtributarium> LogTCmtributaria { get; set; }

    public virtual DbSet<LogTCondicionPago> LogTCondicionPagos { get; set; }

    public virtual DbSet<LogTConfiguracion> LogTConfiguracions { get; set; }

    public virtual DbSet<LogTConvenioCab> LogTConvenioCabs { get; set; }

    public virtual DbSet<LogTConvenioDet> LogTConvenioDets { get; set; }

    public virtual DbSet<LogTCorrelativo> LogTCorrelativos { get; set; }

    public virtual DbSet<LogTDatosDespacho> LogTDatosDespachos { get; set; }

    public virtual DbSet<LogTDescuento> LogTDescuentos { get; set; }

    public virtual DbSet<LogTDespachoConceptoCab> LogTDespachoConceptoCabs { get; set; }

    public virtual DbSet<LogTDespachoConceptoDet> LogTDespachoConceptoDets { get; set; }

    public virtual DbSet<LogTDocumentoFisico> LogTDocumentoFisicos { get; set; }

    public virtual DbSet<LogTEstadoProducto> LogTEstadoProductos { get; set; }

    public virtual DbSet<LogTEstadoReserva> LogTEstadoReservas { get; set; }

    public virtual DbSet<LogTFactCorrMonetarium> LogTFactCorrMonetaria { get; set; }

    public virtual DbSet<LogTFactorConversion> LogTFactorConversions { get; set; }

    public virtual DbSet<LogTFormaAtencion> LogTFormaAtencions { get; set; }

    public virtual DbSet<LogTImpFormato> LogTImpFormatos { get; set; }

    public virtual DbSet<LogTImpInterfazAux> LogTImpInterfazAuxes { get; set; }

    public virtual DbSet<LogTImpInterfazBitacora> LogTImpInterfazBitacoras { get; set; }

    public virtual DbSet<LogTImpInterfazError> LogTImpInterfazErrors { get; set; }

    public virtual DbSet<LogTImpInterfazSisProc> LogTImpInterfazSisProcs { get; set; }

    public virtual DbSet<LogTImpuesto> LogTImpuestos { get; set; }

    public virtual DbSet<LogTImpuestoEmpCtum> LogTImpuestoEmpCta { get; set; }

    public virtual DbSet<LogTImpuestoSii> LogTImpuestoSiis { get; set; }

    public virtual DbSet<LogTImpuestosOtraTasa> LogTImpuestosOtraTasas { get; set; }

    public virtual DbSet<LogTImpuestosProducto> LogTImpuestosProductos { get; set; }

    public virtual DbSet<LogTIndicadorCm> LogTIndicadorCms { get; set; }

    public virtual DbSet<LogTInventarioCab> LogTInventarioCabs { get; set; }

    public virtual DbSet<LogTInventarioDet> LogTInventarioDets { get; set; }

    public virtual DbSet<LogTInventarioDetProducto> LogTInventarioDetProductos { get; set; }

    public virtual DbSet<LogTListaPrecioCab> LogTListaPrecioCabs { get; set; }

    public virtual DbSet<LogTListaPrecioDet> LogTListaPrecioDets { get; set; }

    public virtual DbSet<LogTListaPrecioDetTramo> LogTListaPrecioDetTramos { get; set; }

    public virtual DbSet<LogTListaTipoPrecioMin> LogTListaTipoPrecioMins { get; set; }

    public virtual DbSet<LogTLotesProducto> LogTLotesProductos { get; set; }

    public virtual DbSet<LogTOperacionesLogtCab> LogTOperacionesLogtCabs { get; set; }

    public virtual DbSet<LogTOperacionesLogtCabCont> LogTOperacionesLogtCabConts { get; set; }

    public virtual DbSet<LogTOperacionesLogtDet> LogTOperacionesLogtDets { get; set; }

    public virtual DbSet<LogTOperacionesLogtDetCont> LogTOperacionesLogtDetConts { get; set; }

    public virtual DbSet<LogTOperacionesLogtDetPacking> LogTOperacionesLogtDetPackings { get; set; }

    public virtual DbSet<LogTOperacionesLogtDetSerie> LogTOperacionesLogtDetSeries { get; set; }

    public virtual DbSet<LogTOperacionesLogtDetSerieLote> LogTOperacionesLogtDetSerieLotes { get; set; }

    public virtual DbSet<LogTOperacionesLogtDetUbicacion> LogTOperacionesLogtDetUbicacions { get; set; }

    public virtual DbSet<LogTOperacionesLogtDoctoRef> LogTOperacionesLogtDoctoRefs { get; set; }

    public virtual DbSet<LogTPedidoMaterialCab> LogTPedidoMaterialCabs { get; set; }

    public virtual DbSet<LogTPedidoMaterialCabCont> LogTPedidoMaterialCabConts { get; set; }

    public virtual DbSet<LogTPedidoMaterialDet> LogTPedidoMaterialDets { get; set; }

    public virtual DbSet<LogTPedidoMaterialDetCont> LogTPedidoMaterialDetConts { get; set; }

    public virtual DbSet<LogTPedidoMaterialDetEspTec> LogTPedidoMaterialDetEspTecs { get; set; }

    public virtual DbSet<LogTPickingCab> LogTPickingCabs { get; set; }

    public virtual DbSet<LogTPickingDet> LogTPickingDets { get; set; }

    public virtual DbSet<LogTPickingDetUbicacion> LogTPickingDetUbicacions { get; set; }

    public virtual DbSet<LogTReserva> LogTReservas { get; set; }

    public virtual DbSet<LogTReservasCab> LogTReservasCabs { get; set; }

    public virtual DbSet<LogTReservasCabBak> LogTReservasCabBaks { get; set; }

    public virtual DbSet<LogTReservasDet> LogTReservasDets { get; set; }

    public virtual DbSet<LogTReservasDetBak> LogTReservasDetBaks { get; set; }

    public virtual DbSet<LogTRutaDespacho> LogTRutaDespachos { get; set; }

    public virtual DbSet<LogTSaldosBodega> LogTSaldosBodegas { get; set; }

    public virtual DbSet<LogTSaldosCierre> LogTSaldosCierres { get; set; }

    public virtual DbSet<LogTSaldosCierreLote> LogTSaldosCierreLotes { get; set; }

    public virtual DbSet<LogTSaldosCierreLotePorValor> LogTSaldosCierreLotePorValors { get; set; }

    public virtual DbSet<LogTSaldosCierreXx> LogTSaldosCierreXxes { get; set; }

    public virtual DbSet<LogTSaldosEmpresa> LogTSaldosEmpresas { get; set; }

    public virtual DbSet<LogTSaldosLogtLote> LogTSaldosLogtLotes { get; set; }

    public virtual DbSet<LogTSaldosLogtSerie> LogTSaldosLogtSeries { get; set; }

    public virtual DbSet<LogTSaldosLogtUbicacionLote> LogTSaldosLogtUbicacionLotes { get; set; }

    public virtual DbSet<LogTSeriesProducto> LogTSeriesProductos { get; set; }

    public virtual DbSet<LogTSituacionContable> LogTSituacionContables { get; set; }

    public virtual DbSet<LogTTipoCompra> LogTTipoCompras { get; set; }

    public virtual DbSet<LogTTipoConvenio> LogTTipoConvenios { get; set; }

    public virtual DbSet<LogTTipoImpuesto> LogTTipoImpuestos { get; set; }

    public virtual DbSet<LogTTipoOpeEntidad> LogTTipoOpeEntidads { get; set; }

    public virtual DbSet<LogTTipoOperacione> LogTTipoOperaciones { get; set; }

    public virtual DbSet<LogTTipoPacking> LogTTipoPackings { get; set; }

    public virtual DbSet<LogTTransformacionCab> LogTTransformacionCabs { get; set; }

    public virtual DbSet<LogTTransformacionDet> LogTTransformacionDets { get; set; }

    public virtual DbSet<LogTTransformacionDetSerieLote> LogTTransformacionDetSerieLotes { get; set; }

    public virtual DbSet<LogTUnidadesMedidaEntidad> LogTUnidadesMedidaEntidads { get; set; }

    public virtual DbSet<LogTUsuarioTipoOpe> LogTUsuarioTipoOpes { get; set; }

    public virtual DbSet<LogTValorNetoRealizacion> LogTValorNetoRealizacions { get; set; }

    public virtual DbSet<LogtPedidoMaterialDetCcosto> LogtPedidoMaterialDetCcostos { get; set; }

    public virtual DbSet<LprDoctoCab> LprDoctoCabs { get; set; }

    public virtual DbSet<LprPeriodo> LprPeriodos { get; set; }

    public virtual DbSet<ObrTArbolSubTitulo> ObrTArbolSubTitulos { get; set; }

    public virtual DbSet<ObrTCatalogoPartidum> ObrTCatalogoPartida { get; set; }

    public virtual DbSet<ObrTConfiguracion> ObrTConfiguracions { get; set; }

    public virtual DbSet<ObrTEmpresaUsuario> ObrTEmpresaUsuarios { get; set; }

    public virtual DbSet<ObrTProyecto> ObrTProyectos { get; set; }

    public virtual DbSet<ObrTProyectoPartidum> ObrTProyectoPartida { get; set; }

    public virtual DbSet<ObrTProyectoUsuario> ObrTProyectoUsuarios { get; set; }

    public virtual DbSet<ParAgencia> ParAgencias { get; set; }

    public virtual DbSet<ParArea> ParAreas { get; set; }

    public virtual DbSet<ParComuna> ParComunas { get; set; }

    public virtual DbSet<ParCuenta> ParCuentas { get; set; }

    public virtual DbSet<ParDatosClave> ParDatosClaves { get; set; }

    public virtual DbSet<ParFeriado> ParFeriados { get; set; }

    public virtual DbSet<ParGeneral> ParGenerals { get; set; }

    public virtual DbSet<ParMenuContextual> ParMenuContextuals { get; set; }

    public virtual DbSet<ParNoticia> ParNoticias { get; set; }

    public virtual DbSet<ParTiposCargo> ParTiposCargos { get; set; }

    public virtual DbSet<ParUsuFormatoReporte> ParUsuFormatoReportes { get; set; }

    public virtual DbSet<ParVtatDoctoventacab> ParVtatDoctoventacabs { get; set; }

    public virtual DbSet<ParWflFiltroAdicional> ParWflFiltroAdicionals { get; set; }

    public virtual DbSet<PopTCfgCuenta> PopTCfgCuentas { get; set; }

    public virtual DbSet<PopTCompCentraxHora> PopTCompCentraxHoras { get; set; }

    public virtual DbSet<PopTComprobante> PopTComprobantes { get; set; }

    public virtual DbSet<PopTConfiguracion> PopTConfiguracions { get; set; }

    public virtual DbSet<PopTCtaUserResponsable> PopTCtaUserResponsables { get; set; }

    public virtual DbSet<PopTDetCtoImputacion> PopTDetCtoImputacions { get; set; }

    public virtual DbSet<PopTDetEmpRelacionadum> PopTDetEmpRelacionada { get; set; }

    public virtual DbSet<PopTDetIntegracion> PopTDetIntegracions { get; set; }

    public virtual DbSet<PopTDetLineaProducto> PopTDetLineaProductos { get; set; }

    public virtual DbSet<PopTDetPresupuesto> PopTDetPresupuestos { get; set; }

    public virtual DbSet<PopTLineaProducto> PopTLineaProductos { get; set; }

    public virtual DbSet<PopTPlanilla> PopTPlanillas { get; set; }

    public virtual DbSet<PopTPlanillaRel> PopTPlanillaRels { get; set; }

    public virtual DbSet<PopTPlanillasCtoImp> PopTPlanillasCtoImps { get; set; }

    public virtual DbSet<PopTPlanillasLproducto> PopTPlanillasLproductos { get; set; }

    public virtual DbSet<PopTPlanillasRel> PopTPlanillasRels { get; set; }

    public virtual DbSet<PopTPlantilla> PopTPlantillas { get; set; }

    public virtual DbSet<PopTUbiPlantilla> PopTUbiPlantillas { get; set; }

    public virtual DbSet<PopTValoresMonedum> PopTValoresMoneda { get; set; }

    public virtual DbSet<PrdTActividad> PrdTActividads { get; set; }

    public virtual DbSet<PrdTAtributo> PrdTAtributos { get; set; }

    public virtual DbSet<PrdTAtributoGrupo> PrdTAtributoGrupos { get; set; }

    public virtual DbSet<PrdTAtributoTabla> PrdTAtributoTablas { get; set; }

    public virtual DbSet<PrdTConfiguracion> PrdTConfiguracions { get; set; }

    public virtual DbSet<PrdTDescarte> PrdTDescartes { get; set; }

    public virtual DbSet<PrdTDevolucionAsigCon> PrdTDevolucionAsigCons { get; set; }

    public virtual DbSet<PrdTDocumentoFisico> PrdTDocumentoFisicos { get; set; }

    public virtual DbSet<PrdTEstadoOp> PrdTEstadoOps { get; set; }

    public virtual DbSet<PrdTEstadoOpregla> PrdTEstadoOpreglas { get; set; }

    public virtual DbSet<PrdTExterior> PrdTExteriors { get; set; }

    public virtual DbSet<PrdTExteriorCosto> PrdTExteriorCostos { get; set; }

    public virtual DbSet<PrdTForAtributo> PrdTForAtributos { get; set; }

    public virtual DbSet<PrdTForDocumentoFisico> PrdTForDocumentoFisicos { get; set; }

    public virtual DbSet<PrdTForEspTec> PrdTForEspTecs { get; set; }

    public virtual DbSet<PrdTForExterior> PrdTForExteriors { get; set; }

    public virtual DbSet<PrdTForMaterial> PrdTForMaterials { get; set; }

    public virtual DbSet<PrdTForOperacion> PrdTForOperacions { get; set; }

    public virtual DbSet<PrdTForSemiElab> PrdTForSemiElabs { get; set; }

    public virtual DbSet<PrdTForSubProducto> PrdTForSubProductos { get; set; }

    public virtual DbSet<PrdTForUtillaje> PrdTForUtillajes { get; set; }

    public virtual DbSet<PrdTFormatoEtiquetaOp> PrdTFormatoEtiquetaOps { get; set; }

    public virtual DbSet<PrdTFormula> PrdTFormulas { get; set; }

    public virtual DbSet<PrdTFormulaCosto> PrdTFormulaCostos { get; set; }

    public virtual DbSet<PrdTGrupo> PrdTGrupos { get; set; }

    public virtual DbSet<PrdTImportacionFormula> PrdTImportacionFormulas { get; set; }

    public virtual DbSet<PrdTImportacionRecurso> PrdTImportacionRecursos { get; set; }

    public virtual DbSet<PrdTInformaError> PrdTInformaErrors { get; set; }

    public virtual DbSet<PrdTInstancium> PrdTInstancia { get; set; }

    public virtual DbSet<PrdTMaquina> PrdTMaquinas { get; set; }

    public virtual DbSet<PrdTMaquinaFormula> PrdTMaquinaFormulas { get; set; }

    public virtual DbSet<PrdTMaquinaRegiman> PrdTMaquinaRegimen { get; set; }

    public virtual DbSet<PrdTOpEntregaConsumo> PrdTOpEntregaConsumos { get; set; }

    public virtual DbSet<PrdTOpatributo> PrdTOpatributos { get; set; }

    public virtual DbSet<PrdTOpcab> PrdTOpcabs { get; set; }

    public virtual DbSet<PrdTOpconsumo> PrdTOpconsumos { get; set; }

    public virtual DbSet<PrdTOpconsumobkp> PrdTOpconsumobkps { get; set; }

    public virtual DbSet<PrdTOpdet> PrdTOpdets { get; set; }

    public virtual DbSet<PrdTOpdocumentoFisico> PrdTOpdocumentoFisicos { get; set; }

    public virtual DbSet<PrdTOpentrega> PrdTOpentregas { get; set; }

    public virtual DbSet<PrdTOpentregaRelConsumo> PrdTOpentregaRelConsumos { get; set; }

    public virtual DbSet<PrdTOperacion> PrdTOperacions { get; set; }

    public virtual DbSet<PrdTOperacionActividad> PrdTOperacionActividads { get; set; }

    public virtual DbSet<PrdTOperacionCosto> PrdTOperacionCostos { get; set; }

    public virtual DbSet<PrdTOperacionMaquina> PrdTOperacionMaquinas { get; set; }

    public virtual DbSet<PrdTOpespTec> PrdTOpespTecs { get; set; }

    public virtual DbSet<PrdTOpexterior> PrdTOpexteriors { get; set; }

    public virtual DbSet<PrdTOpexteriorTotale> PrdTOpexteriorTotales { get; set; }

    public virtual DbSet<PrdTOpglosa> PrdTOpglosas { get; set; }

    public virtual DbSet<PrdTOpmaterial> PrdTOpmaterials { get; set; }

    public virtual DbSet<PrdTOpmaterialTotale> PrdTOpmaterialTotales { get; set; }

    public virtual DbSet<PrdTOpoperacion> PrdTOpoperacions { get; set; }

    public virtual DbSet<PrdTOpoperacionTotale> PrdTOpoperacionTotales { get; set; }

    public virtual DbSet<PrdTOpprogEntr> PrdTOpprogEntrs { get; set; }

    public virtual DbSet<PrdTOpsemiElab> PrdTOpsemiElabs { get; set; }

    public virtual DbSet<PrdTOpsemiElabTotale> PrdTOpsemiElabTotales { get; set; }

    public virtual DbSet<PrdTOputillaje> PrdTOputillajes { get; set; }

    public virtual DbSet<PrdTProductoAtributoGrupo> PrdTProductoAtributoGrupos { get; set; }

    public virtual DbSet<PrdTProductoCosto> PrdTProductoCostos { get; set; }

    public virtual DbSet<PrdTProductoMaquilaSeleccionado> PrdTProductoMaquilaSeleccionados { get; set; }

    public virtual DbSet<PrdTRegiman> PrdTRegimen { get; set; }

    public virtual DbSet<PrdTSeccion> PrdTSeccions { get; set; }

    public virtual DbSet<PrdTSeccionBodEntrega> PrdTSeccionBodEntregas { get; set; }

    public virtual DbSet<PrdTSeccionBodSolicitud> PrdTSeccionBodSolicituds { get; set; }

    public virtual DbSet<PrdTSustituyeMp> PrdTSustituyeMps { get; set; }

    public virtual DbSet<PrdTTipoOp> PrdTTipoOps { get; set; }

    public virtual DbSet<PrdTTipoProducto> PrdTTipoProductos { get; set; }

    public virtual DbSet<PrdTTipoRecurso> PrdTTipoRecursos { get; set; }

    public virtual DbSet<PrdTTmpCambiaEstadoOp> PrdTTmpCambiaEstadoOps { get; set; }

    public virtual DbSet<PrdTTmpCierreOp> PrdTTmpCierreOps { get; set; }

    public virtual DbSet<PrdTTmpCorreccionPatron> PrdTTmpCorreccionPatrons { get; set; }

    public virtual DbSet<PrdTTmpDetallePedidoOp> PrdTTmpDetallePedidoOps { get; set; }

    public virtual DbSet<PrdTTmpDevolTrasp> PrdTTmpDevolTrasps { get; set; }

    public virtual DbSet<PrdTTmpImpEntrega> PrdTTmpImpEntregas { get; set; }

    public virtual DbSet<PrdTTmpImpOp> PrdTTmpImpOps { get; set; }

    public virtual DbSet<PrdTTmpMantenedorCosto> PrdTTmpMantenedorCostos { get; set; }

    public virtual DbSet<PrdTTurno> PrdTTurnos { get; set; }

    public virtual DbSet<PrdTUnidadRendimiento> PrdTUnidadRendimientos { get; set; }

    public virtual DbSet<PrdTUtillaje> PrdTUtillajes { get; set; }

    public virtual DbSet<PrdTUtillajeCosto> PrdTUtillajeCostos { get; set; }

    public virtual DbSet<PreTValoresMonedum> PreTValoresMoneda { get; set; }

    public virtual DbSet<RemInformesCol> RemInformesCols { get; set; }

    public virtual DbSet<RespAfijoContCuenta> RespAfijoContCuentas { get; set; }

    public virtual DbSet<RespDlgTRecepcionDet> RespDlgTRecepcionDets { get; set; }

    public virtual DbSet<RhuTApvcAfiliado> RhuTApvcAfiliados { get; set; }

    public virtual DbSet<RhuTApvcEmpresa> RhuTApvcEmpresas { get; set; }

    public virtual DbSet<RhuTApvcLegale> RhuTApvcLegales { get; set; }

    public virtual DbSet<RhuTBieApertura> RhuTBieAperturas { get; set; }

    public virtual DbSet<RhuTBieBeneficio> RhuTBieBeneficios { get; set; }

    public virtual DbSet<RhuTBieBeneficiosRemun> RhuTBieBeneficiosRemuns { get; set; }

    public virtual DbSet<RhuTBieBeneficiosTope> RhuTBieBeneficiosTopes { get; set; }

    public virtual DbSet<RhuTBieConvenio> RhuTBieConvenios { get; set; }

    public virtual DbSet<RhuTBieConveniosSdo> RhuTBieConveniosSdos { get; set; }

    public virtual DbSet<RhuTBieEmpConf> RhuTBieEmpConfs { get; set; }

    public virtual DbSet<RhuTBiePagosRem> RhuTBiePagosRems { get; set; }

    public virtual DbSet<RhuTBiePrestadore> RhuTBiePrestadores { get; set; }

    public virtual DbSet<RhuTBieSocio> RhuTBieSocios { get; set; }

    public virtual DbSet<RhuTBieSociosConv> RhuTBieSociosConvs { get; set; }

    public virtual DbSet<RhuTBieSociosTope> RhuTBieSociosTopes { get; set; }

    public virtual DbSet<RhuTBieSolicitude> RhuTBieSolicitudes { get; set; }

    public virtual DbSet<RhuTBieTmpTegreso> RhuTBieTmpTegresos { get; set; }

    public virtual DbSet<RhuTBieTmpTnewSocio> RhuTBieTmpTnewSocios { get; set; }

    public virtual DbSet<RhuTBieTmpTtraspasoRem> RhuTBieTmpTtraspasoRems { get; set; }

    public virtual DbSet<RhuTBitacoraFicErr> RhuTBitacoraFicErrs { get; set; }

    public virtual DbSet<RhuTBitacoraFicha> RhuTBitacoraFichas { get; set; }

    public virtual DbSet<RhuTCapAgrupaDet> RhuTCapAgrupaDets { get; set; }

    public virtual DbSet<RhuTCapAgrupacion> RhuTCapAgrupacions { get; set; }

    public virtual DbSet<RhuTCapConfigEmp> RhuTCapConfigEmps { get; set; }

    public virtual DbSet<RhuTCapCurso> RhuTCapCursos { get; set; }

    public virtual DbSet<RhuTCapCursosCalen> RhuTCapCursosCalens { get; set; }

    public virtual DbSet<RhuTCapCursosEnt> RhuTCapCursosEnts { get; set; }

    public virtual DbSet<RhuTCapCursosHor> RhuTCapCursosHors { get; set; }

    public virtual DbSet<RhuTCapCursosPrecio> RhuTCapCursosPrecios { get; set; }

    public virtual DbSet<RhuTCapEjeNomina> RhuTCapEjeNominas { get; set; }

    public virtual DbSet<RhuTCapEjeSence> RhuTCapEjeSences { get; set; }

    public virtual DbSet<RhuTCapEjecucion> RhuTCapEjecucions { get; set; }

    public virtual DbSet<RhuTCapEntidade> RhuTCapEntidades { get; set; }

    public virtual DbSet<RhuTCapFranquicia> RhuTCapFranquicias { get; set; }

    public virtual DbSet<RhuTCapMallaCur> RhuTCapMallaCurs { get; set; }

    public virtual DbSet<RhuTCapMallaGen> RhuTCapMallaGens { get; set; }

    public virtual DbSet<RhuTCapParArea> RhuTCapParAreas { get; set; }

    public virtual DbSet<RhuTCapParFranquicia> RhuTCapParFranquicias { get; set; }

    public virtual DbSet<RhuTCapParHrsSence> RhuTCapParHrsSences { get; set; }

    public virtual DbSet<RhuTCapParNota> RhuTCapParNotas { get; set; }

    public virtual DbSet<RhuTCapParTipEval> RhuTCapParTipEvals { get; set; }

    public virtual DbSet<RhuTCapParTpCurso> RhuTCapParTpCursos { get; set; }

    public virtual DbSet<RhuTCapPlane> RhuTCapPlanes { get; set; }

    public virtual DbSet<RhuTCapPlanesDet> RhuTCapPlanesDets { get; set; }

    public virtual DbSet<RhuTCapPostulante> RhuTCapPostulantes { get; set; }

    public virtual DbSet<RhuTCapPostulantesDet> RhuTCapPostulantesDets { get; set; }

    public virtual DbSet<RhuTCapPresupuesto> RhuTCapPresupuestos { get; set; }

    public virtual DbSet<RhuTCapRelatore> RhuTCapRelatores { get; set; }

    public virtual DbSet<RhuTCapTematica> RhuTCapTematicas { get; set; }

    public virtual DbSet<RhuTCtoAfiliacionVol> RhuTCtoAfiliacionVols { get; set; }

    public virtual DbSet<RhuTCtoAfiliacione> RhuTCtoAfiliaciones { get; set; }

    public virtual DbSet<RhuTCtoAnxContrato> RhuTCtoAnxContratos { get; set; }

    public virtual DbSet<RhuTCtoConfiguracion> RhuTCtoConfiguracions { get; set; }

    public virtual DbSet<RhuTCtoContrato> RhuTCtoContratos { get; set; }

    public virtual DbSet<RhuTCtoDatosCertif> RhuTCtoDatosCertifs { get; set; }

    public virtual DbSet<RhuTCtoDistribucion> RhuTCtoDistribucions { get; set; }

    public virtual DbSet<RhuTCtoNominasCf> RhuTCtoNominasCfs { get; set; }

    public virtual DbSet<RhuTCtoNominasCfdet> RhuTCtoNominasCfdets { get; set; }

    public virtual DbSet<RhuTCtoObraFaena> RhuTCtoObraFaenas { get; set; }

    public virtual DbSet<RhuTCtoReajuste> RhuTCtoReajustes { get; set; }

    public virtual DbSet<RhuTCtoReajustesDet> RhuTCtoReajustesDets { get; set; }

    public virtual DbSet<RhuTCtoRenta> RhuTCtoRentas { get; set; }

    public virtual DbSet<RhuTCtoRetJudPago> RhuTCtoRetJudPagos { get; set; }

    public virtual DbSet<RhuTCtoRetJudiciale> RhuTCtoRetJudiciales { get; set; }

    public virtual DbSet<RhuTCtoSolActivar> RhuTCtoSolActivars { get; set; }

    public virtual DbSet<RhuTCtoSolActivarDet> RhuTCtoSolActivarDets { get; set; }

    public virtual DbSet<RhuTCtoSolCambio> RhuTCtoSolCambios { get; set; }

    public virtual DbSet<RhuTCtoSolicitude> RhuTCtoSolicitudes { get; set; }

    public virtual DbSet<RhuTCtoSubJoven> RhuTCtoSubJovens { get; set; }

    public virtual DbSet<RhuTCtoSubsidio> RhuTCtoSubsidios { get; set; }

    public virtual DbSet<RhuTCtoTipoCertif> RhuTCtoTipoCertifs { get; set; }

    public virtual DbSet<RhuTCtoTmpNomina> RhuTCtoTmpNominas { get; set; }

    public virtual DbSet<RhuTCtoTmpTaud> RhuTCtoTmpTauds { get; set; }

    public virtual DbSet<RhuTCtoTmpTseleccion> RhuTCtoTmpTseleccions { get; set; }

    public virtual DbSet<RhuTDrtConfiguracion> RhuTDrtConfiguracions { get; set; }

    public virtual DbSet<RhuTDrtDeclaracion> RhuTDrtDeclaracions { get; set; }

    public virtual DbSet<RhuTDrtDiccDeclaracion> RhuTDrtDiccDeclaracions { get; set; }

    public virtual DbSet<RhuTDrtFactoresAct> RhuTDrtFactoresActs { get; set; }

    public virtual DbSet<RhuTDrtFormatoDecl> RhuTDrtFormatoDecls { get; set; }

    public virtual DbSet<RhuTDrtFormatoDeclOld> RhuTDrtFormatoDeclOlds { get; set; }

    public virtual DbSet<RhuTDrtResumenAnual> RhuTDrtResumenAnuals { get; set; }

    public virtual DbSet<RhuTDrtResumenMen> RhuTDrtResumenMens { get; set; }

    public virtual DbSet<RhuTDrtSolicitudCertif> RhuTDrtSolicitudCertifs { get; set; }

    public virtual DbSet<RhuTEpeEntidad> RhuTEpeEntidads { get; set; }

    public virtual DbSet<RhuTEpeEntidadAut> RhuTEpeEntidadAuts { get; set; }

    public virtual DbSet<RhuTEpeParametro> RhuTEpeParametros { get; set; }

    public virtual DbSet<RhuTEpeProceso> RhuTEpeProcesos { get; set; }

    public virtual DbSet<RhuTEpeSolCertif> RhuTEpeSolCertifs { get; set; }

    public virtual DbSet<RhuTEpeSolPermiso> RhuTEpeSolPermisos { get; set; }

    public virtual DbSet<RhuTEpeSolPersonal> RhuTEpeSolPersonals { get; set; }

    public virtual DbSet<RhuTEpeSolicitude> RhuTEpeSolicitudes { get; set; }

    public virtual DbSet<RhuTEvaAnotacione> RhuTEvaAnotaciones { get; set; }

    public virtual DbSet<RhuTEvaCalendario> RhuTEvaCalendarios { get; set; }

    public virtual DbSet<RhuTEvaCalendarioCategorium> RhuTEvaCalendarioCategoria { get; set; }

    public virtual DbSet<RhuTEvaCategoriaCargo> RhuTEvaCategoriaCargos { get; set; }

    public virtual DbSet<RhuTEvaCategoriaFormulario> RhuTEvaCategoriaFormularios { get; set; }

    public virtual DbSet<RhuTEvaEjecucion> RhuTEvaEjecucions { get; set; }

    public virtual DbSet<RhuTEvaEjecucionFactor> RhuTEvaEjecucionFactors { get; set; }

    public virtual DbSet<RhuTEvaEjecucionItem> RhuTEvaEjecucionItems { get; set; }

    public virtual DbSet<RhuTEvaEvaluador> RhuTEvaEvaluadors { get; set; }

    public virtual DbSet<RhuTEvaFactor> RhuTEvaFactors { get; set; }

    public virtual DbSet<RhuTEvaFormulario> RhuTEvaFormularios { get; set; }

    public virtual DbSet<RhuTEvaFormularioFactor> RhuTEvaFormularioFactors { get; set; }

    public virtual DbSet<RhuTEvaFormularioItem> RhuTEvaFormularioItems { get; set; }

    public virtual DbSet<RhuTEvaItemEvaluacion> RhuTEvaItemEvaluacions { get; set; }

    public virtual DbSet<RhuTEvaNotum> RhuTEvaNota { get; set; }

    public virtual DbSet<RhuTEvaParCategoriaCargo> RhuTEvaParCategoriaCargos { get; set; }

    public virtual DbSet<RhuTEvaParOrigenAnotacion> RhuTEvaParOrigenAnotacions { get; set; }

    public virtual DbSet<RhuTEvaParProcesoNegocio> RhuTEvaParProcesoNegocios { get; set; }

    public virtual DbSet<RhuTEvaParTipoAnotacion> RhuTEvaParTipoAnotacions { get; set; }

    public virtual DbSet<RhuTEvaParTipoCalificacion> RhuTEvaParTipoCalificacions { get; set; }

    public virtual DbSet<RhuTExcEmpresa> RhuTExcEmpresas { get; set; }

    public virtual DbSet<RhuTExcFechasEve> RhuTExcFechasEves { get; set; }

    public virtual DbSet<RhuTExcPago> RhuTExcPagos { get; set; }

    public virtual DbSet<RhuTExcTipExc> RhuTExcTipExcs { get; set; }

    public virtual DbSet<RhuTExcTipPago> RhuTExcTipPagos { get; set; }

    public virtual DbSet<RhuTExcepcione> RhuTExcepciones { get; set; }

    public virtual DbSet<RhuTFaltaAbono> RhuTFaltaAbonos { get; set; }

    public virtual DbSet<RhuTFicAntAcademico> RhuTFicAntAcademicos { get; set; }

    public virtual DbSet<RhuTFicAntActExtra> RhuTFicAntActExtras { get; set; }

    public virtual DbSet<RhuTFicAntAfp> RhuTFicAntAfps { get; set; }

    public virtual DbSet<RhuTFicAntApv> RhuTFicAntApvs { get; set; }

    public virtual DbSet<RhuTFicAntComplementario> RhuTFicAntComplementarios { get; set; }

    public virtual DbSet<RhuTFicAntEmergencium> RhuTFicAntEmergencia { get; set; }

    public virtual DbSet<RhuTFicAntGrupoFamiliar> RhuTFicAntGrupoFamiliars { get; set; }

    public virtual DbSet<RhuTFicAntGrupoFamiliarOld> RhuTFicAntGrupoFamiliarOlds { get; set; }

    public virtual DbSet<RhuTFicAntIdioma> RhuTFicAntIdiomas { get; set; }

    public virtual DbSet<RhuTFicAntImponible> RhuTFicAntImponibles { get; set; }

    public virtual DbSet<RhuTFicAntLaborale> RhuTFicAntLaborales { get; set; }

    public virtual DbSet<RhuTFicAntMedico> RhuTFicAntMedicos { get; set; }

    public virtual DbSet<RhuTFicAntPrevisionale> RhuTFicAntPrevisionales { get; set; }

    public virtual DbSet<RhuTFicAntSalud> RhuTFicAntSaluds { get; set; }

    public virtual DbSet<RhuTFicCertificacione> RhuTFicCertificaciones { get; set; }

    public virtual DbSet<RhuTFicDctosFi> RhuTFicDctosFis { get; set; }

    public virtual DbSet<RhuTFicPersona> RhuTFicPersonas { get; set; }

    public virtual DbSet<RhuTFicTmpTtrab> RhuTFicTmpTtrabs { get; set; }

    public virtual DbSet<RhuTFlegBitacora> RhuTFlegBitacoras { get; set; }

    public virtual DbSet<RhuTFlegCtrlBono> RhuTFlegCtrlBonos { get; set; }

    public virtual DbSet<RhuTFlegDatosAdic> RhuTFlegDatosAdics { get; set; }

    public virtual DbSet<RhuTFlegDefGral> RhuTFlegDefGrals { get; set; }

    public virtual DbSet<RhuTFlegFerRegional> RhuTFlegFerRegionals { get; set; }

    public virtual DbSet<RhuTFlegFeriado> RhuTFlegFeriados { get; set; }

    public virtual DbSet<RhuTFlegMovAbono> RhuTFlegMovAbonos { get; set; }

    public virtual DbSet<RhuTFlegMovCarAnu> RhuTFlegMovCarAnus { get; set; }

    public virtual DbSet<RhuTFlegMovCargo> RhuTFlegMovCargos { get; set; }

    public virtual DbSet<RhuTFlegMovPeriodo> RhuTFlegMovPeriodos { get; set; }

    public virtual DbSet<RhuTFlegMovProgresivo> RhuTFlegMovProgresivos { get; set; }

    public virtual DbSet<RhuTFlegProgresivo> RhuTFlegProgresivos { get; set; }

    public virtual DbSet<RhuTFlegSaldo> RhuTFlegSaldos { get; set; }

    public virtual DbSet<RhuTFlegSaldosErr> RhuTFlegSaldosErrs { get; set; }

    public virtual DbSet<RhuTFlegSeguimiento> RhuTFlegSeguimientos { get; set; }

    public virtual DbSet<RhuTFlegTabAbono> RhuTFlegTabAbonos { get; set; }

    public virtual DbSet<RhuTFlegTmpTcertif> RhuTFlegTmpTcertifs { get; set; }

    public virtual DbSet<RhuTFnqBasesDet> RhuTFnqBasesDets { get; set; }

    public virtual DbSet<RhuTFnqBasis> RhuTFnqBases { get; set; }

    public virtual DbSet<RhuTFnqCalculo> RhuTFnqCalculos { get; set; }

    public virtual DbSet<RhuTFnqCalculosDet> RhuTFnqCalculosDets { get; set; }

    public virtual DbSet<RhuTFnqCausalReal> RhuTFnqCausalReals { get; set; }

    public virtual DbSet<RhuTFnqCausale> RhuTFnqCausales { get; set; }

    public virtual DbSet<RhuTFnqSolicitud> RhuTFnqSolicituds { get; set; }

    public virtual DbSet<RhuTFnqSolicitudDet> RhuTFnqSolicitudDets { get; set; }

    public virtual DbSet<RhuTLicAccidente> RhuTLicAccidentes { get; set; }

    public virtual DbSet<RhuTLicDetSubsidio> RhuTLicDetSubsidios { get; set; }

    public virtual DbSet<RhuTLicMedica> RhuTLicMedicas { get; set; }

    public virtual DbSet<RhuTLicMedico> RhuTLicMedicos { get; set; }

    public virtual DbSet<RhuTLicRmedica> RhuTLicRmedicas { get; set; }

    public virtual DbSet<RhuTMigConceptoFormula> RhuTMigConceptoFormulas { get; set; }

    public virtual DbSet<RhuTMigLiquidacion> RhuTMigLiquidacions { get; set; }

    public virtual DbSet<RhuTParAuditorium> RhuTParAuditoria { get; set; }

    public virtual DbSet<RhuTParCargo> RhuTParCargos { get; set; }

    public virtual DbSet<RhuTParDicColumna> RhuTParDicColumnas { get; set; }

    public virtual DbSet<RhuTParDicTabla> RhuTParDicTablas { get; set; }

    public virtual DbSet<RhuTParDiccionario> RhuTParDiccionarios { get; set; }

    public virtual DbSet<RhuTParDireccione> RhuTParDirecciones { get; set; }

    public virtual DbSet<RhuTParEmpresa> RhuTParEmpresas { get; set; }

    public virtual DbSet<RhuTParEstrOrganica> RhuTParEstrOrganicas { get; set; }

    public virtual DbSet<RhuTParImpuesto> RhuTParImpuestos { get; set; }

    public virtual DbSet<RhuTParInstitucione> RhuTParInstituciones { get; set; }

    public virtual DbSet<RhuTParInterfaz> RhuTParInterfazs { get; set; }

    public virtual DbSet<RhuTParInterfazDet> RhuTParInterfazDets { get; set; }

    public virtual DbSet<RhuTParItem> RhuTParItems { get; set; }

    public virtual DbSet<RhuTParLugarTrabajo> RhuTParLugarTrabajos { get; set; }

    public virtual DbSet<RhuTParMoneda> RhuTParMonedas { get; set; }

    public virtual DbSet<RhuTParOrganigrama> RhuTParOrganigramas { get; set; }

    public virtual DbSet<RhuTParReajusteTab> RhuTParReajusteTabs { get; set; }

    public virtual DbSet<RhuTParReajusteTabDet> RhuTParReajusteTabDets { get; set; }

    public virtual DbSet<RhuTParTabla> RhuTParTablas { get; set; }

    public virtual DbSet<RhuTParTramoAsigFam> RhuTParTramoAsigFams { get; set; }

    public virtual DbSet<RhuTParUsuariosEnt> RhuTParUsuariosEnts { get; set; }

    public virtual DbSet<RhuTParUsuariosOrg> RhuTParUsuariosOrgs { get; set; }

    public virtual DbSet<RhuTParVigDatosLeg> RhuTParVigDatosLegs { get; set; }

    public virtual DbSet<RhuTParVigInstituc> RhuTParVigInstitucs { get; set; }

    public virtual DbSet<RhuTParVigItem> RhuTParVigItems { get; set; }

    public virtual DbSet<RhuTPerRsolicitud> RhuTPerRsolicituds { get; set; }

    public virtual DbSet<RhuTPerSolicitud> RhuTPerSolicituds { get; set; }

    public virtual DbSet<RhuTPerVacGanada> RhuTPerVacGanadas { get; set; }

    public virtual DbSet<RhuTRemAfdecJuradaDet> RhuTRemAfdecJuradaDets { get; set; }

    public virtual DbSet<RhuTRemAfdecJuradum> RhuTRemAfdecJurada { get; set; }

    public virtual DbSet<RhuTRemAftramoCalculado> RhuTRemAftramoCalculados { get; set; }

    public virtual DbSet<RhuTRemAftramoCalculadoDet> RhuTRemAftramoCalculadoDets { get; set; }

    public virtual DbSet<RhuTRemAuditoriaDet> RhuTRemAuditoriaDets { get; set; }

    public virtual DbSet<RhuTRemAuditorium> RhuTRemAuditoria { get; set; }

    public virtual DbSet<RhuTRemColumnasInf> RhuTRemColumnasInfs { get; set; }

    public virtual DbSet<RhuTRemConcepto> RhuTRemConceptos { get; set; }

    public virtual DbSet<RhuTRemConceptosCont> RhuTRemConceptosConts { get; set; }

    public virtual DbSet<RhuTRemConceptosItm> RhuTRemConceptosItms { get; set; }

    public virtual DbSet<RhuTRemConceptosMe> RhuTRemConceptosMes { get; set; }

    public virtual DbSet<RhuTRemConceptosPer> RhuTRemConceptosPers { get; set; }

    public virtual DbSet<RhuTRemConceptosTot> RhuTRemConceptosTots { get; set; }

    public virtual DbSet<RhuTRemDetalleEmi> RhuTRemDetalleEmis { get; set; }

    public virtual DbSet<RhuTRemDistribPago> RhuTRemDistribPagos { get; set; }

    public virtual DbSet<RhuTRemDistribucion> RhuTRemDistribucions { get; set; }

    public virtual DbSet<RhuTRemEmpresaCont> RhuTRemEmpresaConts { get; set; }

    public virtual DbSet<RhuTRemFormNominaPago> RhuTRemFormNominaPagos { get; set; }

    public virtual DbSet<RhuTRemHstAntecedente> RhuTRemHstAntecedentes { get; set; }

    public virtual DbSet<RhuTRemHstDato> RhuTRemHstDatos { get; set; }

    public virtual DbSet<RhuTRemHstDetalle> RhuTRemHstDetalles { get; set; }

    public virtual DbSet<RhuTRemHstDiferencia> RhuTRemHstDiferencias { get; set; }

    public virtual DbSet<RhuTRemHstTotale> RhuTRemHstTotales { get; set; }

    public virtual DbSet<RhuTRemInecolConc> RhuTRemInecolConcs { get; set; }

    public virtual DbSet<RhuTRemInfColConc> RhuTRemInfColConcs { get; set; }

    public virtual DbSet<RhuTRemInfGastColConc> RhuTRemInfGastColConcs { get; set; }

    public virtual DbSet<RhuTRemInforme> RhuTRemInformes { get; set; }

    public virtual DbSet<RhuTRemInformesCol> RhuTRemInformesCols { get; set; }

    public virtual DbSet<RhuTRemInformesTit> RhuTRemInformesTits { get; set; }

    public virtual DbSet<RhuTRemLiqAccesorio> RhuTRemLiqAccesorios { get; set; }

    public virtual DbSet<RhuTRemLiqAntecedente> RhuTRemLiqAntecedentes { get; set; }

    public virtual DbSet<RhuTRemLiqDato> RhuTRemLiqDatos { get; set; }

    public virtual DbSet<RhuTRemLiqDetalle> RhuTRemLiqDetalles { get; set; }

    public virtual DbSet<RhuTRemLiqTotale> RhuTRemLiqTotales { get; set; }

    public virtual DbSet<RhuTRemLiqTotalesPer> RhuTRemLiqTotalesPers { get; set; }

    public virtual DbSet<RhuTRemNominasConc> RhuTRemNominasConcs { get; set; }

    public virtual DbSet<RhuTRemNominasConcDet> RhuTRemNominasConcDets { get; set; }

    public virtual DbSet<RhuTRemNominasCtaCte> RhuTRemNominasCtaCtes { get; set; }

    public virtual DbSet<RhuTRemPagosEspeciale> RhuTRemPagosEspeciales { get; set; }

    public virtual DbSet<RhuTRemParamCalculo> RhuTRemParamCalculos { get; set; }

    public virtual DbSet<RhuTRemPeriodo> RhuTRemPeriodos { get; set; }

    public virtual DbSet<RhuTRemPermanente> RhuTRemPermanentes { get; set; }

    public virtual DbSet<RhuTRemProcCentraliza> RhuTRemProcCentralizas { get; set; }

    public virtual DbSet<RhuTRemProcCentralizaCuota> RhuTRemProcCentralizaCuotas { get; set; }

    public virtual DbSet<RhuTRemProcCentralizaDet> RhuTRemProcCentralizaDets { get; set; }

    public virtual DbSet<RhuTRemProcPagSinMtoLiq> RhuTRemProcPagSinMtoLiqs { get; set; }

    public virtual DbSet<RhuTRemProcPago> RhuTRemProcPagos { get; set; }

    public virtual DbSet<RhuTRemProceso> RhuTRemProcesos { get; set; }

    public virtual DbSet<RhuTRemProcesoConc> RhuTRemProcesoConcs { get; set; }

    public virtual DbSet<RhuTRemProcesosCont> RhuTRemProcesosConts { get; set; }

    public virtual DbSet<RhuTRemProcesosPer> RhuTRemProcesosPers { get; set; }

    public virtual DbSet<RhuTRemTblAtribModelo> RhuTRemTblAtribModelos { get; set; }

    public virtual DbSet<RhuTRemTblModelo> RhuTRemTblModelos { get; set; }

    public virtual DbSet<RhuTResumenCalculo> RhuTResumenCalculos { get; set; }

    public virtual DbSet<RhuTSelActividad> RhuTSelActividads { get; set; }

    public virtual DbSet<RhuTSelCargoPostulante> RhuTSelCargoPostulantes { get; set; }

    public virtual DbSet<RhuTSelConfiguracion> RhuTSelConfiguracions { get; set; }

    public virtual DbSet<RhuTSelConocimiento> RhuTSelConocimientos { get; set; }

    public virtual DbSet<RhuTSelControlTemp> RhuTSelControlTemps { get; set; }

    public virtual DbSet<RhuTSelDocumentoCargo> RhuTSelDocumentoCargos { get; set; }

    public virtual DbSet<RhuTSelDocumentoPersona> RhuTSelDocumentoPersonas { get; set; }

    public virtual DbSet<RhuTSelDotacion> RhuTSelDotacions { get; set; }

    public virtual DbSet<RhuTSelDotacionSolicitud> RhuTSelDotacionSolicituds { get; set; }

    public virtual DbSet<RhuTSelEvaluaPostulante> RhuTSelEvaluaPostulantes { get; set; }

    public virtual DbSet<RhuTSelEvaluacion> RhuTSelEvaluacions { get; set; }

    public virtual DbSet<RhuTSelHisPostulante> RhuTSelHisPostulantes { get; set; }

    public virtual DbSet<RhuTSelNotificacion> RhuTSelNotificacions { get; set; }

    public virtual DbSet<RhuTSelNotificacionAux> RhuTSelNotificacionAuxes { get; set; }

    public virtual DbSet<RhuTSelNotificacionTemp> RhuTSelNotificacionTemps { get; set; }

    public virtual DbSet<RhuTSelObservacion> RhuTSelObservacions { get; set; }

    public virtual DbSet<RhuTSelOrdenProceso> RhuTSelOrdenProcesos { get; set; }

    public virtual DbSet<RhuTSelParActividad> RhuTSelParActividads { get; set; }

    public virtual DbSet<RhuTSelParActividadInicial> RhuTSelParActividadInicials { get; set; }

    public virtual DbSet<RhuTSelParCoordinador> RhuTSelParCoordinadors { get; set; }

    public virtual DbSet<RhuTSelParEstado> RhuTSelParEstados { get; set; }

    public virtual DbSet<RhuTSelParFunEstado> RhuTSelParFunEstados { get; set; }

    public virtual DbSet<RhuTSelParRequisito> RhuTSelParRequisitos { get; set; }

    public virtual DbSet<RhuTSelPerfil> RhuTSelPerfils { get; set; }

    public virtual DbSet<RhuTSelPerfilTemp> RhuTSelPerfilTemps { get; set; }

    public virtual DbSet<RhuTSelPostulante> RhuTSelPostulantes { get; set; }

    public virtual DbSet<RhuTSelPostulanteTemp> RhuTSelPostulanteTemps { get; set; }

    public virtual DbSet<RhuTSelRefPostulante> RhuTSelRefPostulantes { get; set; }

    public virtual DbSet<RhuTSelSolicitud> RhuTSelSolicituds { get; set; }

    public virtual DbSet<RhuTSelSolicitudDet> RhuTSelSolicitudDets { get; set; }

    public virtual DbSet<RhuTSelTsolicitud> RhuTSelTsolicituds { get; set; }

    public virtual DbSet<RhuTSelTsolicitudDet> RhuTSelTsolicitudDets { get; set; }

    public virtual DbSet<RhuTTablaDato> RhuTTablaDatos { get; set; }

    public virtual DbSet<RhuTTablaDatosAfi> RhuTTablaDatosAfis { get; set; }

    public virtual DbSet<RhuTTablaDatosAusen> RhuTTablaDatosAusens { get; set; }

    public virtual DbSet<RhuTTablaDatosLicen> RhuTTablaDatosLicens { get; set; }

    public virtual DbSet<RhuTTablaDatosPerman> RhuTTablaDatosPermen { get; set; }

    public virtual DbSet<RhuTTablaDatosRen> RhuTTablaDatosRens { get; set; }

    public virtual DbSet<RhuTTmpFlegAbono> RhuTTmpFlegAbonos { get; set; }

    public virtual DbSet<RhutTmpestructura> RhutTmpestructuras { get; set; }

    public virtual DbSet<RneAgrupacion> RneAgrupacions { get; set; }

    public virtual DbSet<RneAgrupacionUsuario> RneAgrupacionUsuarios { get; set; }

    public virtual DbSet<RneAuditorium> RneAuditoria { get; set; }

    public virtual DbSet<RneBase> RneBases { get; set; }

    public virtual DbSet<RneBaseHorario> RneBaseHorarios { get; set; }

    public virtual DbSet<RneBaseReporte> RneBaseReportes { get; set; }

    public virtual DbSet<RneColumna> RneColumnas { get; set; }

    public virtual DbSet<RneColumnaUsuario> RneColumnaUsuarios { get; set; }

    public virtual DbSet<RneConfiguracion> RneConfiguracions { get; set; }

    public virtual DbSet<RneConsultum> RneConsulta { get; set; }

    public virtual DbSet<RneFiltro> RneFiltros { get; set; }

    public virtual DbSet<RneFiltroProgramacion> RneFiltroProgramacions { get; set; }

    public virtual DbSet<RneFtp> RneFtps { get; set; }

    public virtual DbSet<RneFtpUsuario> RneFtpUsuarios { get; set; }

    public virtual DbSet<RneGrupo> RneGrupos { get; set; }

    public virtual DbSet<RneOrden> RneOrdens { get; set; }

    public virtual DbSet<RnePagina> RnePaginas { get; set; }

    public virtual DbSet<RnePerfil> RnePerfils { get; set; }

    public virtual DbSet<RnePerfilPagina> RnePerfilPaginas { get; set; }

    public virtual DbSet<RneProgramacion> RneProgramacions { get; set; }

    public virtual DbSet<RneRelacion> RneRelacions { get; set; }

    public virtual DbSet<RneRelacionTabla> RneRelacionTablas { get; set; }

    public virtual DbSet<RneRelacionUsuario> RneRelacionUsuarios { get; set; }

    public virtual DbSet<RneReporte> RneReportes { get; set; }

    public virtual DbSet<RneRepositorio> RneRepositorios { get; set; }

    public virtual DbSet<RneTabla> RneTablas { get; set; }

    public virtual DbSet<RneUsuario> RneUsuarios { get; set; }

    public virtual DbSet<RneUsuarioAgrupacion> RneUsuarioAgrupacions { get; set; }

    public virtual DbSet<RneUsuarioPerfil> RneUsuarioPerfils { get; set; }

    public virtual DbSet<RneValor> RneValors { get; set; }

    public virtual DbSet<SysSequence> SysSequences { get; set; }

    public virtual DbSet<TabSdoVacTmp> TabSdoVacTmps { get; set; }

    public virtual DbSet<TesTArchivoFormato> TesTArchivoFormatos { get; set; }

    public virtual DbSet<TesTArchivoNomina> TesTArchivoNominas { get; set; }

    public virtual DbSet<TesTBitacoraCheque> TesTBitacoraCheques { get; set; }

    public virtual DbSet<TesTBitacoraReqPago> TesTBitacoraReqPagos { get; set; }

    public virtual DbSet<TesTCabeceraEmi> TesTCabeceraEmis { get; set; }

    public virtual DbSet<TesTChequeHistorico> TesTChequeHistoricos { get; set; }

    public virtual DbSet<TesTClasificaFinanciero> TesTClasificaFinancieros { get; set; }

    public virtual DbSet<TesTCodigosFin> TesTCodigosFins { get; set; }

    public virtual DbSet<TesTCtaCteBanFormato> TesTCtaCteBanFormatos { get; set; }

    public virtual DbSet<TesTCtaCtesBancaria> TesTCtaCtesBancarias { get; set; }

    public virtual DbSet<TesTCtaCtesBancariasdet> TesTCtaCtesBancariasdets { get; set; }

    public virtual DbSet<TesTDetalleEmi> TesTDetalleEmis { get; set; }

    public virtual DbSet<TesTDiccionarioNomina> TesTDiccionarioNominas { get; set; }

    public virtual DbSet<TesTFormatoNomina> TesTFormatoNominas { get; set; }

    public virtual DbSet<TesTHomologaNominaPago> TesTHomologaNominaPagos { get; set; }

    public virtual DbSet<TesTInstiFinan> TesTInstiFinans { get; set; }

    public virtual DbSet<TesTMatrizBancaria> TesTMatrizBancarias { get; set; }

    public virtual DbSet<TesTMovimiento> TesTMovimientos { get; set; }

    public virtual DbSet<TesTMovimientosCf> TesTMovimientosCfs { get; set; }

    public virtual DbSet<TesTPlanFinanciero> TesTPlanFinancieros { get; set; }

    public virtual DbSet<TesTPlaza> TesTPlazas { get; set; }

    public virtual DbSet<TesTRelFormaPago> TesTRelFormaPagos { get; set; }

    public virtual DbSet<TesTSaldosCajaBanco> TesTSaldosCajaBancos { get; set; }

    public virtual DbSet<TesTSucursalBancaria> TesTSucursalBancarias { get; set; }

    public virtual DbSet<TmpApeV7> TmpApeV7s { get; set; }

    public virtual DbSet<TmpApeV7Linea> TmpApeV7Lineas { get; set; }

    public virtual DbSet<TmpApeV7Re> TmpApeV7Res { get; set; }

    public virtual DbSet<TmpCcpTcompromiso> TmpCcpTcompromisos { get; set; }

    public virtual DbSet<TmpCcpTmovimiento> TmpCcpTmovimientos { get; set; }

    public virtual DbSet<TmpCertRentum> TmpCertRenta { get; set; }

    public virtual DbSet<TmpCorrCompDeltum> TmpCorrCompDelta { get; set; }

    public virtual DbSet<TmpTAfiBienesDetIfr> TmpTAfiBienesDetIfrs { get; set; }

    public virtual DbSet<TmpTAfiBienesResumenIfr> TmpTAfiBienesResumenIfrs { get; set; }

    public virtual DbSet<TmpTAfiClasCcugedet11Ifr> TmpTAfiClasCcugedet11Ifrs { get; set; }

    public virtual DbSet<TmpTAfiClasCcugedet1Ifr> TmpTAfiClasCcugedet1Ifrs { get; set; }

    public virtual DbSet<TmpTAfiClasCcugedet22Ifr> TmpTAfiClasCcugedet22Ifrs { get; set; }

    public virtual DbSet<TmpTAfiClasCcugedet2Ifr> TmpTAfiClasCcugedet2Ifrs { get; set; }

    public virtual DbSet<TmpTAfiDistribUgedet1Ifr> TmpTAfiDistribUgedet1Ifrs { get; set; }

    public virtual DbSet<TmpTAfiDistribUgedet2Ifr> TmpTAfiDistribUgedet2Ifrs { get; set; }

    public virtual DbSet<TmpTAfiInfContDep1Ifr> TmpTAfiInfContDep1Ifrs { get; set; }

    public virtual DbSet<TmpTAfiInfContDep2Ifr> TmpTAfiInfContDep2Ifrs { get; set; }

    public virtual DbSet<TmpTAfiInfPorBccosto> TmpTAfiInfPorBccostos { get; set; }

    public virtual DbSet<TmpTAfiInfProyCalculoDet> TmpTAfiInfProyCalculoDets { get; set; }

    public virtual DbSet<TmpTAfiInfProyCalculoRe> TmpTAfiInfProyCalculoRes { get; set; }

    public virtual DbSet<TmpTAfiProcDistribuyeDeter> TmpTAfiProcDistribuyeDeters { get; set; }

    public virtual DbSet<TmpTAfiTinformeAdicion> TmpTAfiTinformeAdicions { get; set; }

    public virtual DbSet<TmpTAfiVhorasConsumidum> TmpTAfiVhorasConsumida { get; set; }

    public virtual DbSet<TmpTCajaBcoRegenera> TmpTCajaBcoRegeneras { get; set; }

    public virtual DbSet<TmpTCalculoAporte> TmpTCalculoAportes { get; set; }

    public virtual DbSet<TmpTCargoBancario> TmpTCargoBancarios { get; set; }

    public virtual DbSet<TmpTCcpCuotasMov> TmpTCcpCuotasMovs { get; set; }

    public virtual DbSet<TmpTCentrosAsociado> TmpTCentrosAsociados { get; set; }

    public virtual DbSet<TmpTConInfExcel> TmpTConInfExcels { get; set; }

    public virtual DbSet<TmpTCorreccionInd> TmpTCorreccionInds { get; set; }

    public virtual DbSet<TmpTCorreccionIpc> TmpTCorreccionIpcs { get; set; }

    public virtual DbSet<TmpTCuenta> TmpTCuentas { get; set; }

    public virtual DbSet<TmpTCuentasAsociada> TmpTCuentasAsociadas { get; set; }

    public virtual DbSet<TmpTDetaEmbarqueCalc> TmpTDetaEmbarqueCalcs { get; set; }

    public virtual DbSet<TmpTDlgImprimeDocto> TmpTDlgImprimeDoctos { get; set; }

    public virtual DbSet<TmpTDlgLibro> TmpTDlgLibros { get; set; }

    public virtual DbSet<TmpTDlgLibroImp> TmpTDlgLibroImps { get; set; }

    public virtual DbSet<TmpTFinDetalle> TmpTFinDetalles { get; set; }

    public virtual DbSet<TmpTFinMovimiento> TmpTFinMovimientos { get; set; }

    public virtual DbSet<TmpTFinMovimientosCce> TmpTFinMovimientosCces { get; set; }

    public virtual DbSet<TmpTFinMovimientosTe> TmpTFinMovimientosTes { get; set; }

    public virtual DbSet<TmpTFinOperacione> TmpTFinOperaciones { get; set; }

    public virtual DbSet<TmpTFinTotale> TmpTFinTotales { get; set; }

    public virtual DbSet<TmpTInterfazAux> TmpTInterfazAuxes { get; set; }

    public virtual DbSet<TmpTLcoDoctoLegal> TmpTLcoDoctoLegals { get; set; }

    public virtual DbSet<TmpTPeriodoCol> TmpTPeriodoCols { get; set; }

    public virtual DbSet<TmpTRegistroEnvioMail> TmpTRegistroEnvioMails { get; set; }

    public virtual DbSet<TmpTRemConfigPer> TmpTRemConfigPers { get; set; }

    public virtual DbSet<TmpTRequePago> TmpTRequePagos { get; set; }

    public virtual DbSet<TmpTResulReclamosDte> TmpTResulReclamosDtes { get; set; }

    public virtual DbSet<TmpTRevEgreso> TmpTRevEgresos { get; set; }

    public virtual DbSet<TmpTRhuConceptosCont> TmpTRhuConceptosConts { get; set; }

    public virtual DbSet<TmpTRhuConceptosCopium> TmpTRhuConceptosCopia { get; set; }

    public virtual DbSet<TmpTRhuConceptosValor> TmpTRhuConceptosValors { get; set; }

    public virtual DbSet<TmpTRhuConfigLiquidacion> TmpTRhuConfigLiquidacions { get; set; }

    public virtual DbSet<TmpTRhuContrato> TmpTRhuContratos { get; set; }

    public virtual DbSet<TmpTRhuCtoDistrib> TmpTRhuCtoDistribs { get; set; }

    public virtual DbSet<TmpTRhuCuotasCtaCte> TmpTRhuCuotasCtaCtes { get; set; }

    public virtual DbSet<TmpTRhuDrtDeclRent> TmpTRhuDrtDeclRents { get; set; }

    public virtual DbSet<TmpTRhuDrtSolicitudCertif> TmpTRhuDrtSolicitudCertifs { get; set; }

    public virtual DbSet<TmpTRhuInfCodigo> TmpTRhuInfCodigos { get; set; }

    public virtual DbSet<TmpTRhuLineaLiquidacion> TmpTRhuLineaLiquidacions { get; set; }

    public virtual DbSet<TmpTRhuRemAftramoCalculado> TmpTRhuRemAftramoCalculados { get; set; }

    public virtual DbSet<TmpTRhuRemAntPrevConsultum> TmpTRhuRemAntPrevConsulta { get; set; }

    public virtual DbSet<TmpTRhuRemCalcConcCto> TmpTRhuRemCalcConcCtos { get; set; }

    public virtual DbSet<TmpTRhuRemCalcCto> TmpTRhuRemCalcCtos { get; set; }

    public virtual DbSet<TmpTRhuRemCalcVarCto> TmpTRhuRemCalcVarCtos { get; set; }

    public virtual DbSet<TmpTRhuRemCalcVarInf> TmpTRhuRemCalcVarInfs { get; set; }

    public virtual DbSet<TmpTRhuRemConcConsultum> TmpTRhuRemConcConsulta { get; set; }

    public virtual DbSet<TmpTRhuRemCtoMovtoInf> TmpTRhuRemCtoMovtoInfs { get; set; }

    public virtual DbSet<TmpTRhuRemDatPrevired> TmpTRhuRemDatPrevireds { get; set; }

    public virtual DbSet<TmpTRhuRemDprCto> TmpTRhuRemDprCtos { get; set; }

    public virtual DbSet<TmpTRhuRemInfAfp> TmpTRhuRemInfAfps { get; set; }

    public virtual DbSet<TmpTRhuRemInfCompara> TmpTRhuRemInfComparas { get; set; }

    public virtual DbSet<TmpTRhuRemInfGasto> TmpTRhuRemInfGastos { get; set; }

    public virtual DbSet<TmpTRhuRemInfIne> TmpTRhuRemInfInes { get; set; }

    public virtual DbSet<TmpTRhuRemInfPago> TmpTRhuRemInfPagos { get; set; }

    public virtual DbSet<TmpTRhuRemInfPagoDet> TmpTRhuRemInfPagoDets { get; set; }

    public virtual DbSet<TmpTRhuRemInfPagoRecibo> TmpTRhuRemInfPagoRecibos { get; set; }

    public virtual DbSet<TmpTRhuRemInfRentasDev> TmpTRhuRemInfRentasDevs { get; set; }

    public virtual DbSet<TmpTRhuRemLegalesAnt> TmpTRhuRemLegalesAnts { get; set; }

    public virtual DbSet<TmpTRhuRemLegalesDet> TmpTRhuRemLegalesDets { get; set; }

    public virtual DbSet<TmpTRhuRemLegalesMov> TmpTRhuRemLegalesMovs { get; set; }

    public virtual DbSet<TmpTRhuRemMovApv> TmpTRhuRemMovApvs { get; set; }

    public virtual DbSet<TmpTRhuRemNomIntBitacora> TmpTRhuRemNomIntBitacoras { get; set; }

    public virtual DbSet<TmpTRhuRemNomInterfaz> TmpTRhuRemNomInterfazs { get; set; }

    public virtual DbSet<TmpTRhuRemNominasConcDet> TmpTRhuRemNominasConcDets { get; set; }

    public virtual DbSet<TmpTRhuRemPreviText> TmpTRhuRemPreviTexts { get; set; }

    public virtual DbSet<TmpTRhuRemPrevired> TmpTRhuRemPrevireds { get; set; }

    public virtual DbSet<TmpTRhuRemProcCentraliza> TmpTRhuRemProcCentralizas { get; set; }

    public virtual DbSet<TmpTRhuRemProcConsultum> TmpTRhuRemProcConsulta { get; set; }

    public virtual DbSet<TmpTRhuRemProcPago> TmpTRhuRemProcPagos { get; set; }

    public virtual DbSet<TmpTRhuRemProcesosCon> TmpTRhuRemProcesosCons { get; set; }

    public virtual DbSet<TmpTRhuRemSimulacion> TmpTRhuRemSimulacions { get; set; }

    public virtual DbSet<TmpTRhuRemTramoAsigFam> TmpTRhuRemTramoAsigFams { get; set; }

    public virtual DbSet<TmpTTesDetCorrMon> TmpTTesDetCorrMons { get; set; }

    public virtual DbSet<TmpTWmsXml> TmpTWmsXmls { get; set; }

    public virtual DbSet<TmptRhuRemIdMov> TmptRhuRemIdMovs { get; set; }

    public virtual DbSet<TmptSeleccion> TmptSeleccions { get; set; }

    public virtual DbSet<TmptWmsRecepImportada> TmptWmsRecepImportadas { get; set; }

    public virtual DbSet<UruTContFacNoPagada> UruTContFacNoPagadas { get; set; }

    public virtual DbSet<UruTRegistroReversa> UruTRegistroReversas { get; set; }

    public virtual DbSet<UsuAcceso> UsuAccesos { get; set; }

    public virtual DbSet<UsuFuncionalidade> UsuFuncionalidades { get; set; }

    public virtual DbSet<UsuFuncionalidadesComin> UsuFuncionalidadesComins { get; set; }

    public virtual DbSet<UsuFuncionalidadesRole> UsuFuncionalidadesRoles { get; set; }

    public virtual DbSet<UsuHistClave> UsuHistClaves { get; set; }

    public virtual DbSet<UsuMenu> UsuMenus { get; set; }

    public virtual DbSet<UsuMenusComin> UsuMenusComins { get; set; }

    public virtual DbSet<UsuMenusFuncionalidade> UsuMenusFuncionalidades { get; set; }

    public virtual DbSet<UsuMenusFuncionalidadesComin> UsuMenusFuncionalidadesComins { get; set; }

    public virtual DbSet<UsuPerfile> UsuPerfiles { get; set; }

    public virtual DbSet<UsuPerfilesRole> UsuPerfilesRoles { get; set; }

    public virtual DbSet<UsuProcesosnegocio> UsuProcesosnegocios { get; set; }

    public virtual DbSet<UsuRecurso> UsuRecursos { get; set; }

    public virtual DbSet<UsuRole> UsuRoles { get; set; }

    public virtual DbSet<UsuSesione> UsuSesiones { get; set; }

    public virtual DbSet<UsuUserControl> UsuUserControls { get; set; }

    public virtual DbSet<UsuUserControlComin> UsuUserControlComins { get; set; }

    public virtual DbSet<UsuUserControlFuncionalidad> UsuUserControlFuncionalidads { get; set; }

    public virtual DbSet<UsuUserControlFuncionalidadComin> UsuUserControlFuncionalidadComins { get; set; }

    public virtual DbSet<UsuUsuario> UsuUsuarios { get; set; }

    public virtual DbSet<UsuUsuariosPerfile> UsuUsuariosPerfiles { get; set; }

    public virtual DbSet<UsuUsuariosRole> UsuUsuariosRoles { get; set; }

    public virtual DbSet<VenTDoctoLegalCar> VenTDoctoLegalCars { get; set; }

    public virtual DbSet<VenTDoctoLegalDet> VenTDoctoLegalDets { get; set; }

    public virtual DbSet<VenTRutaDespacho> VenTRutaDespachos { get; set; }

    public virtual DbSet<VtaTAduanaTransporte> VtaTAduanaTransportes { get; set; }

    public virtual DbSet<VtaTAgrupaVendedorCab> VtaTAgrupaVendedorCabs { get; set; }

    public virtual DbSet<VtaTAgrupaVendedorDet> VtaTAgrupaVendedorDets { get; set; }

    public virtual DbSet<VtaTAsociaNegocioVisacion> VtaTAsociaNegocioVisacions { get; set; }

    public virtual DbSet<VtaTAsociaPuertoBodega> VtaTAsociaPuertoBodegas { get; set; }

    public virtual DbSet<VtaTBitacoraDocumento> VtaTBitacoraDocumentos { get; set; }

    public virtual DbSet<VtaTBitacoraVisacion> VtaTBitacoraVisacions { get; set; }

    public virtual DbSet<VtaTBodegaVentum> VtaTBodegaVenta { get; set; }

    public virtual DbSet<VtaTClausulasVentum> VtaTClausulasVenta { get; set; }

    public virtual DbSet<VtaTClienteComercial> VtaTClienteComercials { get; set; }

    public virtual DbSet<VtaTClienteCredito> VtaTClienteCreditos { get; set; }

    public virtual DbSet<VtaTClienteDireccion> VtaTClienteDireccions { get; set; }

    public virtual DbSet<VtaTClienteSucursal> VtaTClienteSucursals { get; set; }

    public virtual DbSet<VtaTConfiguracion> VtaTConfiguracions { get; set; }

    public virtual DbSet<VtaTConfiguracionDe> VtaTConfiguracionDes { get; set; }

    public virtual DbSet<VtaTConfiguracionExp> VtaTConfiguracionExps { get; set; }

    public virtual DbSet<VtaTConsignaLiquidaCab> VtaTConsignaLiquidaCabs { get; set; }

    public virtual DbSet<VtaTConsignaLiquidaCabCtc> VtaTConsignaLiquidaCabCtcs { get; set; }

    public virtual DbSet<VtaTConsignaLiquidaCabDoc> VtaTConsignaLiquidaCabDocs { get; set; }

    public virtual DbSet<VtaTConsignaLiquidaCabGto> VtaTConsignaLiquidaCabGtos { get; set; }

    public virtual DbSet<VtaTConsignaLiquidaDet> VtaTConsignaLiquidaDets { get; set; }

    public virtual DbSet<VtaTConsignaTransfiereCab> VtaTConsignaTransfiereCabs { get; set; }

    public virtual DbSet<VtaTConsignaTransfiereCabDoc> VtaTConsignaTransfiereCabDocs { get; set; }

    public virtual DbSet<VtaTConsignaTransfiereDet> VtaTConsignaTransfiereDets { get; set; }

    public virtual DbSet<VtaTConsignatarioNotificador> VtaTConsignatarioNotificadors { get; set; }

    public virtual DbSet<VtaTCotizacionCab> VtaTCotizacionCabs { get; set; }

    public virtual DbSet<VtaTCotizacionDet> VtaTCotizacionDets { get; set; }

    public virtual DbSet<VtaTCotizacionDetGlo> VtaTCotizacionDetGlos { get; set; }

    public virtual DbSet<VtaTCotizacionDetImp> VtaTCotizacionDetImps { get; set; }

    public virtual DbSet<VtaTCuentaVisacion> VtaTCuentaVisacions { get; set; }

    public virtual DbSet<VtaTDevolucionCab> VtaTDevolucionCabs { get; set; }

    public virtual DbSet<VtaTDevolucionDet> VtaTDevolucionDets { get; set; }

    public virtual DbSet<VtaTDoctoEmbExp> VtaTDoctoEmbExps { get; set; }

    public virtual DbSet<VtaTDoctoVentaCab> VtaTDoctoVentaCabs { get; set; }

    public virtual DbSet<VtaTDoctoVentaCabExp> VtaTDoctoVentaCabExps { get; set; }

    public virtual DbSet<VtaTDoctoVentaCabPro> VtaTDoctoVentaCabPros { get; set; }

    public virtual DbSet<VtaTDoctoVentaCabProDlg> VtaTDoctoVentaCabProDlgs { get; set; }

    public virtual DbSet<VtaTDoctoVentaDet> VtaTDoctoVentaDets { get; set; }

    public virtual DbSet<VtaTDoctoVentaDetCon> VtaTDoctoVentaDetCons { get; set; }

    public virtual DbSet<VtaTDoctoVentaDetGlo> VtaTDoctoVentaDetGlos { get; set; }

    public virtual DbSet<VtaTDoctoVentaDetImp> VtaTDoctoVentaDetImps { get; set; }

    public virtual DbSet<VtaTDoctoVentaEmail> VtaTDoctoVentaEmails { get; set; }

    public virtual DbSet<VtaTEmbarqueCab> VtaTEmbarqueCabs { get; set; }

    public virtual DbSet<VtaTEmbarqueCabCon> VtaTEmbarqueCabCons { get; set; }

    public virtual DbSet<VtaTEmbarqueDet> VtaTEmbarqueDets { get; set; }

    public virtual DbSet<VtaTEmpresaConsolidum> VtaTEmpresaConsolida { get; set; }

    public virtual DbSet<VtaTEstadoStock> VtaTEstadoStocks { get; set; }

    public virtual DbSet<VtaTGrupoAdmCredito> VtaTGrupoAdmCreditos { get; set; }

    public virtual DbSet<VtaTGrupoVisacionCab> VtaTGrupoVisacionCabs { get; set; }

    public virtual DbSet<VtaTGrupoVisacionCabVi> VtaTGrupoVisacionCabVis { get; set; }

    public virtual DbSet<VtaTGrupoVisacionDet> VtaTGrupoVisacionDets { get; set; }

    public virtual DbSet<VtaTMarca> VtaTMarcas { get; set; }

    public virtual DbSet<VtaTMarcaEmpresa> VtaTMarcaEmpresas { get; set; }

    public virtual DbSet<VtaTMarcaEmpresaVendedor> VtaTMarcaEmpresaVendedors { get; set; }

    public virtual DbSet<VtaTMotivo> VtaTMotivos { get; set; }

    public virtual DbSet<VtaTPuerto> VtaTPuertos { get; set; }

    public virtual DbSet<VtaTReservaEnvioCab> VtaTReservaEnvioCabs { get; set; }

    public virtual DbSet<VtaTRutaDespacho> VtaTRutaDespachos { get; set; }

    public virtual DbSet<VtaTSolicitudAjusteCab> VtaTSolicitudAjusteCabs { get; set; }

    public virtual DbSet<VtaTSolicitudAjusteCabDlg> VtaTSolicitudAjusteCabDlgs { get; set; }

    public virtual DbSet<VtaTSolicitudAjusteDet> VtaTSolicitudAjusteDets { get; set; }

    public virtual DbSet<VtaTSolicitudAjusteDetCon> VtaTSolicitudAjusteDetCons { get; set; }

    public virtual DbSet<VtaTSolicitudAjusteDetGlo> VtaTSolicitudAjusteDetGlos { get; set; }

    public virtual DbSet<VtaTSolicitudAjusteDetImp> VtaTSolicitudAjusteDetImps { get; set; }

    public virtual DbSet<VtaTTipoBitacora> VtaTTipoBitacoras { get; set; }

    public virtual DbSet<VtaTTipoCliente> VtaTTipoClientes { get; set; }

    public virtual DbSet<VtaTTipoCtaVisacion> VtaTTipoCtaVisacions { get; set; }

    public virtual DbSet<VtaTTipoDescuento> VtaTTipoDescuentos { get; set; }

    public virtual DbSet<VtaTTipoDevolucion> VtaTTipoDevolucions { get; set; }

    public virtual DbSet<VtaTTipoDiferido> VtaTTipoDiferidos { get; set; }

    public virtual DbSet<VtaTTipoDoctoExp> VtaTTipoDoctoExps { get; set; }

    public virtual DbSet<VtaTTipoDoctoGenerico> VtaTTipoDoctoGenericos { get; set; }

    public virtual DbSet<VtaTTipoFuncionalidad> VtaTTipoFuncionalidads { get; set; }

    public virtual DbSet<VtaTTipoGasto> VtaTTipoGastos { get; set; }

    public virtual DbSet<VtaTTipoInforme> VtaTTipoInformes { get; set; }

    public virtual DbSet<VtaTTipoModalidadVentum> VtaTTipoModalidadVenta { get; set; }

    public virtual DbSet<VtaTTipoNegocio> VtaTTipoNegocios { get; set; }

    public virtual DbSet<VtaTTipoNegocioGenerico> VtaTTipoNegocioGenericos { get; set; }

    public virtual DbSet<VtaTTipoParidad> VtaTTipoParidads { get; set; }

    public virtual DbSet<VtaTTipoPendiente> VtaTTipoPendientes { get; set; }

    public virtual DbSet<VtaTTipoReajuste> VtaTTipoReajustes { get; set; }

    public virtual DbSet<VtaTTipoResponsable> VtaTTipoResponsables { get; set; }

    public virtual DbSet<VtaTTipoVentum> VtaTTipoVenta { get; set; }

    public virtual DbSet<VtaTTipoVisacion> VtaTTipoVisacions { get; set; }

    public virtual DbSet<VtaTTipoVisacionRol> VtaTTipoVisacionRols { get; set; }

    public virtual DbSet<VtaTTransporteCium> VtaTTransporteCia { get; set; }

    public virtual DbSet<VtaTUbicacionDt> VtaTUbicacionDts { get; set; }

    public virtual DbSet<VtaTVendedor> VtaTVendedors { get; set; }

    public virtual DbSet<WflAlarma> WflAlarmas { get; set; }

    public virtual DbSet<WflCopiaexp> WflCopiaexps { get; set; }

    public virtual DbSet<WflCopiasporpersona> WflCopiasporpersonas { get; set; }

    public virtual DbSet<WflDiag> WflDiags { get; set; }

    public virtual DbSet<WflExp> WflExps { get; set; }

    public virtual DbSet<WflFlecha> WflFlechas { get; set; }

    public virtual DbSet<WflFlechaalarma> WflFlechaalarmas { get; set; }

    public virtual DbSet<WflFlechaflujo> WflFlechaflujos { get; set; }

    public virtual DbSet<WflProy> WflProys { get; set; }

    public virtual DbSet<WflReasignacionLog> WflReasignacionLogs { get; set; }

    public virtual DbSet<WflRegistro> WflRegistros { get; set; }

    public virtual DbSet<WflTarea> WflTareas { get; set; }

    public virtual DbSet<WflTareaconector> WflTareaconectors { get; set; }

    public virtual DbSet<WflTareageneral> WflTareagenerals { get; set; }

    public virtual DbSet<WflTipoexp> WflTipoexps { get; set; }

    public virtual DbSet<WmsTmpDetalleEmbarque> WmsTmpDetalleEmbarques { get; set; }

    public virtual DbSet<WsCcoTmpCarta> WsCcoTmpCartas { get; set; }

    public virtual DbSet<WsTLineasModificada> WsTLineasModificadas { get; set; }

    public virtual DbSet<WsTParametro> WsTParametros { get; set; }

    public virtual DbSet<WstBodega> WstBodegas { get; set; }

    public virtual DbSet<XparVtatDoctoventacab> XparVtatDoctoventacabs { get; set; }

    protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
    {
        optionsBuilder.UseSqlServer(_configuration.GetConnectionString("Default"));
        //IConfigurationRoot configuration = new ConfigurationBuilder().
        //.AddJsonFile("appsettings.json")
        //.Build();
        //optionsBuilder.UseSqlServer(configuration.GetConnectionString("Default"));
    }


//#warning To protect potentially sensitive information in your connection string, you should move it out of source code. You can avoid scaffolding the connection string by using the Name= syntax to read it from configuration - see https://go.microsoft.com/fwlink/?linkid=2131148. For more guidance on storing connection strings, see http://go.microsoft.com/fwlink/?LinkId=723263.
  //  => optionsBuilder.UseSqlServer("Server=10.170.217.50;Database=Fin700;User ID=Consulta_Carran;password=carran123.;TrustServerCertificate=True");

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<Aba>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("aba");

            entity.Property(e => e.Ord)
                .HasMaxLength(30)
                .IsUnicode(false);
            entity.Property(e => e.SelectQry)
                .HasMaxLength(8000)
                .IsUnicode(false);
        });

        modelBuilder.Entity<AcuTBodega>(entity =>
        {
            entity.HasKey(e => e.PBodegaId).HasName("AcuI_Bodegas_01");

            entity.ToTable("AcuT_Bodegas");

            entity.Property(e => e.PBodegaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pBodegaId");
            entity.Property(e => e.AcuTipoBodega).HasColumnType("numeric(9, 0)");
        });

        modelBuilder.Entity<AdqTClausulaCompra>(entity =>
        {
            entity.HasKey(e => e.ClausulaId).HasName("AdqT_ClausulaCompra_PK");

            entity.ToTable("AdqT_ClausulaCompra");

            entity.Property(e => e.ClausulaId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.ClausulaDes)
                .HasMaxLength(50)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.ClausulaPorcCif).HasColumnName("ClausulaPorcCIF");
            entity.Property(e => e.ClausulaPorcFob).HasColumnName("ClausulaPorcFOB");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.FechaVigencia).HasColumnType("datetime");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
        });

        modelBuilder.Entity<AdqTClausulaCompraDocto>(entity =>
        {
            entity.HasKey(e => e.ClausulaDoctoId).HasName("AdqT_ClausulaCompraDocto_PK");

            entity.ToTable("AdqT_ClausulaCompraDocto");

            entity.Property(e => e.ClausulaDoctoId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PClausulaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pClausulaId");

            entity.HasOne(d => d.PClausula).WithMany(p => p.AdqTClausulaCompraDoctos)
                .HasForeignKey(d => d.PClausulaId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_ClauComDoctoClausulaId");

            entity.HasOne(d => d.Tdo).WithMany(p => p.AdqTClausulaCompraDoctos)
                .HasForeignKey(d => d.TdoId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_ClauComDoctoTdoId");
        });

        modelBuilder.Entity<AdqTCondicionPago>(entity =>
        {
            entity.HasKey(e => e.CondPagoId).HasName("AdqT_CondicionPago_PK");

            entity.ToTable("AdqT_CondicionPago");

            entity.Property(e => e.CondPagoId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.CondPagoDes)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.FechaVigencia).HasColumnType("datetime");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PFormaPagoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pFormaPagoId");

            entity.HasOne(d => d.PFormaPago).WithMany(p => p.AdqTCondicionPagos)
                .HasForeignKey(d => d.PFormaPagoId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_CondPagoFormaPagoId");
        });

        modelBuilder.Entity<AdqTConfiguracion>(entity =>
        {
            entity.HasKey(e => new { e.PEmpId, e.EjeAno }).HasName("Adqt_Configuracion_PK");

            entity.ToTable("AdqT_Configuracion");

            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.IndApruebaConIva).HasColumnName("IndApruebaConIVA");
            entity.Property(e => e.IndTipoDescInfCot).HasColumnName("Ind_TipoDescInfCot");
            entity.Property(e => e.IndTipoFormatoOc).HasColumnName("Ind_TipoFormatoOC");
            entity.Property(e => e.PProdClasId)
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("pProdClasId");
            entity.Property(e => e.PTipoOpeConvenio)
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("pTipoOpeConvenio");
            entity.Property(e => e.TdoIdOc).HasColumnName("TdoIdOC");
            entity.Property(e => e.TdoIdOp).HasColumnName("TdoIdOP");

            entity.HasOne(d => d.PEmp).WithMany(p => p.AdqTConfiguracions)
                .HasForeignKey(d => d.PEmpId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_ConfiguracionEmpId");
        });

        modelBuilder.Entity<AdqTCotizacionCab>(entity =>
        {
            entity.HasKey(e => e.CotizCabId).HasName("CotizacionCab_PK");

            entity.ToTable("AdqT_CotizacionCab");

            entity.Property(e => e.CotizCabId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.AdqGlosa)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.ContactoProv)
                .HasMaxLength(90)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.FechaMaxCotizacion).HasColumnType("datetime");
            entity.Property(e => e.FechaMaxRespProv).HasColumnType("datetime");
            entity.Property(e => e.FechaProceso).HasColumnType("datetime");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.IndTipoCotizacion).HasColumnName("Ind_TipoCotizacion");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PEntId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntId");
            entity.Property(e => e.PEntSucId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntSucId");
            entity.Property(e => e.PGlosaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pGlosaId");
            entity.Property(e => e.PRolUsuarioId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pRolUsuarioId");
            entity.Property(e => e.ReferenciaProv)
                .HasMaxLength(10)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.UsuarioAprobacion)
                .HasMaxLength(50)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.UsuarioProceso)
                .HasMaxLength(50)
                .IsUnicode(false)
                .IsFixedLength();

            entity.HasOne(d => d.PEnt).WithMany(p => p.AdqTCotizacionCabs)
                .HasForeignKey(d => d.PEntId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_CotiCabEntId");

            entity.HasOne(d => d.PEntSuc).WithMany(p => p.AdqTCotizacionCabs)
                .HasForeignKey(d => d.PEntSucId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_CotiCabEntSucId");
        });

        modelBuilder.Entity<AdqTCotizacionCabCom>(entity =>
        {
            entity.HasKey(e => e.CotizCabComId).HasName("AdqT_CotizacionCabCom_PK");

            entity.ToTable("AdqT_CotizacionCabCom");

            entity.Property(e => e.CotizCabComId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PClausulaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pClausulaId");
            entity.Property(e => e.PCondPagoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCondPagoId");
            entity.Property(e => e.PCotizCabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCotizCabId");
            entity.Property(e => e.PListaPreCabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pListaPreCabId");
            entity.Property(e => e.PMonedaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMonedaId");

            entity.HasOne(d => d.PCotizCab).WithMany(p => p.AdqTCotizacionCabComs)
                .HasForeignKey(d => d.PCotizCabId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_CotiCabComCotizCabId");

            entity.HasOne(d => d.PMoneda).WithMany(p => p.AdqTCotizacionCabComs)
                .HasForeignKey(d => d.PMonedaId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_CotiCabComMonedaId");
        });

        modelBuilder.Entity<AdqTCotizacionCabFlete>(entity =>
        {
            entity.HasKey(e => e.CotizCabFleteId).HasName("CotizacionCabFlete_PK");

            entity.ToTable("AdqT_CotizacionCabFlete");

            entity.Property(e => e.CotizCabFleteId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PBodegaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pBodegaId");
            entity.Property(e => e.PCotizCabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCotizCabId");
            entity.Property(e => e.PFleteProvCabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pFleteProvCabId");
            entity.Property(e => e.PFleteProvDetId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pFleteProvDetId");

            entity.HasOne(d => d.PCotizCab).WithMany(p => p.AdqTCotizacionCabFletes)
                .HasForeignKey(d => d.PCotizCabId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_CotiCabFleteCotizCabId");
        });

        modelBuilder.Entity<AdqTCotizacionCabGlosa>(entity =>
        {
            entity.HasKey(e => e.CotizCabGlosaId).HasName("AdqT_CotizGlosa_Pk");

            entity.ToTable("AdqT_CotizacionCabGlosa");

            entity.Property(e => e.CotizCabGlosaId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.GlosaDes)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.PCotizCabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCotizCabId");
            entity.Property(e => e.PGlosaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pGlosaId");

            entity.HasOne(d => d.PCotizCab).WithMany(p => p.AdqTCotizacionCabGlosas)
                .HasForeignKey(d => d.PCotizCabId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_CotizcabGlosaCotizCabId");

            entity.HasOne(d => d.PGlosa).WithMany(p => p.AdqTCotizacionCabGlosas)
                .HasForeignKey(d => d.PGlosaId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_CotizCabGlosaGlosaId");
        });

        modelBuilder.Entity<AdqTCotizacionDet>(entity =>
        {
            entity.HasKey(e => e.CotizDetId).HasName("CotizacionDet_PK");

            entity.ToTable("AdqT_CotizacionDet");

            entity.Property(e => e.CotizDetId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.AdqGlosa)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.FechaMaxCotizacion).HasColumnType("datetime");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.IndTipoCotizacion).HasColumnName("Ind_TipoCotizacion");
            entity.Property(e => e.PBodegaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pBodegaId");
            entity.Property(e => e.PCotizCabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCotizCabId");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PGlosaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pGlosaId");
            entity.Property(e => e.PProCompraDetId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pProCompraDetId");
            entity.Property(e => e.PProductoEspTecId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pProductoEspTecId");
            entity.Property(e => e.PProductoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pProductoId");
            entity.Property(e => e.PServicioId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pServicioId");
            entity.Property(e => e.PUnidadMedCompraId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pUnidadMedCompraId");
            entity.Property(e => e.PUnidadMedStockId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pUnidadMedStockId");

            entity.HasOne(d => d.PCotizCab).WithMany(p => p.AdqTCotizacionDets)
                .HasForeignKey(d => d.PCotizCabId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_CotiDetCotizCabId");

            entity.HasOne(d => d.PUnidadMedCompra).WithMany(p => p.AdqTCotizacionDetPUnidadMedCompras)
                .HasForeignKey(d => d.PUnidadMedCompraId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_CotiDetUnidadMedId_2");

            entity.HasOne(d => d.PUnidadMedStock).WithMany(p => p.AdqTCotizacionDetPUnidadMedStocks)
                .HasForeignKey(d => d.PUnidadMedStockId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_CotiDetUnidadMedId_1");
        });

        modelBuilder.Entity<AdqTCotizacionDetEspTec>(entity =>
        {
            entity.HasKey(e => e.CotizDetEspTecId).HasName("AdqT_CotizDetEspTec_PK");

            entity.ToTable("AdqT_CotizacionDetEspTec");

            entity.Property(e => e.CotizDetEspTecId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.GlosaDes)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.PCotizDetId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCotizDetId");
            entity.Property(e => e.PProductoEspTecDetId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pProductoEspTecDetId");
            entity.Property(e => e.PProductoEspTecId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pProductoEspTecId");

            entity.HasOne(d => d.PCotizDet).WithMany(p => p.AdqTCotizacionDetEspTecs)
                .HasForeignKey(d => d.PCotizDetId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_CotizDetEspTecCotizDetId");

            entity.HasOne(d => d.PProductoEspTec).WithMany(p => p.AdqTCotizacionDetEspTecs)
                .HasForeignKey(d => d.PProductoEspTecId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("Fk_CotizDetEspTecProductoEspCabTecId");
        });

        modelBuilder.Entity<AdqTCotizacionDetGlosa>(entity =>
        {
            entity.HasKey(e => e.CotizDetGlosaId).HasName("AdqT_CotizDetGlo_PK");

            entity.ToTable("AdqT_CotizacionDetGlosa");

            entity.Property(e => e.CotizDetGlosaId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.GlosaDes)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.PCotizDetId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCotizDetId");
            entity.Property(e => e.PGlosaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pGlosaId");

            entity.HasOne(d => d.PCotizDet).WithMany(p => p.AdqTCotizacionDetGlosas)
                .HasForeignKey(d => d.PCotizDetId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_CotizDetGlosaCotizdetId");

            entity.HasOne(d => d.PGlosa).WithMany(p => p.AdqTCotizacionDetGlosas)
                .HasForeignKey(d => d.PGlosaId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_CotizDetGlosaGlosaId");
        });

        modelBuilder.Entity<AdqTCotizacionDetResp>(entity =>
        {
            entity.HasKey(e => e.CotizDetRespId).HasName("AdqT_CotizacionDetResp_PK");

            entity.ToTable("AdqT_CotizacionDetResp");

            entity.Property(e => e.CotizDetRespId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.AdqGlosa)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PCotizDetId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCotizDetId");
            entity.Property(e => e.PListaPreDetId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pListaPreDetId");
            entity.Property(e => e.PTipoAdjudicaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTipoAdjudicaId");
            entity.Property(e => e.PUnidadMedCompraId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pUnidadMedCompraId");
            entity.Property(e => e.PUnidadMedStockId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pUnidadMedStockId");

            entity.HasOne(d => d.PCotizDet).WithMany(p => p.AdqTCotizacionDetResps)
                .HasForeignKey(d => d.PCotizDetId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_CotiDetRespCotizDetId");

            entity.HasOne(d => d.PUnidadMedCompra).WithMany(p => p.AdqTCotizacionDetResps)
                .HasForeignKey(d => d.PUnidadMedCompraId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_CotiDetRespUnidadMedId_2");
        });

        modelBuilder.Entity<AdqTCotizacionReserva>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("AdqT_CotizacionReserva");

            entity.HasIndex(e => new { e.PReservasDetId, e.PCotizDetId }, "AdqT_CotizacionReserva_PK").IsUnique();

            entity.Property(e => e.PCotizDetId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCotizDetId");
            entity.Property(e => e.PReservasDetId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pReservasDetId");
        });

        modelBuilder.Entity<AdqTDoctosAsoc>(entity =>
        {
            entity.HasKey(e => new { e.POpeLogtCabId, e.PTdoId, e.Folio }).HasName("AdqT_DoctosAsoc_PK");

            entity.ToTable("AdqT_DoctosAsoc");

            entity.Property(e => e.POpeLogtCabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pOpeLogtCabId");
            entity.Property(e => e.PTdoId).HasColumnName("pTdoId");
            entity.Property(e => e.Descripcion)
                .HasMaxLength(50)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.Fecha).HasColumnType("datetime");
        });

        modelBuilder.Entity<AdqTEmpresaCompradora>(entity =>
        {
            entity.HasKey(e => e.EmpCompradoraId).HasName("AdqT_EmpCompradora_PK");

            entity.ToTable("AdqT_EmpresaCompradora");

            entity.Property(e => e.EmpCompradoraId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PEmpCentralizaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpCentralizaId");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
        });

        modelBuilder.Entity<AdqTFleteProvCab>(entity =>
        {
            entity.HasKey(e => e.FleteProvCabId).HasName("AdqT_FleteProvCab_PK");

            entity.ToTable("AdqT_FleteProvCab");

            entity.Property(e => e.FleteProvCabId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PEntId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntId");
            entity.Property(e => e.PEntSucId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntSucId");
            entity.Property(e => e.PMonedaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMonedaId");

            entity.HasOne(d => d.PEnt).WithMany(p => p.AdqTFleteProvCabs)
                .HasForeignKey(d => d.PEntId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_FleteProvCabEntId");

            entity.HasOne(d => d.PEntSuc).WithMany(p => p.AdqTFleteProvCabs)
                .HasForeignKey(d => d.PEntSucId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_FleteProvCabEntSucId");
        });

        modelBuilder.Entity<AdqTFleteProvDet>(entity =>
        {
            entity.HasKey(e => e.FleteProvDetId).HasName("AdqT_FleteProvDet_PK");

            entity.ToTable("AdqT_FleteProvDet");

            entity.Property(e => e.FleteProvDetId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PBodegaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pBodegaId");
            entity.Property(e => e.PFleteProvCabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pFleteProvCabId");

            entity.HasOne(d => d.PBodega).WithMany(p => p.AdqTFleteProvDets)
                .HasForeignKey(d => d.PBodegaId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_FleteProvDetBodegaId");

            entity.HasOne(d => d.PFleteProvCab).WithMany(p => p.AdqTFleteProvDets)
                .HasForeignKey(d => d.PFleteProvCabId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_FleteProvDetFleteProvCabId");
        });

        modelBuilder.Entity<AdqTFormatosOc>(entity =>
        {
            entity.HasKey(e => new { e.PEmpId, e.NroReporte, e.NombreReporte, e.DivCodigo }).HasName("AdqI_FormatosOC_I1");

            entity.ToTable("AdqT_FormatosOC");

            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.NombreReporte)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.Descripcion)
                .HasMaxLength(50)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.IndTipoImpresion).HasColumnName("Ind_TipoImpresion");
            entity.Property(e => e.RutaImagenFirma)
                .HasMaxLength(255)
                .IsUnicode(false);
        });

        modelBuilder.Entity<AdqTGlosa>(entity =>
        {
            entity.HasKey(e => e.GlosaId).HasName("AdqT_Glosas_PK");

            entity.ToTable("AdqT_Glosas");

            entity.Property(e => e.GlosaId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.FechaVigencia).HasColumnType("datetime");
            entity.Property(e => e.GlosaDes)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
        });

        modelBuilder.Entity<AdqTGlosasEspHo>(entity =>
        {
            entity.HasKey(e => new { e.PEmpId, e.POcCabId }).HasName("AdqI_GlosasEspHo");

            entity.ToTable("AdqT_GlosasEspHo");

            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.POcCabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pOcCabId");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.GlosaHo1).HasColumnType("text");
            entity.Property(e => e.GlosaHo2).HasColumnType("text");
            entity.Property(e => e.GlosaHo3).HasColumnType("text");
            entity.Property(e => e.GlosaHo4).HasColumnType("text");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
        });

        modelBuilder.Entity<AdqTImagenesOcHo>(entity =>
        {
            entity.HasKey(e => new { e.PEmpId, e.IndTipoImpresion, e.IdUsuario }).HasName("AdqT_ImagenOC_3L_I1");

            entity.ToTable("AdqT_ImagenesOC_Ho");

            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.IndTipoImpresion).HasColumnName("Ind_TipoImpresion");
            entity.Property(e => e.IdUsuario)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario");
            entity.Property(e => e.Nombre1)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<AdqTListaPrecioCompraCab>(entity =>
        {
            entity.HasKey(e => e.ListaPreCabId).HasName("AdqT_ListaPrecioCompraCab_PK");

            entity.ToTable("AdqT_ListaPrecioCompraCab");

            entity.Property(e => e.ListaPreCabId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.AdqOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.ClausulaPorcCif).HasColumnName("ClausulaPorcCIF");
            entity.Property(e => e.ClausulaPorcFob).HasColumnName("ClausulaPorcFOB");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.FechaProceso).HasColumnType("datetime");
            entity.Property(e => e.FechaVigencia).HasColumnType("datetime");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.ListaPreDes)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PClausulaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pClausulaId");
            entity.Property(e => e.PCondPagoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCondPagoId");
            entity.Property(e => e.PEntId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntId");
            entity.Property(e => e.PMonedaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMonedaId");
            entity.Property(e => e.ReferenciaProv)
                .HasMaxLength(10)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.UsuarioProceso)
                .HasMaxLength(50)
                .IsUnicode(false)
                .IsFixedLength();

            entity.HasOne(d => d.PEnt).WithMany(p => p.AdqTListaPrecioCompraCabs)
                .HasForeignKey(d => d.PEntId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_ListaPrecioCabEntId");

            entity.HasOne(d => d.PMoneda).WithMany(p => p.AdqTListaPrecioCompraCabs)
                .HasForeignKey(d => d.PMonedaId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_ListaPrecioCabMonedaId");
        });

        modelBuilder.Entity<AdqTListaPrecioCompraDet>(entity =>
        {
            entity.HasKey(e => e.ListaPreDetId).HasName("AdqT_ListaPrecioDet_PK");

            entity.ToTable("AdqT_ListaPrecioCompraDet");

            entity.Property(e => e.ListaPreDetId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.FechaVigencia).HasColumnType("datetime");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PListaPreCabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pListaPreCabId");
            entity.Property(e => e.PMonedaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMonedaId");
            entity.Property(e => e.PProductoCodId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pProductoCodId");
            entity.Property(e => e.PProductoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pProductoId");
            entity.Property(e => e.PServicioId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pServicioId");
            entity.Property(e => e.PUnidadMedCompraId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pUnidadMedCompraId");
            entity.Property(e => e.PUnidadMedStockId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pUnidadMedStockId");

            entity.HasOne(d => d.PListaPreCab).WithMany(p => p.AdqTListaPrecioCompraDets)
                .HasForeignKey(d => d.PListaPreCabId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_ListaPreDetListaPreCabId");

            entity.HasOne(d => d.PMoneda).WithMany(p => p.AdqTListaPrecioCompraDets)
                .HasForeignKey(d => d.PMonedaId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_ListaPreDetMonedaId");

            entity.HasOne(d => d.PUnidadMedCompra).WithMany(p => p.AdqTListaPrecioCompraDetPUnidadMedCompras)
                .HasForeignKey(d => d.PUnidadMedCompraId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_ListaPreDetUnidadMedId_2");

            entity.HasOne(d => d.PUnidadMedStock).WithMany(p => p.AdqTListaPrecioCompraDetPUnidadMedStocks)
                .HasForeignKey(d => d.PUnidadMedStockId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_ListaPreDetUnidadMedId_1");
        });

        modelBuilder.Entity<AdqTMotivosBloqueo>(entity =>
        {
            entity.HasKey(e => e.MotivoBloqueoId).HasName("AdqI_MotivosBloqueo");

            entity.ToTable("AdqT_MotivosBloqueo");

            entity.Property(e => e.MotivoBloqueoId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.MotivoBloqueoDes)
                .HasMaxLength(25)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<AdqTOcCab>(entity =>
        {
            entity.HasKey(e => e.OcCabId).HasName("AdqT_OcCab_PK");

            entity.ToTable("AdqT_OcCab", tb => tb.HasTrigger("AdqT_OcCab_Update_Est"));

            entity.HasIndex(e => new { e.PEntId, e.PEmpId, e.DivCodigo, e.UniCodigo, e.FechaProceso, e.OcCabId, e.CorrLogtNum }, "AdqT_OCCab_idx09");

            entity.HasIndex(e => new { e.PEmpId, e.DivCodigo, e.UniCodigo, e.ConEstCod, e.CorrLogtNum, e.FechaProceso, e.OcCabId }, "AdqT_OcCab_I2");

            entity.HasIndex(e => new { e.CorrLogtNum, e.OcCabId, e.FechaProceso, e.ConEstCod }, "AdqT_OcCab_I3");

            entity.HasIndex(e => e.ConEstCod, "AdqT_OcCab_I4").HasFillFactor(90);

            entity.HasIndex(e => e.FechaProceso, "AdqT_OcCab_I5").HasFillFactor(90);

            entity.HasIndex(e => new { e.PEmpId, e.DivCodigo, e.UniCodigo, e.OcCabId, e.PTipoOpeId, e.FechaProceso, e.CorrLogtNum, e.PCotizCabId, e.PEntId, e.FechaEntrega, e.ConEstCod, e.UsuarioProceso, e.AdqOwner }, "AdqT_OcCab_idx010");

            entity.HasIndex(e => new { e.OcCabId, e.CorrLogtNum, e.FechaProceso }, "AdqT_OcCab_idx011");

            entity.HasIndex(e => new { e.PEmpId, e.DivCodigo, e.FechaProceso, e.OcCabId, e.PTipoOpeId, e.PEntId, e.PEntSucId, e.CorrLogtNum, e.IdUsuarioIngReg }, "AdqT_OcCab_idx012");

            entity.HasIndex(e => new { e.OcCabId, e.PEmpId, e.UsuarioProceso, e.IdUsuarioIngReg, e.ConEstCod }, "AdqT_OcCab_idx013");

            entity.HasIndex(e => new { e.PDocOrigenId, e.OcCabId }, "AdqT_OcCab_idx014");

            entity.HasIndex(e => e.OcCabId, "AdqT_OcCab_idx015");

            entity.HasIndex(e => new { e.OcCabId, e.DivCodigo, e.PEmpId, e.PTipoOpeId }, "AdqT_OcCab_idx050");

            entity.HasIndex(e => new { e.OcCabId, e.DivCodigo, e.PEmpId, e.ConEstCod, e.PTipoOpeId }, "AdqT_OcCab_idx051");

            entity.HasIndex(e => new { e.PEmpId, e.DivCodigo, e.PTipoOpeId, e.OcCabId, e.CorrLogtNum, e.UniCodigo, e.FechaProceso, e.PCotizCabId, e.UsuarioProceso, e.ConEstCod, e.PEntId }, "AdqT_OcCab_idx060");

            entity.Property(e => e.OcCabId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.AdqGlosa)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.AdqOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.ContactoProv)
                .HasMaxLength(90)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.Encargado)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EntId3).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.FechaAprobacion).HasColumnType("datetime");
            entity.Property(e => e.FechaCierrePend).HasColumnType("datetime");
            entity.Property(e => e.FechaEntrega).HasColumnType("datetime");
            entity.Property(e => e.FechaProceso).HasColumnType("datetime");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionalidad)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcionalidad");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.NombreSolicitante)
                .HasMaxLength(50)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.NumSolicitud)
                .HasMaxLength(25)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PCconsumoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCConsumoId");
            entity.Property(e => e.PConvenioId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pConvenioId");
            entity.Property(e => e.PCotizCabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCotizCabId");
            entity.Property(e => e.PDocOrigenId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pDocOrigenId");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PEntId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntId");
            entity.Property(e => e.PEntSucId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntSucId");
            entity.Property(e => e.PListaPreCabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pListaPreCabId");
            entity.Property(e => e.PMetodoEnvioId)
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("pMetodoEnvioId");
            entity.Property(e => e.PPuertoDestino)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pPuertoDestino");
            entity.Property(e => e.PPuertoOrigen)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pPuertoOrigen");
            entity.Property(e => e.PTipoOpeId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTipoOpeId");
            entity.Property(e => e.UsuarioAnula)
                .HasMaxLength(50)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.UsuarioAprobacion)
                .HasMaxLength(50)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.UsuarioCierrePend)
                .HasMaxLength(50)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.UsuarioPendAprobacion)
                .HasMaxLength(50)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.UsuarioProceso)
                .HasMaxLength(50)
                .IsUnicode(false)
                .IsFixedLength();

            entity.HasOne(d => d.DivCodigoNavigation).WithMany(p => p.AdqTOcCabs)
                .HasForeignKey(d => d.DivCodigo)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_OcCabDivCodigo");

            entity.HasOne(d => d.PEmp).WithMany(p => p.AdqTOcCabs)
                .HasForeignKey(d => d.PEmpId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_OcCabEmpId");

            entity.HasOne(d => d.PEnt).WithMany(p => p.AdqTOcCabs)
                .HasForeignKey(d => d.PEntId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_OcCabEntId");

            entity.HasOne(d => d.PEntSuc).WithMany(p => p.AdqTOcCabs)
                .HasForeignKey(d => d.PEntSucId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_OcCabEntSucId");

            entity.HasOne(d => d.PTipoOpe).WithMany(p => p.AdqTOcCabs)
                .HasForeignKey(d => d.PTipoOpeId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_OcCabTipoOpeId");
        });

        modelBuilder.Entity<AdqTOcCabComercial>(entity =>
        {
            entity.HasKey(e => e.OcCabComerId).HasName("AdqT_OcCabComercial_PK");

            entity.ToTable("AdqT_OcCabComercial");

            entity.HasIndex(e => new { e.POcCabId, e.OcCabComerId, e.PCondPagoId, e.PMonedaId }, "AdqT_OcCabComercial_idx04");

            entity.Property(e => e.OcCabComerId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.ClausulaPorcCif).HasColumnName("ClausulaPorcCIF");
            entity.Property(e => e.ClausulaPorcFob).HasColumnName("ClausulaPorcFOB");
            entity.Property(e => e.PClausulaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pClausulaId");
            entity.Property(e => e.PCondPagoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCondPagoId");
            entity.Property(e => e.PMonedaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMonedaId");
            entity.Property(e => e.POcCabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pOcCabId");

            entity.HasOne(d => d.PMoneda).WithMany(p => p.AdqTOcCabComercials)
                .HasForeignKey(d => d.PMonedaId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_OcCabComerMonedaId");

            entity.HasOne(d => d.POcCab).WithMany(p => p.AdqTOcCabComercials)
                .HasForeignKey(d => d.POcCabId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_OcCabComerOcCabId");
        });

        modelBuilder.Entity<AdqTOcCabCont>(entity =>
        {
            entity.HasKey(e => e.OcCabContId).HasName("AdqT_OcCabCont_PK");

            entity.ToTable("AdqT_OcCabCont");

            entity.HasIndex(e => new { e.POcCabId, e.PTprId, e.PryNumero }, "AdqT_OcCabCont_idx060");

            entity.Property(e => e.OcCabContId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.FechaDocumento).HasColumnType("datetime");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PCdiId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCdiId");
            entity.Property(e => e.PCreId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCreId");
            entity.Property(e => e.POcCabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pOcCabId");
            entity.Property(e => e.PPartidaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pPartidaId");
            entity.Property(e => e.PTprId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTprId");
            entity.Property(e => e.PryNumero)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();

            entity.HasOne(d => d.POcCab).WithMany(p => p.AdqTOcCabConts)
                .HasForeignKey(d => d.POcCabId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_OcCabContOcCabId");
        });

        modelBuilder.Entity<AdqTOcCabFecha>(entity =>
        {
            entity.HasKey(e => e.OcCabFechaId).HasName("AdqT_OcCabFecha_PK");

            entity.ToTable("AdqT_OcCabFecha");

            entity.Property(e => e.OcCabFechaId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.FechaEntrega).HasColumnType("datetime");
            entity.Property(e => e.POcCabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pOcCabId");

            entity.HasOne(d => d.POcCab).WithMany(p => p.AdqTOcCabFechas)
                .HasForeignKey(d => d.POcCabId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_OcCabFechaOcCabId");
        });

        modelBuilder.Entity<AdqTOcCabFlete>(entity =>
        {
            entity.HasKey(e => e.OcCabFleteId).HasName("AdqT_OcCabFlete_PK");

            entity.ToTable("AdqT_OcCabFlete");

            entity.Property(e => e.OcCabFleteId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PBodegaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pBodegaId");
            entity.Property(e => e.PFleteProvCabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pFleteProvCabId");
            entity.Property(e => e.PFleteProvDetId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pFleteProvDetId");
            entity.Property(e => e.POcCabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pOcCabId");

            entity.HasOne(d => d.POcCab).WithMany(p => p.AdqTOcCabFletes)
                .HasForeignKey(d => d.POcCabId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_OcCabFleteOcCabId");
        });

        modelBuilder.Entity<AdqTOcCabGlosa>(entity =>
        {
            entity.HasKey(e => e.OcCabGlosaId).HasName("AdqT_OcGlosa_PK");

            entity.ToTable("AdqT_OcCabGlosa");

            entity.HasIndex(e => e.POcCabId, "AdqT_OcCabGlosa_idx02");

            entity.Property(e => e.OcCabGlosaId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.GlosaDes)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.PGlosaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pGlosaId");
            entity.Property(e => e.POcCabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pOcCabId");

            entity.HasOne(d => d.PGlosa).WithMany(p => p.AdqTOcCabGlosas)
                .HasForeignKey(d => d.PGlosaId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_OcCabGlosaGlosaId");

            entity.HasOne(d => d.POcCab).WithMany(p => p.AdqTOcCabGlosas)
                .HasForeignKey(d => d.POcCabId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_OcCabGlosaOcCabId");
        });

        modelBuilder.Entity<AdqTOcCabTotale>(entity =>
        {
            entity.HasKey(e => e.OcCabTotalesId).HasName("AdqT_OcCabTotales_PK");

            entity.ToTable("AdqT_OcCabTotales");

            entity.HasIndex(e => new { e.POcCabId, e.OcCabTotalesId, e.ValorTotal, e.TotalDesctoItem, e.ValorTotalDescto, e.TotalDesctoGral, e.DesctoProntoPago, e.TotalFlete, e.TotalAfeIva, e.TotalExeIva, e.Iva, e.TotalIva, e.TotalImpuestoAdi, e.TotalImpuestoOtro, e.TotalRetencion, e.TotalOrdenCompra }, "AdqT_OcCabTotales_idx02");

            entity.Property(e => e.OcCabTotalesId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.Iva).HasColumnName("IVA");
            entity.Property(e => e.POcCabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pOcCabId");

            entity.HasOne(d => d.POcCab).WithMany(p => p.AdqTOcCabTotales)
                .HasForeignKey(d => d.POcCabId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_OcCabTotalesOcCabId");
        });

        modelBuilder.Entity<AdqTOcDet>(entity =>
        {
            entity.HasKey(e => e.OcDetId).HasName("AdqT_OcDet_PK");

            entity.ToTable("AdqT_OcDet", tb =>
                {
                    tb.HasTrigger("AdqT_OcDet_UpdateVal");
                    tb.HasTrigger("adqt_ocdet_insprodkit");
                });

            entity.HasIndex(e => e.POcCabId, "AdqT_OcDet_I1").HasFillFactor(90);

            entity.HasIndex(e => e.ConEstCod, "AdqT_OcDet_I2").HasFillFactor(90);

            entity.HasIndex(e => e.PProductoId, "AdqT_OcDet_I3").HasFillFactor(90);

            entity.HasIndex(e => e.PBodegaId, "AdqT_OcDet_I4").HasFillFactor(90);

            entity.HasIndex(e => e.PServicioId, "AdqT_OcDet_I5").HasFillFactor(90);

            entity.HasIndex(e => new { e.POcCabId, e.OcDetId, e.PProductoId, e.Linea, e.ConEstCod, e.PServicioId, e.CantidadCompra, e.ValorUniCompra, e.ValorTotalCompra }, "AdqT_OcDet_idx015");

            entity.HasIndex(e => new { e.POcCabId, e.OcDetId, e.Item, e.PUnidadMedCompraId, e.PBodegaId, e.PProductoId, e.PServicioId, e.PCconsumoId, e.ValorUniCompra, e.AdqGlosa, e.FechaEntrega, e.CantidadCompra, e.TotalDesctoItem, e.ValorTotalCompra }, "AdqT_OcDet_idx016");

            entity.HasIndex(e => new { e.POcCabId, e.PImpRetencionId, e.OcDetId }, "AdqT_OcDet_idx017");

            entity.HasIndex(e => new { e.Item, e.POcCabId, e.PProductoId, e.CantPendiente, e.OcDetId }, "AdqT_OcDet_idx018");

            entity.HasIndex(e => new { e.PDocOrigenDetId, e.POcCabId, e.OcDetId }, "AdqT_OcDet_idx019");

            entity.HasIndex(e => new { e.PUnidadMedCompraId, e.PUnidadMedStockId, e.UnidadMedConversion, e.UnidadMedMultDivide, e.PBodegaId, e.PProductoId, e.ConEstCod, e.OcDetId, e.POcCabId, e.CantPendiente }, "AdqT_OcDet_idx050");

            entity.HasIndex(e => new { e.PProductoId, e.PBodegaId, e.OcDetId, e.POcCabId, e.PUnidadMedStockId }, "AdqT_OcDet_idx051");

            entity.HasIndex(e => new { e.POcCabId, e.PBodegaId, e.PProductoId, e.OcDetId, e.PUnidadMedStockId }, "AdqT_OcDet_idx052");

            entity.Property(e => e.OcDetId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.AdqGlosa)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.FechaCierrePend).HasColumnType("datetime");
            entity.Property(e => e.FechaCompromisoProv).HasColumnType("datetime");
            entity.Property(e => e.FechaEntrega).HasColumnType("datetime");
            entity.Property(e => e.FechaEntregaRealProv).HasColumnType("datetime");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionalidad)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcionalidad");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.Iva).HasColumnName("IVA");
            entity.Property(e => e.PBodegaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pBodegaId");
            entity.Property(e => e.PCconsumoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCConsumoId");
            entity.Property(e => e.PConvenioDetId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pConvenioDetId");
            entity.Property(e => e.PCotizDetId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCotizDetId");
            entity.Property(e => e.PDocOrigenDetId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pDocOrigenDetId");
            entity.Property(e => e.PImpRetencionId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pImpRetencionId");
            entity.Property(e => e.PListaPreDetId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pListaPreDetId");
            entity.Property(e => e.PMonedaBaseId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMonedaBaseId");
            entity.Property(e => e.POcCabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pOcCabId");
            entity.Property(e => e.PProductoCodId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pProductoCodId");
            entity.Property(e => e.PProductoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pProductoId");
            entity.Property(e => e.PServicioId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pServicioId");
            entity.Property(e => e.PUnidadMedBaseId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pUnidadMedBaseId");
            entity.Property(e => e.PUnidadMedCompraId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pUnidadMedCompraId");
            entity.Property(e => e.PUnidadMedStockId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pUnidadMedStockId");
            entity.Property(e => e.UsuarioCierrePend)
                .HasMaxLength(50)
                .IsUnicode(false)
                .IsFixedLength();

            entity.HasOne(d => d.POcCab).WithMany(p => p.AdqTOcDets)
                .HasForeignKey(d => d.POcCabId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_OcDetOcCabId");

            entity.HasOne(d => d.PUnidadMedCompra).WithMany(p => p.AdqTOcDetPUnidadMedCompras)
                .HasForeignKey(d => d.PUnidadMedCompraId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_OcDetUnidadMedId_2");

            entity.HasOne(d => d.PUnidadMedStock).WithMany(p => p.AdqTOcDetPUnidadMedStocks)
                .HasForeignKey(d => d.PUnidadMedStockId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_OcDetUnidadMedId_1");
        });

        modelBuilder.Entity<AdqTOcDetCont>(entity =>
        {
            entity.HasKey(e => e.OcDetContId).HasName("AdqT_OcDetCont_PK");

            entity.ToTable("AdqT_OcDetCont");

            entity.Property(e => e.OcDetContId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PCdiId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCdiId");
            entity.Property(e => e.PCreId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCreId");
            entity.Property(e => e.POcDetId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pOcDetId");
            entity.Property(e => e.PPartidaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pPartidaId");
            entity.Property(e => e.PTprId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTprId");
            entity.Property(e => e.PryNumero)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();

            entity.HasOne(d => d.POcDet).WithMany(p => p.AdqTOcDetConts)
                .HasForeignKey(d => d.POcDetId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_OcDetContOcDetId");
        });

        modelBuilder.Entity<AdqTOcDetEspTec>(entity =>
        {
            entity.HasKey(e => e.OcDetEspTecId).HasName("AdqT_OcDetEspTec_PK");

            entity.ToTable("AdqT_OcDetEspTec");

            entity.Property(e => e.OcDetEspTecId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.POcDetId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pOcDetId");
            entity.Property(e => e.PProductoEspTecDetId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pProductoEspTecDetId");
            entity.Property(e => e.PProductoEspTecId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pProductoEspTecId");

            entity.HasOne(d => d.POcDet).WithMany(p => p.AdqTOcDetEspTecs)
                .HasForeignKey(d => d.POcDetId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_OcDetEspTecOcDetId");

            entity.HasOne(d => d.PProductoEspTec).WithMany(p => p.AdqTOcDetEspTecs)
                .HasForeignKey(d => d.PProductoEspTecId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_OcDetEspTecProductoEspCabTecId");
        });

        modelBuilder.Entity<AdqTOcDetGlosa>(entity =>
        {
            entity.HasKey(e => e.OcDetGlosaId).HasName("AdqT_OcDetGlo_PK");

            entity.ToTable("AdqT_OcDetGlosa");

            entity.Property(e => e.OcDetGlosaId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.GlosaDes)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.PGlosaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pGlosaId");
            entity.Property(e => e.POcDetId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pOcDetId");

            entity.HasOne(d => d.PGlosa).WithMany(p => p.AdqTOcDetGlosas)
                .HasForeignKey(d => d.PGlosaId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_OcDetGlosaGlosaId");

            entity.HasOne(d => d.POcDet).WithMany(p => p.AdqTOcDetGlosas)
                .HasForeignKey(d => d.POcDetId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_OcDetGlosaOcDetId");
        });

        modelBuilder.Entity<AdqTOcDetRecetum>(entity =>
        {
            entity.HasKey(e => e.OcDetRecId).HasName("AdqT_OcDetRec_PK");

            entity.ToTable("AdqT_OcDetReceta");

            entity.Property(e => e.OcDetRecId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.POcDetId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pOcDetId");
            entity.Property(e => e.PProductoRecId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pProductoRecId");
        });

        modelBuilder.Entity<AdqTOcMotivo>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("AdqT_OcMotivos");

            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.GlosaDes)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.MotivoId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.POcCabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pOcCabId");
            entity.Property(e => e.PTipoMotivoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTipoMotivoId");
        });

        modelBuilder.Entity<AdqTOcdetFechaEntrega>(entity =>
        {
            entity.HasKey(e => e.OcDetFecEntregaId).HasName("AdqT_OCDetFechaEntrega_PK");

            entity.ToTable("AdqT_OCDetFechaEntrega");

            entity.Property(e => e.OcDetFecEntregaId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FechaCompromisoProv).HasColumnType("datetime");
            entity.Property(e => e.FechaEntrega).HasColumnType("datetime");
            entity.Property(e => e.FechaEntregaOld).HasColumnType("datetime");
            entity.Property(e => e.FechaEntregaRealProv).HasColumnType("datetime");
            entity.Property(e => e.IdFuncionalidad)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcionalidad");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.POcDetId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pOcDetId");
        });

        modelBuilder.Entity<AdqTPresupuestoCompra>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("AdqT_PresupuestoCompra");

            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.FechaVigencia).HasColumnType("datetime");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PCreId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCreId");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PMonedaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMonedaId");
            entity.Property(e => e.PresupCompraDes)
                .HasMaxLength(80)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PresupCompraId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
        });

        modelBuilder.Entity<AdqTPresupuestoCompraCat>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("AdqT_PresupuestoCompraCat");

            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PCategoriaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCategoriaId");
            entity.Property(e => e.PPresupCompraId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pPresupCompraId");
            entity.Property(e => e.PresupCompraCatId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
        });

        modelBuilder.Entity<AdqTPresupuestoCompraProd>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("AdqT_PresupuestoCompraProd");

            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PCategoriaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCategoriaId");
            entity.Property(e => e.PPresupCompraCatId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pPresupCompraCatId");
            entity.Property(e => e.PProductoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pProductoId");
            entity.Property(e => e.PServicioId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pServicioId");
            entity.Property(e => e.PresupCompraProdId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
        });

        modelBuilder.Entity<AdqTProcesoCompraCab>(entity =>
        {
            entity.HasKey(e => e.ProCompraCabId).HasName("AdqT_ProcesoCompraCab_PK");

            entity.ToTable("AdqT_ProcesoCompraCab");

            entity.Property(e => e.ProCompraCabId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.FechaProceso).HasColumnType("datetime");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.IndEmpCentraliza).HasColumnName("Ind_EmpCentraliza");
            entity.Property(e => e.PPedidoMaterialId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pPedidoMaterialId");
            entity.Property(e => e.PRolUsuarioId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pRolUsuarioId");
            entity.Property(e => e.PRubroId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pRubroId");
            entity.Property(e => e.UsuarioProceso)
                .HasMaxLength(50)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<AdqTProcesoCompraDet>(entity =>
        {
            entity.HasKey(e => e.ProCompraDetId).HasName("AdqT_ProcesoCompraDet_PK");

            entity.ToTable("AdqT_ProcesoCompraDet");

            entity.Property(e => e.ProCompraDetId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.FechaRequerida).HasColumnType("datetime");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PBodegaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pBodegaId");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PPedidoMaterialDetId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pPedidoMaterialDetId");
            entity.Property(e => e.PProCompraCabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pProCompraCabId");
            entity.Property(e => e.PProductoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pProductoId");
            entity.Property(e => e.PServicioId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pServicioId");
            entity.Property(e => e.PUnidadMedOrigenId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pUnidadMedOrigenId");
            entity.Property(e => e.PUnidadMedStockId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pUnidadMedStockId");

            entity.HasOne(d => d.PBodega).WithMany(p => p.AdqTProcesoCompraDets)
                .HasForeignKey(d => d.PBodegaId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_ProcCompDetBodegaId");

            entity.HasOne(d => d.PProCompraCab).WithMany(p => p.AdqTProcesoCompraDets)
                .HasForeignKey(d => d.PProCompraCabId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_ProcCompDetProCompraCabId");

            entity.HasOne(d => d.PUnidadMedOrigen).WithMany(p => p.AdqTProcesoCompraDetPUnidadMedOrigens)
                .HasForeignKey(d => d.PUnidadMedOrigenId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_ProcCompDetUnidadMedId_2");

            entity.HasOne(d => d.PUnidadMedStock).WithMany(p => p.AdqTProcesoCompraDetPUnidadMedStocks)
                .HasForeignKey(d => d.PUnidadMedStockId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_ProcCompDetUnidadMedId_1");
        });

        modelBuilder.Entity<AdqTProveedoresBloqueo>(entity =>
        {
            entity.HasKey(e => e.IdProvBloqueo).HasName("AdqI_ProveedoresBloqueo");

            entity.ToTable("AdqT_ProveedoresBloqueo");

            entity.Property(e => e.IdProvBloqueo)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PEntId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntId");
            entity.Property(e => e.PMotivoBloqueoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMotivoBloqueoId");
        });

        modelBuilder.Entity<AdqTRolUsuarioCentro>(entity =>
        {
            entity.HasKey(e => e.RolUsuarioCentroId).HasName("AdqT_RolUsuarioCentro_PK");

            entity.ToTable("AdqT_RolUsuarioCentro");

            entity.Property(e => e.RolUsuarioCentroId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.PCreId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCreId");
            entity.Property(e => e.PMonedaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMonedaId");
            entity.Property(e => e.PRolUsuarioEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pRolUsuarioEmpId");

            entity.HasOne(d => d.PCre).WithMany(p => p.AdqTRolUsuarioCentros)
                .HasForeignKey(d => d.PCreId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_RolUsuCenCreId");

            entity.HasOne(d => d.PRolUsuarioEmp).WithMany(p => p.AdqTRolUsuarioCentros)
                .HasForeignKey(d => d.PRolUsuarioEmpId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_RolUsuCenRolUsuarioEmpId");
        });

        modelBuilder.Entity<AdqTRolUsuarioEmp>(entity =>
        {
            entity.HasKey(e => e.RolUsuarioEmpId).HasName("AdqT_RolUsuarioEmp_PK");

            entity.ToTable("AdqT_RolUsuarioEmp");

            entity.Property(e => e.RolUsuarioEmpId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.Email)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("EMail");
            entity.Property(e => e.FechaVigencia).HasColumnType("datetime");
            entity.Property(e => e.IdUsuario)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PMonedaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMonedaId");
            entity.Property(e => e.PRolId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pRolId");

            entity.HasOne(d => d.PEmp).WithMany(p => p.AdqTRolUsuarioEmps)
                .HasForeignKey(d => d.PEmpId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_RolUsuEmpEmpId");

            entity.HasOne(d => d.PMoneda).WithMany(p => p.AdqTRolUsuarioEmps)
                .HasForeignKey(d => d.PMonedaId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_RolUsuMonedaId");

            entity.HasOne(d => d.PRol).WithMany(p => p.AdqTRolUsuarioEmps)
                .HasForeignKey(d => d.PRolId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_RolUsuEmpRolId");
        });

        modelBuilder.Entity<AdqTRole>(entity =>
        {
            entity.HasKey(e => e.RolId).HasName("Adq_Roles_PK");

            entity.ToTable("AdqT_Roles");

            entity.Property(e => e.RolId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.IdRol)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Rol");
            entity.Property(e => e.RolDes)
                .HasMaxLength(40)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<AdqTRubro>(entity =>
        {
            entity.HasKey(e => e.RubroId).HasName("AdqT_Rubros_PK");

            entity.ToTable("AdqT_Rubros");

            entity.Property(e => e.RubroId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.FechaVigencia).HasColumnType("datetime");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.RubroDes)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<AdqTRubrosCategoria>(entity =>
        {
            entity.HasKey(e => e.RubroCategoriaId).HasName("AdqT_RubrosCategorias_PK");

            entity.ToTable("AdqT_RubrosCategorias");

            entity.Property(e => e.RubroCategoriaId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PCategoriaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCategoriaId");
            entity.Property(e => e.PRubroId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pRubroId");

            entity.HasOne(d => d.PCategoria).WithMany(p => p.AdqTRubrosCategoria)
                .HasForeignKey(d => d.PCategoriaId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_RubrosCatCategoriaId");

            entity.HasOne(d => d.PRubro).WithMany(p => p.AdqTRubrosCategoria)
                .HasForeignKey(d => d.PRubroId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_RubrosCatRubroId");
        });

        modelBuilder.Entity<AdqTRubrosEntidade>(entity =>
        {
            entity.HasKey(e => e.RubroEntidadId).HasName("AdqT_RubrosEntidades_PK");

            entity.ToTable("AdqT_RubrosEntidades");

            entity.Property(e => e.RubroEntidadId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PEntId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntId");
            entity.Property(e => e.PRubroId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pRubroId");

            entity.HasOne(d => d.PEnt).WithMany(p => p.AdqTRubrosEntidades)
                .HasForeignKey(d => d.PEntId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_RubrosEntidadesEntId");

            entity.HasOne(d => d.PRubro).WithMany(p => p.AdqTRubrosEntidades)
                .HasForeignKey(d => d.PRubroId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_RubrosEntidadesRubroId");
        });

        modelBuilder.Entity<AdqTTipoAdjudicacion>(entity =>
        {
            entity.HasKey(e => e.TipoAdjudicaId).HasName("AdqT_TipoAdjudicacion_PK");

            entity.ToTable("AdqT_TipoAdjudicacion");

            entity.Property(e => e.TipoAdjudicaId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.TipoAdjudicaDes)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<AdqTTipoOpeConvenio>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("AdqT_TipoOpeConvenio");

            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.PConvenioCabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pConvenioCabId");
            entity.Property(e => e.PTipoOpeId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTipoOpeId");
        });

        modelBuilder.Entity<AdqtMetodosEnvio>(entity =>
        {
            entity.HasKey(e => e.MetodoEnvioId).HasName("Adqt_MetodosEnvio_PK");

            entity.ToTable("Adqt_MetodosEnvio");

            entity.Property(e => e.MetodoEnvioId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.MetodoEnvioDes)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<AfiTAporte>(entity =>
        {
            entity.HasKey(e => e.AfiAporteId).HasName("AfiI_Aportes01");

            entity.ToTable("AfiT_Aportes");

            entity.HasIndex(e => new { e.PDatContId, e.AfiFolio }, "AfiI_Aportes02").IsUnique();

            entity.Property(e => e.AfiAporteId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.AfiDctoLegal)
                .HasMaxLength(25)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.AfiFechaAdq).HasColumnType("datetime");
            entity.Property(e => e.AfiGlosa)
                .HasMaxLength(100)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.AfiNacImp)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.CabOpeFecha).HasColumnType("datetime");
            entity.Property(e => e.CabOpeFechaRev).HasColumnType("datetime");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PCabLlgId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCabLlgId");
            entity.Property(e => e.PCabOpeId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCabOpeId");
            entity.Property(e => e.PCabOpeIdRev)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCabOpeIdRev");
            entity.Property(e => e.PDatContId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pDatContId");
            entity.Property(e => e.PEntId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntId");
            entity.Property(e => e.PMonedaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMonedaId");
            entity.Property(e => e.POcCabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pOcCabId");
            entity.Property(e => e.POpeLogtCabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pOpeLogtCabId");
            entity.Property(e => e.POpeLogtDetId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pOpeLogtDetId");
        });

        modelBuilder.Entity<AfiTAportesBit>(entity =>
        {
            entity.HasKey(e => e.AfiAporteId).HasName("AfiI_AportesBit01");

            entity.ToTable("AfiT_AportesBit");

            entity.HasIndex(e => new { e.PDatContId, e.AfiFolio }, "AfiI_AportesBit02").IsUnique();

            entity.Property(e => e.AfiAporteId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.AfiDctoLegal)
                .HasMaxLength(25)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.AfiFechaAdq).HasColumnType("datetime");
            entity.Property(e => e.AfiGlosa)
                .HasMaxLength(100)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.CabOpeFecha).HasColumnType("datetime");
            entity.Property(e => e.CabOpeFechaRev).HasColumnType("datetime");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PCabLlgId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCabLlgId");
            entity.Property(e => e.PCabOpeId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCabOpeId");
            entity.Property(e => e.PCabOpeIdRev)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCabOpeIdRev");
            entity.Property(e => e.PDatContId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pDatContId");
            entity.Property(e => e.PEntId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntId");
            entity.Property(e => e.PMonedaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMonedaId");
            entity.Property(e => e.POcCabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pOcCabId");
            entity.Property(e => e.POpeLogtCabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pOpeLogtCabId");
            entity.Property(e => e.POpeLogtDetId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pOpeLogtDetId");
        });

        modelBuilder.Entity<AfiTArchivoInventario>(entity =>
        {
            entity.HasKey(e => e.ArchInventarioId).HasName("AfiI_ArchivoInventario01");

            entity.ToTable("AfiT_ArchivoInventario");

            entity.HasIndex(e => new { e.PProInvCabId, e.NombreArchivoCarga, e.Linea }, "AfiI_ArchivoInventario02").IsUnique();

            entity.Property(e => e.ArchInventarioId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.AfiCodBarraBien)
                .HasMaxLength(40)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.AfiFechaProceso).HasColumnType("datetime");
            entity.Property(e => e.AfiUbiCodBarra)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.NombreArchivoCarga)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PProInvCabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pProInvCabId");
            entity.Property(e => e.UserRespDetPrInv)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<AfiTArtProInventario>(entity =>
        {
            entity.HasKey(e => e.ArtProInventarioId).HasName("AfiI_ArtProInventario01");

            entity.ToTable("AfiT_ArtProInventario");

            entity.HasIndex(e => new { e.PProInvCabId, e.PCodigoBienId }, "AfiI_ArtProInventario02").IsUnique();

            entity.Property(e => e.ArtProInventarioId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PCodigoBienId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCodigoBienId");
            entity.Property(e => e.PProInvCabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pProInvCabId");
        });

        modelBuilder.Entity<AfiTBaja>(entity =>
        {
            entity.HasKey(e => e.BienBajaId).HasName("AfiI_Bajas01");

            entity.ToTable("AfiT_Bajas");

            entity.HasIndex(e => e.PDatContId, "AfiI_Bajas02").IsUnique();

            entity.Property(e => e.BienBajaId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.AfiDctoDigitacion).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.AfiDctoLegal)
                .HasMaxLength(25)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.AfiFechaAprBaja).HasColumnType("datetime");
            entity.Property(e => e.AfiFechaEjecBaja).HasColumnType("datetime");
            entity.Property(e => e.AfiFechaIngBaja).HasColumnType("datetime");
            entity.Property(e => e.CabOpeFecha).HasColumnType("datetime");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PAfiOpeDetId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pAfiOpeDetId");
            entity.Property(e => e.PCabOpeId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCabOpeId");
            entity.Property(e => e.PDatContId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pDatContId");
        });

        modelBuilder.Entity<AfiTBien>(entity =>
        {
            entity.HasKey(e => e.CodigoBienId).HasName("AfiI_Bien01");

            entity.ToTable("AfiT_Bien");

            entity.HasIndex(e => new { e.PEmpId, e.DivCodigo, e.UniCodigo, e.AfiGrupoCod, e.AfiCodigo, e.AfiSecuencia }, "AfiI_Bien02").IsUnique();

            entity.Property(e => e.CodigoBienId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.AfiCodAnterior)
                .HasMaxLength(15)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.AfiCodBarraBien)
                .HasMaxLength(40)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.AfiCodigo).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.AfiDescripcion)
                .HasMaxLength(140)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.AfiFechaIngreso).HasColumnType("datetime");
            entity.Property(e => e.AfiFechaInventario).HasColumnType("datetime");
            entity.Property(e => e.AfiOpeCod).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.AfiOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.AfiSecuencia).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.AfiUbiFisicaCod).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PCodigoBienOri)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCodigoBienOri");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PEntId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntId");
            entity.Property(e => e.PLineaProdId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pLineaProdId");
            entity.Property(e => e.PPartidaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pPartidaId");
            entity.Property(e => e.PProductoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pProductoId");
            entity.Property(e => e.PTprId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTprId");
            entity.Property(e => e.PryNumero)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<AfiTBienCentroResp>(entity =>
        {
            entity.HasKey(e => e.BienCrespId).HasName("AfiI_BienCentroResp01");

            entity.ToTable("AfiT_BienCentroResp");

            entity.Property(e => e.BienCrespId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("BienCRespId");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PCodigoBienId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCodigoBienId");
            entity.Property(e => e.PCreId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCreId");
        });

        modelBuilder.Entity<AfiTBienCentroRespHist>(entity =>
        {
            entity.HasKey(e => e.BienCrespHisId).HasName("AfiI_BienCentroRespHist01");

            entity.ToTable("AfiT_BienCentroRespHist");

            entity.Property(e => e.BienCrespHisId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("BienCRespHisId");
            entity.Property(e => e.AfiCorrelativo).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.AfiDctoDigitacion).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PCodigoBienId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCodigoBienId");
            entity.Property(e => e.PCreId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCreId");
        });

        modelBuilder.Entity<AfiTBienCmvalorResidual>(entity =>
        {
            entity.HasKey(e => e.CmvalorResId).HasName("AfiI_BienCMValorResidual01");

            entity.ToTable("AfiT_BienCMValorResidual");

            entity.HasIndex(e => new { e.PDatContId, e.EjeAno, e.PerMes }, "AfiI_BienCMValorResidual02").IsUnique();

            entity.Property(e => e.CmvalorResId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("CMValorResId");
            entity.Property(e => e.AfiCmdepAcumEje).HasColumnName("AfiCMDepAcumEje");
            entity.Property(e => e.AfiCmdepAcumPer).HasColumnName("AfiCMDepAcumPer");
            entity.Property(e => e.AfiCorrMonVleje).HasColumnName("AfiCorrMonVLEje");
            entity.Property(e => e.AfiCorrMonetVlper).HasColumnName("AfiCorrMonetVLPer");
            entity.Property(e => e.AfiMesesAdep).HasColumnName("AfiMesesADep");
            entity.Property(e => e.AfiSaldoVueje).HasColumnName("AfiSaldoVUEje");
            entity.Property(e => e.AfiSaldoVureal).HasColumnName("AfiSaldoVUReal");
            entity.Property(e => e.AfiValorAdep).HasColumnName("AfiValorADep");
            entity.Property(e => e.AfiValorResidualCm).HasColumnName("AfiValorResidualCM");
            entity.Property(e => e.CabOpeFecha).HasColumnType("datetime");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PCabOpeId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCabOpeId");
            entity.Property(e => e.PDatContId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pDatContId");
        });

        modelBuilder.Entity<AfiTBienCorrMonDep>(entity =>
        {
            entity.HasKey(e => e.CorrMonDepId).HasName("AfiI_BienCorrMonDep01");

            entity.ToTable("AfiT_BienCorrMonDep");

            entity.HasIndex(e => new { e.PDatContId, e.EjeAno, e.PerMes }, "AfiI_BienCorrMonDep02").IsUnique();

            entity.Property(e => e.CorrMonDepId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.AfiCmdepAcumEje).HasColumnName("AfiCMDepAcumEje");
            entity.Property(e => e.AfiCmdepAcumPer).HasColumnName("AfiCMDepAcumPer");
            entity.Property(e => e.AfiCorrMonVleje).HasColumnName("AfiCorrMonVLEje");
            entity.Property(e => e.AfiCorrMonVlejeBien).HasColumnName("AfiCorrMonVLEjeBien");
            entity.Property(e => e.AfiCorrMonetVlper).HasColumnName("AfiCorrMonetVLPer");
            entity.Property(e => e.AfiCorrMonetVlperBien).HasColumnName("AfiCorrMonetVLPerBien");
            entity.Property(e => e.AfiMesesAdep).HasColumnName("AfiMesesADep");
            entity.Property(e => e.AfiSaldoVueje).HasColumnName("AfiSaldoVUEje");
            entity.Property(e => e.AfiSaldoVureal).HasColumnName("AfiSaldoVUReal");
            entity.Property(e => e.AfiSvuhoras).HasColumnName("AfiSVUHoras");
            entity.Property(e => e.AfiSvuhorasReal).HasColumnName("AfiSVUHorasReal");
            entity.Property(e => e.AfiValorAdep).HasColumnName("AfiValorADep");
            entity.Property(e => e.CabOpeFecha).HasColumnType("datetime");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PCabOpeId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCabOpeId");
            entity.Property(e => e.PDatContId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pDatContId");
        });

        modelBuilder.Entity<AfiTBienCorrMonDepBit>(entity =>
        {
            entity.HasKey(e => e.CorrMonDepId).HasName("AfiI_BienCorrMonDepBit01");

            entity.ToTable("AfiT_BienCorrMonDepBit");

            entity.HasIndex(e => new { e.PDatContId, e.EjeAno, e.PerMes }, "AfiI_BienCorrMonDepBit02").IsUnique();

            entity.Property(e => e.CorrMonDepId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.AfiCmdepAcumEje).HasColumnName("AfiCMDepAcumEje");
            entity.Property(e => e.AfiCmdepAcumPer).HasColumnName("AfiCMDepAcumPer");
            entity.Property(e => e.AfiCorrMonVleje).HasColumnName("AfiCorrMonVLEje");
            entity.Property(e => e.AfiCorrMonVlejeBien).HasColumnName("AfiCorrMonVLEjeBien");
            entity.Property(e => e.AfiCorrMonetVlper).HasColumnName("AfiCorrMonetVLPer");
            entity.Property(e => e.AfiCorrMonetVlperBien).HasColumnName("AfiCorrMonetVLPerBien");
            entity.Property(e => e.AfiMesesAdep).HasColumnName("AfiMesesADep");
            entity.Property(e => e.AfiSaldoVueje).HasColumnName("AfiSaldoVUEje");
            entity.Property(e => e.AfiSaldoVureal).HasColumnName("AfiSaldoVUReal");
            entity.Property(e => e.AfiSvuhoras).HasColumnName("AfiSVUHoras");
            entity.Property(e => e.AfiSvuhorasReal).HasColumnName("AfiSVUHorasReal");
            entity.Property(e => e.AfiValorAdep).HasColumnName("AfiValorADep");
            entity.Property(e => e.CabOpeFecha).HasColumnType("datetime");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PCabOpeId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCabOpeId");
            entity.Property(e => e.PDatContId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pDatContId");
        });

        modelBuilder.Entity<AfiTBienDatCont>(entity =>
        {
            entity.HasKey(e => e.DatContId).HasName("AfiI_BienDatCont01");

            entity.ToTable("AfiT_BienDatCont");

            entity.HasIndex(e => new { e.PCodigoBienId, e.AfiTipoCalculoCod }, "AfiI_BienDatCont02").IsUnique();

            entity.Property(e => e.DatContId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.AfiCmdepAcumEjeIng).HasColumnName("AfiCMDepAcumEjeIng");
            entity.Property(e => e.AfiCorrMonVlejeIng).HasColumnName("AfiCorrMonVLEjeIng");
            entity.Property(e => e.AfiFechaActiv).HasColumnType("datetime");
            entity.Property(e => e.AfiFechaAprob).HasColumnType("datetime");
            entity.Property(e => e.AfiFechaBaja).HasColumnType("datetime");
            entity.Property(e => e.AfiSaldoVueje).HasColumnName("AfiSaldoVUEje");
            entity.Property(e => e.AfiSaldoVuejeIng).HasColumnName("AfiSaldoVUEjeIng");
            entity.Property(e => e.AfiSaldoVureal).HasColumnName("AfiSaldoVUReal");
            entity.Property(e => e.AfiSaldoVurealIng).HasColumnName("AfiSaldoVURealIng");
            entity.Property(e => e.AfiSvuhoras).HasColumnName("AfiSVUHoras");
            entity.Property(e => e.AfiSvuhorasReal).HasColumnName("AfiSVUHorasReal");
            entity.Property(e => e.AfiValorResidualCm).HasColumnName("AfiValorResidualCM");
            entity.Property(e => e.AfiVuhorasOriginal)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("AfiVUHorasOriginal");
            entity.Property(e => e.CabOpeFecha).HasColumnType("datetime");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PAfiOpeDetId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pAfiOpeDetId");
            entity.Property(e => e.PCabOpeId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCabOpeId");
            entity.Property(e => e.PCabOpeIdContCalCrd)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCabOpeIdContCalCrd");
            entity.Property(e => e.PCabOpeIdRevCalOri)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCabOpeIdRevCalOri");
            entity.Property(e => e.PCodigoBienId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCodigoBienId");
        });

        modelBuilder.Entity<AfiTBienDatContBit>(entity =>
        {
            entity.HasKey(e => e.DatContId).HasName("AfiI_BienDatContBit01");

            entity.ToTable("AfiT_BienDatContBit");

            entity.HasIndex(e => new { e.PCodigoBienId, e.AfiTipoCalculoCod }, "AfiI_BienDatContBit02").IsUnique();

            entity.Property(e => e.DatContId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.AfiCmdepAcumEjeIng).HasColumnName("AfiCMDepAcumEjeIng");
            entity.Property(e => e.AfiCorrMonVlejeIng).HasColumnName("AfiCorrMonVLEjeIng");
            entity.Property(e => e.AfiFechaActiv).HasColumnType("datetime");
            entity.Property(e => e.AfiFechaAprob).HasColumnType("datetime");
            entity.Property(e => e.AfiFechaBaja).HasColumnType("datetime");
            entity.Property(e => e.AfiSaldoVueje).HasColumnName("AfiSaldoVUEje");
            entity.Property(e => e.AfiSaldoVuejeIng).HasColumnName("AfiSaldoVUEjeIng");
            entity.Property(e => e.AfiSaldoVureal).HasColumnName("AfiSaldoVUReal");
            entity.Property(e => e.AfiSaldoVurealIng).HasColumnName("AfiSaldoVURealIng");
            entity.Property(e => e.AfiSvuhoras).HasColumnName("AfiSVUHoras");
            entity.Property(e => e.AfiSvuhorasReal).HasColumnName("AfiSVUHorasReal");
            entity.Property(e => e.AfiValorResidualCm).HasColumnName("AfiValorResidualCM");
            entity.Property(e => e.AfiVuhorasOriginal)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("AfiVUHorasOriginal");
            entity.Property(e => e.CabOpeFecha).HasColumnType("datetime");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PAfiOpeDetId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pAfiOpeDetId");
            entity.Property(e => e.PCabOpeId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCabOpeId");
            entity.Property(e => e.PCabOpeIdContCalCrd)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCabOpeIdContCalCrd");
            entity.Property(e => e.PCabOpeIdRevCalOri)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCabOpeIdRevCalOri");
            entity.Property(e => e.PCodigoBienId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCodigoBienId");
        });

        modelBuilder.Entity<AfiTBienDatRet>(entity =>
        {
            entity.HasKey(e => e.DetRetId).HasName("AfiI_BienDatRet01");

            entity.ToTable("AfiT_BienDatRet");

            entity.HasIndex(e => new { e.PDatContId, e.EjeAno, e.PerMes }, "AfiI_BienDatRet02").IsUnique();

            entity.Property(e => e.DetRetId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.AfiFechaRet).HasColumnType("datetime");
            entity.Property(e => e.CabOpeFecha).HasColumnType("datetime");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PCabOpeId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCabOpeId");
            entity.Property(e => e.PDatContId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pDatContId");
        });

        modelBuilder.Entity<AfiTBienDatSeg>(entity =>
        {
            entity.HasKey(e => e.PCodigoBienId).HasName("AfiI_BienDatSeg01");

            entity.ToTable("AfiT_BienDatSeg");

            entity.Property(e => e.PCodigoBienId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCodigoBienId");
            entity.Property(e => e.AfiFechaFinCob).HasColumnType("datetime");
            entity.Property(e => e.AfiFechaIniCob).HasColumnType("datetime");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PEntIdCorrSeg)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntIdCorrSeg");
            entity.Property(e => e.PEntIdPren)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntIdPren");
            entity.Property(e => e.PEntIdSeg)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntIdSeg");
            entity.Property(e => e.PMonedaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMonedaId");
        });

        modelBuilder.Entity<AfiTBienDatTec>(entity =>
        {
            entity.HasKey(e => e.DatTecId).HasName("AfiI_BienDatTec01");

            entity.ToTable("AfiT_BienDatTec");

            entity.Property(e => e.DatTecId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.AfiCodAgrup)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.AfiCodBarraBien)
                .HasMaxLength(40)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.AfiCodSerie)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.AfiEspTecnica)
                .HasMaxLength(100)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.AfiFechaFabric).HasColumnType("datetime");
            entity.Property(e => e.AfiMarca)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.AfiModelo)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.AfiUbiFisicaCod).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PCodigoBienId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCodigoBienId");
            entity.Property(e => e.PLineaProdId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pLineaProdId");
            entity.Property(e => e.PPartidaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pPartidaId");
            entity.Property(e => e.PTprId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTprId");
            entity.Property(e => e.PryNumero)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<AfiTBienDatosCompra>(entity =>
        {
            entity.HasKey(e => e.DatCompraId).HasName("AfiI_BienDatosCompra01");

            entity.ToTable("AfiT_BienDatosCompra");

            entity.HasIndex(e => new { e.PCodigoBienId, e.PCabLlgId }, "AfiI_BienDatosCompra02").IsUnique();

            entity.Property(e => e.DatCompraId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.AfiDctoLegal)
                .HasMaxLength(25)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.AfiFechaAdq).HasColumnType("datetime");
            entity.Property(e => e.AfiNacImp)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PCabLlgId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCabLlgId");
            entity.Property(e => e.PCodigoBienId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCodigoBienId");
            entity.Property(e => e.PEntId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntId");
            entity.Property(e => e.PMonedaIdAdq)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMonedaIdAdq");
            entity.Property(e => e.POcCabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pOcCabId");
            entity.Property(e => e.POpeLogtCabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pOpeLogtCabId");
            entity.Property(e => e.POpeLogtDetId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pOpeLogtDetId");
        });

        modelBuilder.Entity<AfiTBitacoraComprobante>(entity =>
        {
            entity.HasKey(e => e.PCabOpeId).HasName("AfiI_BitacoraComprobantes01");

            entity.ToTable("AfiT_BitacoraComprobantes");

            entity.Property(e => e.PCabOpeId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCabOpeId");
            entity.Property(e => e.AfiGlosa)
                .HasMaxLength(100)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.CabOpeFecha).HasColumnType("datetime");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PTipoOpeId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTipoOpeId");
        });

        modelBuilder.Entity<AfiTBitacoraVidaIfr>(entity =>
        {
            entity.HasKey(e => e.BitacoraVidaIfrsId).HasName("AfiI_BitacoraVidaIFRS01");

            entity.ToTable("AfiT_BitacoraVidaIFRS");

            entity.HasIndex(e => new { e.PDatContId, e.EjeAno, e.PerMes }, "AfiI_BitacoraVidaIFRS02").IsUnique();

            entity.Property(e => e.BitacoraVidaIfrsId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("BitacoraVidaIfrsID");
            entity.Property(e => e.AfiFechaAprob).HasColumnType("datetime");
            entity.Property(e => e.AfiFechaIngreso).HasColumnType("datetime");
            entity.Property(e => e.AfiFechaMod).HasColumnType("datetime");
            entity.Property(e => e.AfiMesesAdep).HasColumnName("AfiMesesADep");
            entity.Property(e => e.AfiVuejeIng).HasColumnName("AfiVUEjeIng");
            entity.Property(e => e.AfiVuejeUltCal).HasColumnName("AfiVUEjeUltCal");
            entity.Property(e => e.AfiVuorgIng).HasColumnName("AfiVUOrgIng");
            entity.Property(e => e.AfiVuorgUltCal).HasColumnName("AfiVUOrgUltCal");
            entity.Property(e => e.AfiVurealIng).HasColumnName("AfiVURealIng");
            entity.Property(e => e.AfiVurealUltCal).HasColumnName("AfiVURealUltCal");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PDatContId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pDatContId");
        });

        modelBuilder.Entity<AfiTCalculoAporte>(entity =>
        {
            entity.HasKey(e => e.CalculoAporteId).HasName("AfiI_CalculoAporte01");

            entity.ToTable("AfiT_CalculoAporte");

            entity.HasIndex(e => new { e.PAfiAporteId, e.EjeAno, e.PerMes }, "AfiI_CalculoAporte02").IsUnique();

            entity.HasIndex(e => new { e.PDatContId, e.PAfiAporteId, e.EjeAno, e.PerMes }, "AfiI_CalculoAporte03").IsUnique();

            entity.Property(e => e.CalculoAporteId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.AfiCmdepAcumEje).HasColumnName("AfiCMDepAcumEje");
            entity.Property(e => e.AfiCmdepAcumPer).HasColumnName("AfiCMDepAcumPer");
            entity.Property(e => e.AfiCorrMonVleje).HasColumnName("AfiCorrMonVLEje");
            entity.Property(e => e.AfiCorrMonetVlper).HasColumnName("AfiCorrMonetVLPer");
            entity.Property(e => e.AfiMesesAdep).HasColumnName("AfiMesesADep");
            entity.Property(e => e.AfiSaldoVuejeAdi).HasColumnName("AfiSaldoVUEjeAdi");
            entity.Property(e => e.AfiSaldoVurealAdi).HasColumnName("AfiSaldoVURealAdi");
            entity.Property(e => e.AfiValorAdep).HasColumnName("AfiValorADep");
            entity.Property(e => e.CabOpeFecha).HasColumnType("datetime");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PAfiAporteId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pAfiAporteId");
            entity.Property(e => e.PCabOpeId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCabOpeId");
            entity.Property(e => e.PCorrMonDepId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCorrMonDepId");
            entity.Property(e => e.PDatContId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pDatContId");
        });

        modelBuilder.Entity<AfiTConfiguracion>(entity =>
        {
            entity.HasKey(e => new { e.PEmpId, e.AfiTipoCalculoCod }).HasName("AfiI_Configuracion01");

            entity.ToTable("AfiT_Configuracion");

            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PCreId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCreId");
            entity.Property(e => e.PCtaIdCrFiscal)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtaIdCrFiscal");
            entity.Property(e => e.PMonedaIdCfg)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMonedaIdCfg");
            entity.Property(e => e.PMonedaIdUtm)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMonedaIdUTM");
            entity.Property(e => e.PPcrId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pPcrId");
            entity.Property(e => e.PTipoOpeId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTipoOpeId");
        });

        modelBuilder.Entity<AfiTDeterioroIfr>(entity =>
        {
            entity.HasKey(e => e.DeterioroIfrsId).HasName("AfiI_DeterioroIFRS01");

            entity.ToTable("AfiT_DeterioroIFRS");

            entity.HasIndex(e => new { e.PEmpId, e.DivCodigo, e.UniCodigo, e.AfiTipoCalculoCod, e.EjeAno, e.PerMes, e.PPcrId, e.AfiCodigoUge }, "AfiI_DeterioroIFRS02").IsUnique();

            entity.Property(e => e.DeterioroIfrsId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.AfiCodigoUge).HasColumnName("AfiCodigoUGE");
            entity.Property(e => e.AfiDctoDigitacion).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.AfiFechaAprob).HasColumnType("datetime");
            entity.Property(e => e.AfiFechaIngreso).HasColumnType("datetime");
            entity.Property(e => e.AfiUserAprob)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.AfiUserIngreso)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.NombreArchivoCarga)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PPcrId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pPcrId");
        });

        modelBuilder.Entity<AfiTEstBajaNoCalifica>(entity =>
        {
            entity.HasKey(e => e.AfiEstado).HasName("AfiI_EstadoBajaNoCalifica01");

            entity.ToTable("AfiT_EstBajaNoCalifica");

            entity.Property(e => e.AfiEstadoDes)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<AfiTEstCabProInventario>(entity =>
        {
            entity.HasKey(e => e.AfiEstado).HasName("AfiI_EstCabProInventario01");

            entity.ToTable("AfiT_EstCabProInventario");

            entity.Property(e => e.AfiEstadoDes)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<AfiTEstDetProInventario>(entity =>
        {
            entity.HasKey(e => e.AfiEstado).HasName("AfiI_EstDetProInventario01");

            entity.ToTable("AfiT_EstDetProInventario");

            entity.Property(e => e.AfiEstadoDes)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<AfiTEstInterfazInventario>(entity =>
        {
            entity.HasKey(e => e.AfiEstado).HasName("AfiI_EstInterfazInventario01");

            entity.ToTable("AfiT_EstInterfazInventario");

            entity.Property(e => e.AfiEstadoDes)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<AfiTEstadoBien>(entity =>
        {
            entity.HasKey(e => e.AfiEstado).HasName("AfiI_EstadoBien01");

            entity.ToTable("AfiT_EstadoBien");

            entity.Property(e => e.AfiEstadoDes)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<AfiTEstadoCredito>(entity =>
        {
            entity.HasKey(e => e.AfiEstado).HasName("AfiI_EstadoCredito");

            entity.ToTable("AfiT_EstadoCredito");

            entity.Property(e => e.AfiEstadoDes)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<AfiTEstrucClasific>(entity =>
        {
            entity.HasKey(e => new { e.PPdAfiId, e.ClaAfiNivel1, e.ClaAfiNivel2, e.ClaAfiNivel3, e.ClaAfiNivel4, e.ClaAfiNivel5, e.ClaAfiNivel6, e.ClaAfiNivel7, e.PCodigoBienId }).HasName("AfiI_EstrucClasific01");

            entity.ToTable("AfiT_EstrucClasific");

            entity.Property(e => e.PPdAfiId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pPdAfiId");
            entity.Property(e => e.PCodigoBienId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCodigoBienId");
            entity.Property(e => e.ClaAfiNodoNombre)
                .HasMaxLength(40)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
        });

        modelBuilder.Entity<AfiTEstrucClasificIfr>(entity =>
        {
            entity.HasKey(e => new { e.PPdAfiId, e.ClaAfiNivel1, e.ClaAfiNivel2, e.ClaAfiNivel3, e.ClaAfiNivel4, e.ClaAfiNivel5, e.ClaAfiNivel6, e.ClaAfiNivel7, e.PCodigoBienId }).HasName("AfiI_EstrucClasificIFRS01");

            entity.ToTable("AfiT_EstrucClasificIFRS");

            entity.Property(e => e.PPdAfiId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pPdAfiId");
            entity.Property(e => e.PCodigoBienId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCodigoBienId");
            entity.Property(e => e.ClaAfiNodoNombre)
                .HasMaxLength(40)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
        });

        modelBuilder.Entity<AfiTFormula>(entity =>
        {
            entity.HasKey(e => e.AfiFormulaCod).HasName("AfiI_Formula01");

            entity.ToTable("AfiT_Formula");

            entity.Property(e => e.AfiFormulaDes)
                .HasMaxLength(100)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<AfiTGrupo>(entity =>
        {
            entity.HasKey(e => e.AfiGrupoCod).HasName("AfiI_Grupo01");

            entity.ToTable("AfiT_Grupo");

            entity.Property(e => e.AfiGrupoCod).ValueGeneratedNever();
            entity.Property(e => e.AfiGrupoDes)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
        });

        modelBuilder.Entity<AfiTGrupoCuenta>(entity =>
        {
            entity.HasKey(e => new { e.PEmpId, e.AfiGrupoCod, e.AfiTipoCalculoCod }).HasName("AfiI_GrupoCuentas01");

            entity.ToTable("AfiT_GrupoCuentas");

            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.AfiCtaProvAcumDet).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.AfiCtaResultadoDet).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PCtaIdAct)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtaIdAct");
            entity.Property(e => e.PCtaIdBienAdm)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtaIdBienAdm");
            entity.Property(e => e.PCtaIdCm)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtaIdCM");
            entity.Property(e => e.PCtaIdDact)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtaIdDAct");
            entity.Property(e => e.PCtaIdDacum)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtaIdDAcum");
            entity.Property(e => e.PCtaIdDeje)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtaIdDEje");
            entity.Property(e => e.PCtaIdGanancia)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtaIdGanancia");
            entity.Property(e => e.PCtaIdPerdida)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtaIdPerdida");
            entity.Property(e => e.PCtaIdRet)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtaIdRet");
        });

        modelBuilder.Entity<AfiTHistorialInterfaz>(entity =>
        {
            entity.HasKey(e => e.HistInterfazId).HasName("AfiI_HistorialInterfaz01");

            entity.ToTable("AfiT_HistorialInterfaz");

            entity.HasIndex(e => new { e.PCodigoBienId, e.AfiTipoCarga }, "AfiI_HistorialInterfaz02").IsUnique();

            entity.Property(e => e.HistInterfazId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.AfiFechaIngreso).HasColumnType("datetime");
            entity.Property(e => e.AfiFechaProceso).HasColumnType("datetime");
            entity.Property(e => e.AfiUserIngreso)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.CodOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.NombreArchivoCarga)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PCodigoBienId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCodigoBienId");
        });

        modelBuilder.Entity<AfiTIntBajasNoCalifican>(entity =>
        {
            entity.HasKey(e => e.IntBajasNoClaId).HasName("AfiI_IntBajasNoClasifican01");

            entity.ToTable("AfiT_IntBajasNoCalifican");

            entity.Property(e => e.IntBajasNoClaId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.AfiCodAgrup)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.AfiCodAnterior)
                .HasMaxLength(15)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.AfiCodSerie)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.AfiDctoLegal)
                .HasMaxLength(25)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.AfiDescripcion)
                .HasMaxLength(140)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.AfiFechaAprBaja).HasColumnType("datetime");
            entity.Property(e => e.AfiFechaEjecBaja).HasColumnType("datetime");
            entity.Property(e => e.AfiFechaIngBaja).HasColumnType("datetime");
            entity.Property(e => e.AfiFechaIngreso).HasColumnType("datetime");
            entity.Property(e => e.AfiOpeCod).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.AfiUbiFisicaCod).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.CabOpeFecha).HasColumnType("datetime");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.NombreArchivoCarga)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PCabOpeId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCabOpeId");
            entity.Property(e => e.PCodigoBienId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCodigoBienId");
            entity.Property(e => e.PCodigoBienIdAlt)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCodigoBienIdAlt");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
        });

        modelBuilder.Entity<AfiTInterfazAux>(entity =>
        {
            entity.HasKey(e => e.IntIntId).HasName("AfiI_InterfazAux01");

            entity.ToTable("AfiT_InterfazAux");

            entity.Property(e => e.IntIntId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.AfiCmdepAcumEjeIng).HasColumnName("AfiCMDepAcumEjeIng");
            entity.Property(e => e.AfiCodAgrup)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.AfiCodAnterior)
                .HasMaxLength(15)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.AfiCodBarraBien)
                .HasMaxLength(40)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.AfiCodSerie)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.AfiCodigo).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.AfiCorrMonVlejeIng).HasColumnName("AfiCorrMonVLEjeIng");
            entity.Property(e => e.AfiDctoLegal)
                .HasMaxLength(25)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.AfiDescripcion)
                .HasMaxLength(140)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.AfiEspTecnica)
                .HasMaxLength(100)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.AfiFechaAdq).HasColumnType("datetime");
            entity.Property(e => e.AfiFechaIngreso).HasColumnType("datetime");
            entity.Property(e => e.AfiMarca)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.AfiMesesAdep).HasColumnName("AfiMesesADep");
            entity.Property(e => e.AfiModelo)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.AfiNacImp)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.AfiOpeCod).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.AfiSecuencia).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.AfiUbiFisicaCod).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EntRut)
                .HasMaxLength(12)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EntRut2)
                .HasMaxLength(12)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EntRutEcua)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EntRutEcua2)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.IdFuncionalidad)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcionalidad");
            entity.Property(e => e.IntBitArchivo)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.IntTmpOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PMonedaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMonedaId");
            entity.Property(e => e.PPartidaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pPartidaId");
            entity.Property(e => e.PTprId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTprId");
            entity.Property(e => e.ProductoCod)
                .HasMaxLength(25)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PryNumero)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<AfiTInterfazAuxBaja>(entity =>
        {
            entity.HasKey(e => e.IntIntId).HasName("AfiI_InterfazAuxBajas01");

            entity.ToTable("AfiT_InterfazAuxBajas");

            entity.Property(e => e.IntIntId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.AfiCodAnterior)
                .HasMaxLength(15)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.AfiCodSerie)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.AfiCodigo).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.AfiDctoDigitacion).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.AfiDctoLegal)
                .HasMaxLength(25)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.AfiFechaIngBaja).HasColumnType("datetime");
            entity.Property(e => e.AfiOpeCod).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.AfiSecuencia).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.IdFuncionalidad)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcionalidad");
            entity.Property(e => e.IntBitArchivo)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.IntTmpOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
        });

        modelBuilder.Entity<AfiTInterfazError>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("AfiT_InterfazError");

            entity.Property(e => e.AfiCodigo).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.IntBitArchivo)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.IntGlosaError).HasColumnType("text");
            entity.Property(e => e.IntTmpOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
        });

        modelBuilder.Entity<AfiTInterfazErrorBaja>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("AfiT_InterfazErrorBajas");

            entity.Property(e => e.AfiCodigo).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.AfiSecuencia).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.IntBitArchivo)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.IntGlosaError).HasColumnType("text");
            entity.Property(e => e.IntTmpOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
        });

        modelBuilder.Entity<AfiTInterfazFormato>(entity =>
        {
            entity.HasKey(e => e.IntFmtOrden).HasName("AfiI_InterfazFormato01");

            entity.ToTable("AfiT_InterfazFormato");

            entity.Property(e => e.IntFmtOrden).ValueGeneratedNever();
            entity.Property(e => e.IntFmtCampo)
                .HasMaxLength(40)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.IntFmtValor)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.TipoDato)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<AfiTInterfazFormatoBaja>(entity =>
        {
            entity.HasKey(e => e.IntFmtOrden).HasName("AfiI_InterfazFormatoBajas01");

            entity.ToTable("AfiT_InterfazFormatoBajas");

            entity.Property(e => e.IntFmtOrden).ValueGeneratedNever();
            entity.Property(e => e.IntFmtCampo)
                .HasMaxLength(40)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.IntFmtValor)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.TipoDato)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<AfiTInterfazTmp>(entity =>
        {
            entity.HasKey(e => new { e.IntPasoId, e.PEmpId, e.DivCodigo, e.UniCodigo, e.IntTmpArchivo, e.IntTmpOwner }).HasName("AfiI_InterfazTmp");

            entity.ToTable("AfiT_InterfazTmp");

            entity.Property(e => e.IntPasoId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.IntTmpArchivo)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.IntTmpOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.IntTmpRegistro).HasColumnType("text");
        });

        modelBuilder.Entity<AfiTParalizado>(entity =>
        {
            entity.HasKey(e => e.BienParalizadoId).HasName("AfiI_Paralizados01");

            entity.ToTable("AfiT_Paralizados");

            entity.HasIndex(e => new { e.PDatContId, e.AfiPerIdIni }, "AfiI_Paralizados02").IsUnique();

            entity.Property(e => e.BienParalizadoId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PDatContId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pDatContId");
        });

        modelBuilder.Entity<AfiTPerdidaDeterioroIfr>(entity =>
        {
            entity.HasKey(e => e.PerdidaDeterioroId).HasName("AfiI_PerdidaDeterioroIFRS01");

            entity.ToTable("AfiT_PerdidaDeterioroIFRS");

            entity.HasIndex(e => new { e.PDeterioroIfrsId, e.PCodigoBienId, e.PCreId }, "AfiI_PerdidaDeterioroIFRS02").IsUnique();

            entity.Property(e => e.PerdidaDeterioroId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.AfiFechaAprob).HasColumnType("datetime");
            entity.Property(e => e.AfiFechaIngreso).HasColumnType("datetime");
            entity.Property(e => e.AfiUserAprob)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.AfiUserIngreso)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.CabOpeFecha).HasColumnType("datetime");
            entity.Property(e => e.CabOpeFechaRev).HasColumnType("datetime");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PCabOpeId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCabOpeId");
            entity.Property(e => e.PCabOpeIdRev)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCabOpeIdRev");
            entity.Property(e => e.PCodigoBienId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCodigoBienId");
            entity.Property(e => e.PCreId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCreId");
            entity.Property(e => e.PDeterioroIfrsId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pDeterioroIfrsId");
        });

        modelBuilder.Entity<AfiTPlanBiene>(entity =>
        {
            entity.HasKey(e => e.PdAfiId).HasName("AfiI_PlanBienes01");

            entity.ToTable("AfiT_PlanBienes");

            entity.Property(e => e.PdAfiId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PdAfiNomNivel1)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PdAfiNomNivel2)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PdAfiNomNivel3)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PdAfiNomNivel4)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PdAfiNomNivel5)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PdAfiNomNivel6)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PdAfiNomNivel7)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PdAfiNomPlan)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PdAfiOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<AfiTPlanBienesIfr>(entity =>
        {
            entity.HasKey(e => e.PdAfiId).HasName("AfiI_PlanBienesIFRS01");

            entity.ToTable("AfiT_PlanBienesIFRS");

            entity.Property(e => e.PdAfiId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PdAfiNomNivel1)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PdAfiNomNivel2)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PdAfiNomNivel3)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PdAfiNomNivel4)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PdAfiNomNivel5)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PdAfiNomNivel6)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PdAfiNomNivel7)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PdAfiNomPlan)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PdAfiOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<AfiTProInventarioCab>(entity =>
        {
            entity.HasKey(e => e.ProInvCabId).HasName("AfiI_ProInventarioCab01");

            entity.ToTable("AfiT_ProInventarioCab");

            entity.Property(e => e.ProInvCabId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.AfiFechaEstado).HasColumnType("datetime");
            entity.Property(e => e.AfiFechaProceso).HasColumnType("datetime");
            entity.Property(e => e.AfiUserRespProInv)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
        });

        modelBuilder.Entity<AfiTProInventarioDet>(entity =>
        {
            entity.HasKey(e => e.ProInvDetId).HasName("AfiI_ProInventarioDet01");

            entity.ToTable("AfiT_ProInventarioDet");

            entity.Property(e => e.ProInvDetId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.AfiCodSerie)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.AfiFec1erRecInv).HasColumnType("datetime");
            entity.Property(e => e.AfiFec2doRecInv).HasColumnType("datetime");
            entity.Property(e => e.AfiFecDetPrInv).HasColumnType("datetime");
            entity.Property(e => e.AfiFecEstDetPrInv).HasColumnType("datetime");
            entity.Property(e => e.AfiFechaProceso).HasColumnType("datetime");
            entity.Property(e => e.AfiOwnerHojaInv)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.NombreArchivoCarga)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PCodigoBienId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCodigoBienId");
            entity.Property(e => e.PProInvCabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pProInvCabId");
            entity.Property(e => e.UserResp1erRecInv)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.UserResp2doRecInv)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.UserRespDetPrInv)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<AfiTProcesoCredito>(entity =>
        {
            entity.HasKey(e => new { e.PEmpId, e.EjeAno, e.AfiTipoCalculoCod }).HasName("AfiI_ProcesoCredito01");

            entity.ToTable("AfiT_ProcesoCredito");

            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
        });

        modelBuilder.Entity<AfiTProyCalAporte>(entity =>
        {
            entity.HasKey(e => e.AfiAporteId).HasName("AfiI_ProyCalAportes01");

            entity.ToTable("AfiT_ProyCalAportes");

            entity.HasIndex(e => new { e.PDatContId, e.AfiFolio }, "AfiI_ProyCalAportes02").IsUnique();

            entity.Property(e => e.AfiAporteId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.AfiDctoLegal)
                .HasMaxLength(25)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.AfiFechaAdq).HasColumnType("datetime");
            entity.Property(e => e.AfiGlosa)
                .HasMaxLength(100)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.AfiNacImp)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.CabOpeFecha).HasColumnType("datetime");
            entity.Property(e => e.CabOpeFechaRev).HasColumnType("datetime");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PCabLlgId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCabLlgId");
            entity.Property(e => e.PCabOpeId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCabOpeId");
            entity.Property(e => e.PCabOpeIdRev)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCabOpeIdRev");
            entity.Property(e => e.PDatContId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pDatContId");
            entity.Property(e => e.PEntId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntId");
            entity.Property(e => e.PMonedaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMonedaId");
            entity.Property(e => e.POcCabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pOcCabId");
            entity.Property(e => e.POpeLogtCabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pOpeLogtCabId");
            entity.Property(e => e.POpeLogtDetId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pOpeLogtDetId");
        });

        modelBuilder.Entity<AfiTProyCalBienCmvalorResidual>(entity =>
        {
            entity.HasKey(e => e.CmvalorResId).HasName("AfiI_ProyCalBienCMValorResidual1");

            entity.ToTable("AfiT_ProyCalBienCMValorResidual");

            entity.HasIndex(e => new { e.PDatContId, e.EjeAno, e.PerMes }, "AfiI_ProyCalBienCMValorResidual2").IsUnique();

            entity.Property(e => e.CmvalorResId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("CMValorResId");
            entity.Property(e => e.AfiCmdepAcumEje).HasColumnName("AfiCMDepAcumEje");
            entity.Property(e => e.AfiCmdepAcumPer).HasColumnName("AfiCMDepAcumPer");
            entity.Property(e => e.AfiCorrMonVleje).HasColumnName("AfiCorrMonVLEje");
            entity.Property(e => e.AfiCorrMonetVlper).HasColumnName("AfiCorrMonetVLPer");
            entity.Property(e => e.AfiMesesAdep).HasColumnName("AfiMesesADep");
            entity.Property(e => e.AfiSaldoVueje).HasColumnName("AfiSaldoVUEje");
            entity.Property(e => e.AfiSaldoVureal).HasColumnName("AfiSaldoVUReal");
            entity.Property(e => e.AfiValorAdep).HasColumnName("AfiValorADep");
            entity.Property(e => e.AfiValorResidualCm).HasColumnName("AfiValorResidualCM");
            entity.Property(e => e.CabOpeFecha).HasColumnType("datetime");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PCabOpeId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCabOpeId");
            entity.Property(e => e.PDatContId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pDatContId");
        });

        modelBuilder.Entity<AfiTProyCalBienCorrMonDep>(entity =>
        {
            entity.HasKey(e => e.CorrMonDepId).HasName("AfiI_ProyCalBienCorrMonDep1");

            entity.ToTable("AfiT_ProyCalBienCorrMonDep");

            entity.HasIndex(e => new { e.PDatContId, e.EjeAno, e.PerMes }, "AfiI_ProyCalBienCorrMonDep2").IsUnique();

            entity.Property(e => e.CorrMonDepId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.AfiCmdepAcumEje).HasColumnName("AfiCMDepAcumEje");
            entity.Property(e => e.AfiCmdepAcumPer).HasColumnName("AfiCMDepAcumPer");
            entity.Property(e => e.AfiCorrMonVleje).HasColumnName("AfiCorrMonVLEje");
            entity.Property(e => e.AfiCorrMonVlejeBien).HasColumnName("AfiCorrMonVLEjeBien");
            entity.Property(e => e.AfiCorrMonetVlper).HasColumnName("AfiCorrMonetVLPer");
            entity.Property(e => e.AfiCorrMonetVlperBien).HasColumnName("AfiCorrMonetVLPerBien");
            entity.Property(e => e.AfiMesesAdep).HasColumnName("AfiMesesADep");
            entity.Property(e => e.AfiSaldoVueje).HasColumnName("AfiSaldoVUEje");
            entity.Property(e => e.AfiSaldoVureal).HasColumnName("AfiSaldoVUReal");
            entity.Property(e => e.AfiSvuhoras).HasColumnName("AfiSVUHoras");
            entity.Property(e => e.AfiSvuhorasReal).HasColumnName("AfiSVUHorasReal");
            entity.Property(e => e.AfiValorAdep).HasColumnName("AfiValorADep");
            entity.Property(e => e.CabOpeFecha).HasColumnType("datetime");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PCabOpeId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCabOpeId");
            entity.Property(e => e.PDatContId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pDatContId");
        });

        modelBuilder.Entity<AfiTProyCalBienDatCont>(entity =>
        {
            entity.HasKey(e => e.DatContId).HasName("AfiI_ProyCalBienDatCont1");

            entity.ToTable("AfiT_ProyCalBienDatCont");

            entity.HasIndex(e => new { e.PCodigoBienId, e.AfiTipoCalculoCod }, "AfiI_ProyCalBienDatCont2").IsUnique();

            entity.Property(e => e.DatContId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.AfiCmdepAcumEjeIng).HasColumnName("AfiCMDepAcumEjeIng");
            entity.Property(e => e.AfiCorrMonVlejeIng).HasColumnName("AfiCorrMonVLEjeIng");
            entity.Property(e => e.AfiFechaActiv).HasColumnType("datetime");
            entity.Property(e => e.AfiFechaAprob).HasColumnType("datetime");
            entity.Property(e => e.AfiFechaBaja).HasColumnType("datetime");
            entity.Property(e => e.AfiSaldoVueje).HasColumnName("AfiSaldoVUEje");
            entity.Property(e => e.AfiSaldoVuejeIng).HasColumnName("AfiSaldoVUEjeIng");
            entity.Property(e => e.AfiSaldoVureal).HasColumnName("AfiSaldoVUReal");
            entity.Property(e => e.AfiSaldoVurealIng).HasColumnName("AfiSaldoVURealIng");
            entity.Property(e => e.AfiSvuhoras).HasColumnName("AfiSVUHoras");
            entity.Property(e => e.AfiSvuhorasReal).HasColumnName("AfiSVUHorasReal");
            entity.Property(e => e.AfiValorResidualCm).HasColumnName("AfiValorResidualCM");
            entity.Property(e => e.AfiVuhorasOriginal)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("AfiVUHorasOriginal");
            entity.Property(e => e.CabOpeFecha).HasColumnType("datetime");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PAfiOpeDetId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pAfiOpeDetId");
            entity.Property(e => e.PCabOpeId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCabOpeId");
            entity.Property(e => e.PCabOpeIdContCalCrd)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCabOpeIdContCalCrd");
            entity.Property(e => e.PCabOpeIdRevCalOri)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCabOpeIdRevCalOri");
            entity.Property(e => e.PCodigoBienId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCodigoBienId");
        });

        modelBuilder.Entity<AfiTProyCalBitacoraCab>(entity =>
        {
            entity.HasKey(e => e.AfiProyCalCabId).HasName("AfiI_ProyCalBitacoraCab1");

            entity.ToTable("AfiT_ProyCalBitacoraCab");

            entity.Property(e => e.AfiProyCalCabId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.AfiCodigoReferencia)
                .HasMaxLength(30)
                .IsUnicode(false);
            entity.Property(e => e.AfiFechaReferencia).HasColumnType("datetime");
            entity.Property(e => e.AfiGlosaReferencia)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
        });

        modelBuilder.Entity<AfiTProyCalBitacoraDet>(entity =>
        {
            entity.HasKey(e => e.AfiProyCalDetId).HasName("AfiI_ProyCalBitacoraDet1");

            entity.ToTable("AfiT_ProyCalBitacoraDet");

            entity.HasIndex(e => e.PAfiProyCalCabId, "AfiI_ProyCalBitacoraDet2");

            entity.Property(e => e.AfiProyCalDetId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.AfiCmdepAcumEje).HasColumnName("AfiCMDepAcumEje");
            entity.Property(e => e.AfiCmdepAcumPer).HasColumnName("AfiCMDepAcumPer");
            entity.Property(e => e.AfiCorrMonVleje).HasColumnName("AfiCorrMonVLEje");
            entity.Property(e => e.AfiCorrMonVlejeBien).HasColumnName("AfiCorrMonVLEjeBien");
            entity.Property(e => e.AfiCorrMonetVlper).HasColumnName("AfiCorrMonetVLPer");
            entity.Property(e => e.AfiCorrMonetVlperBien).HasColumnName("AfiCorrMonetVLPerBien");
            entity.Property(e => e.AfiMesesAdep).HasColumnName("AfiMesesADep");
            entity.Property(e => e.AfiSaldoVueje).HasColumnName("AfiSaldoVUEje");
            entity.Property(e => e.AfiSaldoVureal).HasColumnName("AfiSaldoVUReal");
            entity.Property(e => e.AfiSvuhoras).HasColumnName("AfiSVUHoras");
            entity.Property(e => e.AfiSvuhorasReal).HasColumnName("AfiSVUHorasReal");
            entity.Property(e => e.AfiValorAdep).HasColumnName("AfiValorADep");
            entity.Property(e => e.AfiValorResidualCm).HasColumnName("AfiValorResidualCM");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PAfiProyCalCabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pAfiProyCalCabId");
            entity.Property(e => e.PCodigoBienId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCodigoBienId");
            entity.Property(e => e.PCorrMonDepId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCorrMonDepId");
            entity.Property(e => e.PDatContId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pDatContId");
        });

        modelBuilder.Entity<AfiTProyCalCalculoAporte>(entity =>
        {
            entity.HasKey(e => e.CalculoAporteId).HasName("AfiI_ProyCalCalculoAporte1");

            entity.ToTable("AfiT_ProyCalCalculoAporte");

            entity.HasIndex(e => new { e.PAfiAporteId, e.EjeAno, e.PerMes }, "AfiI_ProyCalCalculoAporte2").IsUnique();

            entity.HasIndex(e => new { e.PDatContId, e.PAfiAporteId, e.EjeAno, e.PerMes }, "AfiI_ProyCalCalculoAporte3").IsUnique();

            entity.Property(e => e.CalculoAporteId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.AfiCmdepAcumEje).HasColumnName("AfiCMDepAcumEje");
            entity.Property(e => e.AfiCmdepAcumPer).HasColumnName("AfiCMDepAcumPer");
            entity.Property(e => e.AfiCorrMonVleje).HasColumnName("AfiCorrMonVLEje");
            entity.Property(e => e.AfiCorrMonetVlper).HasColumnName("AfiCorrMonetVLPer");
            entity.Property(e => e.AfiMesesAdep).HasColumnName("AfiMesesADep");
            entity.Property(e => e.AfiSaldoVuejeAdi).HasColumnName("AfiSaldoVUEjeAdi");
            entity.Property(e => e.AfiSaldoVurealAdi).HasColumnName("AfiSaldoVURealAdi");
            entity.Property(e => e.AfiValorAdep).HasColumnName("AfiValorADep");
            entity.Property(e => e.CabOpeFecha).HasColumnType("datetime");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PAfiAporteId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pAfiAporteId");
            entity.Property(e => e.PCabOpeId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCabOpeId");
            entity.Property(e => e.PCorrMonDepId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCorrMonDepId");
            entity.Property(e => e.PDatContId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pDatContId");
        });

        modelBuilder.Entity<AfiTProyCalVhorasConsumidum>(entity =>
        {
            entity.HasKey(e => e.AfiVuhorasId).HasName("AfiI_ProyCalVHorasConsumida1");

            entity.ToTable("AfiT_ProyCalVHorasConsumida");

            entity.HasIndex(e => new { e.PDatContId, e.EjeAno, e.PerMes }, "AfiI_ProyCalVHorasConsumida2").IsUnique();

            entity.Property(e => e.AfiVuhorasId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("AfiVUHorasId");
            entity.Property(e => e.AfiVuhorasConsumida).HasColumnName("AfiVUHorasConsumida");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PDatContId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pDatContId");
        });

        modelBuilder.Entity<AfiTResponsable>(entity =>
        {
            entity.HasKey(e => e.PEntId).HasName("AfiI_Responsable01");

            entity.ToTable("AfiT_Responsable");

            entity.Property(e => e.PEntId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntId");
        });

        modelBuilder.Entity<AfiTSubGrupo>(entity =>
        {
            entity.HasKey(e => new { e.AfiGrupoCod, e.AfiSubGrpCod }).HasName("AfiI_SubGrupo01");

            entity.ToTable("AfiT_SubGrupo");

            entity.Property(e => e.AfiSubGrpDes)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
        });

        modelBuilder.Entity<AfiTTipoCalculo>(entity =>
        {
            entity.HasKey(e => e.AfiTipoCalculoCod).HasName("AfiI_TipoCalculo01");

            entity.ToTable("AfiT_TipoCalculo");

            entity.Property(e => e.AfiIndIfrs).HasColumnName("AfiIndIFRS");
            entity.Property(e => e.AfiTipoCalculoDes)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
        });

        modelBuilder.Entity<AfiTTipoOperacionCab>(entity =>
        {
            entity.HasKey(e => e.AfiOpeCod).HasName("AfiI_TipoOperacionCab01");

            entity.ToTable("AfiT_TipoOperacionCab");

            entity.Property(e => e.AfiOpeCod).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.AfiDescripcionOpe)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
        });

        modelBuilder.Entity<AfiTTipoOperacionDet>(entity =>
        {
            entity.HasKey(e => e.AfiOpeDetId).HasName("AfiI_TipoOperacionDet01");

            entity.ToTable("AfiT_TipoOperacionDet");

            entity.HasIndex(e => new { e.PEmpId, e.AfiOpeCod, e.AfiTipoCalculoCod }, "AfiI_TipoOperacionDet02").IsUnique();

            entity.Property(e => e.AfiOpeDetId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.AfiOpeCod).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.FechaVigencia).HasColumnType("datetime");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PCtaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtaId");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PTipoOpeId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTipoOpeId");
        });

        modelBuilder.Entity<AfiTTipoPrendum>(entity =>
        {
            entity.HasKey(e => e.AfiTipoPrendaCod).HasName("AfiI_TipoPrenda01");

            entity.ToTable("AfiT_TipoPrenda");

            entity.Property(e => e.AfiTipoPrendaDes)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
        });

        modelBuilder.Entity<AfiTTipoSeguro>(entity =>
        {
            entity.HasKey(e => e.AfiTipoSegCod).HasName("AfiI_TipoSeguro01");

            entity.ToTable("AfiT_TipoSeguro");

            entity.Property(e => e.AfiTipoSegDes)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
        });

        modelBuilder.Entity<AfiTTransferenciaCresp>(entity =>
        {
            entity.HasKey(e => e.PCodigoBienId).HasName("AfiI_TransferenciaCResp01");

            entity.ToTable("AfiT_TransferenciaCResp");

            entity.Property(e => e.PCodigoBienId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCodigoBienId");
            entity.Property(e => e.AfiDctoDigitacion).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PCreId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCreId");
        });

        modelBuilder.Entity<AfiTTransferencium>(entity =>
        {
            entity.HasKey(e => new { e.PCodigoBienId, e.AfiDctoDigitacion }).HasName("AfiI_Transferencia01");

            entity.ToTable("AfiT_Transferencia");

            entity.Property(e => e.PCodigoBienId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCodigoBienId");
            entity.Property(e => e.AfiDctoDigitacion).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.AfiDctoLegal)
                .HasMaxLength(25)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.AfiFechaIngTransf).HasColumnType("datetime");
            entity.Property(e => e.AfiRespDest).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.AfiRespOr).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PPartidaIdDest)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pPartidaIdDest");
            entity.Property(e => e.PPartidaIdOr)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pPartidaIdOr");
            entity.Property(e => e.PTprIdDest)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTprIdDest");
            entity.Property(e => e.PTprIdOr)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTprIdOr");
            entity.Property(e => e.PryNumeroDest)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PryNumeroOr)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<AfiTUbicacion>(entity =>
        {
            entity.HasKey(e => e.AfiUbiFisicaCod).HasName("AfiI_Ubicacion01");

            entity.ToTable("AfiT_Ubicacion");

            entity.Property(e => e.AfiUbiFisicaCod).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.AfiUbiCodBarra)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.AfiUbiFisicaDes)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
        });

        modelBuilder.Entity<AfiTUbicacionFisicaInv>(entity =>
        {
            entity.HasKey(e => e.AfiUbiFisInvId).HasName("AfiI_UbicacionFisicaInv01");

            entity.ToTable("AfiT_UbicacionFisicaInv");

            entity.Property(e => e.AfiUbiFisInvId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.AfiUbiFisicaCod).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PProInvCabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pProInvCabId");
        });

        modelBuilder.Entity<AfiTUnidadResp>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("AfiT_UnidadResp");

            entity.Property(e => e.AfiUnidadDes)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
        });

        modelBuilder.Entity<AfiTVhorasConsumidum>(entity =>
        {
            entity.HasKey(e => e.AfiVuhorasId).HasName("AfiI_VHorasConsumida01");

            entity.ToTable("AfiT_VHorasConsumida");

            entity.HasIndex(e => new { e.PDatContId, e.EjeAno, e.PerMes }, "AfiI_VHorasConsumida02").IsUnique();

            entity.Property(e => e.AfiVuhorasId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("AfiVUHorasId");
            entity.Property(e => e.AfiVuhorasConsumida).HasColumnName("AfiVUHorasConsumida");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PDatContId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pDatContId");
        });

        modelBuilder.Entity<ApfTBoleta>(entity =>
        {
            entity.HasKey(e => e.BoletaId).HasName("ApfI_Boletas01");

            entity.ToTable("ApfT_Boletas");

            entity.HasIndex(e => new { e.PEmpId, e.DivCodigo, e.NumeroBoleta, e.NumeroPrestamo, e.TdoId }, "ApfI_Boletas02").IsUnique();

            entity.Property(e => e.BoletaId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.BeneficiarioEntId).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.BolActFecha).HasColumnType("datetime");
            entity.Property(e => e.BolActUsuario)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.BolAprFecha).HasColumnType("datetime");
            entity.Property(e => e.BolAprUsuario)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.BolDigFecha).HasColumnType("datetime");
            entity.Property(e => e.BolDigUsuario)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.BolGlosa)
                .HasMaxLength(255)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.BolResponsable)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.CodCtaCteBco)
                .HasMaxLength(15)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.FechaOtorga).HasColumnType("datetime");
            entity.Property(e => e.FechaUltDevengo).HasColumnType("datetime");
            entity.Property(e => e.FechaVenc).HasColumnType("datetime");
            entity.Property(e => e.FechaVencAdicional).HasColumnType("datetime");
            entity.Property(e => e.GlosaBenef)
                .HasMaxLength(120)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.NumeroBoleta)
                .HasMaxLength(25)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.NumeroPrestamo)
                .HasMaxLength(25)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PCabOpeId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCabOpeId");
            entity.Property(e => e.PCreId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCreId");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PMonedaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMonedaId");
            entity.Property(e => e.PTlcId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTlcId");
            entity.Property(e => e.PTmatId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTMatId");
            entity.Property(e => e.PTprId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTprId");
            entity.Property(e => e.PryNumero)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.TerceroEntId).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.TvenCodigo).HasColumnName("TVenCodigo");
        });

        modelBuilder.Entity<ApfTBoletasVencimiento>(entity =>
        {
            entity.HasKey(e => e.DetBoletaId).HasName("ApfI_BoletasVencimientos01");

            entity.ToTable("ApfT_BoletasVencimientos");

            entity.Property(e => e.DetBoletaId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.BolActFecha).HasColumnType("datetime");
            entity.Property(e => e.BolActUsuario)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.Fecha).HasColumnType("datetime");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PBoletaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pBoletaId");
        });

        modelBuilder.Entity<ApfTCabAporteRescate>(entity =>
        {
            entity.HasKey(e => e.CabActivoId).HasName("ApfI_CabAporteRescate01");

            entity.ToTable("ApfT_CabAporteRescate");

            entity.Property(e => e.CabActivoId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.ActAprUsuario)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.ActDigUsuario)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.ActGlosa)
                .HasMaxLength(255)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.FechaInversion).HasColumnType("datetime");
            entity.Property(e => e.FechaParidad).HasColumnType("datetime");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PCabOpeId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCabOpeId");
            entity.Property(e => e.PCreId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCreId");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PInstrumentoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pInstrumentoId");
            entity.Property(e => e.PMovCceId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMovCceId");
            entity.Property(e => e.PTprId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTprId");
            entity.Property(e => e.PryNumero)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<ApfTConfiguracionActi>(entity =>
        {
            entity.HasKey(e => new { e.PEmpId, e.EjeAno }).HasName("ApfI_ConfiguracionActi01");

            entity.ToTable("ApfT_ConfiguracionActi");

            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.CtaIdEfectivo).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.CtaIdGastos).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.CtaIdPuente).HasColumnType("numeric(9, 0)");
        });

        modelBuilder.Entity<ApfTControlDevengamiento>(entity =>
        {
            entity.HasKey(e => e.ControlId).HasName("ApfI_controlDevengamiento01");

            entity.ToTable("ApfT_ControlDevengamiento");

            entity.HasIndex(e => new { e.PPasDocumentoId, e.PerId }, "ApfI_ControlDevengamiento02").IsUnique();

            entity.Property(e => e.ControlId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.PCabOpeId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCabOpeId");
            entity.Property(e => e.PPasDocumentoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pPasDocumentoId");
        });

        modelBuilder.Entity<ApfTControlDevengamientoBol>(entity =>
        {
            entity.HasKey(e => e.ControlId).HasName("ApfI_controlDevengamientoBol01");

            entity.ToTable("ApfT_ControlDevengamientoBol");

            entity.HasIndex(e => new { e.PBoletaId, e.PerId }, "ApfI_ControlDevengamientoBol02").IsUnique();

            entity.Property(e => e.ControlId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.PBoletaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pBoletaId");
            entity.Property(e => e.PCabOpeId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCabOpeId");
        });

        modelBuilder.Entity<ApfTDetAporteRescate>(entity =>
        {
            entity.HasKey(e => e.DetActivoId).HasName("ApfI_DetAporteRescate01");

            entity.ToTable("ApfT_DetAporteRescate");

            entity.Property(e => e.DetActivoId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.ActGlosa)
                .HasMaxLength(255)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.FechaParidad).HasColumnType("datetime");
            entity.Property(e => e.FechaVenc).HasColumnType("datetime");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.MovTesNumero)
                .HasMaxLength(25)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PCabActivoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCabActivoId");
            entity.Property(e => e.PCabAporteRescateId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCabAporteRescateId");
            entity.Property(e => e.PCtaCteBcoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtaCteBcoId");
            entity.Property(e => e.PInstrumentoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pInstrumentoId");
            entity.Property(e => e.TasaPiso)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<ApfTDocumentoFisico>(entity =>
        {
            entity.HasKey(e => e.DocFisId).HasName("ApfI_DocumentoFisico01");

            entity.ToTable("ApfT_DocumentoFisico");

            entity.Property(e => e.DocFisId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.DocFisArchivo)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.DocFisRuta)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PDocumentoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pDocumentoId");
        });

        modelBuilder.Entity<ApfTEntidade>(entity =>
        {
            entity.HasKey(e => new { e.PEmpId, e.TipoEntidad, e.PEntId }).HasName("ApfI_Entidades01");

            entity.ToTable("ApfT_Entidades");

            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PEntId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntId");
        });

        modelBuilder.Entity<ApfTEstado>(entity =>
        {
            entity.HasKey(e => new { e.TipoEstado, e.EstCodigo }).HasName("ApfI_Estados01");

            entity.ToTable("ApfT_Estados");

            entity.Property(e => e.EstNombre)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<ApfTFormaPago>(entity =>
        {
            entity.HasKey(e => e.TfpCodigo).HasName("ApfI_FormaPago01");

            entity.ToTable("ApfT_FormaPago");

            entity.Property(e => e.TfpCodigo).ValueGeneratedNever();
            entity.Property(e => e.TfpNombre)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.TfpNombreCorto)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<ApfTInstrumentosFinanciero>(entity =>
        {
            entity.HasKey(e => e.InstrumentoId).HasName("ApfI_InstrumentosFinanc01");

            entity.ToTable("ApfT_InstrumentosFinancieros");

            entity.Property(e => e.InstrumentoId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.DescripcionInstrumento)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.NombreInstrumento)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PEntId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntId");
            entity.Property(e => e.PMonedaCuotaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMonedaCuotaId");
            entity.Property(e => e.PMonedaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMonedaId");
            entity.Property(e => e.PlazoInstrumento)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PorcDistribCartRf).HasColumnName("PorcDistribCartRF");
            entity.Property(e => e.PorcDistribCartRv).HasColumnName("PorcDistribCartRV");
        });

        modelBuilder.Entity<ApfTMaterium>(entity =>
        {
            entity.HasKey(e => e.TmatId).HasName("ApfI_Materia01");

            entity.ToTable("ApfT_Materia");

            entity.HasIndex(e => new { e.PEmpId, e.TmatModulo, e.TmatCodigo }, "ApfI_Materia02").IsUnique();

            entity.Property(e => e.TmatId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("TMatId");
            entity.Property(e => e.FechaVigencia).HasColumnType("datetime");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.TmatCodigo).HasColumnName("TMatCodigo");
            entity.Property(e => e.TmatModulo).HasColumnName("TMatModulo");
            entity.Property(e => e.TmatNombre)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("TMatNombre");
        });

        modelBuilder.Entity<ApfTMediosRescate>(entity =>
        {
            entity.HasKey(e => e.TmrCodigo).HasName("ApfI_MesdiosRescate01");

            entity.ToTable("ApfT_MediosRescate");

            entity.Property(e => e.TmrNombre)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.TmrNombreCorto)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<ApfTModulo>(entity =>
        {
            entity.HasKey(e => e.TmatModulo).HasName("ApfI_Modulos01");

            entity.ToTable("ApfT_Modulos");

            entity.Property(e => e.TmatModulo).HasColumnName("TMatModulo");
            entity.Property(e => e.TmatModuloGlosa)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("TMatModuloGlosa");
        });

        modelBuilder.Entity<ApfTPasivosFinanciero>(entity =>
        {
            entity.HasKey(e => e.PasDocumentoId).HasName("ApfI_PasivosFinancieros01");

            entity.ToTable("ApfT_PasivosFinancieros");

            entity.Property(e => e.PasDocumentoId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.AseguradoEntId).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.CodCtaCteBco)
                .HasMaxLength(15)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.CorredorEntId).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.DocGlosaPas)
                .HasMaxLength(255)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.FechaEmision).HasColumnType("datetime");
            entity.Property(e => e.FechaUltDevengo).HasColumnType("datetime");
            entity.Property(e => e.FechaVigenciaDesde).HasColumnType("datetime");
            entity.Property(e => e.FechaVigenciaHasta).HasColumnType("datetime");
            entity.Property(e => e.FldCodBien).HasColumnName("Fld_CodBien");
            entity.Property(e => e.FldGrupo).HasColumnName("Fld_Grupo");
            entity.Property(e => e.FldSecuencia).HasColumnName("Fld_Secuencia");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.NumDoctoPasivo)
                .HasMaxLength(25)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PCabOpeId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCabOpeId");
            entity.Property(e => e.PCodigoBienId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCodigoBienId");
            entity.Property(e => e.PCreId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCreId");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PEntId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntId");
            entity.Property(e => e.PMonedaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMonedaId");
            entity.Property(e => e.PTlcId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTlcId");
            entity.Property(e => e.PTmatId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTMatId");
            entity.Property(e => e.PTprId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTprId");
            entity.Property(e => e.PasActFecha).HasColumnType("datetime");
            entity.Property(e => e.PasActUsuario)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PasResponsable)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PrimerVencimiento).HasColumnType("datetime");
            entity.Property(e => e.PryNumero)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.TerceroEntId).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.TvenCodigo).HasColumnName("TVenCodigo");
            entity.Property(e => e.UbicacionRiesgo)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<ApfTPasivosFinancierosDet>(entity =>
        {
            entity.HasKey(e => e.PasDetDocumentoId).HasName("ApfI_PasivosFinancierosDet01");

            entity.ToTable("ApfT_PasivosFinancierosDet");

            entity.Property(e => e.PasDetDocumentoId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.FechaVenc).HasColumnType("datetime");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PCabOpeId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCabOpeId");
            entity.Property(e => e.PMovCceId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMovCceId");
            entity.Property(e => e.PPasDocumentoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pPasDocumentoId");
            entity.Property(e => e.PasActFecha).HasColumnType("datetime");
            entity.Property(e => e.PasActUsuario)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<ApfTPasivosFinancierosGasto>(entity =>
        {
            entity.HasKey(e => e.PasGasDocumentoId).HasName("ApfT_PasivosFinancierosGastos01");

            entity.ToTable("ApfT_PasivosFinancierosGastos");

            entity.Property(e => e.PasGasDocumentoId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PCreId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCreId");
            entity.Property(e => e.PMonedaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMonedaId");
            entity.Property(e => e.PPasDocumentoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pPasDocumentoId");
            entity.Property(e => e.PTprId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTprId");
            entity.Property(e => e.PasActFecha).HasColumnType("datetime");
            entity.Property(e => e.PasActUsuario)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PryNumero)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.TesDocNumDocCalce)
                .HasMaxLength(25)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.TgasCodigo).HasColumnName("TGasCodigo");
        });

        modelBuilder.Entity<ApfTTipoActivoFinanciero>(entity =>
        {
            entity.HasKey(e => e.TafCodigo).HasName("ApfI_TipoActivoFinanciero01");

            entity.ToTable("ApfT_TipoActivoFinanciero");

            entity.Property(e => e.TafCodigo).ValueGeneratedNever();
            entity.Property(e => e.TafNombre)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.TafNombreCorto)
                .HasMaxLength(5)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<ApfTTipoDocumento>(entity =>
        {
            entity.HasKey(e => new { e.PEmpId, e.TdoId }).HasName("ApfI_TipoDocumento01");

            entity.ToTable("ApfT_TipoDocumento");

            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.CtaIdDebe).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.CtaIdGastosDebe).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.CtaIdGastosHaber).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.CtaIdHaber).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.CtaIdInteres).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.CtaIdIva).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.TmatModulo).HasColumnName("TMatModulo");
        });

        modelBuilder.Entity<ApfTTipoFondoMutuo>(entity =>
        {
            entity.HasKey(e => e.TfmCodigo).HasName("ApfI_TipoFondoMutuo01");

            entity.ToTable("ApfT_TipoFondoMutuo");

            entity.Property(e => e.TfmCodigo).ValueGeneratedNever();
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PCreId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCreId");
            entity.Property(e => e.PCtaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtaId");
            entity.Property(e => e.PTprId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTprId");
            entity.Property(e => e.PryNumero)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.TfmDescripcion)
                .HasMaxLength(255)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.TfmNombre)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<ApfTTipoIntere>(entity =>
        {
            entity.HasKey(e => e.TipoInteres).HasName("ApfI_TipoInteres01");

            entity.ToTable("ApfT_TipoInteres");

            entity.Property(e => e.GlosaInteres)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<ApfTTipoLineaCredito>(entity =>
        {
            entity.HasKey(e => e.TlcId).HasName("ApfI_TipoLineaCredito01");

            entity.ToTable("ApfT_TipoLineaCredito");

            entity.HasIndex(e => new { e.PEmpId, e.TlcCodigo }, "ApfI_TipoLineaCredito02").IsUnique();

            entity.Property(e => e.TlcId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.FechaVigencia).HasColumnType("datetime");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.TlcNombre)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<ApfTTipoLineaCreditoBco>(entity =>
        {
            entity.HasKey(e => new { e.PTlcId, e.InstCod }).HasName("ApfI_TipoLineaCreditoBco01");

            entity.ToTable("ApfT_TipoLineaCreditoBco");

            entity.Property(e => e.PTlcId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTlcId");
        });

        modelBuilder.Entity<ApfTTipoLineaCreditoCtaCte>(entity =>
        {
            entity.HasKey(e => new { e.PTlcId, e.InstCod, e.CodCtaCteBco }).HasName("ApfI_TipoLineaCreditoCtaCte01");

            entity.ToTable("ApfT_TipoLineaCreditoCtaCte");

            entity.Property(e => e.PTlcId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTlcId");
            entity.Property(e => e.CodCtaCteBco)
                .HasMaxLength(15)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PCtaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtaId");
            entity.Property(e => e.PMonedaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMonedaId");
        });

        modelBuilder.Entity<ApfTTiposPasivo>(entity =>
        {
            entity.HasKey(e => e.TipoPasivoId).HasName("ApfI_TiposPasivos01");

            entity.ToTable("ApfT_TiposPasivos");

            entity.Property(e => e.TipoPasivoGlosa)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<ApfTUso>(entity =>
        {
            entity.HasKey(e => new { e.PEmpId, e.IdUso }).HasName("ApfI_Uso01");

            entity.ToTable("ApfT_Uso");

            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.UsoNombre)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<AudTPresupuesto>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("AudT_Presupuesto");

            entity.Property(e => e.AudAccion)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.AudCampo)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.AudId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PCfgPreId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCfgPreId");
            entity.Property(e => e.PCreId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCreId");
            entity.Property(e => e.PCtaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtaId");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
        });

        modelBuilder.Entity<B2btCuentasAsociada>(entity =>
        {
            entity.HasKey(e => e.PCtaId).HasName("B2BI_CuentasAsociadas01");

            entity.ToTable("B2BT_CuentasAsociadas");

            entity.Property(e => e.PCtaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtaId");
        });

        modelBuilder.Entity<B2btEmpresasAsociada>(entity =>
        {
            entity.HasKey(e => e.PEmpId).HasName("B2BI_EmpresasAsociadas01");

            entity.ToTable("B2BT_EmpresasAsociadas");

            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
        });

        modelBuilder.Entity<B2btEmpresasRegla>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("B2BT_EmpresasReglas");

            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
        });

        modelBuilder.Entity<B2btEntidade>(entity =>
        {
            entity.HasKey(e => e.PEntId).HasName("B2BI_Entidades01");

            entity.ToTable("B2BT_Entidades");

            entity.Property(e => e.PEntId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntId");
            entity.Property(e => e.B2bfechaUltConsulta)
                .HasColumnType("datetime")
                .HasColumnName("B2BFechaUltConsulta");
            entity.Property(e => e.B2bpassword)
                .HasMaxLength(15)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("B2BPassword");
        });

        modelBuilder.Entity<B2btEntidadesCopy19042011>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("B2BT_Entidades_copy19042011");

            entity.Property(e => e.B2bfechaUltConsulta)
                .HasColumnType("datetime")
                .HasColumnName("B2BFechaUltConsulta");
            entity.Property(e => e.B2bpassword)
                .HasMaxLength(15)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("B2BPassword");
            entity.Property(e => e.PEntId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntId");
        });

        modelBuilder.Entity<B2btTipoDocRegla>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("B2BT_TipoDocReglas");

            entity.Property(e => e.PTdoSii).HasColumnName("pTdoSii");
        });

        modelBuilder.Entity<B2btTipoDocumento>(entity =>
        {
            entity.HasKey(e => e.TdoAgrupaCod).HasName("B2BI_TipoDocumentos01");

            entity.ToTable("B2BT_TipoDocumentos");

            entity.Property(e => e.TdoAgrupaCod).ValueGeneratedNever();
        });

        modelBuilder.Entity<B2btTipoDocumentosCopy19042011>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("B2BT_TipoDocumentos_copy19042011");
        });

        modelBuilder.Entity<BconTDoctosMigrado>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("BconT_DoctosMigrados");

            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PTipoOpeId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTipoOpeId");
        });

        modelBuilder.Entity<BconTTraspasoEmpresa>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("BconT_TraspasoEmpresa");

            entity.Property(e => e.EmpIdAfi)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("EmpIdAFI");
            entity.Property(e => e.FldTipoCalculo).HasColumnName("Fld_TipoCalculo");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
        });

        modelBuilder.Entity<BesTBitacoraAprRech>(entity =>
        {
            entity.HasKey(e => e.BitId).HasName("BesI_BitacoraAprRech01");

            entity.ToTable("BesT_BitacoraAprRech");

            entity.Property(e => e.BitId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.FechaIngreso).HasColumnType("datetime");
            entity.Property(e => e.Observaciones)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
        });

        modelBuilder.Entity<BesTBitacoraWsIcon>(entity =>
        {
            entity.HasKey(e => e.BitId).HasName("BesI_BitacoraWsIcon01");

            entity.ToTable("BesT_BitacoraWsIcon");

            entity.Property(e => e.BitId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.FechaIngreso).HasColumnType("datetime");
            entity.Property(e => e.IdUsuario)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario");
            entity.Property(e => e.POcCabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pOcCabId");
            entity.Property(e => e.RespuestaIconstruye)
                .HasColumnType("text")
                .HasColumnName("RespuestaIConstruye");
            entity.Property(e => e.XmlDocto).HasColumnType("text");
        });

        modelBuilder.Entity<CbaTArchivoCartola>(entity =>
        {
            entity.HasKey(e => new { e.PFrmCbaId, e.TipoRegistro, e.Secuencia }).HasName("CbaI_ArchivoCartola_PK");

            entity.ToTable("CbaT_ArchivoCartola");

            entity.Property(e => e.PFrmCbaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pFrmCbaId");
            entity.Property(e => e.IndAtributoControl)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.IndComparacion)
                .HasMaxLength(2)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PFormatoFechaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pFormatoFechaId");
            entity.Property(e => e.ValorPorOmision)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<CbaTArchivoFormato>(entity =>
        {
            entity.HasKey(e => e.FrmCbaId).HasName("FK_CbaI_ArchivoFormato_I01");

            entity.ToTable("CbaT_ArchivoFormato");

            entity.HasIndex(e => new { e.InstCod, e.FrmFormato }, "CbaI_ArchivoFormato_I01").IsUnique();

            entity.Property(e => e.FrmCbaId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.FrmFormato)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
        });

        modelBuilder.Entity<CbaTCartola>(entity =>
        {
            entity.HasKey(e => e.CabCbaId).HasName("CbaI_Cartolas_PK");

            entity.ToTable("CbaT_Cartolas");

            entity.HasIndex(e => new { e.PEmpId, e.PCtaCteBcoId, e.CarFolio }, "CbaI_Cartolas_I01").IsUnique();

            entity.HasIndex(e => e.CarOwner, "CbaI_Cartolas_I02");

            entity.Property(e => e.CabCbaId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.CarFechaInicio).HasColumnType("datetime");
            entity.Property(e => e.CarFechaTermino).HasColumnType("datetime");
            entity.Property(e => e.CarOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PCtaCteBcoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtaCteBcoId");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
        });

        modelBuilder.Entity<CbaTCartolasBitacoraCarga>(entity =>
        {
            entity.HasKey(e => e.CarBitId).HasName("CbaI_BitCC_PK");

            entity.ToTable("CbaT_CartolasBitacoraCarga");

            entity.Property(e => e.CarBitId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.CarBitArchivo)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.CarBitFec).HasColumnType("datetime");
            entity.Property(e => e.CarBitObservacion)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.CarBitOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PCtaCteBcoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtaCteBcoId");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
        });

        modelBuilder.Entity<CbaTCartolasDet>(entity =>
        {
            entity.HasKey(e => e.DetCbaId).HasName("CbaI_DetalleCar_PK");

            entity.ToTable("CbaT_CartolasDet");

            entity.HasIndex(e => new { e.PCabCbaId, e.CarDetLinea, e.CarDetNumeroDoc, e.PCtbId }, "CbaI_DetalleCar_I01").IsUnique();

            entity.Property(e => e.DetCbaId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.CarDetFecha).HasColumnType("datetime");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.MovTesConFecha).HasColumnType("datetime");
            entity.Property(e => e.MovTesOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PCabCbaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCabCbaId");
            entity.Property(e => e.PCtbId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtbId");

            entity.HasOne(d => d.PCabCba).WithMany(p => p.CbaTCartolasDets)
                .HasForeignKey(d => d.PCabCbaId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("CbaT_CartolasDet_FK");
        });

        modelBuilder.Entity<CbaTCartolasPaso>(entity =>
        {
            entity.HasKey(e => e.CarPasoId).HasName("CbaI_CartolasPaso_PK");

            entity.ToTable("CbaT_CartolasPaso");

            entity.HasIndex(e => new { e.PEmpId, e.DivCodigo, e.UniCodigo, e.InstCod, e.CarTmpArchivo, e.CarTmpOwner }, "CbaI_CartolasPaso_I01").HasFillFactor(90);

            entity.Property(e => e.CarPasoId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.CarRegPaso).HasColumnType("text");
            entity.Property(e => e.CarTmpArchivo)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.CarTmpOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.IndTipoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
        });

        modelBuilder.Entity<CbaTCartolasTmp>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("CbaT_CartolasTmp");

            entity.HasIndex(e => new { e.CarTmpOwner, e.PEmpId, e.DivCodigo, e.UniCodigo, e.CarTmpArchivo, e.PCtaCteBcoId, e.CarTmpFolio }, "CbaI_CartolasTmp_I01").HasFillFactor(90);

            entity.Property(e => e.CarDetTmpFecha).HasColumnType("datetime");
            entity.Property(e => e.CarTmpArchivo)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.CarTmpFechaInicio).HasColumnType("datetime");
            entity.Property(e => e.CarTmpFechaTermino).HasColumnType("datetime");
            entity.Property(e => e.CarTmpOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PCtaCteBcoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtaCteBcoId");
            entity.Property(e => e.PCtbId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtbId");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
        });

        modelBuilder.Entity<CbaTConceptosBancario>(entity =>
        {
            entity.HasKey(e => e.CtbId).HasName("CbaI_ConceptosBancarios_PK");

            entity.ToTable("CbaT_ConceptosBancarios");

            entity.HasIndex(e => new { e.InstCod, e.CtbCod }, "CbaI_ConceptosBancarios_I01").IsUnique();

            entity.Property(e => e.CtbId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.CtbCod)
                .HasMaxLength(10)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.CtbGlosa)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
        });

        modelBuilder.Entity<CbaTDiccionarioCartola>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("CbaT_DiccionarioCartola");

            entity.Property(e => e.AtributoDestino)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.AtributoOrigen)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.AtributoTraduccion)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.Descripcion)
                .HasMaxLength(50)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.IndDecimal)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.IndEntero)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.IndFecha)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.IndSigno)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.IndTraduccion)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.TablaDestino)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.TablaTraduccion)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.TipoDato)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<CceTDocumento>(entity =>
        {
            entity.HasKey(e => e.DocCceId).HasName("CceI_Documentos_PK");

            entity.ToTable("CceT_Documentos");

            entity.HasIndex(e => new { e.PEmpId, e.DivCodigo, e.PEntId, e.EntSucNumero, e.PEntIdSec, e.EntSucNumeroSec, e.PMonedaId, e.TdoId, e.DocCceNumero }, "CceI_Documentos_I01").IsUnique();

            entity.HasIndex(e => e.PEntId, "CceI_Documentos_I02").HasFillFactor(90);

            entity.HasIndex(e => new { e.TdoId, e.DocCceNumero }, "CceI_Documentos_I03").HasFillFactor(90);

            entity.HasIndex(e => new { e.DocCceNumero, e.PEmpId, e.DivCodigo }, "CceI_Documentos_I04");

            entity.HasIndex(e => e.PEntIdSec, "CceI_Documentos_I05").HasFillFactor(90);

            entity.HasIndex(e => e.DocCceDocRef, "CceI_Documentos_I06").HasFillFactor(90);

            entity.Property(e => e.DocCceId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.DocCceCtaCteBco)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.DocCceDocRef)
                .HasMaxLength(25)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.DocCceEmiFolio)
                .HasMaxLength(25)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.DocCceFecEmi).HasColumnType("datetime");
            entity.Property(e => e.DocCceFecLib).HasColumnType("datetime");
            entity.Property(e => e.DocCceFecProrroga).HasColumnType("datetime");
            entity.Property(e => e.DocCceFecProxima).HasColumnType("datetime");
            entity.Property(e => e.DocCceFecProyectada).HasColumnType("datetime");
            entity.Property(e => e.DocCceFecVenc).HasColumnType("datetime");
            entity.Property(e => e.DocCceNumCedente)
                .HasMaxLength(25)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.DocCceNumDocBanco)
                .HasMaxLength(25)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.DocCceNumPagCedente)
                .HasMaxLength(25)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.DocCceNumero)
                .HasMaxLength(25)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.DocCceUserCobResp)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.DocCceUserVenResp)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PCreId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCreId");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PEntCcoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntCcoId");
            entity.Property(e => e.PEntId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntId");
            entity.Property(e => e.PEntIdSec)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntIdSec");
            entity.Property(e => e.PEntIdTer)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntIdTer");
            entity.Property(e => e.PLineaProdId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pLineaProdId");
            entity.Property(e => e.PMonedaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMonedaId");
            entity.Property(e => e.PPartidaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pPartidaId");
            entity.Property(e => e.PTprId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTprId");
            entity.Property(e => e.PryNumero)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();

            entity.HasOne(d => d.DivCodigoNavigation).WithMany(p => p.CceTDocumentos)
                .HasForeignKey(d => d.DivCodigo)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_CceDocDivCodigo");

            entity.HasOne(d => d.PEmp).WithMany(p => p.CceTDocumentos)
                .HasForeignKey(d => d.PEmpId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_CceDocpEmpId");

            entity.HasOne(d => d.Tdo).WithMany(p => p.CceTDocumentos)
                .HasForeignKey(d => d.TdoId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_CceDocTdoId");
        });

        modelBuilder.Entity<CceTDocumentoAgeing>(entity =>
        {
            entity.HasKey(e => e.DocAgeId);

            entity.ToTable("CceT_DocumentoAgeing");

            entity.Property(e => e.DocAgeId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.DocAgeFecPago).HasColumnType("datetime");
            entity.Property(e => e.DocAgeFecVenOri).HasColumnType("datetime");
            entity.Property(e => e.DocAgeFecVenPago).HasColumnType("datetime");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PCabOpeId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCabOpeId");
            entity.Property(e => e.PCtaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtaId");
            entity.Property(e => e.PDocAgeDocPagId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pDocAgeDocPagId");
            entity.Property(e => e.PDocCceId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pDocCceId");
        });

        modelBuilder.Entity<CceTMovimiento>(entity =>
        {
            entity.HasKey(e => e.MovCceId).HasName("CceI_Movimientos_PK");

            entity.ToTable("CceT_Movimientos");

            entity.HasIndex(e => new { e.PDocCceId, e.MovCceNumCuota, e.PCtaId }, "CceI_Movimientos_I01").HasFillFactor(90);

            entity.HasIndex(e => new { e.PCabOpeId, e.CabOpeLinea }, "CceI_Movimientos_I02").HasFillFactor(90);

            entity.HasIndex(e => new { e.PCabCompId, e.PDetCompId, e.MovCceGlosa }, "CceI_Movimientos_I03");

            entity.HasIndex(e => new { e.PCabOpeIdOri, e.SisCodOri }, "CceI_Movimientos_I05").HasFillFactor(90);

            entity.HasIndex(e => new { e.PCabOpeId, e.SisCodOri }, "CceI_Movimientos_I07").HasFillFactor(90);

            entity.HasIndex(e => new { e.MovCceFecPagoPropuesta, e.PEmpId, e.DivCodigo, e.UniCodigo }, "CceI_Movimientos_I08").HasFillFactor(90);

            entity.HasIndex(e => e.MovCceOwner, "CceI_Movimientos_I09").HasFillFactor(90);

            entity.HasIndex(e => e.PCtaId, "CceI_Movimientos_I10").HasFillFactor(90);

            entity.HasIndex(e => e.MovCceCalFecha, "CceI_Movimientos_I11").HasFillFactor(90);

            entity.HasIndex(e => new { e.PEmpId, e.DivCodigo, e.MovCceConNumero, e.PCtaId }, "CceT_Movimientos_idx030");

            entity.HasIndex(e => new { e.MovCceCalFecha, e.PEmpId, e.DivCodigo, e.MovCceConNumero, e.PCtaId, e.PDocCceId }, "CceT_Movimientos_idx033");

            entity.Property(e => e.MovCceId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.DocCceFecProyectada).HasColumnType("datetime");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.MovCceCalFecha).HasColumnType("datetime");
            entity.Property(e => e.MovCceConFecha).HasColumnType("datetime");
            entity.Property(e => e.MovCceDigFec).HasColumnType("datetime");
            entity.Property(e => e.MovCceDigUsuario)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.MovCceDocRef)
                .HasMaxLength(25)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.MovCceFecEstado).HasColumnType("datetime");
            entity.Property(e => e.MovCceFecPagoPropuesta).HasColumnType("datetime");
            entity.Property(e => e.MovCceFecVenc).HasColumnType("datetime");
            entity.Property(e => e.MovCceGlosa)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.MovCceOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PCabCompId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCabCompId");
            entity.Property(e => e.PCabOpeId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCabOpeId");
            entity.Property(e => e.PCabOpeIdOri)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCabOpeIdOri");
            entity.Property(e => e.PCreId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCreId");
            entity.Property(e => e.PCtaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtaId");
            entity.Property(e => e.PDetCompId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pDetCompId");
            entity.Property(e => e.PDetReferenciaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pDetReferenciaId");
            entity.Property(e => e.PDocCceId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pDocCceId");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PEmpIdDestino)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpIdDestino");
            entity.Property(e => e.PEntIdPago)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntIdPago");
            entity.Property(e => e.PFormaPagoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pFormaPagoId");
            entity.Property(e => e.PLineaProdId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pLineaProdId");
            entity.Property(e => e.PMovTesId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMovTesId");
            entity.Property(e => e.PPartidaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pPartidaId");

            entity.HasOne(d => d.DivCodigoNavigation).WithMany(p => p.CceTMovimientos)
                .HasForeignKey(d => d.DivCodigo)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_CceMovDivCodigo");

            entity.HasOne(d => d.PCta).WithMany(p => p.CceTMovimientos)
                .HasForeignKey(d => d.PCtaId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_CCeMovCtaId");

            entity.HasOne(d => d.PDocCce).WithMany(p => p.CceTMovimientos)
                .HasForeignKey(d => d.PDocCceId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_CceMovDocCceId");

            entity.HasOne(d => d.PEmp).WithMany(p => p.CceTMovimientos)
                .HasForeignKey(d => d.PEmpId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_CceMovpEmpId");

            entity.HasOne(d => d.UniCodigoNavigation).WithMany(p => p.CceTMovimientos)
                .HasForeignKey(d => d.UniCodigo)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_CceMovUniCodigo");
        });

        modelBuilder.Entity<CceTMovimientos20170414>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("CceT_Movimientos_20170414");

            entity.Property(e => e.DocCceFecProyectada).HasColumnType("datetime");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.MovCceCalFecha).HasColumnType("datetime");
            entity.Property(e => e.MovCceConFecha).HasColumnType("datetime");
            entity.Property(e => e.MovCceDigFec).HasColumnType("datetime");
            entity.Property(e => e.MovCceDigUsuario)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.MovCceDocRef)
                .HasMaxLength(25)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.MovCceFecEstado).HasColumnType("datetime");
            entity.Property(e => e.MovCceFecPagoPropuesta).HasColumnType("datetime");
            entity.Property(e => e.MovCceFecVenc).HasColumnType("datetime");
            entity.Property(e => e.MovCceGlosa)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.MovCceId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.MovCceOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PCabCompId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCabCompId");
            entity.Property(e => e.PCabOpeId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCabOpeId");
            entity.Property(e => e.PCabOpeIdOri)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCabOpeIdOri");
            entity.Property(e => e.PCreId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCreId");
            entity.Property(e => e.PCtaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtaId");
            entity.Property(e => e.PDetCompId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pDetCompId");
            entity.Property(e => e.PDetReferenciaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pDetReferenciaId");
            entity.Property(e => e.PDocCceId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pDocCceId");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PEmpIdDestino)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpIdDestino");
            entity.Property(e => e.PEntIdPago)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntIdPago");
            entity.Property(e => e.PFormaPagoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pFormaPagoId");
            entity.Property(e => e.PLineaProdId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pLineaProdId");
            entity.Property(e => e.PMovTesId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMovTesId");
            entity.Property(e => e.PPartidaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pPartidaId");
        });

        modelBuilder.Entity<CceTSaldosDocum>(entity =>
        {
            entity.HasKey(e => e.SalCceId).HasName("CceI_SaldosDocum_PK");

            entity.ToTable("CceT_SaldosDocum");

            entity.HasIndex(e => new { e.PEmpId, e.DivCodigo, e.PDocCceId, e.PMonedaId, e.PCtaId, e.MovCceNumCuota }, "CceI_SaldosDocum_I01").IsUnique();

            entity.HasIndex(e => new { e.PDocCceId, e.PCtaId, e.MovCceNumCuota }, "CceI_SaldosDocum_I02").HasFillFactor(90);

            entity.Property(e => e.SalCceId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.DocCceFecEmi).HasColumnType("datetime");
            entity.Property(e => e.DocCceFecProrroga).HasColumnType("datetime");
            entity.Property(e => e.DocCceFecProyectada).HasColumnType("datetime");
            entity.Property(e => e.DocCceFecVenc).HasColumnType("datetime");
            entity.Property(e => e.PCtaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtaId");
            entity.Property(e => e.PDocCceId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pDocCceId");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PMonedaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMonedaId");
        });

        modelBuilder.Entity<CcoTArchivoEntidadExterna>(entity =>
        {
            entity.HasKey(e => new { e.PFrmCcoId, e.TipoRegistro, e.Secuencia }).HasName("PK_CcoT_ArchivoEntidadExt");

            entity.ToTable("CcoT_ArchivoEntidadExterna");

            entity.Property(e => e.PFrmCcoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pFrmCcoId");
            entity.Property(e => e.IndAtributoControl)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.IndComparacion)
                .HasMaxLength(2)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.IndConversion)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PFormatoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pFormatoId");
            entity.Property(e => e.TipoDato)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.ValorPorOmision)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<CcoTArchivoPaso>(entity =>
        {
            entity.HasKey(e => e.ArchCcoPasoId);

            entity.ToTable("CcoT_ArchivoPaso");

            entity.HasIndex(e => new { e.ArchCcoPasoId, e.PEmpId, e.DivCodigo, e.UniCodigo, e.PFrmCcoId, e.ArchCcoPasoArchivo, e.ArchCcoPasoOwner }, "I1_CcoT_ArchivoPaso").IsUnique();

            entity.Property(e => e.ArchCcoPasoId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.ArchCcoPasoArchivo)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.ArchCcoPasoOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.ArchCcoPasoRegistro).HasColumnType("text");
            entity.Property(e => e.IndTipoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PFrmCcoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pFrmCcoId");
        });

        modelBuilder.Entity<CcoTAsociaNominaDocumento>(entity =>
        {
            entity.HasKey(e => new { e.PEmpId, e.TipNomCod, e.TdoId }).HasName("PK_CcoT_AsociaNominaDoc");

            entity.ToTable("CcoT_AsociaNominaDocumento");

            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PCtaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtaId");
            entity.Property(e => e.PCtaIdIntDevengado)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtaIdIntDevengado");
            entity.Property(e => e.PCtaIdIntPorDevengar)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtaIdIntPorDevengar");
        });

        modelBuilder.Entity<CcoTAsociaNominaOperacion>(entity =>
        {
            entity.HasKey(e => new { e.TipNomCod, e.PTipoOpeId }).HasName("PK_CcoT_AsociaNominaOpe");

            entity.ToTable("CcoT_AsociaNominaOperacion");

            entity.Property(e => e.PTipoOpeId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTipoOpeId");
        });

        modelBuilder.Entity<CcoTBitacora>(entity =>
        {
            entity.HasKey(e => e.BitCcoId);

            entity.ToTable("CcoT_Bitacora");

            entity.HasIndex(e => new { e.PEmpId, e.DivCodigo, e.BitCcoCobrador, e.UniCodigoCbza, e.BitCcoDigUsuario, e.PEntId, e.EntSucNumero, e.PEveCcoId, e.BitCcoFecEvento, e.PDocCceId, e.MovCceNumCuota }, "I1_CcoT_Bitacora").IsUnique();

            entity.Property(e => e.BitCcoId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.BitCcoCliGlosa).HasColumnType("text");
            entity.Property(e => e.BitCcoCobrador)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.BitCcoDigUsuario)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.BitCcoFecEvento).HasColumnType("datetime");
            entity.Property(e => e.BitCcoFecPago).HasColumnType("datetime");
            entity.Property(e => e.BitCcoFecProxEvento).HasColumnType("datetime");
            entity.Property(e => e.BitCcoHhdesde).HasColumnName("BitCcoHHDesde");
            entity.Property(e => e.BitCcoHhhasta).HasColumnName("BitCcoHHHasta");
            entity.Property(e => e.BitCcoMmdesde).HasColumnName("BitCcoMMDesde");
            entity.Property(e => e.BitCcoMmhasta).HasColumnName("BitCcoMMHasta");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PBitCcoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pBitCcoId");
            entity.Property(e => e.PCabNomId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCabNomId");
            entity.Property(e => e.PCabNomIntIdRef)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCabNomIntIdRef");
            entity.Property(e => e.PCtaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtaId");
            entity.Property(e => e.PDocCceId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pDocCceId");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PEntConId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntConId");
            entity.Property(e => e.PEntId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntId");
            entity.Property(e => e.PEveCcoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEveCcoId");
            entity.Property(e => e.PEveCcoIdProxEvento)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEveCcoIdProxEvento");
        });

        modelBuilder.Entity<CcoTBitacoraArchivo>(entity =>
        {
            entity.HasKey(e => e.BitArchCcoId);

            entity.ToTable("CcoT_BitacoraArchivo");

            entity.HasIndex(e => new { e.PEmpId, e.DivCodigo, e.UniCodigo, e.PFrmCcoId, e.PCabNomExtId, e.PCabNomId }, "I1_CcoT_BitacoraArchivo").IsUnique();

            entity.Property(e => e.BitArchCcoId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.BitArchCcoArchivo)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.BitArchCcoFecEstado).HasColumnType("datetime");
            entity.Property(e => e.BitArchCcoFecRegistro).HasColumnType("datetime");
            entity.Property(e => e.BitArchCcoObservacion)
                .HasMaxLength(100)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.BitArchCcoOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PCabNomExtId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCabNomExtId");
            entity.Property(e => e.PCabNomId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCabNomId");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PFrmCcoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pFrmCcoId");
        });

        modelBuilder.Entity<CcoTConfiguracion>(entity =>
        {
            entity.HasKey(e => new { e.PEmpId, e.EjeAno });

            entity.ToTable("CcoT_Configuracion");

            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.CargoJefeCobranza)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.CfgCcoMaxMontoProrroga).HasColumnName("CfgCCoMaxMontoProrroga");
            entity.Property(e => e.CfgCcoMaxProrrogas).HasColumnName("CfgCCoMaxProrrogas");
            entity.Property(e => e.JefeCobranza)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<CcoTCorrNomina>(entity =>
        {
            entity.HasKey(e => new { e.TipNomCod, e.PEmpId, e.EjeAno });

            entity.ToTable("CcoT_CorrNomina");

            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
        });

        modelBuilder.Entity<CcoTCriticidad>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("CcoT_Criticidad");

            entity.Property(e => e.CriCcoGlosa)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<CcoTDiccionarioArchivo>(entity =>
        {
            entity.HasKey(e => e.Atributo);

            entity.ToTable("CcoT_DiccionarioArchivo");

            entity.Property(e => e.AtributoDestino)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.AtributoDestinoSalida)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.AtributoOrigen)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.AtributoOrigenSalida)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.AtributoTraduccion)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.AtributoTraduccionSalida)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.Descripcion)
                .HasMaxLength(50)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.IndDecimal)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.IndEntero)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.IndFormato)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.IndSigno)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.IndTraduccion)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.TablaDestino)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.TablaTraduccion)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.TablaTraduccionSalida)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.TipoDato)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<CcoTDocumentoEmitido>(entity =>
        {
            entity.HasKey(e => e.DocEmiId).HasName("PK_CcoT_DocEmi");

            entity.ToTable("CcoT_DocumentoEmitido");

            entity.HasIndex(e => new { e.TdoId, e.DocEmiFolio, e.DocEmiFecEmision }, "I1_CcoT_DocEmi").IsUnique();

            entity.HasIndex(e => new { e.DocEmiId, e.PSolDocId, e.DocEmiSecuencia, e.PSolDocDetId }, "I2_CcoT_DocEmi").IsUnique();

            entity.Property(e => e.DocEmiId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.DocEmiFecEmision).HasColumnType("datetime");
            entity.Property(e => e.DocEmiMontoDocumento).HasColumnType("money");
            entity.Property(e => e.DocEmiMontoImpuesto).HasColumnType("money");
            entity.Property(e => e.DocEmiPorcentaje).HasColumnType("money");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PFolioDocId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pFolioDocId");
            entity.Property(e => e.PMonedaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMonedaId");
            entity.Property(e => e.PSolDocDetId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pSolDocDetId");
            entity.Property(e => e.PSolDocId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pSolDocId");
        });

        modelBuilder.Entity<CcoTDocumentoHistorium>(entity =>
        {
            entity.HasKey(e => e.DocHisId).HasName("PK_CcoT_DocHis");

            entity.ToTable("CcoT_DocumentoHistoria");

            entity.HasIndex(e => new { e.DocHisId, e.DocHisFecReg, e.PDocCceId, e.MovCceNumCuota, e.PCtaId }, "I1_CcoT_DocHis").IsUnique();

            entity.Property(e => e.DocHisId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.DocCceFecProyectada).HasColumnType("datetime");
            entity.Property(e => e.DocCceFecVenc).HasColumnType("datetime");
            entity.Property(e => e.DocCceNumCedente)
                .HasMaxLength(25)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.DocCceNumDocBanco)
                .HasMaxLength(25)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.DocCceNumPagCedente)
                .HasMaxLength(25)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.DocHisFecReg).HasColumnType("datetime");
            entity.Property(e => e.DocHisGlosa)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PCtaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtaId");
            entity.Property(e => e.PDocCceId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pDocCceId");
            entity.Property(e => e.PDocHisMovId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pDocHisMovId");
            entity.Property(e => e.PEntCcoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntCcoId");
            entity.Property(e => e.PEntIdTer)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntIdTer");
        });

        modelBuilder.Entity<CcoTDocumentoImprimir>(entity =>
        {
            entity.HasKey(e => new { e.PSolDocId, e.DocEmiFolio }).HasName("PK_CcoT_DocImp");

            entity.ToTable("CcoT_DocumentoImprimir");

            entity.Property(e => e.PSolDocId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pSolDocId");
        });

        modelBuilder.Entity<CcoTEmpresaMovtoCuentum>(entity =>
        {
            entity.HasKey(e => new { e.PEmpId, e.TipMovCcoCod }).HasName("PK_CCoT_EmpMovCta");

            entity.ToTable("CcoT_EmpresaMovtoCuenta");

            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PCtaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtaId");
            entity.Property(e => e.PCtaIdAnticipo)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtaIdAnticipo");
            entity.Property(e => e.PCtaIdCobranza)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtaIdCobranza");
            entity.Property(e => e.PCtaIdComision)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtaIdComision");
            entity.Property(e => e.PCtaIdDocCancelado)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtaIdDocCancelado");
            entity.Property(e => e.PCtaIdDocInvalido)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtaIdDocInvalido");
            entity.Property(e => e.PCtaIdEgreso)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtaIdEgreso");
            entity.Property(e => e.PCtaIdGasto)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtaIdGasto");
            entity.Property(e => e.PCtaIdIngreso)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtaIdIngreso");
            entity.Property(e => e.PCtaIdInteres)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtaIdInteres");
            entity.Property(e => e.PCtaIdProtesto)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtaIdProtesto");
            entity.Property(e => e.PCtaIdUbicacion)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtaIdUbicacion");
        });

        modelBuilder.Entity<CcoTEntidadCobModalidad>(entity =>
        {
            entity.HasKey(e => new { e.PEntId, e.EntSucNumero, e.ModCcoCod }).HasName("CcoI_EntidadCobModalidad");

            entity.ToTable("CcoT_EntidadCobModalidad");

            entity.Property(e => e.PEntId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntId");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PCreId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCreId");
            entity.Property(e => e.PCreIdCredito)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCreIdCredito");
            entity.Property(e => e.PCreIdLiq)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCreIdLiq");
            entity.Property(e => e.PCtaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtaId");
            entity.Property(e => e.PCtaIdCredito)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtaIdCredito");
            entity.Property(e => e.PCtaIdLiq)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtaIdLiq");
            entity.Property(e => e.PTprId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTprId");
            entity.Property(e => e.PTprIdCredito)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTprIdCredito");
            entity.Property(e => e.PTprIdLiq)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTprIdLiq");
            entity.Property(e => e.PryNumero)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<CcoTEntidadCobTipoMovto>(entity =>
        {
            entity.HasKey(e => new { e.PEntId, e.EntSucNumero, e.TmcId }).HasName("CcoI_EntidadCobTipoMovto");

            entity.ToTable("CcoT_EntidadCobTipoMovto");

            entity.Property(e => e.PEntId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntId");
            entity.Property(e => e.TmcId)
                .HasMaxLength(5)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PCreId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCreId");
            entity.Property(e => e.PCtaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtaId");
            entity.Property(e => e.PTprId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTprId");
            entity.Property(e => e.PryNumero)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.TmcGlosa)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<CcoTEntidadCobranza>(entity =>
        {
            entity.HasKey(e => e.EntCcoId);

            entity.ToTable("CcoT_EntidadCobranza", tb => tb.HasTrigger("CcoT_EntidadCobranza_Delete"));

            entity.HasIndex(e => new { e.PEntId, e.EntSucNumero }, "I1_CcoT_EntidadCobranza").IsUnique();

            entity.Property(e => e.EntCcoId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EntCcoTituloNomina)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PEntId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntId");
        });

        modelBuilder.Entity<CcoTEntidadMovimiento>(entity =>
        {
            entity.HasKey(e => e.EntMovCcoId);

            entity.ToTable("CcoT_EntidadMovimiento", tb => tb.HasTrigger("CcoT_EntidadMovimiento_Delete"));

            entity.HasIndex(e => new { e.PEntCcoId, e.EntMovCcoInfCod }, "I1_CcoT_EntidadMovimiento").IsUnique();

            entity.Property(e => e.EntMovCcoId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EntMovCcoInfCod)
                .HasMaxLength(10)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EntMovCcoInfGlosa)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PCtaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtaId");
            entity.Property(e => e.PEntCcoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntCcoId");
        });

        modelBuilder.Entity<CcoTEstadosDocumento>(entity =>
        {
            entity.HasKey(e => e.EstDocCod).HasName("CcoI_EstadosDocumentos_I01");

            entity.ToTable("CcoT_EstadosDocumentos");

            entity.Property(e => e.EstDocCod).ValueGeneratedNever();
            entity.Property(e => e.EstDocGlosa)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<CcoTEvento>(entity =>
        {
            entity.HasKey(e => e.EveCcoId);

            entity.ToTable("CcoT_Eventos");

            entity.Property(e => e.EveCcoId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.EveCcoGlosa)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
        });

        modelBuilder.Entity<CcoTFolioDocumento>(entity =>
        {
            entity.HasKey(e => e.FolioDocId).HasName("PK_CcoT_FolioDoctos");

            entity.ToTable("CcoT_FolioDocumentos");

            entity.HasIndex(e => new { e.PEmpId, e.TdoAgrupaCod, e.CorrTalonario }, "I1_CcoT_FolioDoctos").IsUnique();

            entity.Property(e => e.FolioDocId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.FecVigencia).HasColumnType("datetime");
            entity.Property(e => e.FolioDocGlosa)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
        });

        modelBuilder.Entity<CcoTFolioDocumentosNulo>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("CcoT_FolioDocumentosNulos");

            entity.HasIndex(e => new { e.PFolioDocId, e.FolioNulo }, "I1_CcoT_FolioDocNulo").IsUnique();

            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PFolioDocId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pFolioDocId");
        });

        modelBuilder.Entity<CcoTFormatoArchivo>(entity =>
        {
            entity.HasKey(e => e.FrmCcoId).HasName("PK_CcoT_ArchivoFormato");

            entity.ToTable("CcoT_FormatoArchivo");

            entity.HasIndex(e => new { e.PEntCcoId, e.FrmFormato }, "I1_CcoT_ArchivoFormato").IsUnique();

            entity.Property(e => e.FrmCcoId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.FrmFormato)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.FrmSeparador)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PEntCcoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntCcoId");
        });

        modelBuilder.Entity<CcoTFormatoLetPag>(entity =>
        {
            entity.HasKey(e => e.CcoFormatoCod).HasName("CcoI_FormatoLetPag01");

            entity.ToTable("CcoT_FormatoLetPag");

            entity.Property(e => e.CcoFormatoCod).ValueGeneratedNever();
            entity.Property(e => e.CcoFormatoGlosa)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<CcoTGastoProtesto>(entity =>
        {
            entity.HasKey(e => e.GasProId);

            entity.ToTable("CcoT_GastoProtesto");

            entity.HasIndex(e => new { e.PCabOpeId, e.PDocCceId, e.MovCceNumCuota, e.PCtaId }, "I1_CcoT_GastoProtesto").IsUnique();

            entity.Property(e => e.GasProId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PCabOpeId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCabOpeId");
            entity.Property(e => e.PCtaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtaId");
            entity.Property(e => e.PDocCceId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pDocCceId");
            entity.Property(e => e.PMonedaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMonedaId");
        });

        modelBuilder.Entity<CcoTIndicadorMovimiento>(entity =>
        {
            entity.HasKey(e => e.TipMovCcoTipo).HasName("PK_CcoT_IndicadorMovto");

            entity.ToTable("CcoT_IndicadorMovimiento");

            entity.Property(e => e.IndMovCcoGlosa)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<CcoTInstruccionCobranza>(entity =>
        {
            entity.HasKey(e => e.InsCcoCod);

            entity.ToTable("CcoT_InstruccionCobranza");

            entity.Property(e => e.InsCcoGlosa)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<CcoTInterfazEntradum>(entity =>
        {
            entity.HasKey(e => e.IntCcoId).HasName("PK_CcoT_Interfaz");

            entity.ToTable("CcoT_InterfazEntrada");

            entity.HasIndex(e => new { e.IntCcoId, e.PEmpId, e.DivCodigo, e.UniCodigo, e.PFrmCcoId, e.IntCcoNomArchivo, e.IntCcoOwner }, "I1_CcoT_Interfaz").IsUnique();

            entity.Property(e => e.IntCcoId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.CodCtaCteBco)
                .HasMaxLength(15)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.IntCcoDocRef)
                .HasMaxLength(25)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.IntCcoFecProrroga).HasColumnType("datetime");
            entity.Property(e => e.IntCcoFechaCedente).HasColumnType("datetime");
            entity.Property(e => e.IntCcoFechaRecepcion).HasColumnType("datetime");
            entity.Property(e => e.IntCcoFechaVenc).HasColumnType("datetime");
            entity.Property(e => e.IntCcoNomArchivo)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.IntCcoNumDocEntExt)
                .HasMaxLength(25)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.IntCcoNumPagCedente)
                .HasMaxLength(25)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.IntCcoNumeroDoc)
                .HasMaxLength(25)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.IntCcoOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.IntCcoRazonSocial)
                .HasMaxLength(120)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.IntCcoRutAceptante)
                .HasMaxLength(12)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.IntCcoRutCedente)
                .HasMaxLength(12)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.IntCcoRutEntExt)
                .HasMaxLength(12)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.IntCcoTipoMovEntExt)
                .HasMaxLength(10)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PFrmCcoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pFrmCcoId");
            entity.Property(e => e.PMonedaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMonedaId");
        });

        modelBuilder.Entity<CcoTInterfazError>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("CcoT_InterfazError");

            entity.HasIndex(e => new { e.PEmpId, e.DivCodigo, e.UniCodigo, e.PEntCcoId, e.IntCcoNomArchivo, e.IntCcoOwner }, "I1_CcoT_InterfazError").HasFillFactor(90);

            entity.Property(e => e.IntCcoGlosaError).HasColumnType("text");
            entity.Property(e => e.IntCcoNomArchivo)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.IntCcoOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PEntCcoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntCcoId");
            entity.Property(e => e.PIntCcoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pIntCcoId");
            entity.Property(e => e.PRecDocDetId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pRecDocDetId");
        });

        modelBuilder.Entity<CcoTModalidadCobranza>(entity =>
        {
            entity.HasKey(e => e.ModCcoCod);

            entity.ToTable("CcoT_ModalidadCobranza");

            entity.Property(e => e.ModCcoGlosa)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<CcoTNominaCobCab>(entity =>
        {
            entity.HasKey(e => e.CabNomId);

            entity.ToTable("CcoT_NominaCobCab");

            entity.HasIndex(e => new { e.PEmpId, e.TipNomCod, e.PerId, e.CabNomIntNumNomina }, "I1_CcoT_NominaCobCab").IsUnique();

            entity.Property(e => e.CabNomId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.CabNomIntCobrador)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.CabNomIntDigUsuario)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.CabNomIntFecEstado).HasColumnType("datetime");
            entity.Property(e => e.CabNomIntFecNomina).HasColumnType("datetime");
            entity.Property(e => e.CabNomIntFecRendicion).HasColumnType("datetime");
            entity.Property(e => e.CabNomIntOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.CabNomIntRecUsuario)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PCabNomIdOrigen)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCabNomIdOrigen");
            entity.Property(e => e.PCabOpeId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCabOpeId");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PEntIdRecaudador)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntIdRecaudador");
        });

        modelBuilder.Entity<CcoTNominaCobDet>(entity =>
        {
            entity.HasKey(e => e.DetNomIntId);

            entity.ToTable("CcoT_NominaCobDet");

            entity.HasIndex(e => e.PMovCceId, "CcoI_NominaCobDet01");

            entity.Property(e => e.DetNomIntId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PCabNomId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCabNomId");
            entity.Property(e => e.PCabOpeId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCabOpeId");
            entity.Property(e => e.PCtaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtaId");
            entity.Property(e => e.PDocCceId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pDocCceId");
            entity.Property(e => e.PEntRutHolding)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntRutHolding");
            entity.Property(e => e.PMovCceId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMovCceId");
        });

        modelBuilder.Entity<CcoTNominaExtCab>(entity =>
        {
            entity.HasKey(e => e.CabNomExtId);

            entity.ToTable("CcoT_NominaExtCab");

            entity.HasIndex(e => e.CabNomExtOwner, "CcoI_NominaExtCab_I01");

            entity.Property(e => e.CabNomExtId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.CabNomExtFecEstado).HasColumnType("datetime");
            entity.Property(e => e.CabNomExtFecNomina).HasColumnType("datetime");
            entity.Property(e => e.CabNomExtFechaEnvio).HasColumnType("datetime");
            entity.Property(e => e.CabNomExtFechaReversa).HasColumnType("datetime");
            entity.Property(e => e.CabNomExtOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PCabOpeId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCabOpeId");
            entity.Property(e => e.PCabOpeIdReversa)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCabOpeIdReversa");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PEntCcoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntCcoId");
            entity.Property(e => e.PMonedaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMonedaId");
        });

        modelBuilder.Entity<CcoTNominaExtDet>(entity =>
        {
            entity.HasKey(e => e.DetNomExtId);

            entity.ToTable("CcoT_NominaExtDet");

            entity.HasIndex(e => new { e.PCabNomExtId, e.DetNomExtLinea }, "I1_CcoT_NominaExtDet").IsUnique();

            entity.Property(e => e.DetNomExtId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.DetNomExtNomArchivo)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PCabNomExtId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCabNomExtId");
            entity.Property(e => e.PCabOpeId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCabOpeId");
            entity.Property(e => e.PCtaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtaId");
            entity.Property(e => e.PDocCceId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pDocCceId");
            entity.Property(e => e.PEntRutHolding)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntRutHolding");
        });

        modelBuilder.Entity<CcoTNominaIntCab>(entity =>
        {
            entity.HasKey(e => e.CabNomId);

            entity.ToTable("CcoT_NominaIntCab");

            entity.Property(e => e.CabNomId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.CabNomCobrador)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.CabNomFecEstado).HasColumnType("datetime");
            entity.Property(e => e.CabNomFecNomina).HasColumnType("datetime");
            entity.Property(e => e.CabNomOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PEntIdRecaudador)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntIdRecaudador");
        });

        modelBuilder.Entity<CcoTNominaIntDet>(entity =>
        {
            entity.HasKey(e => e.DetNomId);

            entity.ToTable("CcoT_NominaIntDet");

            entity.Property(e => e.DetNomId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PCabNomId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCabNomId");
            entity.Property(e => e.PCabOpeId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCabOpeId");
            entity.Property(e => e.PCtaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtaId");
            entity.Property(e => e.PDocCceId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pDocCceId");
            entity.Property(e => e.PEntRutHolding)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntRutHolding");
        });

        modelBuilder.Entity<CcoTProrrogaCab>(entity =>
        {
            entity.HasKey(e => e.ProrrogaId);

            entity.ToTable("CcoT_ProrrogaCab");

            entity.Property(e => e.ProrrogaId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PCabOpeId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCabOpeId");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PEntId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntId");
            entity.Property(e => e.PTipoOpeId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTipoOpeId");
            entity.Property(e => e.ProCabAprFec).HasColumnType("datetime");
            entity.Property(e => e.ProCabAprUsuario)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.ProCabDigFec).HasColumnType("datetime");
            entity.Property(e => e.ProCabDigUsuario)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.ProCabFecProrroga).HasColumnType("datetime");
            entity.Property(e => e.ProCabGlosaProrroga)
                .HasMaxLength(120)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.ProCabRevFec).HasColumnType("datetime");
            entity.Property(e => e.ProCabRevUsuario)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<CcoTProrrogaDet>(entity =>
        {
            entity.HasKey(e => e.DetProrrogaId);

            entity.ToTable("CcoT_ProrrogaDet");

            entity.HasIndex(e => new { e.PProrrogaId, e.PDocCceId, e.MovCceNumCuota, e.PCtaId }, "I1_CcoT_ProrrogaDet").IsUnique();

            entity.Property(e => e.DetProrrogaId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.DocCceFecProrroga).HasColumnType("datetime");
            entity.Property(e => e.DocCceFecProyectada).HasColumnType("datetime");
            entity.Property(e => e.DocCceFecVenc).HasColumnType("datetime");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PCtaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtaId");
            entity.Property(e => e.PDocCceId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pDocCceId");
            entity.Property(e => e.PProrrogaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pProrrogaId");
        });

        modelBuilder.Entity<CcoTRecepcionDocCab>(entity =>
        {
            entity.HasKey(e => e.RecDocCabId);

            entity.ToTable("CcoT_RecepcionDocCab");

            entity.HasIndex(e => new { e.TipNomCod, e.RecDocCabNumNomina, e.RecDocCabFecNomina }, "I1_CcoT_RecepcionDocCab").IsUnique();

            entity.Property(e => e.RecDocCabId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.CodCtaCteBco)
                .HasMaxLength(15)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PCabOpeId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCabOpeId");
            entity.Property(e => e.PCabOpeIdReversa)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCabOpeIdReversa");
            entity.Property(e => e.PCreId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCreId");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PEntCcoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntCcoId");
            entity.Property(e => e.PLineaProdId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pLineaProdId");
            entity.Property(e => e.PMonedaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMonedaId");
            entity.Property(e => e.PTprId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTprId");
            entity.Property(e => e.PryNumero)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.RecDocCabFecCedente).HasColumnType("datetime");
            entity.Property(e => e.RecDocCabFecEstado).HasColumnType("datetime");
            entity.Property(e => e.RecDocCabFecNomina).HasColumnType("datetime");
            entity.Property(e => e.RecDocCabFechaRecepcion).HasColumnType("datetime");
            entity.Property(e => e.RecDocCabFechaReversa).HasColumnType("datetime");
            entity.Property(e => e.RecDocCabNomArchivo)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.RecDocCabNumCedente)
                .HasMaxLength(25)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.RecDocCabNumContrato)
                .HasMaxLength(25)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.RecDocCabOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<CcoTRecepcionDocDet>(entity =>
        {
            entity.HasKey(e => e.RecDocDetId);

            entity.ToTable("CcoT_RecepcionDocDet");

            entity.HasIndex(e => new { e.PRecDocCabId, e.RecDocDetNumLinea }, "I1_CcoT_RecepcionDocDet").IsUnique();

            entity.Property(e => e.RecDocDetId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PCabNomExtId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCabNomExtId");
            entity.Property(e => e.PCabOpeId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCabOpeId");
            entity.Property(e => e.PCtaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtaId");
            entity.Property(e => e.PDocCceId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pDocCceId");
            entity.Property(e => e.PMonedaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMonedaId");
            entity.Property(e => e.PRecDocCabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pRecDocCabId");
            entity.Property(e => e.RecDocDetDocRef)
                .HasMaxLength(25)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.RecDocDetFecProrroga).HasColumnType("datetime");
            entity.Property(e => e.RecDocDetFechaVenc).HasColumnType("datetime");
            entity.Property(e => e.RecDocDetNumDocEntExt)
                .HasMaxLength(25)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.RecDocDetNumPagCedente)
                .HasMaxLength(25)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.RecDocDetNumeroDoc)
                .HasMaxLength(25)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.RecDocDetRazonSocial)
                .HasMaxLength(120)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.RecDocDetRutAceptante)
                .HasMaxLength(12)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.RecDocDetTipoMovEntExt)
                .HasMaxLength(10)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<CcoTRelDocumento>(entity =>
        {
            entity.HasKey(e => new { e.PEmpId, e.PEntCcoId, e.DocCceNumero });

            entity.ToTable("CcoT_RelDocumento");

            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PEntCcoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntCcoId");
            entity.Property(e => e.DocCceNumero)
                .HasMaxLength(25)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.DocCceNumDocBanco)
                .HasMaxLength(25)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<CcoTRelEntDocumento>(entity =>
        {
            entity.HasKey(e => new { e.PEntCcoId, e.TdoId }).HasName("PK_CcoT_RelEntDocumenot");

            entity.ToTable("CcoT_RelEntDocumento");

            entity.Property(e => e.PEntCcoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntCcoId");
            entity.Property(e => e.RelEntDoc)
                .HasMaxLength(10)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<CcoTRelEntEstado>(entity =>
        {
            entity.HasKey(e => new { e.PEntCcoId, e.EstDocCod });

            entity.ToTable("CcoT_RelEntEstado");

            entity.Property(e => e.PEntCcoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntCcoId");
            entity.Property(e => e.RelEntEst)
                .HasMaxLength(10)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<CcoTRelEntInstruccion>(entity =>
        {
            entity.HasKey(e => new { e.PEntCcoId, e.InsCcoCod });

            entity.ToTable("CcoT_RelEntInstruccion");

            entity.Property(e => e.PEntCcoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntCcoId");
            entity.Property(e => e.RelEntIns)
                .HasMaxLength(10)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<CcoTRelEntModalidad>(entity =>
        {
            entity.HasKey(e => new { e.PEntCcoId, e.ModCcoCod });

            entity.ToTable("CcoT_RelEntModalidad");

            entity.Property(e => e.PEntCcoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntCcoId");
            entity.Property(e => e.RelEntMod)
                .HasMaxLength(10)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<CcoTRelEntMonedum>(entity =>
        {
            entity.HasKey(e => new { e.PEntCcoId, e.PMonedaId });

            entity.ToTable("CcoT_RelEntMoneda");

            entity.Property(e => e.PEntCcoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntCcoId");
            entity.Property(e => e.PMonedaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMonedaId");
            entity.Property(e => e.RelEntMon)
                .HasMaxLength(10)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<CcoTRelEntPlaza>(entity =>
        {
            entity.HasKey(e => new { e.PEntCcoId, e.CmuCodigo });

            entity.ToTable("CcoT_RelEntPlaza");

            entity.Property(e => e.PEntCcoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntCcoId");
            entity.Property(e => e.RelEntCmu)
                .HasMaxLength(10)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.RelEntPla)
                .HasMaxLength(10)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<CcoTRenegociacion>(entity =>
        {
            entity.HasKey(e => e.RenCabId);

            entity.ToTable("CcoT_Renegociacion");

            entity.HasIndex(e => e.RenCabOwner, "CcoI_Renegociacion_I01");

            entity.Property(e => e.RenCabId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PCabOpeId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCabOpeId");
            entity.Property(e => e.PCabOpeIdReversa)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCabOpeIdReversa");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PEntId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntId");
            entity.Property(e => e.PMonedaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMonedaId");
            entity.Property(e => e.PTipoOpeId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTipoOpeId");
            entity.Property(e => e.RenCabFecEstado).HasColumnType("datetime");
            entity.Property(e => e.RenCabFecRenegociacion).HasColumnType("datetime");
            entity.Property(e => e.RenCabFecVenReneg).HasColumnType("datetime");
            entity.Property(e => e.RenCabFechaReversa).HasColumnType("datetime");
            entity.Property(e => e.RenCabOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.RenCabPorcenImpto).HasColumnType("money");
        });

        modelBuilder.Entity<CcoTRenegociacionAbono>(entity =>
        {
            entity.HasKey(e => e.RenAboId).HasName("PK_CcoT_RenegAbono");

            entity.ToTable("CcoT_RenegociacionAbono");

            entity.Property(e => e.RenAboId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.DocCceCtaCteBco)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.DocCceDocRef)
                .HasMaxLength(25)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.DocCceFecEmi).HasColumnType("datetime");
            entity.Property(e => e.DocCceNumero)
                .HasMaxLength(25)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PCreId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCreId");
            entity.Property(e => e.PCtaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtaId");
            entity.Property(e => e.PEntId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntId");
            entity.Property(e => e.PEntIdSec)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntIdSec");
            entity.Property(e => e.PFormaPagoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pFormaPagoId");
            entity.Property(e => e.PLineaProdId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pLineaProdId");
            entity.Property(e => e.PMonedaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMonedaId");
            entity.Property(e => e.PRenCabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pRenCabId");
            entity.Property(e => e.PTprId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTprId");
            entity.Property(e => e.PryNumero)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<CcoTRenegociacionAval>(entity =>
        {
            entity.HasKey(e => e.RenAvalId).HasName("PK_CcoT_RenegAval");

            entity.ToTable("CcoT_RenegociacionAval");

            entity.Property(e => e.RenAvalId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PEntId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntId");
            entity.Property(e => e.PRenCabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pRenCabId");
        });

        modelBuilder.Entity<CcoTRenegociacionCuotum>(entity =>
        {
            entity.HasKey(e => e.RenCuoId);

            entity.ToTable("CcoT_RenegociacionCuota");

            entity.Property(e => e.RenCuoId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.DocCceCtaCteBco)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.DocCceDocRef)
                .HasMaxLength(25)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PCreId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCreId");
            entity.Property(e => e.PCtaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtaId");
            entity.Property(e => e.PEntId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntId");
            entity.Property(e => e.PEntIdSec)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntIdSec");
            entity.Property(e => e.PLineaProdId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pLineaProdId");
            entity.Property(e => e.PRenCabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pRenCabId");
            entity.Property(e => e.PTprId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTprId");
            entity.Property(e => e.PryNumero)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.RenCuoFecVenc).HasColumnType("datetime");
            entity.Property(e => e.RenCuoNumero)
                .HasMaxLength(25)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.RenCuoOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<CcoTRenegociacionDocto>(entity =>
        {
            entity.HasKey(e => e.RenDocId);

            entity.ToTable("CcoT_RenegociacionDocto");

            entity.Property(e => e.RenDocId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PCreId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCreId");
            entity.Property(e => e.PCtaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtaId");
            entity.Property(e => e.PLineaProdId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pLineaProdId");
            entity.Property(e => e.PRenCabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pRenCabId");
            entity.Property(e => e.PTprId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTprId");
            entity.Property(e => e.PryNumero)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.RenDocFecVenc).HasColumnType("datetime");
            entity.Property(e => e.RenDocNumero)
                .HasMaxLength(25)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.RenDocOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<CcoTRenegociacionGasto>(entity =>
        {
            entity.HasKey(e => e.RenGasId).HasName("PK_CcoT_RenegGastos");

            entity.ToTable("CcoT_RenegociacionGastos");

            entity.Property(e => e.RenGasId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.DocCceNumero)
                .HasMaxLength(25)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PCreId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCreId");
            entity.Property(e => e.PLineaProdId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pLineaProdId");
            entity.Property(e => e.PMonedaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMonedaId");
            entity.Property(e => e.PRenCabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pRenCabId");
            entity.Property(e => e.PTipGastoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTipGastoId");
            entity.Property(e => e.PTprId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTprId");
            entity.Property(e => e.PryNumero)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.RenGasMontoImpuDebe).HasColumnType("money");
            entity.Property(e => e.RenGasMontoImpuHaber).HasColumnType("money");
            entity.Property(e => e.RenGasMontoLocalDebe).HasColumnType("money");
            entity.Property(e => e.RenGasMontoLocalHaber).HasColumnType("money");
        });

        modelBuilder.Entity<CcoTReporteNomina>(entity =>
        {
            entity.HasKey(e => e.RepNomCod);

            entity.ToTable("CcoT_ReporteNomina");

            entity.Property(e => e.RepNomGlosa)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.RepNomPlantilla)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<CcoTSituacionCob>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("CcoT_SituacionCob");

            entity.Property(e => e.SitCobGlosa)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<CcoTSolicitudEmiDoc>(entity =>
        {
            entity.HasKey(e => e.SolDocId);

            entity.ToTable("CcoT_SolicitudEmiDoc");

            entity.HasIndex(e => new { e.PEmpId, e.DivCodigo, e.UniCodigo, e.PerId, e.TipNomCod, e.SolDocNumSolicitud }, "I1_CcoT_SolicitudEmiDoc").IsUnique();

            entity.Property(e => e.SolDocId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.DocCceDocRef)
                .HasMaxLength(25)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PCabOpeId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCabOpeId");
            entity.Property(e => e.PCabOpeIdReversa)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCabOpeIdReversa");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PEntId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntId");
            entity.Property(e => e.PEntIdSec)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntIdSec");
            entity.Property(e => e.PMonedaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMonedaId");
            entity.Property(e => e.PRenCabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pRenCabId");
            entity.Property(e => e.PorExento).HasColumnType("money");
            entity.Property(e => e.SolDocFecEstado).HasColumnType("datetime");
            entity.Property(e => e.SolDocFecReversa).HasColumnType("datetime");
            entity.Property(e => e.SolDocFecSolicitud).HasColumnType("datetime");
            entity.Property(e => e.SolDocOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<CcoTSolicitudEmiDocDet>(entity =>
        {
            entity.HasKey(e => e.SolDocDetId).HasName("PK_SolEmiDocDet");

            entity.ToTable("CcoT_SolicitudEmiDocDet");

            entity.HasIndex(e => new { e.PSolDocId, e.SolDocDetSecuencia }, "I1_SolEmiDocDet").HasFillFactor(90);

            entity.Property(e => e.SolDocDetId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PRenCuoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pRenCuoId");
            entity.Property(e => e.PSolDocId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pSolDocId");
            entity.Property(e => e.SolDocDetFecEstado).HasColumnType("datetime");
            entity.Property(e => e.SolDocDetFecVenc).HasColumnType("datetime");
            entity.Property(e => e.SolDocDetMontoDocumento).HasColumnType("money");
        });

        modelBuilder.Entity<CcoTTipoGasto>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("CcoT_TipoGasto");

            entity.Property(e => e.PCtaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtaId");
            entity.Property(e => e.TipGastoGlosa)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.TipGastoId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
        });

        modelBuilder.Entity<CcoTTipoMovimiento>(entity =>
        {
            entity.HasKey(e => e.TipMovCcoCod);

            entity.ToTable("CcoT_TipoMovimiento", tb => tb.HasTrigger("CcoT_TipoMovimiento_Delete"));

            entity.Property(e => e.PCtaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtaId");
            entity.Property(e => e.PCtaIdAnticipo)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtaIdAnticipo");
            entity.Property(e => e.PCtaIdCobranza)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtaIdCobranza");
            entity.Property(e => e.PCtaIdComision)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtaIdComision");
            entity.Property(e => e.PCtaIdDocCancelado)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtaIdDocCancelado");
            entity.Property(e => e.PCtaIdDocInvalido)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtaIdDocInvalido");
            entity.Property(e => e.PCtaIdEgreso)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtaIdEgreso");
            entity.Property(e => e.PCtaIdGasto)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtaIdGasto");
            entity.Property(e => e.PCtaIdIngreso)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtaIdIngreso");
            entity.Property(e => e.PCtaIdInteres)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtaIdInteres");
            entity.Property(e => e.PCtaIdProtesto)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtaIdProtesto");
            entity.Property(e => e.PCtaIdUbicacion)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtaIdUbicacion");
            entity.Property(e => e.TipMovCcoGlosa)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<CcoTTipoNomina>(entity =>
        {
            entity.HasKey(e => e.TipNomCod);

            entity.ToTable("CcoT_TipoNomina");

            entity.Property(e => e.TipNomGlosa)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<CcoTTipoUbicacion>(entity =>
        {
            entity.HasKey(e => e.TipUbiCod);

            entity.ToTable("CcoT_TipoUbicacion");

            entity.Property(e => e.TipUbiGlosa)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.TipUbiInd)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<CcoTUbicacionFisDoc>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("CcoT_UbicacionFisDoc");

            entity.Property(e => e.PDocCceId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pDocCceId");
        });

        modelBuilder.Entity<CcpTBitacora>(entity =>
        {
            entity.HasKey(e => e.BitId).HasName("PK_CcpT_Bitacoras");

            entity.ToTable("CcpT_Bitacora");

            entity.Property(e => e.BitId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.BitFicArchivo)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.BitFicFecha).HasColumnType("datetime");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PEntId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntId");
        });

        modelBuilder.Entity<CcpTBitacoraDet>(entity =>
        {
            entity.HasKey(e => e.BitDetId).HasName("PK_CcpT_BitacorasDet");

            entity.ToTable("CcpT_BitacoraDet");

            entity.Property(e => e.BitDetId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.BitFicGlosaErr).HasColumnType("text");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PBitId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pBitId");

            entity.HasOne(d => d.PBit).WithMany(p => p.CcpTBitacoraDets)
                .HasForeignKey(d => d.PBitId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_CcpT_BitacoraDet");
        });

        modelBuilder.Entity<CcpTCompromiso>(entity =>
        {
            entity.HasKey(e => e.OpeCcpId);

            entity.ToTable("CcpT_Compromisos");

            entity.HasIndex(e => e.OpeCcpOwner, "CcpI_Compromisos_I01");

            entity.HasIndex(e => new { e.PConceptoCcpId, e.PCtoId, e.OpeCcpFechaSol }, "U1_CcpT_Compromisos").IsUnique();

            entity.Property(e => e.OpeCcpId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.CabOpePagFec).HasColumnType("datetime");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.OpeCcpFechaDescto).HasColumnType("datetime");
            entity.Property(e => e.OpeCcpFechaSol).HasColumnType("datetime");
            entity.Property(e => e.OpeCcpMontoSolicitado).HasColumnType("money");
            entity.Property(e => e.OpeCcpOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.OpeCcpPeriodoDesde).HasColumnType("datetime");
            entity.Property(e => e.OpeCcpPeriodoHasta).HasColumnType("datetime");
            entity.Property(e => e.PConceptoCcpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pConceptoCcpId");
            entity.Property(e => e.PCreId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCreId");
            entity.Property(e => e.PCtoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtoId");
            entity.Property(e => e.PCtoSecId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtoSecId");
            entity.Property(e => e.PCtoTerId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtoTerId");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PMonedaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMonedaId");

            entity.HasOne(d => d.PConceptoCcp).WithMany(p => p.CcpTCompromisos)
                .HasForeignKey(d => d.PConceptoCcpId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_CcpT_Compromisos");

            entity.HasOne(d => d.PCto).WithMany(p => p.CcpTCompromisos)
                .HasForeignKey(d => d.PCtoId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK1_CcpT_Compromisoso");
        });

        modelBuilder.Entity<CcpTCompromisosResp>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("CcpT_CompromisosRESP");

            entity.Property(e => e.CabOpePagFec).HasColumnType("datetime");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.OpeCcpFechaDescto).HasColumnType("datetime");
            entity.Property(e => e.OpeCcpFechaSol).HasColumnType("datetime");
            entity.Property(e => e.OpeCcpId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.OpeCcpMontoSolicitado).HasColumnType("money");
            entity.Property(e => e.OpeCcpOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.OpeCcpPeriodoDesde).HasColumnType("datetime");
            entity.Property(e => e.OpeCcpPeriodoHasta).HasColumnType("datetime");
            entity.Property(e => e.PConceptoCcpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pConceptoCcpId");
            entity.Property(e => e.PCreId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCreId");
            entity.Property(e => e.PCtoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtoId");
            entity.Property(e => e.PCtoSecId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtoSecId");
            entity.Property(e => e.PCtoTerId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtoTerId");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PMonedaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMonedaId");
        });

        modelBuilder.Entity<CcpTConcepGasComp>(entity =>
        {
            entity.HasKey(e => e.CcpGasComId).HasName("PK_CcpT_ConcepGasCom");

            entity.ToTable("CcpT_ConcepGasComp");

            entity.HasIndex(e => new { e.PConceptoGastoId, e.TdoId, e.PTipoOpeId }, "U1_CcpT_ConcepGasCom").IsUnique();

            entity.Property(e => e.CcpGasComId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PConceptoGastoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pConceptoGastoId");
            entity.Property(e => e.PTipoOpeId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTipoOpeId");

            entity.HasOne(d => d.PConceptoGasto).WithMany(p => p.CcpTConcepGasComps)
                .HasForeignKey(d => d.PConceptoGastoId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_CcpT_ConcepGasCom");
        });

        modelBuilder.Entity<CcpTConceptosCcp>(entity =>
        {
            entity.HasKey(e => e.ConceptoCcpId);

            entity.ToTable("CcpT_ConceptosCcp");

            entity.HasIndex(e => new { e.PEmpId, e.ConCcpCod, e.ConCcpFecVigencia }, "U1_CcpT_ConceptosCcp").IsUnique();

            entity.Property(e => e.ConceptoCcpId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.ConCcpCod).HasColumnName("ConCCpCod");
            entity.Property(e => e.ConCcpFecVigencia)
                .HasColumnType("datetime")
                .HasColumnName("ConCCpFecVigencia");
            entity.Property(e => e.ConCcpGlosa)
                .HasMaxLength(40)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.ConCcpReaInt)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PCreId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCreId");
            entity.Property(e => e.PCreIntId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCreIntId");
            entity.Property(e => e.PCtaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtaId");
            entity.Property(e => e.PCtaIntId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtaIntId");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PMonedaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMonedaId");
            entity.Property(e => e.PTipoOpeId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTipoOpeId");
            entity.Property(e => e.PTprId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTprId");
            entity.Property(e => e.PTprIntId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTprIntId");
            entity.Property(e => e.PryNumero)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PryNumeroInt)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();

            entity.HasOne(d => d.PEmp).WithMany(p => p.CcpTConceptosCcps)
                .HasForeignKey(d => d.PEmpId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_CcpT_ConceptosCCP");

            entity.HasOne(d => d.PMoneda).WithMany(p => p.CcpTConceptosCcps)
                .HasForeignKey(d => d.PMonedaId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK1_CcpT_ConceptosCCP");
        });

        modelBuilder.Entity<CcpTConceptosCcpSdo>(entity =>
        {
            entity.HasKey(e => e.ConceptoCcpSdoId);

            entity.ToTable("CcpT_ConceptosCcpSdo");

            entity.HasIndex(e => new { e.PConceptoCcpId, e.PProcRemId, e.PConcRemId }, "U1_CcpT_ConceptosCcpSdo").IsUnique();

            entity.Property(e => e.ConceptoCcpSdoId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PConcRemId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pConcRemId");
            entity.Property(e => e.PConceptoCcpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pConceptoCcpId");
            entity.Property(e => e.PProcConcId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pProcConcId");
            entity.Property(e => e.PProcRemId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pProcRemId");

            entity.HasOne(d => d.PConcRem).WithMany(p => p.CcpTConceptosCcpSdos)
                .HasForeignKey(d => d.PConcRemId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_CcpT_SdoRemFormulas");

            entity.HasOne(d => d.PConceptoCcp).WithMany(p => p.CcpTConceptosCcpSdos)
                .HasForeignKey(d => d.PConceptoCcpId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_CcpT_SdoCtaConceptos");

            entity.HasOne(d => d.PProcRem).WithMany(p => p.CcpTConceptosCcpSdos)
                .HasForeignKey(d => d.PProcRemId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_CcpT_SdoRemProcesos");
        });

        modelBuilder.Entity<CcpTConceptosGasto>(entity =>
        {
            entity.HasKey(e => e.ConceptoGastoId);

            entity.ToTable("CcpT_ConceptosGastos");

            entity.HasIndex(e => new { e.PEmpId, e.ConCcpCodGasto }, "U1_CcpT_ConceptosGastos").IsUnique();

            entity.Property(e => e.ConceptoGastoId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.ConCcpGloGasto)
                .HasMaxLength(40)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PCdiId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCdiId");
            entity.Property(e => e.PCtaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtaId");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");

            entity.HasOne(d => d.PEmp).WithMany(p => p.CcpTConceptosGastos)
                .HasForeignKey(d => d.PEmpId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_CcpT_ConceptosGastos");
        });

        modelBuilder.Entity<CcpTCtasEmpresa>(entity =>
        {
            entity.HasKey(e => new { e.PEmpId, e.ProNegocioCod });

            entity.ToTable("CcpT_CtasEmpresas");

            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PCreId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCreId");
            entity.Property(e => e.PCtaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtaId");
            entity.Property(e => e.PTprId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTprId");
            entity.Property(e => e.PryNumero)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<CcpTMovimiento>(entity =>
        {
            entity.HasKey(e => e.DetCcpId);

            entity.ToTable("CcpT_Movimientos");

            entity.HasIndex(e => new { e.SisCodOri, e.DetCcpId }, "CcpI_Movimientos_I01");

            entity.HasIndex(e => new { e.PCabOpeId, e.SisCodOri }, "CcpI_Movimientos_I02");

            entity.HasIndex(e => new { e.POpeCcpId, e.DetCcpNroLinea, e.DetCcpNroCuota }, "U1_CcpT_Movimientos").IsUnique();

            entity.Property(e => e.DetCcpId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.CabOpePagFec).HasColumnType("datetime");
            entity.Property(e => e.DetCcpFechaVenc).HasColumnType("datetime");
            entity.Property(e => e.DetCcpGlosa)
                .HasMaxLength(255)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.DetCcpOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EntSucCodCtaCteBco)
                .HasMaxLength(15)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.IndGenCuota)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.MovCcpConFecha).HasColumnType("datetime");
            entity.Property(e => e.PCabCompId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCabCompId");
            entity.Property(e => e.PCabOpeId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCabOpeId");
            entity.Property(e => e.PCabOpeIdOri)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCabOpeIdOri");
            entity.Property(e => e.PCabOpeIntId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCabOpeIntId");
            entity.Property(e => e.PConceptoGastoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pConceptoGastoId");
            entity.Property(e => e.PCreId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCreId");
            entity.Property(e => e.PCtaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtaId");
            entity.Property(e => e.PDetCompId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pDetCompId");
            entity.Property(e => e.PDetReferenciaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pDetReferenciaId");
            entity.Property(e => e.PDocFisId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pDocFisId");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PEmpIdDestino)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpIdDestino");
            entity.Property(e => e.PEntIdPago)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntIdPago");
            entity.Property(e => e.PFormaPagoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pFormaPagoId");
            entity.Property(e => e.PLiqId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pLiqId");
            entity.Property(e => e.PMonedaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMonedaId");
            entity.Property(e => e.PMovTesId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMovTesId");
            entity.Property(e => e.POpeCcpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pOpeCcpId");
            entity.Property(e => e.PPartidaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pPartidaId");
            entity.Property(e => e.PProcRemPerId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pProcRemPerId");
            entity.Property(e => e.PTprId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTprId");
            entity.Property(e => e.PryNumero)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();

            entity.HasOne(d => d.PConceptoGasto).WithMany(p => p.CcpTMovimientos)
                .HasForeignKey(d => d.PConceptoGastoId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK1_CcpT_Movimientos");

            entity.HasOne(d => d.POpeCcp).WithMany(p => p.CcpTMovimientos)
                .HasForeignKey(d => d.POpeCcpId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_CcpT_Movimientos");
        });

        modelBuilder.Entity<CcpTMovimientosResp>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("CcpT_MovimientosRESP");

            entity.Property(e => e.CabOpePagFec).HasColumnType("datetime");
            entity.Property(e => e.DetCcpFechaVenc).HasColumnType("datetime");
            entity.Property(e => e.DetCcpGlosa)
                .HasMaxLength(255)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.DetCcpId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.DetCcpOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.MovCcpConFecha).HasColumnType("datetime");
            entity.Property(e => e.PCabCompId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCabCompId");
            entity.Property(e => e.PCabOpeId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCabOpeId");
            entity.Property(e => e.PCabOpeIdOri)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCabOpeIdOri");
            entity.Property(e => e.PCabOpeIntId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCabOpeIntId");
            entity.Property(e => e.PConceptoGastoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pConceptoGastoId");
            entity.Property(e => e.PCreId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCreId");
            entity.Property(e => e.PCtaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtaId");
            entity.Property(e => e.PDetCompId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pDetCompId");
            entity.Property(e => e.PDetReferenciaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pDetReferenciaId");
            entity.Property(e => e.PDocFisId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pDocFisId");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PEmpIdDestino)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpIdDestino");
            entity.Property(e => e.PEntIdPago)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntIdPago");
            entity.Property(e => e.PFormaPagoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pFormaPagoId");
            entity.Property(e => e.PMonedaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMonedaId");
            entity.Property(e => e.PMovTesId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMovTesId");
            entity.Property(e => e.POpeCcpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pOpeCcpId");
            entity.Property(e => e.PPartidaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pPartidaId");
            entity.Property(e => e.PTprId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTprId");
            entity.Property(e => e.PryNumero)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<CcpTMovtosGto>(entity =>
        {
            entity.HasKey(e => e.PDetCcpId);

            entity.ToTable("CcpT_MovtosGtos");

            entity.Property(e => e.PDetCcpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pDetCcpId");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.LlgDocMtoImpuExento).HasColumnType("money");
            entity.Property(e => e.LlgDocMtoImpuIva).HasColumnType("money");
            entity.Property(e => e.LlgDocMtoImpuNeto).HasColumnType("money");
            entity.Property(e => e.LlgDocMtoImpuRete).HasColumnType("money");
            entity.Property(e => e.LlgDocMtoImpuTotal).HasColumnType("money");
            entity.Property(e => e.LlgDocNumDoc)
                .HasMaxLength(25)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PCabLlgId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCabLlgId");
            entity.Property(e => e.PEntId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntId");

            entity.HasOne(d => d.PDetCcp).WithOne(p => p.CcpTMovtosGto)
                .HasForeignKey<CcpTMovtosGto>(d => d.PDetCcpId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK1_CcpT_MovtosGtos");

            entity.HasOne(d => d.PEnt).WithMany(p => p.CcpTMovtosGtos)
                .HasForeignKey(d => d.PEntId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK2_CcpT_MovtosGtos");
        });

        modelBuilder.Entity<CcpTParametro>(entity =>
        {
            entity.HasKey(e => new { e.CcpTipoParam, e.CcpCodParam });

            entity.ToTable("CcpT_Parametros");

            entity.Property(e => e.CcpGloParam)
                .HasMaxLength(40)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
        });

        modelBuilder.Entity<CcpTTmpCompromiso>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("CcpT_TmpCompromisos");

            entity.Property(e => e.FldUserCode)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("fld_UserCode");
            entity.Property(e => e.OpeCcpFechaDescto).HasColumnType("datetime");
            entity.Property(e => e.OpeCcpFechaSol).HasColumnType("datetime");
            entity.Property(e => e.OpeCcpMontoSolicitado).HasColumnType("money");
            entity.Property(e => e.OpeCcpPeriodoDesde).HasColumnType("datetime");
            entity.Property(e => e.OpeCcpPeriodoHasta).HasColumnType("datetime");
            entity.Property(e => e.OwnerUser)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PConceptoCcpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pConceptoCcpId");
            entity.Property(e => e.PCreId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCreId");
            entity.Property(e => e.PCtoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtoId");
            entity.Property(e => e.PCtoSecId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtoSecId");
            entity.Property(e => e.PCtoTerId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtoTerId");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PMonedaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMonedaId");
            entity.Property(e => e.POpeCcpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pOpeCcpId");
            entity.Property(e => e.PPartidaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pPartidaId");
            entity.Property(e => e.PTprId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTprId");
            entity.Property(e => e.PryNumero)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<CcpTTmpCuota>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("CcpT_TmpCuotas");

            entity.Property(e => e.DetCcpFechaVenc).HasColumnType("datetime");
            entity.Property(e => e.DetCcpGlosa)
                .HasMaxLength(255)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.DetCcpId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PCabCompId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCabCompId");
            entity.Property(e => e.PCabOpeId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCabOpeId");
            entity.Property(e => e.PCtaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtaId");
            entity.Property(e => e.PDetCompId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pDetCompId");
            entity.Property(e => e.PDocFisId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pDocFisId");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PEmpIdDestino)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpIdDestino");
            entity.Property(e => e.PEntIdPago)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntIdPago");
            entity.Property(e => e.PFormaPagoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pFormaPagoId");
            entity.Property(e => e.PMovTesId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMovTesId");
            entity.Property(e => e.POpeCcpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pOpeCcpId");
            entity.Property(e => e.PPartidaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pPartidaId");
        });

        modelBuilder.Entity<CcpTTmpPagEspecial>(entity =>
        {
            entity.HasKey(e => new { e.CodOwner, e.POpeCcpId }).HasName("CcpI_TmpPagEspecial");

            entity.ToTable("CcpT_TmpPagEspecial");

            entity.Property(e => e.CodOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.POpeCcpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pOpeCcpId");
        });

        modelBuilder.Entity<ClausulaCompra>(entity =>
        {
            entity.HasKey(e => e.ClausulaId).HasName("ClausulaCompra_PK");

            entity.ToTable("ClausulaCompra");

            entity.Property(e => e.ClausulaId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.ClausulaDes)
                .HasMaxLength(50)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.ClausulaPorcCif).HasColumnName("ClausulaPorcCIF");
            entity.Property(e => e.ClausulaPorcFob).HasColumnName("ClausulaPorcFOB");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.FechaVigencia).HasColumnType("datetime");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
        });

        modelBuilder.Entity<ConTAgruTipoCuentum>(entity =>
        {
            entity.HasKey(e => e.TctId).HasName("ConI_AgruTipoCuenta01");

            entity.ToTable("ConT_AgruTipoCuenta", tb =>
                {
                    tb.HasTrigger("ConT_AgruTipoCuenta_Trigger2");
                    tb.HasTrigger("ConT_AgrupaTipoCuenta_Trigger1");
                });

            entity.Property(e => e.TctGlosa)
                .HasMaxLength(40)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<ConTAuditaSaldo>(entity =>
        {
            entity.HasKey(e => e.AuditaSaldoCod).HasName("ConI_AuditaSaldo_PK");

            entity.ToTable("ConT_AuditaSaldo");

            entity.Property(e => e.AuditaSaldoCod).ValueGeneratedNever();
            entity.Property(e => e.AuditaSaldoGlosa)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.AuditaSaldoSigno)
                .HasMaxLength(2)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<ConTCabeceraCom>(entity =>
        {
            entity.HasKey(e => e.CabCompId).HasName("ConI_CabeceraCom_PK");

            entity.ToTable("ConT_CabeceraCom");

            entity.HasIndex(e => new { e.PEmpId, e.DivCodigo, e.UniCodigo, e.PerId, e.TcoId, e.ComNumero }, "ConI_CabeceraCom_I01").IsUnique();

            entity.HasIndex(e => new { e.PEmpId, e.DivCodigo, e.UniCodigo, e.SisCodOri, e.ComFecha }, "ConI_CabeceraCom_I02").HasFillFactor(90);

            entity.Property(e => e.CabCompId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.ActFecha).HasColumnType("datetime");
            entity.Property(e => e.ActUsuario)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.AprFecha).HasColumnType("datetime");
            entity.Property(e => e.AprUsuario)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.ComFecha).HasColumnType("datetime");
            entity.Property(e => e.ComFechaReversa).HasColumnType("datetime");
            entity.Property(e => e.ComGlosa)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.ComIdReversa).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.ComOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.DigFecha).HasColumnType("datetime");
            entity.Property(e => e.DigUsuario)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PTipoOpeId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTipoOpeId");

            entity.HasOne(d => d.DivCodigoNavigation).WithMany(p => p.ConTCabeceraComs)
                .HasForeignKey(d => d.DivCodigo)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_CabComDivCodigo");

            entity.HasOne(d => d.PEmp).WithMany(p => p.ConTCabeceraComs)
                .HasForeignKey(d => d.PEmpId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_CabComEmpId");

            entity.HasOne(d => d.UniCodigoNavigation).WithMany(p => p.ConTCabeceraComs)
                .HasForeignKey(d => d.UniCodigo)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_CabComUniCodigo");
        });

        modelBuilder.Entity<ConTCabeceraOpe>(entity =>
        {
            entity.HasKey(e => e.CabOpeId).HasName("ConI_CabeceraOpe_PK");

            entity.ToTable("ConT_CabeceraOpe");

            entity.HasIndex(e => new { e.PEmpId, e.DivCodigo, e.UniCodigo, e.PerId, e.PTipoOpeId, e.CabOpeNumero }, "ConI_CabeceraOpe_I01").IsUnique();

            entity.HasIndex(e => e.PCabCompId, "ConI_CabeceraOpe_I02").HasFillFactor(90);

            entity.HasIndex(e => e.CabOpeOwner, "ConI_CabeceraOpe_I03").HasFillFactor(90);

            entity.HasIndex(e => e.ConEstCod, "ConI_CabeceraOpe_I04").HasFillFactor(90);

            entity.HasIndex(e => new { e.SisCodOri, e.PEmpId, e.ConEstCod, e.CabOpeFecha }, "ConI_CabeceraOpe_I05").HasFillFactor(90);

            entity.HasIndex(e => new { e.CabOpeFecha, e.CabOpeId }, "ConI_CabeceraOpe_I06");

            entity.HasIndex(e => new { e.PCabOpeIdReversa, e.CabOpeId }, "ConI_CabeceraOpe_I07");

            entity.HasIndex(e => new { e.PCabReferenciaId, e.CabOpeId }, "ConI_CabeceraOpe_I08");

            entity.HasIndex(e => new { e.ConEstCod, e.CabOpeId }, "ConI_CabeceraOpe_I09");

            entity.Property(e => e.CabOpeId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.CabOpeActFec).HasColumnType("datetime");
            entity.Property(e => e.CabOpeActUsuario)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.CabOpeAprFec).HasColumnType("datetime");
            entity.Property(e => e.CabOpeAprUsuario)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.CabOpeDigFec).HasColumnType("datetime");
            entity.Property(e => e.CabOpeDigUsuario)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.CabOpeFecReversa).HasColumnType("datetime");
            entity.Property(e => e.CabOpeFecha).HasColumnType("datetime");
            entity.Property(e => e.CabOpeGlosa)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.CabOpeOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PCabCompId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCabCompId");
            entity.Property(e => e.PCabOpeIdReversa)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCabOpeIdReversa");
            entity.Property(e => e.PCabReferenciaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCabReferenciaId");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PEntId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntId");
            entity.Property(e => e.PMonedaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMonedaId");
            entity.Property(e => e.PTipoOpeId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTipoOpeId");

            entity.HasOne(d => d.DivCodigoNavigation).WithMany(p => p.ConTCabeceraOpes)
                .HasForeignKey(d => d.DivCodigo)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_CABOPEDivCodigo");

            entity.HasOne(d => d.PEmp).WithMany(p => p.ConTCabeceraOpes)
                .HasForeignKey(d => d.PEmpId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_CabOpepEmpId");

            entity.HasOne(d => d.PTipoOpe).WithMany(p => p.ConTCabeceraOpes)
                .HasForeignKey(d => d.PTipoOpeId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_CabOpeTipoOpeId");

            entity.HasOne(d => d.UniCodigoNavigation).WithMany(p => p.ConTCabeceraOpes)
                .HasForeignKey(d => d.UniCodigo)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_CabOpeUniCodigo");
        });

        modelBuilder.Entity<ConTCentrosResp>(entity =>
        {
            entity.HasKey(e => e.CreId).HasName("ConI_CentrosResp_I01");

            entity.ToTable("ConT_CentrosResp", tb =>
                {
                    tb.HasTrigger("ConT_CentrosResp_InsUpd");
                    tb.HasTrigger("ConT_CentrosRespv7_Delete");
                    tb.HasTrigger("ConT_CentrosRespv7_Insert");
                    tb.HasTrigger("ConT_CentrosRespv7_Update");
                    tb.HasTrigger("Fin700v7_v7_ConT_CentrosResp_Delete");
                });

            entity.HasIndex(e => e.CreCodigo, "ConI_CentrosResp_I02").IsUnique();

            entity.HasIndex(e => new { e.CreId, e.CreNombre, e.CreCodigo }, "ConT_CentrosResp_idx010");

            entity.Property(e => e.CreId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.CreDescUsoCresp)
                .HasMaxLength(255)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("CreDescUsoCResp");
            entity.Property(e => e.CreFecVigencia).HasColumnType("datetime");
            entity.Property(e => e.CreNombre)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.CreRhuEus).HasColumnName("CreRhuEUS");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PEntId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntId");
        });

        modelBuilder.Entity<ConTCierreApertura>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("ConT_CierreApertura");

            entity.Property(e => e.PCabCompIdApe)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCabCompIdApe");
            entity.Property(e => e.PCabCompIdCie)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCabCompIdCie");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
        });

        modelBuilder.Entity<ConTClasificaCentro>(entity =>
        {
            entity.HasKey(e => new { e.PPdcId, e.ClaCtaNivel1, e.ClaCtaNivel2, e.ClaCtaNivel3, e.ClaCtaNivel4, e.ClaCtaNivel5, e.ClaCtaNivel6, e.ClaCtaNivel7, e.PCreId }).HasName("ConI_ClasiificaCentros_I01");

            entity.ToTable("ConT_ClasificaCentros", tb =>
                {
                    tb.HasTrigger("ConT_ClasificaCentrosv7_Delete");
                    tb.HasTrigger("ConT_ClasificaCentrosv7_Insert");
                    tb.HasTrigger("ConT_ClasificaCentrosv7_Update");
                });

            entity.HasIndex(e => e.ClaIdentity, "ConI_ClasiificaCentros_I02").IsUnique();

            entity.Property(e => e.PPdcId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pPdcId");
            entity.Property(e => e.PCreId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCreId");
            entity.Property(e => e.ClaCreRespCodigo)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.ClaCreRespNombre)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.ClaCtaNodoNombre)
                .HasMaxLength(40)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.ClaIdentity)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
        });

        modelBuilder.Entity<ConTClasificaConcepto>(entity =>
        {
            entity.HasKey(e => new { e.PPdcId, e.ClaCtaNivel1, e.ClaCtaNivel2, e.ClaCtaNivel3, e.ClaCtaNivel4, e.ClaCtaNivel5, e.ClaCtaNivel6, e.ClaCtaNivel7, e.PCdiId }).HasName("ConI_ClasificaConceptos_I01");

            entity.ToTable("ConT_ClasificaConceptos");

            entity.HasIndex(e => new { e.PPdcId, e.ClaCtaNodoNivel, e.PCdiId }, "ConI_ClasificaConceptos_I02").HasFillFactor(90);

            entity.HasIndex(e => e.ClaIdentity, "ConI_ClasificaConceptos_I03").IsUnique();

            entity.Property(e => e.PPdcId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pPdcId");
            entity.Property(e => e.PCdiId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCdiId");
            entity.Property(e => e.ClaCtaNodoNombre)
                .HasMaxLength(40)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.ClaIdentity)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
        });

        modelBuilder.Entity<ConTClasificaCuenta>(entity =>
        {
            entity.HasKey(e => new { e.PPdcId, e.ClaCtaNivel1, e.ClaCtaNivel2, e.ClaCtaNivel3, e.ClaCtaNivel4, e.ClaCtaNivel5, e.ClaCtaNivel6, e.ClaCtaNivel7, e.PCtaId }).HasName("ConI_ClasificaCuentas_I01");

            entity.ToTable("ConT_ClasificaCuentas", tb =>
                {
                    tb.HasTrigger("ConT_ClasificaCuentasv7_Delete");
                    tb.HasTrigger("ConT_ClasificaCuentasv7_Insert");
                    tb.HasTrigger("ConT_ClasificaCuentasv7_Update");
                });

            entity.HasIndex(e => new { e.PPdcId, e.ClaCtaNodoNivel, e.ClaCtaNodoCodigoAlt }, "ConI_ClasificaCuentas_I02").HasFillFactor(90);

            entity.HasIndex(e => new { e.PCtaId, e.PPdcId }, "ConI_ClasificaCuentas_I03").HasFillFactor(90);

            entity.Property(e => e.PPdcId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pPdcId");
            entity.Property(e => e.PCtaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtaId");
            entity.Property(e => e.ClaCtaNodoNombre)
                .HasMaxLength(40)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<ConTClasificaProyecto>(entity =>
        {
            entity.HasKey(e => new { e.PPdcId, e.ClaCtaNivel1, e.ClaCtaNivel2, e.ClaCtaNivel3, e.ClaCtaNivel4, e.ClaCtaNivel5, e.ClaCtaNivel6, e.ClaCtaNivel7, e.PTprId, e.PryNumero }).HasName("ConI_ClasificaProyectos_I01");

            entity.ToTable("ConT_ClasificaProyectos", tb => tb.HasTrigger("ConT_ClasificaProyectos_Insert"));

            entity.HasIndex(e => new { e.PPdcId, e.ClaCtaNodoNivel, e.ClaCtaNodoCodigoAlt }, "ConI_ClasificaProyectos_I02").HasFillFactor(90);

            entity.HasIndex(e => new { e.PTprId, e.PryNumero, e.PPdcId }, "ConI_ClasificaProyectos_I03").HasFillFactor(90);

            entity.Property(e => e.PPdcId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pPdcId");
            entity.Property(e => e.PTprId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTprId");
            entity.Property(e => e.PryNumero)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.ClaCtaNodoNombre)
                .HasMaxLength(40)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.ClaIdentity)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.DescripcionAltA)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.DescripcionAltb)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.NPryIdentity).HasColumnName("nPryIdentity");
        });

        modelBuilder.Entity<ConTConceptosImp>(entity =>
        {
            entity.HasKey(e => e.CdiId).HasName("ConI_ConceptosImp_PK");

            entity.ToTable("ConT_ConceptosImp", tb => tb.HasTrigger("Fin700v7_v7_ConT_ConceptosImp_Delete"));

            entity.HasIndex(e => e.CdiCodigo, "ConI_ConceptosImp_I01").IsUnique();

            entity.Property(e => e.CdiId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.CdiFecVigencia).HasColumnType("datetime");
            entity.Property(e => e.CdiGlosa)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
        });

        modelBuilder.Entity<ConTConfiguracion>(entity =>
        {
            entity.HasKey(e => new { e.PEmpId, e.EjeAno, e.SisCodOri }).HasName("ConI_Configuracion_PK");

            entity.ToTable("ConT_Configuracion", tb => tb.HasTrigger("ConT_Configuracion_Update"));

            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.CfgConCuentaContDif).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.CfgConCuentaConvDif).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.CfgConFechaMaximaImp).HasColumnType("datetime");
            entity.Property(e => e.CfgConFechaMinimaImp).HasColumnType("datetime");
            entity.Property(e => e.CfgCtaIdInter).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.CfgCtaIdInterFlujo).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.CfgGlosaConv)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.CfgPathArchivoCheques)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.CfgTipoOpeIdIntDiv).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.MonCodigoConv).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.PMonedaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMonedaId");
            entity.Property(e => e.PPciId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pPciId");
        });

        modelBuilder.Entity<ConTConfiguracionAudi>(entity =>
        {
            entity.HasKey(e => e.ConConfigAuid).HasName("ConI_ConfigAuid_PK");

            entity.ToTable("ConT_ConfiguracionAudi");

            entity.Property(e => e.ConConfigAuid)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.CfgConCuentaContDif).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.CfgConCuentaConvDif).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.CfgConFechaMaximaImp).HasColumnType("datetime");
            entity.Property(e => e.CfgConFechaMinimaImp).HasColumnType("datetime");
            entity.Property(e => e.CfgCtaIdInter).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.CfgCtaIdInterFlujo).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.CfgGlosaConv)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.CfgPathArchivoCheques)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.CfgTipoOpeIdIntDiv).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EntAudAccion)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EntAudFechaMod).HasColumnType("datetime");
            entity.Property(e => e.EntAudUsuario)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.MonCodigoConv).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PMonedaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMonedaId");
            entity.Property(e => e.PPciId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pPciId");
        });

        modelBuilder.Entity<ConTCorrPeriodo>(entity =>
        {
            entity.HasKey(e => new { e.PCorId, e.DivCodigo, e.PerId }).HasName("ConI_CorrPeriodos_PK");

            entity.ToTable("ConT_CorrPeriodos", tb => tb.HasTrigger("ConT_CorrPeriodos_Delete"));

            entity.Property(e => e.PCorId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCorId");
        });

        modelBuilder.Entity<ConTCorreccionMon>(entity =>
        {
            entity.HasKey(e => new { e.EjeAno, e.PEmpId, e.DivCodigo, e.UniCodigo }).HasName("ConT_Correccion01");

            entity.ToTable("ConT_CorreccionMon");

            entity.Property(e => e.PEmpId).HasColumnName("pEmpId");
            entity.Property(e => e.FechaCorrMon).HasColumnType("datetime");
        });

        modelBuilder.Entity<ConTCorreccionMonAux>(entity =>
        {
            entity.HasKey(e => new { e.EjeAno, e.PEmpId, e.DivCodigo, e.UniCodigo }).HasName("ConI_CorreccionMonAux01");

            entity.ToTable("ConT_CorreccionMonAux");

            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.FechaCorrMon).HasColumnType("datetime");
            entity.Property(e => e.PCabOpeId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCabOpeId");
        });

        modelBuilder.Entity<ConTCorrelativo>(entity =>
        {
            entity.HasKey(e => e.CorId).HasName("ConI_Correlativos_PK");

            entity.ToTable("ConT_Correlativos");

            entity.HasIndex(e => new { e.CorTipo, e.PEmpId, e.CorCodigo }, "ConI_Correlativos_I01").IsUnique();

            entity.Property(e => e.CorId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.CorGlosa)
                .HasMaxLength(40)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
        });

        modelBuilder.Entity<ConTCtaTipoEscenario>(entity =>
        {
            entity.HasKey(e => new { e.PCtaId, e.EscenarioCod }).HasName("ConI_CtaTipoEscenario01");

            entity.ToTable("ConT_CtaTipoEscenario");

            entity.Property(e => e.PCtaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtaId");
            entity.Property(e => e.PCtaIdEsc)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtaIdEsc");
        });

        modelBuilder.Entity<ConTCuenta>(entity =>
        {
            entity.HasKey(e => e.CtaId).HasName("ConI_Cuentas_PK");

            entity.ToTable("ConT_Cuentas", tb =>
                {
                    tb.HasTrigger("ConT_Cuentas_Delete");
                    tb.HasTrigger("ConT_Cuentas_Update");
                    tb.HasTrigger("ConT_Cuentasv7_Delete");
                    tb.HasTrigger("ConT_Cuentasv7_Insert");
                    tb.HasTrigger("ConT_Cuentasv7_Update");
                    tb.HasTrigger("Fin700v7_v7_ConT_Cuentas_Delete");
                });

            entity.Property(e => e.CtaId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.CtaCtaMayor).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.CtaDescUsoCta)
                .HasMaxLength(255)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.CtaFechaMaxImpu).HasColumnType("datetime");
            entity.Property(e => e.CtaFlujoDebe).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.CtaFlujoHaber).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.CtaNombre)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.CtaPresupuesto).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
        });

        modelBuilder.Entity<ConTCuentasEmpresa>(entity =>
        {
            entity.HasKey(e => new { e.PEmpId, e.PCtaId }).HasName("ConI_CuentasEmpresa_I02");

            entity.ToTable("ConT_CuentasEmpresa");

            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PCtaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtaId");
        });

        modelBuilder.Entity<ConTCuentasMoneda>(entity =>
        {
            entity.HasKey(e => new { e.PCtaId, e.PMonedaId }).HasName("ConI_CuentasMonedas_I01");

            entity.ToTable("ConT_CuentasMonedas", tb =>
                {
                    tb.HasTrigger("ConT_CuentasMonedas_Insert");
                    tb.HasTrigger("ConT_CuentasMonedas_Update");
                });

            entity.Property(e => e.PCtaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtaId");
            entity.Property(e => e.PMonedaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMonedaId");
            entity.Property(e => e.CreCodigoCtaAcum).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.CreCodigoCtaResul).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.CtaMonCcuentaCorMon)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("CtaMonCCuentaCorMon");
            entity.Property(e => e.CtaMonCuentaCorMon).HasColumnType("numeric(9, 0)");
        });

        modelBuilder.Entity<ConTDetalleCom>(entity =>
        {
            entity.HasKey(e => e.DetCompId).HasName("ConI_DetalleComp_I01");

            entity.ToTable("ConT_DetalleCom", tb =>
                {
                    tb.HasTrigger("ConT_DetalleCom_Delete");
                    tb.HasTrigger("Fin700Net_Trigger_ConT_DetalleCom");
                });

            entity.HasIndex(e => new { e.PCabCompId, e.DetCompId, e.ComLinea }, "ConI_DetalleComp_I02").IsUnique();

            entity.HasIndex(e => new { e.PMonedaId, e.PCreId, e.PCtaId, e.PCabCompId, e.MovCceMontoImpuDebe, e.MovCceMontoImpuHaber, e.MovCceMontoLocalDebe, e.MovCceMontoLocalHaber }, "ConT_DetalleCom_idx030");

            entity.Property(e => e.DetCompId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.ComGlosa)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PCabCompId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCabCompId");
            entity.Property(e => e.PCreId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCreId");
            entity.Property(e => e.PCtaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtaId");
            entity.Property(e => e.PMonedaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMonedaId");
        });

        modelBuilder.Entity<ConTDetalleDesglose>(entity =>
        {
            entity.HasKey(e => e.DetDesId).HasName("ConI_DetalleDesglose_PK");

            entity.ToTable("ConT_DetalleDesglose");

            entity.HasIndex(e => new { e.PEmpId, e.DivCodigo, e.UniCodigo, e.PerId, e.EjeAno, e.PCtaId, e.PMonedaId, e.DetDesLinea }, "ConI_DetalleDesglose_I01").IsUnique();

            entity.Property(e => e.DetDesId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.DetDesActFec).HasColumnType("datetime");
            entity.Property(e => e.DetDesActUsuario)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.DetDesArchivo)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.DetDesCalFecha).HasColumnType("datetime");
            entity.Property(e => e.DetDesCodigo)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.DetDesDescripcion)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.DetDesDigFec).HasColumnType("datetime");
            entity.Property(e => e.DetDesDigUsuario)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.DetDesFecVenc).HasColumnType("datetime");
            entity.Property(e => e.DetDesGlosa)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.DetDesNumero)
                .HasMaxLength(25)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PCtaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtaId");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PMonedaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMonedaId");
        });

        modelBuilder.Entity<ConTDiferenciaDesglose>(entity =>
        {
            entity.HasKey(e => e.DifDesId).HasName("ConI_DifDesglose_PK");

            entity.ToTable("ConT_DiferenciaDesglose");

            entity.HasIndex(e => new { e.PEmpId, e.DivCodigo, e.UniCodigo, e.PerId, e.EjeAno, e.PCtaId, e.PMonedaId, e.DifDesOwner }, "ConI_DifDeaglose_I01").HasFillFactor(90);

            entity.Property(e => e.DifDesId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.DifDesOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PCtaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtaId");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PMonedaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMonedaId");
        });

        modelBuilder.Entity<ConTEstado>(entity =>
        {
            entity.HasKey(e => new { e.ConEstCod, e.ConEstTipoEstado }).HasName("ConI_Estados_PK");

            entity.ToTable("ConT_Estados", tb =>
                {
                    tb.HasTrigger("ConT_Estados_Delete");
                    tb.HasTrigger("ConT_Estados_Update");
                });

            entity.Property(e => e.ConEstTipoEstado)
                .HasMaxLength(4)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.ConEstGlosa)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.ConEstGlosaCorta)
                .HasMaxLength(4)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<ConTFechaControl>(entity =>
        {
            entity.HasKey(e => new { e.PEmpId, e.EjeAno, e.SisCodOri, e.FechaControlId }).HasName("ConI_FechaControl_PK");

            entity.ToTable("ConT_FechaControl");

            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.FechaControlId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.CfgConFechaMaximaImp).HasColumnType("datetime");
            entity.Property(e => e.CfgConFechaMinimaImp).HasColumnType("datetime");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
        });

        modelBuilder.Entity<ConTGloTipicaImp>(entity =>
        {
            entity.HasKey(e => e.GtiId).HasName("ConI_GloTipicaImp_I01");

            entity.ToTable("ConT_GloTipicaImp");

            entity.Property(e => e.GtiId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.GtiGlosa)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<ConTGloTipicaOpe>(entity =>
        {
            entity.HasKey(e => e.GtoId).HasName("ConI_GloTipicaOpe_I01");

            entity.ToTable("ConT_GloTipicaOpe");

            entity.Property(e => e.GtoId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.GtoGlosa)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<ConTLineaProducto>(entity =>
        {
            entity.HasKey(e => e.LineaProdId).HasName("ConI_LineaProducto_I01");

            entity.ToTable("ConT_LineaProducto");

            entity.Property(e => e.LineaProdId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.LineaProdCodigo)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.LineaProdFechaVig).HasColumnType("datetime");
            entity.Property(e => e.LineaProdGlosa)
                .HasMaxLength(40)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<ConTMovimiento>(entity =>
        {
            entity.HasKey(e => e.MovConId).HasName("ConI_Movimientos_PK");

            entity.ToTable("ConT_Movimientos");

            entity.HasIndex(e => new { e.PEmpId, e.DivCodigo, e.PCtaId, e.PMonedaId, e.PEntId, e.EntSucNumero, e.PEntIdSec, e.EntSucNumeroSec, e.TdoId, e.MovConNumero, e.MovConNumCuota }, "ConI_Movimientos_I01").HasFillFactor(90);

            entity.HasIndex(e => new { e.PCabOpeId, e.CabOpeLinea }, "ConI_Movimientos_I02").HasFillFactor(90);

            entity.HasIndex(e => new { e.PCabCompId, e.PDetCompId, e.MovConGlosa }, "ConI_Movimientos_I03");

            entity.HasIndex(e => e.MovConOwner, "ConI_Movimientos_I04").HasFillFactor(90);

            entity.HasIndex(e => new { e.PCabOpeIdOri, e.SisCodOri }, "ConI_Movimientos_I05").HasFillFactor(90);

            entity.HasIndex(e => new { e.PCabOpeId, e.SisCodOri }, "ConI_Movimientos_I07").HasFillFactor(90);

            entity.HasIndex(e => new { e.MovIdRelEscenario, e.MarcaComplemento }, "ConT_Movimientos_idx011");

            entity.HasIndex(e => new { e.PEmpId, e.DivCodigo, e.MovConConNumero, e.PCtaId, e.MovConId }, "ConT_Movimientos_idx030");

            entity.HasIndex(e => new { e.PerId, e.MovConCalFecha, e.PEmpId, e.DivCodigo, e.PCtaId, e.PMonedaId, e.PEntId, e.EntSucNumero, e.PEntIdSec, e.EntSucNumeroSec, e.TdoId, e.MovConNumero, e.MovConNumCuota }, "ConT_Movimientos_idx031");

            entity.HasIndex(e => new { e.MovConCalFecha, e.PEmpId, e.DivCodigo, e.PCtaId, e.PMonedaId, e.PEntId, e.EntSucNumero, e.PEntIdSec, e.EntSucNumeroSec, e.TdoId, e.MovConNumero, e.MovConNumCuota }, "ConT_Movimientos_idx033");

            entity.Property(e => e.MovConId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.MovConCalFecha).HasColumnType("datetime");
            entity.Property(e => e.MovConConFecha).HasColumnType("datetime");
            entity.Property(e => e.MovConDocRef)
                .HasMaxLength(25)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.MovConFecEstado).HasColumnType("datetime");
            entity.Property(e => e.MovConFecProyectada).HasColumnType("datetime");
            entity.Property(e => e.MovConFecVenc).HasColumnType("datetime");
            entity.Property(e => e.MovConGlosa)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.MovConNumero)
                .HasMaxLength(25)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.MovConOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PCabCompId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCabCompId");
            entity.Property(e => e.PCabOpeId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCabOpeId");
            entity.Property(e => e.PCabOpeIdOri)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCabOpeIdOri");
            entity.Property(e => e.PCreId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCreId");
            entity.Property(e => e.PCtaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtaId");
            entity.Property(e => e.PDetCompId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pDetCompId");
            entity.Property(e => e.PDetReferenciaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pDetReferenciaId");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PEmpIdDestino)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpIdDestino");
            entity.Property(e => e.PEntId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntId");
            entity.Property(e => e.PEntIdPago)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntIdPago");
            entity.Property(e => e.PEntIdSec)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntIdSec");
            entity.Property(e => e.PEntIdTer)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntIdTer");
            entity.Property(e => e.PLineaProdId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pLineaProdId");
            entity.Property(e => e.PMonedaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMonedaId");
            entity.Property(e => e.PPartidaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pPartidaId");
            entity.Property(e => e.PTprId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTprId");
            entity.Property(e => e.PryNumero)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();

            entity.HasOne(d => d.DivCodigoNavigation).WithMany(p => p.ConTMovimientos)
                .HasForeignKey(d => d.DivCodigo)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_ConMovDivCodigo");

            entity.HasOne(d => d.PCta).WithMany(p => p.ConTMovimientos)
                .HasForeignKey(d => d.PCtaId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_ConMovCtaId");

            entity.HasOne(d => d.PEmp).WithMany(p => p.ConTMovimientos)
                .HasForeignKey(d => d.PEmpId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_ConMovpEmpId");

            entity.HasOne(d => d.PMoneda).WithMany(p => p.ConTMovimientos)
                .HasForeignKey(d => d.PMonedaId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_ConMovMonedaId");

            entity.HasOne(d => d.UniCodigoNavigation).WithMany(p => p.ConTMovimientos)
                .HasForeignKey(d => d.UniCodigo)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_ConMovUniCodigo");
        });

        modelBuilder.Entity<ConTNumerosConc>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("ConT_NumerosConc", tb => tb.HasTrigger("ConT_NumerosConc_Delete"));

            entity.Property(e => e.NcoFechaVigencia).HasColumnType("datetime");
            entity.Property(e => e.NcoNombreVariable)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<ConTPlanCentro>(entity =>
        {
            entity.HasKey(e => e.PdcId).HasName("ConI_PlanCentros_I01");

            entity.ToTable("ConT_PlanCentros");

            entity.Property(e => e.PdcId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.PdcNomNivel1)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PdcNomNivel2)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PdcNomNivel3)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PdcNomNivel4)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PdcNomNivel5)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PdcNomNivel6)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PdcNomNivel7)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PdcNomPlan)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PdcOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<ConTPlanConcepto>(entity =>
        {
            entity.HasKey(e => e.PdcId).HasName("ConI_PlanConceptos_I01");

            entity.ToTable("ConT_PlanConceptos");

            entity.Property(e => e.PdcId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.PdcNomNivel1)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PdcNomNivel2)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PdcNomNivel3)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PdcNomNivel4)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PdcNomNivel5)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PdcNomNivel6)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PdcNomNivel7)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PdcNomPlan)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PdcOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<ConTPlanCuenta>(entity =>
        {
            entity.HasKey(e => e.PdcId).HasName("ConI_PlanCuentas_I01");

            entity.ToTable("ConT_PlanCuentas");

            entity.Property(e => e.PdcId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.PdcFechaAsig).HasColumnType("datetime");
            entity.Property(e => e.PdcNomNivel1)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PdcNomNivel2)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PdcNomNivel3)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PdcNomNivel4)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PdcNomNivel5)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PdcNomNivel6)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PdcNomNivel7)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PdcNomPlan)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PdcOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PdcUserCode)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<ConTPlanProyecto>(entity =>
        {
            entity.HasKey(e => e.PdcId).HasName("ConI_PlanProyectos_I01");

            entity.ToTable("ConT_PlanProyectos");

            entity.Property(e => e.PdcId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.PdcNomNivel1)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PdcNomNivel2)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PdcNomNivel3)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PdcNomNivel4)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PdcNomNivel5)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PdcNomNivel6)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PdcNomNivel7)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PdcNomPlan)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PdcOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<ConTPlanProyectos2>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("ConT_PlanProyectos2");

            entity.Property(e => e.PdcId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.PdcNomNivel1)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PdcNomNivel2)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PdcNomNivel3)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PdcNomNivel4)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PdcNomNivel5)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PdcNomNivel6)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PdcNomNivel7)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PdcNomPlan)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PdcOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<ConTSaldo>(entity =>
        {
            entity.HasKey(e => new { e.PEmpId, e.DivCodigo, e.PCtaId, e.PCreId, e.PMonedaId, e.PerId }).HasName("ConI_Saldos_PK");

            entity.ToTable("ConT_Saldos");

            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PCtaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtaId");
            entity.Property(e => e.PCreId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCreId");
            entity.Property(e => e.PMonedaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMonedaId");
        });

        modelBuilder.Entity<ConTTipoAuxiliar>(entity =>
        {
            entity.HasKey(e => e.TauId).HasName("ConI_TipoAuxiliar_PK");

            entity.ToTable("ConT_TipoAuxiliar", tb => tb.HasTrigger("ConT_TipoAuxiliar_Delete"));

            entity.Property(e => e.TauGlosa)
                .HasMaxLength(40)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<ConTTipoClasificaCuentum>(entity =>
        {
            entity.HasKey(e => e.TccId).HasName("ConI_TipoClasifica_PK");

            entity.ToTable("ConT_TipoClasificaCuenta");

            entity.Property(e => e.TccGlosa)
                .HasMaxLength(40)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<ConTTipoComprobante>(entity =>
        {
            entity.HasKey(e => new { e.PEmpId, e.TcoId }).HasName("ConI_TipoComprobante_PK");

            entity.ToTable("ConT_TipoComprobante");

            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PCorId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCorId");
            entity.Property(e => e.TcoFecVigencia).HasColumnType("datetime");
            entity.Property(e => e.TcoGlosa)
                .HasMaxLength(40)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.TcoGlosaCorta)
                .HasMaxLength(10)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<ConTTipoCuentum>(entity =>
        {
            entity.HasKey(e => e.TctId).HasName("ConI_TipoCuenta_PK");

            entity.ToTable("ConT_TipoCuenta", tb => tb.HasTrigger("ConT_TipoCuenta_Delete"));

            entity.Property(e => e.TctGlosa)
                .HasMaxLength(40)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<ConTTipoOperacion>(entity =>
        {
            entity.HasKey(e => e.TipoOpeId).HasName("ConI_TipoOperacion_PK");

            entity.ToTable("ConT_TipoOperacion");

            entity.HasIndex(e => new { e.PEmpId, e.OpeCod }, "ConI_TipoOperacion_I01").IsUnique();

            entity.HasIndex(e => new { e.OpeCod, e.TipoOpeId }, "ConI_TipoOperacion_I02");

            entity.Property(e => e.TipoOpeId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.OpeFecVigencia).HasColumnType("datetime");
            entity.Property(e => e.OpeGlosa)
                .HasMaxLength(40)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PCorId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCorId");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
        });

        modelBuilder.Entity<ConTTipoOperacionAux>(entity =>
        {
            entity.HasKey(e => e.TipoOpeAuxId).HasName("ConI_TipoOperacionAux_PK");

            entity.ToTable("ConT_TipoOperacionAux");

            entity.HasIndex(e => new { e.PTipoOpeId, e.TauId }, "ConI_TipoOperacionAux_I01").IsUnique();

            entity.Property(e => e.TipoOpeAuxId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PTipoOpeId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTipoOpeId");
        });

        modelBuilder.Entity<ConTTipoOperacionCtum>(entity =>
        {
            entity.HasKey(e => e.TipoOpeCtaId).HasName("ConI_TipoOperacionCta_PK");

            entity.ToTable("ConT_TipoOperacionCta");

            entity.HasIndex(e => new { e.PTipoOpeAuxId, e.PCtaId, e.PCtaCteBcoId }, "ConI_TipoOperacionCta_I01").IsUnique();

            entity.Property(e => e.TipoOpeCtaId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PCtaCteBcoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtaCteBcoId");
            entity.Property(e => e.PCtaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtaId");
            entity.Property(e => e.PTipoOpeAuxId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTipoOpeAuxId");
        });

        modelBuilder.Entity<ConTTipoOperacionEsq>(entity =>
        {
            entity.HasKey(e => e.TipoOpeEsqId).HasName("ConI_TipoOperacionEsq_PK");

            entity.ToTable("ConT_TipoOperacionEsq");

            entity.HasIndex(e => new { e.PTipoOpeId, e.OpeEsqLinea }, "ConI_TipoOperacionEsq_I01").IsUnique();

            entity.Property(e => e.TipoOpeEsqId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PCreId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCreId");
            entity.Property(e => e.PCtaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtaId");
            entity.Property(e => e.PGtoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pGtoId");
            entity.Property(e => e.PLineaProdId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pLineaProdId");
            entity.Property(e => e.PTipoOpeId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTipoOpeId");
            entity.Property(e => e.PTprId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTprId");
            entity.Property(e => e.PryNumero)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<ConVDetalleMov>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("ConV_DetalleMov");

            entity.Property(e => e.MovGlosa)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PCreId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCreId");
            entity.Property(e => e.PCtaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtaId");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PEntId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntId");
            entity.Property(e => e.PTprId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTprId");
            entity.Property(e => e.PryNumero)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<ConVPresMultimonedum>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("ConV_PresMultimoneda");

            entity.Property(e => e.IdCimp)
                .HasMaxLength(10)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("idCImp");
            entity.Property(e => e.IdCuentaPres)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("idCuentaPres");
            entity.Property(e => e.IdDivision)
                .HasMaxLength(10)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("idDivision");
            entity.Property(e => e.IdEmpresa).HasColumnName("idEmpresa");
            entity.Property(e => e.IdMoneda)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("idMoneda");
            entity.Property(e => e.IdPeriodo).HasColumnName("idPeriodo");
            entity.Property(e => e.IdPpto).HasColumnName("idPpto");
            entity.Property(e => e.IdProyecto)
                .HasMaxLength(10)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("idProyecto");
            entity.Property(e => e.IdTipoDocto).HasColumnName("idTipoDocto");
            entity.Property(e => e.IdUnidadAdm)
                .HasMaxLength(10)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("idUnidadAdm");
            entity.Property(e => e.SaldoPres).HasColumnType("money");
            entity.Property(e => e.SaldoPresProy).HasColumnType("money");
        });

        modelBuilder.Entity<ConVRealPresCfg>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("ConV_RealPresCfg");

            entity.Property(e => e.IdCentro).HasColumnName("idCentro");
            entity.Property(e => e.IdCimp)
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("idCImp");
            entity.Property(e => e.IdCuenta)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("idCuenta");
            entity.Property(e => e.IdDivision).HasColumnName("idDivision");
            entity.Property(e => e.IdEmpresa).HasColumnName("idEmpresa");
            entity.Property(e => e.IdMoneda)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("idMoneda");
            entity.Property(e => e.IdNivel).HasColumnName("idNivel");
            entity.Property(e => e.IdPeriodo).HasColumnName("idPeriodo");
            entity.Property(e => e.IdPpto).HasColumnName("idPpto");
            entity.Property(e => e.IdProyecto)
                .HasMaxLength(13)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("idProyecto");
            entity.Property(e => e.IdTipoDocto).HasColumnName("idTipoDocto");
            entity.Property(e => e.IdUnidadAdm)
                .HasMaxLength(10)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("idUnidadAdm");
            entity.Property(e => e.Origen)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.SaldoPres).HasColumnType("money");
            entity.Property(e => e.SaldoPresProy).HasColumnType("money");
            entity.Property(e => e.SaldoReal).HasColumnType("money");
        });

        modelBuilder.Entity<ContCabeceracom20170327>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("cont_cabeceracom_20170327");

            entity.Property(e => e.ActFecha).HasColumnType("datetime");
            entity.Property(e => e.ActUsuario)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.AprFecha).HasColumnType("datetime");
            entity.Property(e => e.AprUsuario)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.CabCompId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.ComFecha).HasColumnType("datetime");
            entity.Property(e => e.ComFechaReversa).HasColumnType("datetime");
            entity.Property(e => e.ComGlosa)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.ComIdReversa).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.ComOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.DigFecha).HasColumnType("datetime");
            entity.Property(e => e.DigUsuario)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PTipoOpeId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTipoOpeId");
        });

        modelBuilder.Entity<ContCabeceraope20170327>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("cont_cabeceraope_20170327");

            entity.Property(e => e.CabOpeActFec).HasColumnType("datetime");
            entity.Property(e => e.CabOpeActUsuario)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.CabOpeAprFec).HasColumnType("datetime");
            entity.Property(e => e.CabOpeAprUsuario)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.CabOpeDigFec).HasColumnType("datetime");
            entity.Property(e => e.CabOpeDigUsuario)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.CabOpeFecReversa).HasColumnType("datetime");
            entity.Property(e => e.CabOpeFecha).HasColumnType("datetime");
            entity.Property(e => e.CabOpeGlosa)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.CabOpeId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.CabOpeOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PCabCompId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCabCompId");
            entity.Property(e => e.PCabOpeIdReversa)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCabOpeIdReversa");
            entity.Property(e => e.PCabReferenciaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCabReferenciaId");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PEntId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntId");
            entity.Property(e => e.PMonedaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMonedaId");
            entity.Property(e => e.PTipoOpeId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTipoOpeId");
        });

        modelBuilder.Entity<ContCorrperiodos20161215>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("cont_corrperiodos_20161215");

            entity.Property(e => e.PCorId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCorId");
        });

        modelBuilder.Entity<ContCorrperiodos20170410>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("cont_corrperiodos_20170410");

            entity.Property(e => e.PCorId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCorId");
        });

        modelBuilder.Entity<DlgTAsociaDivUniVentaCompra>(entity =>
        {
            entity.HasKey(e => new { e.PEmpId, e.PEmpIdCompra, e.AduTipoAsocia, e.AduCodigoOrigen, e.AduCodigoDestino }).HasName("Pk_DlgT_AsociaDivUniVentaCompra");

            entity.ToTable("DlgT_AsociaDivUniVentaCompra");

            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PEmpIdCompra)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpIdCompra");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
        });

        modelBuilder.Entity<DlgTAsociaDivisionContable>(entity =>
        {
            entity.HasKey(e => new { e.PEmpId, e.DivCodigoOrigen }).HasName("Pk_DlgT_AsociaDivisionContable");

            entity.ToTable("DlgT_AsociaDivisionContable");

            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
        });

        modelBuilder.Entity<DlgTAsociaOpeVentaCompra>(entity =>
        {
            entity.HasKey(e => new { e.PEmpId, e.PTipoOpeId, e.PEmpIdCompra }).HasName("Pk_DlgT_AsociaOpeVentaCompra");

            entity.ToTable("DlgT_AsociaOpeVentaCompra");

            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PTipoOpeId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTipoOpeId");
            entity.Property(e => e.PEmpIdCompra)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpIdCompra");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PTipoOpeIdCompra)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTipoOpeIdCompra");
        });

        modelBuilder.Entity<DlgTBitacoraDte>(entity =>
        {
            entity.HasKey(e => e.BdtId).HasName("pk_DlgT_BitacoraDTE");

            entity.ToTable("DlgT_BitacoraDTE");

            entity.Property(e => e.BdtId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.BdtDescripcion)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.BdtFecha).HasColumnType("datetime");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuario)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario");
            entity.Property(e => e.PDoctoLegalCabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pDoctoLegalCabId");
        });

        modelBuilder.Entity<DlgTBitacoraDteRecepcion>(entity =>
        {
            entity.HasKey(e => e.RecepcionDetId);

            entity.ToTable("DlgT_BitacoraDteRecepcion");

            entity.HasIndex(e => new { e.PEmpId, e.RecDetRutEmisor, e.TdoSii, e.DlcFolioDocto }, "IC_DlgT_BitacoraDteRecepcion");

            entity.Property(e => e.RecepcionDetId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.Email)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("EMail");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PRecepcionCabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pRecepcionCabId");
            entity.Property(e => e.RecDetError)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.RecDetFechaRecepcion).HasColumnType("datetime");
            entity.Property(e => e.RecDetRutEmisor)
                .HasMaxLength(12)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.RecDetRutReceptor)
                .HasMaxLength(12)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.RecDetXml).HasColumnType("text");
            entity.Property(e => e.RecFechaEmision).HasColumnType("datetime");
            entity.Property(e => e.RecNombreArchivo)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.TipoXmlDte).HasColumnName("TipoXmlDTE");
        });

        modelBuilder.Entity<DlgTBitacoraDtecompra>(entity =>
        {
            entity.HasKey(e => e.BdtId);

            entity.ToTable("DlgT_BitacoraDTECompras");

            entity.Property(e => e.BdtId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.BdtDescripcion)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.BdtFecha).HasColumnType("datetime");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuario)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario");
            entity.Property(e => e.PLlgDocId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pLlgDocId");
            entity.Property(e => e.PRecepcionDetId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pRecepcionDetId");
            entity.Property(e => e.PReglaRecepCabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pReglaRecepCabId");
        });

        modelBuilder.Entity<DlgTCambioSujetoCab>(entity =>
        {
            entity.HasKey(e => e.CambioSujetoCabId).HasName("Pk_DlgT_CambioSujetoCab");

            entity.ToTable("DlgT_CambioSujetoCab");

            entity.Property(e => e.CambioSujetoCabId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.CodOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.CscReferenciaDocto)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.DvcFecOrdenC).HasColumnType("datetime");
            entity.Property(e => e.DvcNumOrdenC)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.FechaParidad).HasColumnType("datetime");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PCdiId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCdiId");
            entity.Property(e => e.PCreId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCreId");
            entity.Property(e => e.PDoctoLegalCabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pDoctoLegalCabId");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PEntId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntId");
            entity.Property(e => e.PEntSucId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntSucId");
            entity.Property(e => e.PMonedaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMonedaId");
            entity.Property(e => e.PNegocioVtaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pNegocioVtaId");
            entity.Property(e => e.PTipoOpeId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTipoOpeId");
            entity.Property(e => e.PTprId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTprId");
            entity.Property(e => e.PVendedorId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pVendedorId");
            entity.Property(e => e.PryNumero)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<DlgTCambioSujetoDet>(entity =>
        {
            entity.HasKey(e => e.CambioSujetoDetId).HasName("Pk_DlgT_CambioSujetoDet");

            entity.ToTable("DlgT_CambioSujetoDet");

            entity.Property(e => e.CambioSujetoDetId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.DocCceNumero)
                .HasMaxLength(25)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PCambioSujetoCabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCambioSujetoCabId");
            entity.Property(e => e.PCdiId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCdiId");
            entity.Property(e => e.PCreId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCreId");
            entity.Property(e => e.PDoctoLegalDetId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pDoctoLegalDetId");
            entity.Property(e => e.PMonedaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMonedaId");
            entity.Property(e => e.PProductoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pProductoId");
            entity.Property(e => e.PTprId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTprId");
            entity.Property(e => e.PUnidadMedId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pUnidadMedId");
            entity.Property(e => e.PryNumero)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<DlgTCambioSujetoDetGlo>(entity =>
        {
            entity.HasKey(e => new { e.PCambioSujetoDetId, e.DlgLinea }).HasName("Pk_CambioSujetoDetGlo");

            entity.ToTable("DlgT_CambioSujetoDetGlo");

            entity.HasIndex(e => e.PCambioSujetoCabId, "Idx_DlgT_CambioSujetoDetGlo").HasFillFactor(90);

            entity.Property(e => e.PCambioSujetoDetId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCambioSujetoDetId");
            entity.Property(e => e.DlgGlosaItem)
                .HasMaxLength(90)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.PCambioSujetoCabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCambioSujetoCabId");
        });

        modelBuilder.Entity<DlgTCertificacion>(entity =>
        {
            entity.HasKey(e => e.PDoctoLegalCabId).HasName("Pk_DlgT_Certificacion");

            entity.ToTable("DlgT_Certificacion");

            entity.Property(e => e.PDoctoLegalCabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pDoctoLegalCabId");
            entity.Property(e => e.CertCaso)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.DlcFecDocto).HasColumnType("datetime");
        });

        modelBuilder.Entity<DlgTCesion>(entity =>
        {
            entity.HasKey(e => e.CesionId);

            entity.ToTable("DlgT_Cesion");

            entity.Property(e => e.CesionId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.CesError)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.CesFecFirma).HasColumnType("datetime");
            entity.Property(e => e.CesFecha).HasColumnType("datetime");
            entity.Property(e => e.CesFechaDespacho).HasColumnType("datetime");
            entity.Property(e => e.CesFechaEnvioSii)
                .HasColumnType("datetime")
                .HasColumnName("CesFechaEnvioSII");
            entity.Property(e => e.CesMailCesionario)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.CesMailDeudor)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.CesOtrasCondiciones).HasColumnType("text");
            entity.Property(e => e.CesStatusSii).HasColumnName("CesStatusSII");
            entity.Property(e => e.CesTrackId)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.CesXml)
                .HasColumnType("text")
                .HasColumnName("CesXML");
            entity.Property(e => e.CodOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PDoctoLegalCabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pDoctoLegalCabId");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PEntIdCesionario)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntIdCesionario");
            entity.Property(e => e.PEntIdFirma)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntIdFirma");
            entity.Property(e => e.PEntSucIdCesionario)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntSucIdCesionario");
        });

        modelBuilder.Entity<DlgTCesion20170531>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("DlgT_Cesion_20170531");

            entity.Property(e => e.CesError)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.CesFecFirma).HasColumnType("datetime");
            entity.Property(e => e.CesFecha).HasColumnType("datetime");
            entity.Property(e => e.CesFechaDespacho).HasColumnType("datetime");
            entity.Property(e => e.CesFechaEnvioSii)
                .HasColumnType("datetime")
                .HasColumnName("CesFechaEnvioSII");
            entity.Property(e => e.CesMailCesionario)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.CesMailDeudor)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.CesOtrasCondiciones).HasColumnType("text");
            entity.Property(e => e.CesStatusSii).HasColumnName("CesStatusSII");
            entity.Property(e => e.CesXml)
                .HasColumnType("text")
                .HasColumnName("CesXML");
            entity.Property(e => e.CesionId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.CodOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PDoctoLegalCabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pDoctoLegalCabId");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PEntIdCesionario)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntIdCesionario");
            entity.Property(e => e.PEntIdFirma)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntIdFirma");
            entity.Property(e => e.PEntSucIdCesionario)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntSucIdCesionario");
        });

        modelBuilder.Entity<DlgTCesion20170616>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("DlgT_Cesion_20170616");

            entity.Property(e => e.CesError)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.CesFecFirma).HasColumnType("datetime");
            entity.Property(e => e.CesFecha).HasColumnType("datetime");
            entity.Property(e => e.CesFechaDespacho).HasColumnType("datetime");
            entity.Property(e => e.CesFechaEnvioSii)
                .HasColumnType("datetime")
                .HasColumnName("CesFechaEnvioSII");
            entity.Property(e => e.CesMailCesionario)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.CesMailDeudor)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.CesOtrasCondiciones).HasColumnType("text");
            entity.Property(e => e.CesStatusSii).HasColumnName("CesStatusSII");
            entity.Property(e => e.CesTrackId)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.CesXml)
                .HasColumnType("text")
                .HasColumnName("CesXML");
            entity.Property(e => e.CesionId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.CodOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PDoctoLegalCabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pDoctoLegalCabId");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PEntIdCesionario)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntIdCesionario");
            entity.Property(e => e.PEntIdFirma)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntIdFirma");
            entity.Property(e => e.PEntSucIdCesionario)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntSucIdCesionario");
        });

        modelBuilder.Entity<DlgTConfiguracion>(entity =>
        {
            entity.HasKey(e => new { e.PEmpId, e.EjeAno }).HasName("Pk_DlgT_Configuracion");

            entity.ToTable("DlgT_Configuracion");

            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.CfgDlgSeparaUemisora).HasColumnName("CfgDlgSeparaUEmisora");
            entity.Property(e => e.CfgDlgSeparador)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.CfgDlgpCtaAnticipoId).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.CfgDlgpProdClasId).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.CfgDlgpTipoOpeGuiaId).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.CfgDlgpTipoOpeOtroId).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
        });

        modelBuilder.Entity<DlgTDoctoLegalCab>(entity =>
        {
            entity.HasKey(e => e.DoctoLegalCabId).HasName("Pk_DlgT_DoctoLegalCab");

            entity.ToTable("DlgT_DoctoLegalCab");

            entity.HasIndex(e => new { e.PEmpId, e.TdoId, e.DlcFolioDocto }, "Idx_DlgT_FolioDocto").HasFillFactor(90);

            entity.Property(e => e.DoctoLegalCabId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.CodOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.DlcFecAutoriza)
                .HasMaxLength(80)
                .IsUnicode(false);
            entity.Property(e => e.DlcFecDocto).HasColumnType("datetime");
            entity.Property(e => e.DlcFecParidad).HasColumnType("datetime");
            entity.Property(e => e.DlcFecVecto).HasColumnType("datetime");
            entity.Property(e => e.DlcNroAutoriza)
                .HasMaxLength(40)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.DvcFecOrdenC).HasColumnType("datetime");
            entity.Property(e => e.DvcNumOrdenC)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.DvcObsDespacho)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.DvcObsDt)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("DvcObsDT");
            entity.Property(e => e.DvcTipoRefer)
                .HasMaxLength(15)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.IndDlgMe).HasColumnName("IndDlgME");
            entity.Property(e => e.LlgIdReversa).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.PCabLlgId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCabLlgId");
            entity.Property(e => e.PCabOpeId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCabOpeId");
            entity.Property(e => e.PCabOpeIdReversa)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCabOpeIdReversa");
            entity.Property(e => e.PCabReferenciaExtId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCabReferenciaExtId");
            entity.Property(e => e.PCdiId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCdiId");
            entity.Property(e => e.PClausulaVenta)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pClausulaVenta");
            entity.Property(e => e.PCondPagoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCondPagoId");
            entity.Property(e => e.PConvenioCabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pConvenioCabId");
            entity.Property(e => e.PCreId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCreId");
            entity.Property(e => e.PCtaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtaId");
            entity.Property(e => e.PDocReferenciaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pDocReferenciaId");
            entity.Property(e => e.PDoctoVentaCabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pDoctoVentaCabId");
            entity.Property(e => e.PEmbarqueCabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmbarqueCabId");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PEntDirDespachoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntDirDespachoId");
            entity.Property(e => e.PEntDirId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntDirId");
            entity.Property(e => e.PEntId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntId");
            entity.Property(e => e.PEntIdSec)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntIdSec");
            entity.Property(e => e.PEntSucId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntSucId");
            entity.Property(e => e.PEntSucIdSec)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntSucIdSec");
            entity.Property(e => e.PFolioElectronicoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pFolioElectronicoId");
            entity.Property(e => e.PIdiomaEspId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pIdiomaEspId");
            entity.Property(e => e.PLibId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pLibId");
            entity.Property(e => e.PMonedaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMonedaId");
            entity.Property(e => e.PMonedaNegocioVtaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMonedaNegocioVtaId");
            entity.Property(e => e.PNegocioVtaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pNegocioVtaId");
            entity.Property(e => e.PTipoOpeId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTipoOpeId");
            entity.Property(e => e.PTipoOpeIdCompra)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTipoOpeIdCompra");
            entity.Property(e => e.PTprId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTprId");
            entity.Property(e => e.PUnidadEmisoraDetId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pUnidadEmisoraDetId");
            entity.Property(e => e.PVendedorId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pVendedorId");
            entity.Property(e => e.PryNumero)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<DlgTDoctoLegalCabAtr>(entity =>
        {
            entity.HasKey(e => e.PDoctoLegalCabId).HasName("Pk_DlgT_DoctoLegalCabAtr");

            entity.ToTable("DlgT_DoctoLegalCabAtr");

            entity.Property(e => e.PDoctoLegalCabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pDoctoLegalCabId");
            entity.Property(e => e.CodContribuyente)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.DlcDireccionDestino)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.DlcIdentificacionConductor)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.DlcPatente)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.DlcRutConductor)
                .HasMaxLength(12)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.DoctoAduanTransporte)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.EntMail)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.EstablDestinoTransporte)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.FecFinTransporte).HasColumnType("datetime");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecIniTransporte).HasColumnType("datetime");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.MotivoTransporte)
                .HasMaxLength(255)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PEntDirId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntDirId");
            entity.Property(e => e.PEntDirOrigenId)
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("pEntDirOrigenId");
            entity.Property(e => e.PEntId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntId");
            entity.Property(e => e.PEntReceptorId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntReceptorId");
            entity.Property(e => e.PRutaDespId)
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("pRutaDespId");
            entity.Property(e => e.RutaTransporte)
                .HasMaxLength(255)
                .IsUnicode(false);
        });

        modelBuilder.Entity<DlgTDoctoLegalCabExp>(entity =>
        {
            entity.HasKey(e => e.PDoctoLegalCabId).HasName("Pk_DlgT_DoctoLegalCabExp");

            entity.ToTable("DlgT_DoctoLegalCabExp");

            entity.Property(e => e.PDoctoLegalCabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pDoctoLegalCabId");
            entity.Property(e => e.CliObsDocumento)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.CliObsGenerica)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.DlcDirConsignatario)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.DlcDirNotificador)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.DlcFclPacking)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.DlcLugarDestino)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.DlcNumInforme)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.DlcNumLc)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("DlcNumLC");
            entity.Property(e => e.DlcObsBulto)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.DlcObsMercaderia)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.DlcObsPacking)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.DlcRefPacking)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.EmcObsPiePagina)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.EntDirDireccionLarga)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PEntConsignatarioId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntConsignatarioId");
            entity.Property(e => e.PEntNotificadorId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntNotificadorId");
            entity.Property(e => e.PFormaPagoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pFormaPagoId");
        });

        modelBuilder.Entity<DlgTDoctoLegalCabExpCon>(entity =>
        {
            entity.HasKey(e => new { e.PDoctoLegalCabId, e.EmcIndPago }).HasName("Pk_DlgT_DoctoLegalCabExpCon");

            entity.ToTable("DlgT_DoctoLegalCabExpCon");

            entity.Property(e => e.PDoctoLegalCabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pDoctoLegalCabId");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.PCdiId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCdiId");
            entity.Property(e => e.PCreId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCreId");
            entity.Property(e => e.PCtaId)
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("pCtaId");
            entity.Property(e => e.PEntId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntId");
            entity.Property(e => e.PMonedaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMonedaId");
            entity.Property(e => e.PServicioId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pServicioId");
            entity.Property(e => e.PTprId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTprId");
            entity.Property(e => e.PryNumero)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<DlgTDoctoLegalCabRef>(entity =>
        {
            entity.HasKey(e => new { e.PDoctoLegalCabId, e.DlcTipoDocRef, e.DlcFolioDocRef, e.DlcFecDocRef }).HasName("Pk_DlgT_DoctoLegalCabRef");

            entity.ToTable("DlgT_DoctoLegalCabRef");

            entity.Property(e => e.PDoctoLegalCabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pDoctoLegalCabId");
            entity.Property(e => e.DlcTipoDocRef)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.DlcFolioDocRef)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.DlcFecDocRef).HasColumnType("datetime");
            entity.Property(e => e.DlcGlosaDocRef)
                .HasMaxLength(90)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.DlcRazonSocialOtroContrib)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.DlcRutOtroContrib)
                .HasMaxLength(12)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
        });

        modelBuilder.Entity<DlgTDoctoLegalCabTer>(entity =>
        {
            entity.HasKey(e => e.DoctoLegalCabTerId).HasName("Pk_DlgT_DoctoLegalCabTer");

            entity.ToTable("DlgT_DoctoLegalCabTer");

            entity.Property(e => e.DoctoLegalCabTerId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PDoctoLegalCabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pDoctoLegalCabId");
        });

        modelBuilder.Entity<DlgTDoctoLegalDet>(entity =>
        {
            entity.HasKey(e => e.DoctoLegalDetId).HasName("Pk_DlgT_DoctoLegalDet");

            entity.ToTable("DlgT_DoctoLegalDet");

            entity.HasIndex(e => new { e.PDoctoLegalCabId, e.DldItem }, "Idx_DlgT_DoctoLegalDet").HasFillFactor(90);

            entity.Property(e => e.DoctoLegalDetId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.DocCceNumero)
                .HasMaxLength(25)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PCdiId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCdiId");
            entity.Property(e => e.PConvenioDetId)
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("pConvenioDetId");
            entity.Property(e => e.PCreId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCreId");
            entity.Property(e => e.PCtaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtaId");
            entity.Property(e => e.PCtaProvisionIngId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtaProvisionIngId");
            entity.Property(e => e.PDdoReferenciaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pDdoReferenciaId");
            entity.Property(e => e.PDetReferenciaExtId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pDetReferenciaExtId");
            entity.Property(e => e.PDetReferenciaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pDetReferenciaId");
            entity.Property(e => e.PDetReferenciaKitId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pDetReferenciaKitId");
            entity.Property(e => e.PDoctoLegalCabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pDoctoLegalCabId");
            entity.Property(e => e.PDoctoVentaCabProId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pDoctoVentaCabProId");
            entity.Property(e => e.PDoctoVentaDetId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pDoctoVentaDetId");
            entity.Property(e => e.PGenericoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pGenericoId");
            entity.Property(e => e.PListaPreCabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pListaPreCabId");
            entity.Property(e => e.PProductoCodId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pProductoCodId");
            entity.Property(e => e.PProductoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pProductoId");
            entity.Property(e => e.PProductoKitId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pProductoKitId");
            entity.Property(e => e.PRebateId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pRebateId");
            entity.Property(e => e.PTprId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTprId");
            entity.Property(e => e.PUnidadMed2Id)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pUnidadMed2Id");
            entity.Property(e => e.PUnidadMedDespachoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pUnidadMedDespachoId");
            entity.Property(e => e.PUnidadMedId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pUnidadMedId");
            entity.Property(e => e.PUnidadMedStockId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pUnidadMedStockId");
            entity.Property(e => e.PryNumero)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<DlgTDoctoLegalDetCon>(entity =>
        {
            entity.HasKey(e => e.DoctoLegalDetConId).HasName("Pk_DoctoLegalDetCon");

            entity.ToTable("DlgT_DoctoLegalDetCon");

            entity.HasIndex(e => e.PDoctoLegalCabId, "Idx_DlgT_DoctoLegalDetCon");

            entity.Property(e => e.DoctoLegalDetConId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PCdiId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCdiId");
            entity.Property(e => e.PCreId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCreId");
            entity.Property(e => e.PDoctoLegalCabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pDoctoLegalCabId");
            entity.Property(e => e.PDoctoLegalDetId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pDoctoLegalDetId");
            entity.Property(e => e.PTprId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTprId");
            entity.Property(e => e.PryNumero)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<DlgTDoctoLegalDetGlo>(entity =>
        {
            entity.HasKey(e => new { e.PDoctoLegalCabId, e.PDoctoLegalDetId, e.DlgLinea, e.DlgTipoGlosa }).HasName("Pk_DoctoLegalDetGlo");

            entity.ToTable("DlgT_DoctoLegalDetGlo");

            entity.HasIndex(e => e.PDoctoLegalCabId, "Idx_DlgT_DoctoLegalDetGlo").HasFillFactor(90);

            entity.Property(e => e.PDoctoLegalCabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pDoctoLegalCabId");
            entity.Property(e => e.PDoctoLegalDetId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pDoctoLegalDetId");
            entity.Property(e => e.DlgGlosaItem)
                .HasMaxLength(90)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.DlgGlosaLarga)
                .HasMaxLength(300)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
        });

        modelBuilder.Entity<DlgTDoctoLegalDetImp>(entity =>
        {
            entity.HasKey(e => new { e.PDoctoLegalDetId, e.PImpuestoId }).HasName("Pk_DoctoLegalDetImp");

            entity.ToTable("DlgT_DoctoLegalDetImp");

            entity.HasIndex(e => e.PDoctoLegalCabId, "Idx_DlgT_DoctoLegalDetImp").HasFillFactor(90);

            entity.Property(e => e.PDoctoLegalDetId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pDoctoLegalDetId");
            entity.Property(e => e.PImpuestoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pImpuestoId");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PDoctoLegalCabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pDoctoLegalCabId");
        });

        modelBuilder.Entity<DlgTDoctoLegalFol>(entity =>
        {
            entity.HasKey(e => new { e.PEmpId, e.TdoId, e.DlcFolioDocto }).HasName("Pk_DlgT_DoctoLegalFol");

            entity.ToTable("DlgT_DoctoLegalFol");

            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
        });

        modelBuilder.Entity<DlgTDoctoLegalRecibo>(entity =>
        {
            entity.HasKey(e => e.DoctoLegalReciboId);

            entity.ToTable("DlgT_DoctoLegalRecibo");

            entity.Property(e => e.DoctoLegalReciboId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.DlrReciboCliente)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.DlrXmlRecibo).HasColumnType("text");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.PDoctoLegalCabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pDoctoLegalCabId");
            entity.Property(e => e.PDoctoLegalCabIdReal)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pDoctoLegalCabIdReal");
        });

        modelBuilder.Entity<DlgTDoctoLegalRef>(entity =>
        {
            entity.HasKey(e => new { e.DlrTipoReferencia, e.PDoctoLegalCabOid, e.PDoctoLegalCabFid }).HasName("Pk_DlgT_DoctoLegalRef");

            entity.ToTable("DlgT_DoctoLegalRef");

            entity.Property(e => e.PDoctoLegalCabOid)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pDoctoLegalCabOId");
            entity.Property(e => e.PDoctoLegalCabFid)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pDoctoLegalCabFId");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
        });

        modelBuilder.Entity<DlgTDoctoLegalXml>(entity =>
        {
            entity.HasKey(e => e.PDoctoLegalCabId).HasName("Pk_DlgT_DoctoLegalXml");

            entity.ToTable("DlgT_DoctoLegalXml");

            entity.Property(e => e.PDoctoLegalCabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pDoctoLegalCabId");
            entity.Property(e => e.DlcError)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.DlcFecFirma).HasColumnType("datetime");
            entity.Property(e => e.DlcFecRecepcionEnvio).HasColumnType("datetime");
            entity.Property(e => e.DlcFecRecepcionResul).HasColumnType("datetime");
            entity.Property(e => e.DlcFechaEnvioMail).HasColumnType("datetime");
            entity.Property(e => e.DlcGloEstadoEnvioXml)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.DlcImagenTimbre).HasColumnType("image");
            entity.Property(e => e.DlcMail)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.DlcXmlCliente).HasColumnType("text");
            entity.Property(e => e.DlcXmlOriginal).HasColumnType("text");
            entity.Property(e => e.DlcXmlSii).HasColumnType("text");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PEntIdFirma)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntIdFirma");
            entity.Property(e => e.PPqcElectronicoCabAlClienteId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pPqcElectronicoCabAlClienteId");
            entity.Property(e => e.PPqcElectronicoCabAlSiiId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pPqcElectronicoCabAlSiiId");
        });

        modelBuilder.Entity<DlgTEmpresaFormato>(entity =>
        {
            entity.HasKey(e => e.EfoId).HasName("DlgI_EmpresaFormato01");

            entity.ToTable("DlgT_EmpresaFormato");

            entity.Property(e => e.EfoId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EfoGlosa)
                .HasMaxLength(20)
                .IsUnicode(false);
        });

        modelBuilder.Entity<DlgTFolioElectronico>(entity =>
        {
            entity.HasKey(e => e.FolioElectronicoId).HasName("Pk_DlgT_FolioElectronico");

            entity.ToTable("DlgT_FolioElectronico", tb => tb.HasTrigger("DlgT_FolioElectronico_Delete"));

            entity.HasIndex(e => new { e.PEmpId, e.TdoSii }, "Idx_DlgT_EmpresaDocto").HasFillFactor(90);

            entity.Property(e => e.FolioElectronicoId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.FoeFecRecepcion).HasColumnType("datetime");
            entity.Property(e => e.FoeLlavePrivada).HasColumnType("text");
            entity.Property(e => e.FoeLlavePublica).HasColumnType("text");
            entity.Property(e => e.FoeXmlCaf).HasColumnType("text");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
        });

        modelBuilder.Entity<DlgTLibro>(entity =>
        {
            entity.HasKey(e => e.LibId).HasName("Pk_DlgT_Libro");

            entity.ToTable("DlgT_Libro");

            entity.HasIndex(e => new { e.PEmpId, e.PerId, e.TipoLibroId, e.TipoEnvioId, e.LibIndMensualEspecial, e.LibNumero }, "U_DlgT_Libro").IsUnique();

            entity.Property(e => e.LibId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.LibCodAutorizacionRec)
                .HasMaxLength(10)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.LibError)
                .HasMaxLength(255)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.LibFecEnvia).HasColumnType("datetime");
            entity.Property(e => e.LibFecFirma).HasColumnType("datetime");
            entity.Property(e => e.LibFolioNotificacion).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.LibTrackId)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.LibXml).HasColumnType("text");
            entity.Property(e => e.LibXmlImpresion).HasColumnType("text");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PEntIdFirma)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntIdFirma");
            entity.Property(e => e.PMonedaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMonedaId");
        });

        modelBuilder.Entity<DlgTLibro20161207>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("DlgT_Libro_20161207");

            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.LibCodAutorizacionRec)
                .HasMaxLength(10)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.LibError)
                .HasMaxLength(255)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.LibFecEnvia).HasColumnType("datetime");
            entity.Property(e => e.LibFecFirma).HasColumnType("datetime");
            entity.Property(e => e.LibFolioNotificacion).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.LibId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.LibTrackId)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.LibXml).HasColumnType("text");
            entity.Property(e => e.LibXmlImpresion).HasColumnType("text");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PEntIdFirma)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntIdFirma");
            entity.Property(e => e.PMonedaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMonedaId");
        });

        modelBuilder.Entity<DlgTLibro20170531>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("DlgT_Libro_20170531");

            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.LibCodAutorizacionRec)
                .HasMaxLength(10)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.LibError)
                .HasMaxLength(255)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.LibFecEnvia).HasColumnType("datetime");
            entity.Property(e => e.LibFecFirma).HasColumnType("datetime");
            entity.Property(e => e.LibFolioNotificacion).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.LibId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.LibTrackId)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.LibXml).HasColumnType("text");
            entity.Property(e => e.LibXmlImpresion).HasColumnType("text");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PEntIdFirma)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntIdFirma");
            entity.Property(e => e.PMonedaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMonedaId");
        });

        modelBuilder.Entity<DlgTLibro20170616>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("DlgT_Libro_20170616");

            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.LibCodAutorizacionRec)
                .HasMaxLength(10)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.LibError)
                .HasMaxLength(255)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.LibFecEnvia).HasColumnType("datetime");
            entity.Property(e => e.LibFecFirma).HasColumnType("datetime");
            entity.Property(e => e.LibFolioNotificacion).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.LibId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.LibTrackId)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.LibXml).HasColumnType("text");
            entity.Property(e => e.LibXmlImpresion).HasColumnType("text");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PEntIdFirma)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntIdFirma");
            entity.Property(e => e.PMonedaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMonedaId");
        });

        modelBuilder.Entity<DlgTLiquidacion>(entity =>
        {
            entity.HasKey(e => e.PDoctoLegalCabId).HasName("Pk_DlgT_Liquidacion");

            entity.ToTable("DlgT_Liquidacion");

            entity.Property(e => e.PDoctoLegalCabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pDoctoLegalCabId");
            entity.Property(e => e.LiqIvapropio).HasColumnName("LiqIVAPropio");
            entity.Property(e => e.LiqIvaterceros).HasColumnName("LiqIVATerceros");
            entity.Property(e => e.PEntId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntId");
        });

        modelBuilder.Entity<DlgTMotivoRechazo>(entity =>
        {
            entity.HasKey(e => e.RechazoCod).HasName("Pk_MotivoRechazo");

            entity.ToTable("DlgT_MotivoRechazo");

            entity.Property(e => e.RechazoDes)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<DlgTPaqueteElectronicoCab>(entity =>
        {
            entity.HasKey(e => e.PqcElectronicoCabId).HasName("Pk_DlgT_PaqueteElectronicoCab");

            entity.ToTable("DlgT_PaqueteElectronicoCab");

            entity.Property(e => e.PqcElectronicoCabId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.CodOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PEntIdFirma)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntIdFirma");
            entity.Property(e => e.PqcErrorSii)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PqcFecEnvio).HasColumnType("datetime");
            entity.Property(e => e.PqcFecFirma).HasColumnType("datetime");
            entity.Property(e => e.PqcGlosaErrorSii)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.PqcIdentificadorSii)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.PqcXmlPaquete).HasColumnType("text");
        });

        modelBuilder.Entity<DlgTPaqueteElectronicoCab20170531>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("DlgT_PaqueteElectronicoCab_20170531");

            entity.Property(e => e.CodOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PEntIdFirma)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntIdFirma");
            entity.Property(e => e.PqcElectronicoCabId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.PqcErrorSii)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PqcFecEnvio).HasColumnType("datetime");
            entity.Property(e => e.PqcFecFirma).HasColumnType("datetime");
            entity.Property(e => e.PqcGlosaErrorSii)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.PqcXmlPaquete).HasColumnType("text");
        });

        modelBuilder.Entity<DlgTPaqueteElectronicoCab20170616>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("DlgT_PaqueteElectronicoCab_20170616");

            entity.Property(e => e.CodOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PEntIdFirma)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntIdFirma");
            entity.Property(e => e.PqcElectronicoCabId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.PqcErrorSii)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PqcFecEnvio).HasColumnType("datetime");
            entity.Property(e => e.PqcFecFirma).HasColumnType("datetime");
            entity.Property(e => e.PqcGlosaErrorSii)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.PqcIdentificadorSii)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.PqcXmlPaquete).HasColumnType("text");
        });

        modelBuilder.Entity<DlgTPaqueteElectronicoDet>(entity =>
        {
            entity.HasKey(e => e.PqdElectronicoDetId).HasName("Pk_DlgT_PaqueteElectronicoDet");

            entity.ToTable("DlgT_PaqueteElectronicoDet");

            entity.HasIndex(e => new { e.PPqcElectronicoCabId, e.TdoSii }, "Idx_DlgT_PaqueteElectronicoDet").IsUnique();

            entity.Property(e => e.PqdElectronicoDetId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PPqcElectronicoCabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pPqcElectronicoCabId");
        });

        modelBuilder.Entity<DlgTPersonaAutorizadum>(entity =>
        {
            entity.HasKey(e => new { e.PEmpId, e.PEntId }).HasName("Pk_PersonaAutorizada");

            entity.ToTable("DlgT_PersonaAutorizada");

            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PEntId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntId");
            entity.Property(e => e.PauFecVigDesde).HasColumnType("datetime");
            entity.Property(e => e.PauFecVigHasta).HasColumnType("datetime");
            entity.Property(e => e.PauPassword)
                .HasMaxLength(10)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PauRazonSocialCert)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<DlgTRecepcionBitSiiError>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("DlgT_RecepcionBit_SII_Error");

            entity.HasIndex(e => new { e.IntGlosaError, e.Linea }, "DlgT_RecepcionBit_SII_Error_idx01");

            entity.Property(e => e.BitArchivo)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.IntGlosaError)
                .HasMaxLength(255)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PRecepcionBitId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pRecepcionBitId");
        });

        modelBuilder.Entity<DlgTRecepcionCab>(entity =>
        {
            entity.HasKey(e => e.RecepcionCabId);

            entity.ToTable("DlgT_RecepcionCab");

            entity.Property(e => e.RecepcionCabId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.Email)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("EMail");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PEntIdFirma)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntIdFirma");
            entity.Property(e => e.RecFecEnvia).HasColumnType("datetime");
            entity.Property(e => e.RecFecFirma).HasColumnType("datetime");
            entity.Property(e => e.RecFecRecepcion).HasColumnType("datetime");
            entity.Property(e => e.RecFecResolucion).HasColumnType("datetime");
            entity.Property(e => e.RecNombreArchivo)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.RecOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.RecRutEmisor)
                .HasMaxLength(12)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.RecRutEnvia)
                .HasMaxLength(12)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.RecRutReceptor)
                .HasMaxLength(12)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.RecXml).HasColumnType("text");
            entity.Property(e => e.RecXmlRespuesta).HasColumnType("text");
        });

        modelBuilder.Entity<DlgTRecepcionDet>(entity =>
        {
            entity.HasKey(e => e.RecepcionDetId);

            entity.ToTable("DlgT_RecepcionDet");

            entity.HasIndex(e => new { e.PEmpId, e.RecDetRutEmisor, e.TdoSii, e.DlcFolioDocto }, "IC_DlgT_RecepcionDet");

            entity.Property(e => e.RecepcionDetId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.AccionReclamo)
                .HasMaxLength(5)
                .IsUnicode(false);
            entity.Property(e => e.DvcNumOrdenC)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.FechaReclamo).HasColumnType("datetime");
            entity.Property(e => e.FolioRef).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.PCabLlgId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCabLlgId");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PEntIdFirma)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntIdFirma");
            entity.Property(e => e.PRecepcionCabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pRecepcionCabId");
            entity.Property(e => e.PRecepcionMercServicioId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pRecepcionMercServicioId");
            entity.Property(e => e.PRecepcionRespId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pRecepcionRespId");
            entity.Property(e => e.RecDetFecEnvia).HasColumnType("datetime");
            entity.Property(e => e.RecDetFecFirma).HasColumnType("datetime");
            entity.Property(e => e.RecDetFechaRecepcion).HasColumnType("datetime");
            entity.Property(e => e.RecDetOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.RecDetRutEmisor)
                .HasMaxLength(12)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.RecDetXml).HasColumnType("text");
            entity.Property(e => e.RecFechaEmision).HasColumnType("datetime");
            entity.Property(e => e.RecFechaSii).HasColumnType("datetime");
            entity.Property(e => e.RecXmlReciboMercaderias).HasColumnType("text");
        });

        modelBuilder.Entity<DlgTRecepcionDet20170913>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("DlgT_RecepcionDet_20170913");

            entity.Property(e => e.AccionReclamo)
                .HasMaxLength(5)
                .IsUnicode(false);
            entity.Property(e => e.DvcNumOrdenC)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.FechaReclamo).HasColumnType("datetime");
            entity.Property(e => e.FolioRef).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.PCabLlgId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCabLlgId");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PEntIdFirma)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntIdFirma");
            entity.Property(e => e.PRecepcionCabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pRecepcionCabId");
            entity.Property(e => e.PRecepcionMercServicioId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pRecepcionMercServicioId");
            entity.Property(e => e.PRecepcionRespId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pRecepcionRespId");
            entity.Property(e => e.RecDetFecEnvia).HasColumnType("datetime");
            entity.Property(e => e.RecDetFecFirma).HasColumnType("datetime");
            entity.Property(e => e.RecDetFechaRecepcion).HasColumnType("datetime");
            entity.Property(e => e.RecDetOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.RecDetRutEmisor)
                .HasMaxLength(12)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.RecDetXml).HasColumnType("text");
            entity.Property(e => e.RecFechaEmision).HasColumnType("datetime");
            entity.Property(e => e.RecFechaSii).HasColumnType("datetime");
            entity.Property(e => e.RecXmlReciboMercaderias).HasColumnType("text");
            entity.Property(e => e.RecepcionDetId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
        });

        modelBuilder.Entity<DlgTRecepcionDetRef>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("DlgT_RecepcionDetRef");

            entity.HasIndex(e => e.PRecepcionDetId, "Idx_DlgT_RecepcionDetRef");

            entity.Property(e => e.DlcFecDocRef).HasColumnType("datetime");
            entity.Property(e => e.DlcFolioDocRef)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PRecepcionDetId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pRecepcionDetId");
            entity.Property(e => e.PTdoReferenciaSiiId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTdoReferenciaSiiId");
            entity.Property(e => e.RecepcionDetRefId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
        });

        modelBuilder.Entity<DlgTRecepcionDetRefSii>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("DlgT_RecepcionDetRef_Sii");

            entity.HasIndex(e => new { e.DlcFolioDocto, e.PEmpId, e.RecepcionDetSiiId, e.TdoSii }, "DlgT_RecepcionDetRef_Sii_idx01").IsClustered();

            entity.HasIndex(e => new { e.TipoDteSii, e.PEmpId, e.DlcFolioDocto, e.RecDetRutEmisor }, "DlgT_RecepcionDetRef_Sii_idx02");

            entity.HasIndex(e => new { e.PRecepcionDetId, e.RecepcionDetSiiId, e.RecDetFechaRecepcion, e.TdoSii, e.DlcFolioDocto, e.PEmpId }, "DlgT_RecepcionDetRef_Sii_idx03");

            entity.Property(e => e.EntRazonSocial)
                .HasMaxLength(120)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PCabLlgId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCabLlgId");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PRecepcionDetId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pRecepcionDetId");
            entity.Property(e => e.RecDetFechaRecepcion).HasColumnType("datetime");
            entity.Property(e => e.RecDetOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.RecDetRutEmisor)
                .HasMaxLength(12)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.RecDetTrackId)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.RecFechaEmision).HasColumnType("datetime");
            entity.Property(e => e.RecepcionDetSiiId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.TipoDteSii)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("TipoDte_Sii");
        });

        modelBuilder.Entity<DlgTRecepcionDetRefSiiResp>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("DlgT_RecepcionDetRef_Sii_Resp");

            entity.Property(e => e.EntRazonSocial)
                .HasMaxLength(120)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PCabLlgId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCabLlgId");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PRecepcionBitId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pRecepcionBitId");
            entity.Property(e => e.PRecepcionDetId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pRecepcionDetId");
            entity.Property(e => e.RecDetFechaRecepcion).HasColumnType("datetime");
            entity.Property(e => e.RecDetOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.RecDetRutEmisor)
                .HasMaxLength(12)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.RecDetTrackId)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.RecFechaEmision).HasColumnType("datetime");
            entity.Property(e => e.TipoDteSii)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("TipoDte_Sii");
        });

        modelBuilder.Entity<DlgTRecepcionDetResp07042017>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("DlgT_RecepcionDet_Resp07042017");

            entity.Property(e => e.PCabLlgId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCabLlgId");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PEntIdFirma)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntIdFirma");
            entity.Property(e => e.PRecepcionCabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pRecepcionCabId");
            entity.Property(e => e.PRecepcionMercServicioId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pRecepcionMercServicioId");
            entity.Property(e => e.PRecepcionRespId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pRecepcionRespId");
            entity.Property(e => e.RecDetFecEnvia).HasColumnType("datetime");
            entity.Property(e => e.RecDetFecFirma).HasColumnType("datetime");
            entity.Property(e => e.RecDetFechaRecepcion).HasColumnType("datetime");
            entity.Property(e => e.RecDetOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.RecDetRutEmisor)
                .HasMaxLength(12)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.RecDetXml).HasColumnType("text");
            entity.Property(e => e.RecFechaEmision).HasColumnType("datetime");
            entity.Property(e => e.RecXmlReciboMercaderias).HasColumnType("text");
            entity.Property(e => e.RecepcionDetId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
        });

        modelBuilder.Entity<DlgTRecepcionMercServicio>(entity =>
        {
            entity.HasKey(e => e.RecepcionMercServicioId);

            entity.ToTable("DlgT_RecepcionMercServicio");

            entity.Property(e => e.RecepcionMercServicioId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.PBodegaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pBodegaId");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PEntIdFirma)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntIdFirma");
            entity.Property(e => e.PEntSucId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntSucId");
            entity.Property(e => e.RecMerFecEnvia).HasColumnType("datetime");
            entity.Property(e => e.RecMerFecFirma).HasColumnType("datetime");
            entity.Property(e => e.RecMerRutEmisor)
                .HasMaxLength(12)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.RecMerXml).HasColumnType("text");
        });

        modelBuilder.Entity<DlgTRecepcionResp>(entity =>
        {
            entity.HasKey(e => e.RecepcionRespId);

            entity.ToTable("DlgT_RecepcionResp");

            entity.Property(e => e.RecepcionRespId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PEntIdFirma)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntIdFirma");
            entity.Property(e => e.RecResFecEnvia).HasColumnType("datetime");
            entity.Property(e => e.RecResFecFirma).HasColumnType("datetime");
            entity.Property(e => e.RecResRutEmisor)
                .HasMaxLength(12)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.RecResXml).HasColumnType("text");
        });

        modelBuilder.Entity<DlgTReglaNivelValidacion>(entity =>
        {
            entity.HasKey(e => new { e.PTdoReferenciaSiiId, e.RrcIndNivVal }).HasName("DlgI_ReglaNivelValidacion01");

            entity.ToTable("DlgT_ReglaNivelValidacion");

            entity.Property(e => e.PTdoReferenciaSiiId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTdoReferenciaSiiId");
            entity.Property(e => e.RrcGlosaNivVal)
                .HasMaxLength(100)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<DlgTReglaRecepCab>(entity =>
        {
            entity.HasKey(e => e.ReglaRecepCabId).HasName("Pk_DlgT_ReglaRecepCab");

            entity.ToTable("DlgT_ReglaRecepCab");

            entity.Property(e => e.ReglaRecepCabId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PTdoReferenciaSiiId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTdoReferenciaSiiId");
            entity.Property(e => e.RrcFecVigencia).HasColumnType("datetime");
            entity.Property(e => e.RrcGlosa)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<DlgTReglaRecepCabOpe>(entity =>
        {
            entity.HasKey(e => new { e.PReglaRecepCabId, e.PTipoOpeId }).HasName("Pk_DlgT_ReglaRecepCabOpe");

            entity.ToTable("DlgT_ReglaRecepCabOpe");

            entity.Property(e => e.PReglaRecepCabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pReglaRecepCabId");
            entity.Property(e => e.PTipoOpeId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTipoOpeId");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PCdiId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCdiId");
            entity.Property(e => e.PCreId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCreId");
            entity.Property(e => e.PTprId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTprId");
            entity.Property(e => e.PryNumero)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<DlgTReglaRecepDesglose>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("DlgT_ReglaRecepDesglose");

            entity.Property(e => e.RrcGlosaDesglose)
                .HasMaxLength(40)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<DlgTReglaRecepDet>(entity =>
        {
            entity.HasKey(e => new { e.PReglaRecepCabId, e.PEntId, e.RrdCodigoInterno }).HasName("Pk_DlgT_ReglaRecepDet");

            entity.ToTable("DlgT_ReglaRecepDet");

            entity.HasIndex(e => e.PReglaRecepCabId, "Idx_DlgT_ReglaRecepDet");

            entity.Property(e => e.PReglaRecepCabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pReglaRecepCabId");
            entity.Property(e => e.PEntId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntId");
            entity.Property(e => e.RrdCodigoInterno)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PCreId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCreId");
            entity.Property(e => e.PTprId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTprId");
            entity.Property(e => e.PryNumero)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.RrdFecVigencia).HasColumnType("datetime");
        });

        modelBuilder.Entity<DlgTReglaRecepGenerica>(entity =>
        {
            entity.HasKey(e => e.RrgCodigo).HasName("Pk_DlgT_ReglaRecepGenerica");

            entity.ToTable("DlgT_ReglaRecepGenerica");

            entity.Property(e => e.RrgCodigo).ValueGeneratedNever();
            entity.Property(e => e.RrgGlosa)
                .HasMaxLength(40)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<DlgTReglaRecepProceso>(entity =>
        {
            entity.HasKey(e => e.RrcCodProceso).HasName("Pk_DlgT_ReglaRecepProceso");

            entity.ToTable("DlgT_ReglaRecepProceso");

            entity.Property(e => e.RrcGlosaProceso)
                .HasMaxLength(40)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<DlgTSolicitudLegalCab>(entity =>
        {
            entity.HasKey(e => new { e.IdFuncionalidad, e.PCdoReferenciaId }).HasName("Pk_DlgT_SolicitudLegalCab");

            entity.ToTable("DlgT_SolicitudLegalCab");

            entity.HasIndex(e => e.SolicitudLegalCabId, "Pk_DlgT_SolicitudLegalCabId").IsUnique();

            entity.Property(e => e.IdFuncionalidad)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcionalidad");
            entity.Property(e => e.PCdoReferenciaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCdoReferenciaId");
            entity.Property(e => e.CodOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PUnidadEmisoraDetId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pUnidadEmisoraDetId");
            entity.Property(e => e.SlcFecDocto).HasColumnType("datetime");
            entity.Property(e => e.SolicitudLegalCabId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
        });

        modelBuilder.Entity<DlgTSolicitudLegalDet>(entity =>
        {
            entity.HasKey(e => e.SolicitudLegalDetId).HasName("Pk_DlgT_SolicitudLegalDet");

            entity.ToTable("DlgT_SolicitudLegalDet");

            entity.HasIndex(e => new { e.PSolicitudLegalCabId, e.PDdoReferenciaId }, "Idx_DlgT_SolicitudLegalDet").HasFillFactor(90);

            entity.Property(e => e.SolicitudLegalDetId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PDdoReferenciaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pDdoReferenciaId");
            entity.Property(e => e.PMonedaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMonedaId");
            entity.Property(e => e.PProductoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pProductoId");
            entity.Property(e => e.PSolicitudLegalCabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pSolicitudLegalCabId");
        });

        modelBuilder.Entity<DlgTTipoDocumentoRefSii>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("DlgT_TipoDocumentoRefSII");

            entity.HasIndex(e => new { e.TdoSii, e.TdoIndSii }, "Pk_DlgT_TipoDocumentoRefSii").IsUnique();

            entity.Property(e => e.TdoCodigoTag)
                .HasMaxLength(50)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.TdoContenidoTag)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.TdoGlosaSii)
                .HasMaxLength(90)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.TdoIndSii).HasColumnName("TdoIndSII");
            entity.Property(e => e.TdoReferenciaSiiId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
        });

        modelBuilder.Entity<DlgTTipoDocumentoSii>(entity =>
        {
            entity.HasKey(e => e.TdoSii).HasName("Pk_DlgT_TipoDocumentoSii");

            entity.ToTable("DlgT_TipoDocumentoSii");

            entity.Property(e => e.TdoSii).ValueGeneratedNever();
            entity.Property(e => e.TdoGlosaSii)
                .HasMaxLength(90)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<DlgTTipoEnvio>(entity =>
        {
            entity.HasKey(e => e.TipoEnvioId).HasName("Pk_DlgT_TipoEnvio");

            entity.ToTable("DlgT_TipoEnvio");

            entity.Property(e => e.TipoEnvioId).ValueGeneratedNever();
            entity.Property(e => e.TipoEnvioGlosa)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<DlgTTipoInformeLegal>(entity =>
        {
            entity.HasKey(e => new { e.PEmpId, e.TdoId }).HasName("Pk_DlgT_TipoInformeLegal");

            entity.ToTable("DlgT_TipoInformeLegal");

            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PEfoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEfoId");
            entity.Property(e => e.TilNombreImpresora)
                .HasMaxLength(100)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.TilNombreRdl)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.TilNombreReporte)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<DlgTTipoLibro>(entity =>
        {
            entity.HasKey(e => e.TipoLibroId).HasName("Pk_DlgT_TipoLibro");

            entity.ToTable("DlgT_TipoLibro");

            entity.Property(e => e.TipoLibroId).ValueGeneratedNever();
            entity.Property(e => e.TipoLibroGlosa)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<DlgTTipoXmlDte>(entity =>
        {
            entity.HasKey(e => e.TipoXmlDte).HasName("DlgI_TipoXmlDTE01");

            entity.ToTable("DlgT_TipoXmlDTE");

            entity.Property(e => e.TipoXmlDte).HasColumnName("TipoXmlDTE");
            entity.Property(e => e.TagXmlDte)
                .HasMaxLength(100)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("TagXmlDTE");
            entity.Property(e => e.TipoXmlDteglosa)
                .HasMaxLength(100)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("TipoXmlDTEGlosa");
        });

        modelBuilder.Entity<DlgTUnidadEmisoraCab>(entity =>
        {
            entity.HasKey(e => e.UnidadEmisoraCabId).HasName("Pk_UnidadEmisoraCab");

            entity.ToTable("DlgT_UnidadEmisoraCab");

            entity.Property(e => e.UnidadEmisoraCabId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.UnidadEmisoraGlosa)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<DlgTUnidadEmisoraDet>(entity =>
        {
            entity.HasKey(e => e.UnidadEmisoraDetId).HasName("Pk_UnidadEmisoraDet");

            entity.ToTable("DlgT_UnidadEmisoraDet", tb => tb.HasTrigger("DlgT_UnidadEmisoraDet_Delete"));

            entity.Property(e => e.UnidadEmisoraDetId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PImpresoraMatrizId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pImpresoraMatrizId");
            entity.Property(e => e.PUnidadEmisoraCabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pUnidadEmisoraCabId");
            entity.Property(e => e.UedUsuario)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<DlgTUnidadEmisoraDetFol>(entity =>
        {
            entity.HasKey(e => e.UnidadEmisoraDetFolId).HasName("Pk_UnidadEmisoraDetFol");

            entity.ToTable("DlgT_UnidadEmisoraDetFol");

            entity.Property(e => e.UnidadEmisoraDetFolId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PUnidadEmisoraCabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pUnidadEmisoraCabId");
            entity.Property(e => e.PUnidadEmisoraDetId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pUnidadEmisoraDetId");
        });

        modelBuilder.Entity<DlgtLibro11062015>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("dlgt_libro_11062015");

            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.LibCodAutorizacionRec)
                .HasMaxLength(10)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.LibError)
                .HasMaxLength(255)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.LibFecEnvia).HasColumnType("datetime");
            entity.Property(e => e.LibFecFirma).HasColumnType("datetime");
            entity.Property(e => e.LibFolioNotificacion).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.LibId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.LibTrackId).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.LibXml).HasColumnType("text");
            entity.Property(e => e.LibXmlImpresion).HasColumnType("text");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PEntIdFirma)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntIdFirma");
            entity.Property(e => e.PMonedaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMonedaId");
        });

        modelBuilder.Entity<DlgtRecepcionBitDetSii>(entity =>
        {
            entity.HasKey(e => new { e.PRecepcionBitId, e.Linea }).HasName("DlgT_RecepcionBitDet_Sii01");

            entity.ToTable("Dlgt_RecepcionBitDet_Sii");

            entity.Property(e => e.PRecepcionBitId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pRecepcionBitId");
            entity.Property(e => e.FechaEmiSii)
                .HasColumnType("datetime")
                .HasColumnName("FechaEmi_SII");
            entity.Property(e => e.FechaRecepcionSii)
                .HasColumnType("datetime")
                .HasColumnName("FechaRecepcion_Sii");
            entity.Property(e => e.FolioDteSii).HasColumnName("FolioDte_SII");
            entity.Property(e => e.MontoTotalSii).HasColumnName("MontoTotal_SII");
            entity.Property(e => e.RazonSocialSii)
                .HasMaxLength(120)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("RazonSocial_SII");
            entity.Property(e => e.RutEmisorSii)
                .HasMaxLength(12)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("RutEmisor_SII");
            entity.Property(e => e.TipoDteSii)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("TipoDte_Sii");
            entity.Property(e => e.TrackId)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<DlgtRecepcionBitSii>(entity =>
        {
            entity.HasKey(e => e.RecepcionBitId).HasName("DlgI_RecepcionBit_Sii01");

            entity.ToTable("Dlgt_RecepcionBit_Sii");

            entity.Property(e => e.RecepcionBitId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.BitArchivo)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.IntBitFecDesde).HasColumnType("datetime");
            entity.Property(e => e.IntBitFecHasta).HasColumnType("datetime");
            entity.Property(e => e.IntBitIndUnicoPl)
                .HasMaxLength(50)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("IntBitIndUnicoPL");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.RecDetOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<DmLogTParametrosCarga>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("DmLogT_ParametrosCarga");

            entity.Property(e => e.FechaFin).HasColumnType("datetime");
            entity.Property(e => e.FechaIni).HasColumnType("datetime");
        });

        modelBuilder.Entity<EcuTEspAtributosEntidad>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("EcuT_EspAtributosEntidad");

            entity.Property(e => e.CodDinardap)
                .HasMaxLength(10)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EstCivil)
                .HasMaxLength(2)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.Genero)
                .HasMaxLength(2)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.OrigenEnt)
                .HasMaxLength(2)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Origen_Ent");
            entity.Property(e => e.PEntId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntId");
        });

        modelBuilder.Entity<EfeTClasificaFlujo>(entity =>
        {
            entity.HasKey(e => new { e.PPdcId, e.ClaCtaNivel1, e.ClaCtaNivel2, e.ClaCtaNivel3, e.ClaCtaNivel4, e.ClaCtaNivel5, e.ClaCtaNivel6, e.ClaCtaNivel7, e.PEfeFlujoId }).HasName("EfeI_ClasificaFlujo_I01");

            entity.ToTable("EfeT_ClasificaFlujo");

            entity.HasIndex(e => e.ClaIdentity, "EfeI_ClasificaFlujo_I03").IsUnique();

            entity.Property(e => e.PPdcId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pPdcId");
            entity.Property(e => e.PEfeFlujoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEfeFlujoId");
            entity.Property(e => e.ClaCtaNodoNombre)
                .HasMaxLength(40)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.ClaIdentity)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
        });

        modelBuilder.Entity<EfeTCmbteConcil>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("EfeT_CmbteConcil");

            entity.Property(e => e.EfeFlujoEstConcCod).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
        });

        modelBuilder.Entity<EfeTCmbteFlujo>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("EfeT_CmbteFlujo");

            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PEfeFlujoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEfeFlujoId");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
        });

        modelBuilder.Entity<EfeTCodigoFlujo>(entity =>
        {
            entity.HasKey(e => e.EfeFlujoId).HasName("EfeI_CodigoFlujo_I01");

            entity.ToTable("EfeT_CodigoFlujo");

            entity.HasIndex(e => e.EfeFlujoCod, "EfeI_CodigoFlujo_I02").IsUnique();

            entity.Property(e => e.EfeFlujoId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EfeFlujoCod).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EfeFlujoGlosa)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
        });

        modelBuilder.Entity<EfeTComprobante>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("EfeT_Comprobantes");

            entity.HasIndex(e => new { e.PCtaId, e.PEmpId, e.PCabOpeId, e.PerId }, "EfeI_Comprobantes_I02");

            entity.HasIndex(e => new { e.PEmpId, e.PerId, e.PCtaId }, "EfeI_Comprobantes_I03");

            entity.Property(e => e.CabOpeFecha).HasColumnType("datetime");
            entity.Property(e => e.CabOpeGlosa)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EfeFlujoFlag).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PCabOpeId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCabOpeId");
            entity.Property(e => e.PCtaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtaId");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PTipoOpeId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTipoOpeId");
        });

        modelBuilder.Entity<EfeTConfiguracion>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("EfeT_Configuracion");

            entity.Property(e => e.EfeFlujoEstConcAct).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EfeFlujoEstConcLco).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EfeFlujoEstConcLve).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EfeFlujoEstConcUti).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PPdcId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pPdcId");
        });

        modelBuilder.Entity<EfeTCtasContable>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("EfeT_CtasContables");

            entity.Property(e => e.CtaFlujoDebe).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.CtaFlujoHaber).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.PCtaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtaId");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
        });

        modelBuilder.Entity<EfeTCuenta>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("EfeT_Cuentas");

            entity.Property(e => e.EfeFlujoEstConcCod).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.PCtaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtaId");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
        });

        modelBuilder.Entity<EfeTEstConciliacion>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("EfeT_EstConciliacion");

            entity.Property(e => e.EfeFlujoAplicaCm)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("EfeFlujoAplicaCM");
            entity.Property(e => e.EfeFlujoEstConcCod).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EfeFlujoEstConcDes)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EfeFlujoFormula)
                .HasMaxLength(255)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EfeFlujoGenInforme).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
        });

        modelBuilder.Entity<EfeTPlanFlujo>(entity =>
        {
            entity.HasKey(e => e.PdcId).HasName("EfeI_PlanConceptos_I01");

            entity.ToTable("EfeT_PlanFlujo");

            entity.Property(e => e.PdcId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.PdcNomNivel1)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PdcNomNivel2)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PdcNomNivel3)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PdcNomNivel4)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PdcNomNivel5)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PdcNomNivel6)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PdcNomNivel7)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PdcNomPlan)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PdcOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<EfetComprobantesBak>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("efet_comprobantes_bak");

            entity.Property(e => e.CabOpeFecha).HasColumnType("datetime");
            entity.Property(e => e.CabOpeGlosa)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EfeFlujoFlag).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PCtaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtaId");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PTipoOpeId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTipoOpeId");
        });

        modelBuilder.Entity<EntTTipoEntidadEcu>(entity =>
        {
            entity.HasKey(e => e.Ident).HasName("EntT_TipoEntidad_Index01");

            entity.ToTable("EntT_TipoEntidad_Ecu");

            entity.Property(e => e.CodigoSri)
                .HasMaxLength(2)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("CodigoSRI");
            entity.Property(e => e.DescripcionTipo)
                .HasMaxLength(40)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.ModuloDv)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("ModuloDV");
        });

        modelBuilder.Entity<ExiTBodega>(entity =>
        {
            entity.HasKey(e => e.BodegaId).HasName("ExiT_Bodegas_PK");

            entity.ToTable("ExiT_Bodegas");

            entity.Property(e => e.BodegaId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.BodegaDes)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EntRutResponsable)
                .HasMaxLength(12)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.FechaVigencia).HasColumnType("datetime");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.IndGeneraTransaccion).HasColumnName("Ind_GeneraTransaccion");
            entity.Property(e => e.PCdiId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCdiId");
            entity.Property(e => e.PCreId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCreId");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PEntDirId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntDirId");
            entity.Property(e => e.PEntSucIdAuxiliar)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntSucIdAuxiliar");
            entity.Property(e => e.PPlantaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pPlantaId");

            entity.HasOne(d => d.PPlanta).WithMany(p => p.ExiTBodegas)
                .HasForeignKey(d => d.PPlantaId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_BodegaPlantaId");
        });

        modelBuilder.Entity<ExiTCentroConsumo>(entity =>
        {
            entity.HasKey(e => e.CconsumoId).HasName("ExiT_CentroConsumo_PK");

            entity.ToTable("ExiT_CentroConsumo");

            entity.Property(e => e.CconsumoId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("CConsumoId");
            entity.Property(e => e.CconsumoCod).HasColumnName("CConsumoCod");
            entity.Property(e => e.CconsumoDes)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("CConsumoDes");
            entity.Property(e => e.EntRutResponsable)
                .HasMaxLength(12)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.FechaVigencia).HasColumnType("datetime");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PCdiId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCdiId");
            entity.Property(e => e.PCreId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCreId");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PEntDirId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntDirId");
            entity.Property(e => e.PEntSucIdAuxiliar)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntSucIdAuxiliar");
            entity.Property(e => e.PPlantaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pPlantaId");

            entity.HasOne(d => d.PPlanta).WithMany(p => p.ExiTCentroConsumos)
                .HasForeignKey(d => d.PPlantaId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_CentroConsumoId");
        });

        modelBuilder.Entity<ExiTConfiguracion>(entity =>
        {
            entity.HasKey(e => new { e.PEmpId, e.EjeAno }).HasName("ExiT_Configuracion_PK");

            entity.ToTable("ExiT_Configuracion");

            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FactorGd).HasColumnName("FactorGD");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.IndTipoCm).HasColumnName("IndTipoCM");
            entity.Property(e => e.PBodDestinoDifId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pBodDestinoDifId");
            entity.Property(e => e.PCctaActivoVnrid)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCCtaActivoVNRId");
            entity.Property(e => e.PCctaOtrosVnrid)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCCtaOtrosVNRId");
            entity.Property(e => e.PCctaVentasVnrid)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCCtaVentasVNRId");
            entity.Property(e => e.PCtaExistencias2Id)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtaExistencias2Id");
            entity.Property(e => e.PCtaProvisionVnrid)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtaProvisionVNRId");
            entity.Property(e => e.PServicioIdDpc).HasColumnName("pServicioIdDPC");
            entity.Property(e => e.PTipoOpeAjuComplId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTipoOpeAjuComplId");
            entity.Property(e => e.PTipoOpeContVnrid)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTipoOpeContVNRId");
            entity.Property(e => e.TdoIdCm).HasColumnName("TdoIdCM");
            entity.Property(e => e.TdoIdCv).HasColumnName("TdoIdCV");
        });

        modelBuilder.Entity<ExiTDatosDespacho>(entity =>
        {
            entity.HasKey(e => e.DatosDespId).HasName("ExiT_DatosDespacho_PK");

            entity.ToTable("ExiT_DatosDespacho");

            entity.HasIndex(e => new { e.PPedidoMaterialId, e.PRutaDespId, e.PEntId }, "ExiT_DatosDespacho_idx050");

            entity.Property(e => e.DatosDespId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.DatosDespAtencion)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.DatosDespDir)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.DatosDespHorario)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.GlosaExis)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.PEntDirId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntDirId");
            entity.Property(e => e.PEntId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntId");
            entity.Property(e => e.PEntSucId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntSucId");
            entity.Property(e => e.PPedidoMaterialId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pPedidoMaterialId");
            entity.Property(e => e.PRutaDespId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pRutaDespId");
        });

        modelBuilder.Entity<ExiTErroresCargaMasiva>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("ExiT_ErroresCargaMasiva");

            entity.Property(e => e.GlosaMensajeValidacion)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.IdUsuario)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario");
            entity.Property(e => e.ProductoCod)
                .HasMaxLength(25)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.ServicioCod)
                .HasMaxLength(25)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<ExiTEstructuraCodigo>(entity =>
        {
            entity.HasKey(e => e.EstCodigoId).HasName("ExiT_EstructurasCodigos_PK");

            entity.ToTable("ExiT_EstructuraCodigo");

            entity.Property(e => e.EstCodigoId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstCodigoCod)
                .HasMaxLength(10)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EstCodigoDes)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.FechaVigencia).HasColumnType("datetime");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PTipoCodigoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTipoCodigoId");
        });

        modelBuilder.Entity<ExiTEstructuraSubdivision>(entity =>
        {
            entity.HasKey(e => e.SubdivisionId).HasName("ExiT_EstructuraSubdivision_PK");

            entity.ToTable("ExiT_EstructuraSubdivision");

            entity.Property(e => e.SubdivisionId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PEstCodigoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEstCodigoId");
            entity.Property(e => e.SubdivisionDes)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();

            entity.HasOne(d => d.PEstCodigo).WithMany(p => p.ExiTEstructuraSubdivisions)
                .HasForeignKey(d => d.PEstCodigoId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_EstructuraSubEstCodigoId");
        });

        modelBuilder.Entity<ExiTEstructuraSubdivisionValore>(entity =>
        {
            entity.HasKey(e => e.SubdivisionDetId).HasName("ExiT_EstructuraSubdivisionValores_PK");

            entity.ToTable("ExiT_EstructuraSubdivisionValores");

            entity.Property(e => e.SubdivisionDetId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PSubdivisionId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pSubdivisionId");
            entity.Property(e => e.SubdivisionDetGlosaTabla)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.SubdivisionDetValorTabla1)
                .HasMaxLength(25)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.SubdivisionDetValorTabla2).HasColumnType("numeric(25, 0)");

            entity.HasOne(d => d.PSubdivision).WithMany(p => p.ExiTEstructuraSubdivisionValores)
                .HasForeignKey(d => d.PSubdivisionId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_EstrucSubdivValSubdivisionId");
        });

        modelBuilder.Entity<ExiTGruposContable>(entity =>
        {
            entity.HasKey(e => e.GrupoContId).HasName("ExiT_GruposContables_PK");

            entity.ToTable("ExiT_GruposContables");

            entity.Property(e => e.GrupoContId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.FechaVigencia).HasColumnType("datetime");
            entity.Property(e => e.GrupoContCod)
                .HasMaxLength(10)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.GrupoContDes)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
        });

        modelBuilder.Entity<ExiTGruposContablesCuenta>(entity =>
        {
            entity.HasKey(e => e.GrupoContCuentaId).HasName("ExiT_GruposContablesCuentas_PK");

            entity.ToTable("ExiT_GruposContablesCuentas");

            entity.Property(e => e.GrupoContCuentaId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.PCtaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtaId");
            entity.Property(e => e.PEntId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntId");
            entity.Property(e => e.PGrupoContId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pGrupoContId");

            entity.HasOne(d => d.PGrupoCont).WithMany(p => p.ExiTGruposContablesCuenta)
                .HasForeignKey(d => d.PGrupoContId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_GrupContCtapGrupoContableId");

            entity.HasOne(d => d.SituacionContCodNavigation).WithMany(p => p.ExiTGruposContablesCuenta)
                .HasForeignKey(d => d.SituacionContCod)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_GrupContCtaSituacionContCod");
        });

        modelBuilder.Entity<ExiTGruposContablesTipoOpe>(entity =>
        {
            entity.HasKey(e => e.GrupoContTipoOpeId).HasName("ExiT_GruposContablesTipoOpe_PK");

            entity.ToTable("ExiT_GruposContablesTipoOpe");

            entity.Property(e => e.GrupoContTipoOpeId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.FechaVigencia).HasColumnType("datetime");
            entity.Property(e => e.PCtaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtaId");
            entity.Property(e => e.PCtaIngresoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtaIngresoId");
            entity.Property(e => e.PCtaProvisionCosId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtaProvisionCosId");
            entity.Property(e => e.PCtaProvisionIngId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtaProvisionIngId");
            entity.Property(e => e.PGrupoContCuentaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pGrupoContCuentaId");
            entity.Property(e => e.PGrupoContId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pGrupoContId");
            entity.Property(e => e.PTipoOpeId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTipoOpeId");

            entity.HasOne(d => d.PGrupoCont).WithMany(p => p.ExiTGruposContablesTipoOpes)
                .HasForeignKey(d => d.PGrupoContId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_GrupContTipoOpeGrupocontableId");
        });

        modelBuilder.Entity<ExiTIdiomaEspTecnica>(entity =>
        {
            entity.HasKey(e => e.IdiomaEspId).HasName("ExiT_idiomaEspTecnica_PK");

            entity.ToTable("ExiT_IdiomaEspTecnica");

            entity.Property(e => e.IdiomaEspId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.IdiomaEspDes)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<ExiTPlanta>(entity =>
        {
            entity.HasKey(e => e.PlantaId).HasName("ExiT_Plantas_PK");

            entity.ToTable("ExiT_Plantas");

            entity.Property(e => e.PlantaId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.FechaVigencia).HasColumnType("datetime");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.IndClienteRetail).HasColumnName("Ind_ClienteRetail");
            entity.Property(e => e.PlantaDes)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PlantaDir)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<ExiTProducto>(entity =>
        {
            entity.HasKey(e => e.ProductoId).HasName("ExiT_Productos_PK");

            entity.ToTable("ExiT_Productos", tb => tb.HasTrigger("ExiT_Productos_Delete"));

            entity.HasIndex(e => e.FechaVigencia, "ExiT_Productos_I2").HasFillFactor(90);

            entity.HasIndex(e => new { e.IndicaSerie, e.IndicaLote, e.ProductoId, e.PCategoriaId }, "ExiT_Productos_idx050");

            entity.HasIndex(e => new { e.IndicaLote, e.IndValorizaLote, e.ProductoId, e.PCategoriaId }, "ExiT_Productos_idx051");

            entity.HasIndex(e => new { e.PCategoriaId, e.ProductoId, e.PUnidadMedId, e.IndicaSerie, e.IndicaLote, e.ProductoDes, e.ProductoDesTec, e.FechaVigencia }, "ExiT_Productos_idx052");

            entity.HasIndex(e => new { e.ProductoId, e.PUnidadMedId, e.IndicaSerie, e.IndicaLote, e.ProductoDes, e.ProductoDesTec, e.PCategoriaId, e.FechaVigencia }, "ExiT_Productos_idx053");

            entity.HasIndex(e => new { e.IndValorizaLote, e.ProductoId, e.PCategoriaId, e.PUnidadMedId, e.PUnidadMed2Id, e.ProductoCod }, "ExiT_Productos_idx054");

            entity.HasIndex(e => new { e.ProductoId, e.PCategoriaId, e.PUnidadMedId, e.PUnidadMed2Id, e.ProductoCod, e.IndValorizaLote }, "ExiT_Productos_idx055");

            entity.HasIndex(e => new { e.IndValorizaLote, e.PCategoriaId, e.ProductoId, e.PUnidadMedId, e.PUnidadMed2Id, e.ProductoCod }, "ExiT_Productos_idx056");

            entity.HasIndex(e => new { e.ProductoId, e.PCategoriaId, e.ProductoCod, e.ProductoDes }, "ExiT_Productos_idx057");

            entity.HasIndex(e => e.IndValorizaLote, "ExiT_Productos_idx058");

            entity.HasIndex(e => new { e.ProductoCod, e.ProductoId, e.PCategoriaId, e.ProductoDes }, "ExiT_Productos_idx060");

            entity.HasIndex(e => new { e.IndValorizaLote, e.ProductoId, e.PCategoriaId }, "ExiT_Productos_idx081");

            entity.HasIndex(e => new { e.PCategoriaId, e.ProductoId, e.IndValorizaLote }, "ExiT_Productos_idx082");

            entity.HasIndex(e => new { e.IndValorizaLote, e.PCategoriaId }, "ExiT_Productos_idx083");

            entity.HasIndex(e => new { e.ProductoId, e.IndAbastecimiento }, "Exit_Productos_idx099");

            entity.Property(e => e.ProductoId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.FechaVigencia).HasColumnType("datetime");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.IndAfectoVnr).HasColumnName("IndAfectoVNR");
            entity.Property(e => e.IntWms).HasColumnName("IntWMS");
            entity.Property(e => e.PCategoriaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCategoriaId");
            entity.Property(e => e.PEntId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntId");
            entity.Property(e => e.PMarcaId)
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("pMarcaId");
            entity.Property(e => e.PMonedaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMonedaId");
            entity.Property(e => e.PUnidadMed2Id)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pUnidadMed2Id");
            entity.Property(e => e.PUnidadMedId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pUnidadMedId");
            entity.Property(e => e.ProductoCod)
                .HasMaxLength(25)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.ProductoDes)
                .HasMaxLength(50)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.ProductoDesTec)
                .HasMaxLength(255)
                .IsUnicode(false);
        });

        modelBuilder.Entity<ExiTProductoImpEspecial>(entity =>
        {
            entity.HasKey(e => e.ProductoEspId).HasName("ExiT_ProductoImpEspecial_PK");

            entity.ToTable("ExiT_ProductoImpEspecial");

            entity.Property(e => e.ProductoEspId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.PProductoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pProductoId");
        });

        modelBuilder.Entity<ExiTProductosAdicionale>(entity =>
        {
            entity.HasKey(e => e.ProductoAdicionalId).HasName("ExiT_ProductosAdicionales_PK");

            entity.ToTable("ExiT_ProductosAdicionales");

            entity.HasIndex(e => new { e.PProductoId, e.PTipoProductoId, e.ProductoAdicionalId }, "ExiT_ProductosAdicionales_idx050");

            entity.Property(e => e.ProductoAdicionalId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.Brix)
                .HasMaxLength(25)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.CalcNumeroPallet)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.Clave1)
                .HasMaxLength(25)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.Clave2)
                .HasMaxLength(25)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.Lote)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PProductoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pProductoId");
            entity.Property(e => e.PProductoTransformacionId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pProductoTransformacionId");
            entity.Property(e => e.PServicioId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pServicioId");
            entity.Property(e => e.PTipoProductoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTipoProductoId");
            entity.Property(e => e.Pallet)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.UnidadTiempo)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<ExiTProductosCategoria>(entity =>
        {
            entity.HasKey(e => e.CategoriaId).HasName("ExiT_ProductosCategorias_PK");

            entity.ToTable("ExiT_ProductosCategorias");

            entity.Property(e => e.CategoriaId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.CategoriaCod)
                .HasMaxLength(10)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.CategoriaDes)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.FechaVigencia).HasColumnType("datetime");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PCdiId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCdiId");
            entity.Property(e => e.PCreId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCreId");
            entity.Property(e => e.PGrupoContId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pGrupoContId");
            entity.Property(e => e.PLineaProdId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pLineaProdId");

            entity.HasOne(d => d.PGrupoCont).WithMany(p => p.ExiTProductosCategoria)
                .HasForeignKey(d => d.PGrupoContId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_ProdCatGrupoContableId");

            entity.HasOne(d => d.PLineaProd).WithMany(p => p.ExiTProductosCategoria)
                .HasForeignKey(d => d.PLineaProdId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_ProdCatLineaProdId");
        });

        modelBuilder.Entity<ExiTProductosClasificacion>(entity =>
        {
            entity.HasKey(e => e.ProdClasId).HasName("ExiT_ProductosClasificacion_PK");

            entity.ToTable("ExiT_ProductosClasificacion");

            entity.Property(e => e.ProdClasId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.ExiOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.ProdClasDes)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.ProdClasNivel1Des)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.ProdClasNivel2Des)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.ProdClasNivel3Des)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.ProdClasNivel4Des)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.ProdClasNivel5Des)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.ProdClasNivel6Des)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.ProdClasNivel7Des)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<ExiTProductosClasificacionNivel>(entity =>
        {
            entity.HasKey(e => e.ProdClasNivelNodoId).HasName("ExiT_ProductosClasificacionNivel_PK");

            entity.ToTable("ExiT_ProductosClasificacionNivel");

            entity.HasIndex(e => new { e.PProdClasId, e.ProdClasNivel1Nodo, e.ProdClasNivel2Nodo, e.ProdClasNivel3Nodo, e.ProdClasNivel4Nodo, e.ProdClasNivel5Nodo, e.ProdClasNivel6Nodo, e.ProdClasNivel7Nodo, e.PProductoId }, "ExiT_ProductosClasificacionNivel_idx050");

            entity.HasIndex(e => new { e.PProductoId, e.PProdClasId, e.ProdClasNivel1Nodo, e.ProdClasNivel2Nodo, e.ProdClasNivel3Nodo, e.ProdClasNivel4Nodo, e.ProdClasNivel5Nodo, e.ProdClasNivel6Nodo, e.ProdClasNivel7Nodo }, "ExiT_ProductosClasificacionNivel_idx051");

            entity.HasIndex(e => new { e.PProdClasId, e.PProductoId, e.ProdClasNivel1Nodo, e.ProdClasNivel2Nodo, e.ProdClasNivel3Nodo, e.ProdClasNivel4Nodo, e.ProdClasNivel5Nodo, e.ProdClasNivel6Nodo, e.ProdClasNivel7Nodo }, "ExiT_ProductosClasificacionNivel_idx052");

            entity.Property(e => e.ProdClasNivelNodoId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.PProdClasId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pProdClasId");
            entity.Property(e => e.PProductoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pProductoId");
            entity.Property(e => e.PServicioId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pServicioId");
            entity.Property(e => e.ProdClasNivelNodoDes)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.ProdClasNodoCodigoAlt)
                .HasMaxLength(25)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<ExiTProductosCodigo>(entity =>
        {
            entity.HasKey(e => e.ProductoCodId).HasName("ExiT_ProductosCodigos_PK");

            entity.ToTable("ExiT_ProductosCodigos");

            entity.HasIndex(e => new { e.ProductoCod, e.PTipoCodigoId, e.PProductoId }, "ExiT_ProductosCodigos_idx050");

            entity.HasIndex(e => new { e.PTipoCodigoId, e.ProductoCod, e.PProductoId }, "ExiT_ProductosCodigos_idx051");

            entity.HasIndex(e => new { e.PProductoId, e.ProductoCod, e.PTipoCodigoId }, "ExiT_ProductosCodigos_idx052");

            entity.HasIndex(e => new { e.PProductoId, e.PTipoCodigoId, e.ProductoCod }, "ExiT_ProductosCodigos_idx053");

            entity.Property(e => e.ProductoCodId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PEntId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntId");
            entity.Property(e => e.PEstCodigoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEstCodigoId");
            entity.Property(e => e.PProductoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pProductoId");
            entity.Property(e => e.PTipoCodigoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTipoCodigoId");
            entity.Property(e => e.ProductoCod)
                .HasMaxLength(25)
                .IsUnicode(false)
                .IsFixedLength();

            entity.HasOne(d => d.PEstCodigo).WithMany(p => p.ExiTProductosCodigos)
                .HasForeignKey(d => d.PEstCodigoId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_ProdCodEstructuraCodigoId");

            entity.HasOne(d => d.PProducto).WithMany(p => p.ExiTProductosCodigos)
                .HasForeignKey(d => d.PProductoId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_ProdCodProductoId");

            entity.HasOne(d => d.PTipoCodigo).WithMany(p => p.ExiTProductosCodigos)
                .HasForeignKey(d => d.PTipoCodigoId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_ProdCodTipoCodigoId");
        });

        modelBuilder.Entity<ExiTProductosCodigosResp29032017>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("ExiT_ProductosCodigos_resp29032017");

            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PEntId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntId");
            entity.Property(e => e.PEstCodigoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEstCodigoId");
            entity.Property(e => e.PProductoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pProductoId");
            entity.Property(e => e.PTipoCodigoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTipoCodigoId");
            entity.Property(e => e.ProductoCod)
                .HasMaxLength(25)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.ProductoCodId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
        });

        modelBuilder.Entity<ExiTProductosEspTecCab>(entity =>
        {
            entity.HasKey(e => e.ProductoEspTecId).HasName("ExiT_ProductosEspTecCab_PK");

            entity.ToTable("ExiT_ProductosEspTecCab");

            entity.Property(e => e.ProductoEspTecId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.FechaVigencia).HasColumnType("datetime");
            entity.Property(e => e.GlosaCortaEspTec)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PIdiomaEspId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pIdiomaEspId");
            entity.Property(e => e.PProductoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pProductoId");
            entity.Property(e => e.PServicioId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pServicioId");

            entity.HasOne(d => d.PIdiomaEsp).WithMany(p => p.ExiTProductosEspTecCabs)
                .HasForeignKey(d => d.PIdiomaEspId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_ProductosEspTecCabIdiomaEspId");

            entity.HasOne(d => d.PProducto).WithMany(p => p.ExiTProductosEspTecCabs)
                .HasForeignKey(d => d.PProductoId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_ProductosEspTecCabProductoId");
        });

        modelBuilder.Entity<ExiTProductosEspTecDet>(entity =>
        {
            entity.HasKey(e => e.ProductoEspTecDetId).HasName("ExiT_ProductosEspTecDet_PK");

            entity.ToTable("ExiT_ProductosEspTecDet");

            entity.Property(e => e.ProductoEspTecDetId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.DescripcionTec)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.PProductoEspTecId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pProductoEspTecId");
            entity.Property(e => e.PUnidadMedId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pUnidadMedId");

            entity.HasOne(d => d.PProductoEspTec).WithMany(p => p.ExiTProductosEspTecDets)
                .HasForeignKey(d => d.PProductoEspTecId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_ProductosEspTecProductoEspTecId");
        });

        modelBuilder.Entity<ExiTProductosGenEsp>(entity =>
        {
            entity.HasKey(e => new { e.PProductoGenericoId, e.PProductoId }).HasName("ExiT_ProductosGenEsp_PK");

            entity.ToTable("ExiT_ProductosGenEsp");

            entity.HasIndex(e => e.PProductoId, "ExiT_ProductosGenEsp_idx050");

            entity.Property(e => e.PProductoGenericoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pProductoGenericoId");
            entity.Property(e => e.PProductoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pProductoId");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
        });

        modelBuilder.Entity<ExiTProductosLinea>(entity =>
        {
            entity.HasKey(e => e.LineaProdId).HasName("ExiT_ProductosLineas_PK");

            entity.ToTable("ExiT_ProductosLineas");

            entity.Property(e => e.LineaProdId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.FechaVigencia).HasColumnType("datetime");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.LineaProdCod)
                .HasMaxLength(10)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.LineaProdDes)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<ExiTProductosRecetum>(entity =>
        {
            entity.HasKey(e => e.ProductoRecId).HasName("ExiT_ProductosReceta_PK");

            entity.ToTable("ExiT_ProductosReceta");

            entity.Property(e => e.ProductoRecId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PProductoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pProductoId");
            entity.Property(e => e.PProductoRecetaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pProductoRecetaId");
            entity.Property(e => e.PTipoComponenteId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTipoComponenteId");

            entity.HasOne(d => d.PProducto).WithMany(p => p.ExiTProductosRecetumPProductos)
                .HasForeignKey(d => d.PProductoId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_ProdRecProductoId");

            entity.HasOne(d => d.PProductoReceta).WithMany(p => p.ExiTProductosRecetumPProductoReceta)
                .HasForeignKey(d => d.PProductoRecetaId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_ProdRecProductoRecetaId");
        });

        modelBuilder.Entity<ExiTProductosResp29032017>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("ExiT_Productos_resp29032017");

            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.FechaVigencia).HasColumnType("datetime");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.IndAfectoVnr).HasColumnName("IndAfectoVNR");
            entity.Property(e => e.IntWms).HasColumnName("IntWMS");
            entity.Property(e => e.PCategoriaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCategoriaId");
            entity.Property(e => e.PEntId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntId");
            entity.Property(e => e.PMarcaId)
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("pMarcaId");
            entity.Property(e => e.PMonedaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMonedaId");
            entity.Property(e => e.PUnidadMed2Id)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pUnidadMed2Id");
            entity.Property(e => e.PUnidadMedId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pUnidadMedId");
            entity.Property(e => e.ProductoCod)
                .HasMaxLength(25)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.ProductoDes)
                .HasMaxLength(50)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.ProductoDesTec)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.ProductoId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
        });

        modelBuilder.Entity<ExiTProductosUnidadesMedidum>(entity =>
        {
            entity.HasKey(e => e.ProductoUnidadMedidaId).HasName("ExiT_ProductosUnidadesMedida_PK");

            entity.ToTable("ExiT_ProductosUnidadesMedida");

            entity.HasIndex(e => new { e.PProductoId, e.PUnidadMedStockId, e.UnidadMedConversion, e.UnidadMedMultDivide, e.ProductoUnidadMedidaId }, "ExiT_ProductosUnidadesMedida_idx050");

            entity.HasIndex(e => new { e.PProductoId, e.PUnidadMedStockId, e.PUnidadMedId, e.ProductoUnidadMedidaId, e.UnidadMedConversion, e.UnidadMedMultDivide }, "ExiT_ProductosUnidadesMedida_idx051");

            entity.Property(e => e.ProductoUnidadMedidaId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.PProductoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pProductoId");
            entity.Property(e => e.PUnidadMedId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pUnidadMedId");
            entity.Property(e => e.PUnidadMedStockId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pUnidadMedStockId");
            entity.Property(e => e.UnidadMedFechaVigencia).HasColumnType("datetime");

            entity.HasOne(d => d.PProducto).WithMany(p => p.ExiTProductosUnidadesMedida)
                .HasForeignKey(d => d.PProductoId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_ProdUniMedProductoId");

            entity.HasOne(d => d.PUnidadMed).WithMany(p => p.ExiTProductosUnidadesMedida)
                .HasForeignKey(d => d.PUnidadMedId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_ProdUniMedUnidadMedId");
        });

        modelBuilder.Entity<ExiTServicio>(entity =>
        {
            entity.HasKey(e => e.ServicioId).HasName("ExiT_Servicios_PK");

            entity.ToTable("ExiT_Servicios", tb => tb.HasTrigger("ExiT_Servicios_Delete"));

            entity.Property(e => e.ServicioId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.FechaVigencia).HasColumnType("datetime");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PCategoriaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCategoriaId");
            entity.Property(e => e.PUnidadMedId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pUnidadMedId");
            entity.Property(e => e.ServicioCod)
                .HasMaxLength(25)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.ServicioDes)
                .HasMaxLength(50)
                .IsUnicode(false)
                .IsFixedLength();

            entity.HasOne(d => d.PCategoria).WithMany(p => p.ExiTServicios)
                .HasForeignKey(d => d.PCategoriaId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_ServiciosCategoriaId");

            entity.HasOne(d => d.PUnidadMed).WithMany(p => p.ExiTServicios)
                .HasForeignKey(d => d.PUnidadMedId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_ServiciosUnidadMedId");
        });

        modelBuilder.Entity<ExiTTipoCodigo>(entity =>
        {
            entity.HasKey(e => e.TipoCodigoId).HasName("ExiT_TipoCodigo_PK");

            entity.ToTable("ExiT_TipoCodigo");

            entity.Property(e => e.TipoCodigoId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.TipoCodigoCod)
                .HasMaxLength(10)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.TipoCodigoDes)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<ExiTTipoComponenteRecetum>(entity =>
        {
            entity.HasKey(e => e.TipoComponenteId).HasName("ExiT_TipoComponenteRec_PK");

            entity.ToTable("ExiT_TipoComponenteReceta");

            entity.Property(e => e.TipoComponenteId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.TipoComponenteCod)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<ExiTTipoPlantum>(entity =>
        {
            entity.HasKey(e => e.Codigo).HasName("ExiT_TipoPlanta_PK");

            entity.ToTable("ExiT_TipoPlanta");

            entity.HasIndex(e => e.Codigo, "ExiT_TipoPlanta_I1");

            entity.Property(e => e.Codigo).ValueGeneratedNever();
            entity.Property(e => e.Descripcion)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<ExiTTipoServicio>(entity =>
        {
            entity.HasKey(e => e.TseCodigo).HasName("Pk_ExiT_TipoServicio");

            entity.ToTable("ExiT_TipoServicio");

            entity.Property(e => e.TseGlosa)
                .HasMaxLength(40)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<ExiTTipoTransporte>(entity =>
        {
            entity.HasKey(e => e.TipoTranspCod).HasName("ExiT_TipoTransporte_PK");

            entity.ToTable("ExiT_TipoTransporte");

            entity.Property(e => e.TipoTranspDes)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<ExiTTipoValorizacion>(entity =>
        {
            entity.HasKey(e => e.IndValorizaLote).HasName("Pk_ExiT_TipoValorizacion");

            entity.ToTable("ExiT_TipoValorizacion");

            entity.Property(e => e.TipoValorizacionDes)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<ExiTTipoVehiculo>(entity =>
        {
            entity.HasKey(e => e.TipoVehId).HasName("ExiT_TipoVehiculo_PK");

            entity.ToTable("ExiT_TipoVehiculo");

            entity.Property(e => e.TipoVehId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.FechaVigencia).HasColumnType("datetime");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.TipoVehCod)
                .HasMaxLength(10)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.TipoVehDes)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<ExiTTransportistum>(entity =>
        {
            entity.HasKey(e => e.TranspId).HasName("ExiT_Transportista_PK");

            entity.ToTable("ExiT_Transportista");

            entity.Property(e => e.TranspId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.ExiOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.GlosaExis)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PEntId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntId");
            entity.Property(e => e.POpeLogtCabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pOpeLogtCabId");
            entity.Property(e => e.PTipoVehId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTipoVehId");
            entity.Property(e => e.TranspChofer)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.TranspPatente)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<ExiTUbicacione>(entity =>
        {
            entity.HasKey(e => e.UbicacionId).HasName("ExiT_Ubicaciones_PK");

            entity.ToTable("ExiT_Ubicaciones");

            entity.Property(e => e.UbicacionId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.Columna)
                .HasMaxLength(5)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.FechaVigencia).HasColumnType("datetime");
            entity.Property(e => e.Fila)
                .HasMaxLength(5)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PBodegaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pBodegaId");
            entity.Property(e => e.Pasillo)
                .HasMaxLength(5)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.Subdivision)
                .HasMaxLength(5)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.UbicacionDes)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.Zona)
                .HasMaxLength(5)
                .IsUnicode(false)
                .IsFixedLength();

            entity.HasOne(d => d.PBodega).WithMany(p => p.ExiTUbicaciones)
                .HasForeignKey(d => d.PBodegaId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_UbicacionesBodegaId");
        });

        modelBuilder.Entity<ExiTUnidadesMedidum>(entity =>
        {
            entity.HasKey(e => e.UnidadMedId).HasName("ExiT_UnidadesMedida_PK");

            entity.ToTable("ExiT_UnidadesMedida");

            entity.Property(e => e.UnidadMedId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.FechaVigencia).HasColumnType("datetime");
            entity.Property(e => e.UnidadMedCod)
                .HasMaxLength(10)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.UnidadMedDes)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<ExiTUsuarioBodegaCentro>(entity =>
        {
            entity.HasKey(e => new { e.FldUserCode, e.PEmpId, e.PBodegaId, e.PCconsumoId }).HasName("ExiT_UsuarioBodegaCentro_PK");

            entity.ToTable("ExiT_UsuarioBodegaCentro");

            entity.HasIndex(e => new { e.FldUserCode, e.PBodegaId }, "ExiT_UsuarioBodegaCentro_idx050");

            entity.Property(e => e.FldUserCode)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("fld_UserCode");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PBodegaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pBodegaId");
            entity.Property(e => e.PCconsumoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCConsumoId");
            entity.Property(e => e.PBodegaIdDefault)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pBodegaIdDefault");
            entity.Property(e => e.PCconsumoIdDefault)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCConsumoIdDefault");
        });

        modelBuilder.Entity<ExiTUsuarioPlanta>(entity =>
        {
            entity.HasKey(e => new { e.FldUserCode, e.PPlantaId }).HasName("ExiT_UsuarioPlantas_PK");

            entity.ToTable("ExiT_UsuarioPlantas");

            entity.Property(e => e.FldUserCode)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("fld_UserCode");
            entity.Property(e => e.PPlantaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pPlantaId");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
        });

        modelBuilder.Entity<FljTCabEveNoContab>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("FljT_CabEveNoContab");

            entity.Property(e => e.DocCceFecVenc).HasColumnType("datetime");
            entity.Property(e => e.DocCceNumero)
                .HasMaxLength(25)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EntRut)
                .HasMaxLength(12)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.MovCceGlosa)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PCreId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCreId");
            entity.Property(e => e.PCtaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtaId");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PMonedaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMonedaId");
            entity.Property(e => e.ProDocFecha).HasColumnType("datetime");
            entity.Property(e => e.TesSdoMontoOriginal).HasColumnType("money");
            entity.Property(e => e.TipoFlujoCod).HasColumnType("numeric(9, 0)");
        });

        modelBuilder.Entity<FljTCabeceraFlujo>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("FljT_CabeceraFlujo");

            entity.Property(e => e.EntSucId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.MovCceGlosa)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PCtaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtaId");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PMonedaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMonedaId");
            entity.Property(e => e.PTprId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTprId");
            entity.Property(e => e.PryNumero)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.TesDocFecha).HasColumnType("datetime");
            entity.Property(e => e.TesDocMontoImpuDebe).HasColumnType("money");
            entity.Property(e => e.TesDocMontoImpuHaber).HasColumnType("money");
            entity.Property(e => e.TesDocMontoLocalDebe).HasColumnType("money");
            entity.Property(e => e.TesDocMontoLocalHaber).HasColumnType("money");
            entity.Property(e => e.TesDocNumDocCalce)
                .HasMaxLength(25)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.TesRut)
                .HasMaxLength(12)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<FljTDetEveNoContab>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("FljT_DetEveNoContab");

            entity.Property(e => e.DocCceNumero)
                .HasMaxLength(25)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.MovRut)
                .HasMaxLength(12)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PCtaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtaId");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PMonedaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMonedaId");
            entity.Property(e => e.TesDocFecha).HasColumnType("datetime");
            entity.Property(e => e.TesDocMontoImpuDebe).HasColumnType("money");
            entity.Property(e => e.TesDocMontoImpuHaber).HasColumnType("money");
            entity.Property(e => e.TesDocMontoLocalDebe).HasColumnType("money");
            entity.Property(e => e.TesDocMontoLocalHaber).HasColumnType("money");
        });

        modelBuilder.Entity<FljTDetalleFlujo>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("FljT_DetalleFlujo");

            entity.Property(e => e.ChequeGlosa)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.CodCtaCteBco)
                .HasMaxLength(15)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.DocNumDocCalce)
                .HasMaxLength(25)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PCreId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCreId");
            entity.Property(e => e.PCtaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtaId");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PMonedaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMonedaId");
            entity.Property(e => e.PTprId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTprId");
            entity.Property(e => e.PryNumero)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.Rut)
                .HasMaxLength(12)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.TesDocFecha).HasColumnType("datetime");
        });

        modelBuilder.Entity<GesTConfiguracion>(entity =>
        {
            entity.HasKey(e => new { e.PEmpId, e.EjeAno }).HasName("GesT_Configuracion_PK");

            entity.ToTable("GesT_Configuracion");

            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PPuntoReordenId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pPuntoReordenId");
        });

        modelBuilder.Entity<GesTEstadisticasConsumo>(entity =>
        {
            entity.HasKey(e => new { e.PEmpId, e.DivCodigo, e.EjeAno, e.PerId, e.PProductoId, e.PBodegaId, e.SituacionContCod, e.EstadoProdCod }).HasName("GesT_EsadisticasConsumo_PK");

            entity.ToTable("GesT_EstadisticasConsumo");

            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PProductoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pProductoId");
            entity.Property(e => e.PBodegaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pBodegaId");
            entity.Property(e => e.CantEntradas).HasColumnType("money");
            entity.Property(e => e.CantSalidas).HasColumnType("money");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.FechaProceso).HasColumnType("datetime");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionalidad)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcionalidad");
            entity.Property(e => e.IdUsuario)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.ValorEntradas).HasColumnType("money");
            entity.Property(e => e.ValorSalidas).HasColumnType("money");
        });

        modelBuilder.Entity<GesTGruposCompra>(entity =>
        {
            entity.HasKey(e => new { e.PEmpId, e.GrpCompCod }).HasName("GesT_GruposCOmpra_PK");

            entity.ToTable("GesT_GruposCompra");

            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.GrpCompCod)
                .HasMaxLength(10)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EntRut)
                .HasMaxLength(12)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.FechaProxRevision).HasColumnType("datetime");
            entity.Property(e => e.FechaUltRevision).HasColumnType("datetime");
            entity.Property(e => e.FechaVigencia).HasColumnType("datetime");
            entity.Property(e => e.GrpCompGlosa)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionalidad)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcionalidad");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
        });

        modelBuilder.Entity<GesTGruposConsumo>(entity =>
        {
            entity.HasKey(e => new { e.PEmpId, e.GrpConsCod }).HasName("GesI_GruposConsumo");

            entity.ToTable("GesT_GruposConsumo");

            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.GrpConsCod)
                .HasMaxLength(10)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.FechaVigencia).HasColumnType("datetime");
            entity.Property(e => e.GrpConsGlosa)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionalidad)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcionalidad");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PPerConId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pPerConId");
        });

        modelBuilder.Entity<GesTPeriodosConsumo>(entity =>
        {
            entity.HasKey(e => e.PerConId).HasName("GesT_periodosConsumo_PK");

            entity.ToTable("GesT_PeriodosConsumo");

            entity.Property(e => e.PerConId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.PerConDes)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<GesTPuntoReorden>(entity =>
        {
            entity.HasKey(e => e.PuntoReordenId).HasName("GesT_PuntoReorden_PK");

            entity.ToTable("GesT_PuntoReorden");

            entity.HasIndex(e => e.PuntoReordenCod, "GesT_PuntoReorden_I1").IsUnique();

            entity.Property(e => e.PuntoReordenId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.PuntoReordenDes)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<GesTReposicion>(entity =>
        {
            entity.HasKey(e => new { e.PEmpId, e.PProductoId, e.PBodegaId, e.SituacionContCod, e.EstadoProdCod }).HasName("GesT_Reposicion_PK");

            entity.ToTable("GesT_Reposicion");

            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PProductoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pProductoId");
            entity.Property(e => e.PBodegaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pBodegaId");
            entity.Property(e => e.CantPropTotal).HasColumnType("money");
            entity.Property(e => e.CantReqTotal).HasColumnType("money");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.FechaProxRevision).HasColumnType("datetime");
            entity.Property(e => e.FechaUltRevision).HasColumnType("datetime");
            entity.Property(e => e.GrpCompCod)
                .HasMaxLength(10)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.GrpConsCod)
                .HasMaxLength(10)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.IndRut).HasColumnName("indRut");
            entity.Property(e => e.NivArtCritico).HasColumnType("money");
            entity.Property(e => e.NivArtMaximo).HasColumnType("money");
            entity.Property(e => e.NivArtMinimo).HasColumnType("money");
            entity.Property(e => e.PEntId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntId");
            entity.Property(e => e.POcCabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pOcCabId");
            entity.Property(e => e.PPuntoReordenId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pPuntoReordenId");
            entity.Property(e => e.PrecioReq).HasColumnType("money");
            entity.Property(e => e.PrecioUltCompra).HasColumnType("money");
            entity.Property(e => e.StockActual).HasColumnType("money");
            entity.Property(e => e.StockTransTotal).HasColumnType("money");
        });

        modelBuilder.Entity<GesTTiposOpeEst>(entity =>
        {
            entity.HasKey(e => new { e.PEmpId, e.PTipoOpeId }).HasName("GesT_TiposOpeEst_PK");

            entity.ToTable("GesT_TiposOpeEst");

            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PTipoOpeId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTipoOpeId");
        });

        modelBuilder.Entity<GlbTActividadEco>(entity =>
        {
            entity.HasKey(e => e.AecCod).HasName("GlbI_ActividadEco_I01");

            entity.ToTable("GlbT_ActividadEco");

            entity.Property(e => e.AecCod).ValueGeneratedNever();
            entity.Property(e => e.AecGlosa)
                .HasMaxLength(40)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.AecGlosa255)
                .HasMaxLength(255)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<GlbTAgrupaDocumento>(entity =>
        {
            entity.HasKey(e => e.TdoAgrupaCod).HasName("GlbI_AgrupaDocumentos_I01");

            entity.ToTable("GlbT_AgrupaDocumentos");

            entity.Property(e => e.TdoAgrupaCod).ValueGeneratedNever();
            entity.Property(e => e.TdoAgrupaGlosa)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<GlbTAsocUsuMoneda>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("GlbT_AsocUsuMonedas");

            entity.Property(e => e.PMonedaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMonedaId");
            entity.Property(e => e.Usuario)
                .HasMaxLength(50)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<GlbTAsociaCentroProyecto>(entity =>
        {
            entity.HasKey(e => new { e.PCreId, e.PPryId }).HasName("GlbI_AsociaCentroProy_PK");

            entity.ToTable("GlbT_AsociaCentroProyecto");

            entity.Property(e => e.PCreId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCreId");
            entity.Property(e => e.PPryId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pPryId");
        });

        modelBuilder.Entity<GlbTAsociaCuentaCentro>(entity =>
        {
            entity.HasKey(e => new { e.PCtaId, e.PCreId }).HasName("GlbI_AsociaCuentaCentro_PK");

            entity.ToTable("GlbT_AsociaCuentaCentro");

            entity.Property(e => e.PCtaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtaId");
            entity.Property(e => e.PCreId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCreId");
        });

        modelBuilder.Entity<GlbTAsociaCuentaConcepto>(entity =>
        {
            entity.HasKey(e => new { e.PCtaId, e.CdiCodigo }).HasName("GlbI_AsociaCuentaConcepto_PK");

            entity.ToTable("GlbT_AsociaCuentaConcepto");

            entity.Property(e => e.PCtaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtaId");
        });

        modelBuilder.Entity<GlbTAsociaCuentaProyecto>(entity =>
        {
            entity.HasKey(e => new { e.PCtaId, e.PPryId }).HasName("GlbI_AsociaCuentaProy_PK");

            entity.ToTable("GlbT_AsociaCuentaProyecto");

            entity.Property(e => e.PCtaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtaId");
            entity.Property(e => e.PPryId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pPryId");
        });

        modelBuilder.Entity<GlbTAudObjetosFin>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("GlbT_AudObjetosFin");

            entity.Property(e => e.AudAccion)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.AudCampoAfectado)
                .HasMaxLength(100)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.AudDatoAntiguo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.AudDatoNuevo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.AudFecha).HasColumnType("datetime");
            entity.Property(e => e.AudUsuario)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.AuditoriaId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.PCreId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCreId");
            entity.Property(e => e.PCtaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtaId");
            entity.Property(e => e.PMonedaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMonedaId");
            entity.Property(e => e.PPcreId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pPcreId");
            entity.Property(e => e.PPctaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pPctaId");
        });

        modelBuilder.Entity<GlbTAuditoriaVd>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("GlbT_AuditoriaVD");

            entity.HasIndex(e => e.AuditoriaId, "GlbI_AuditoriaVD").IsUnique();

            entity.Property(e => e.AudAccion)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.AuditoriaId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.MonVdmDifCm).HasColumnName("MonVdmDifCM");
            entity.Property(e => e.MonVdmFec).HasColumnType("datetime");
            entity.Property(e => e.PMonedaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMonedaId");
        });

        modelBuilder.Entity<GlbTCabeceraMensaje>(entity =>
        {
            entity.HasKey(e => e.CabMenId).HasName("GlbI_CabMensaje_PK");

            entity.ToTable("GlbT_CabeceraMensaje");

            entity.Property(e => e.CabMenId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.CabMenArchivo)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.CabMenAsunto)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.CabMenDe)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.CabMenIdentificador).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.CabMenIndArchivo)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.CabMenMensaje)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
        });

        modelBuilder.Entity<GlbTCaracterEspecialFe>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("GlbT_CaracterEspecialFE");

            entity.Property(e => e.ChrDestino)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.ChrOrigen)
                .HasMaxLength(20)
                .IsUnicode(false);
        });

        modelBuilder.Entity<GlbTCfgEspeciale>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("GlbT_CfgEspeciales");

            entity.Property(e => e.ClienteId)
                .HasMaxLength(10)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.Email)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("EMail");
            entity.Property(e => e.Glosa)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
        });

        modelBuilder.Entity<GlbTCiudade>(entity =>
        {
            entity.HasKey(e => e.CiuCodigo).HasName("GlbI_Ciudades_I01");

            entity.ToTable("GlbT_Ciudades");

            entity.Property(e => e.CiuCodigo).ValueGeneratedNever();
            entity.Property(e => e.CiuNombre)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<GlbTClasificaEntidad>(entity =>
        {
            entity.HasKey(e => new { e.PPdcId, e.ClaCtaNivel1, e.ClaCtaNivel2, e.ClaCtaNivel3, e.ClaCtaNivel4, e.ClaCtaNivel5, e.ClaCtaNivel6, e.ClaCtaNivel7, e.PEntId }).HasName("GlbI_ClasificaEntidad_I01");

            entity.ToTable("GlbT_ClasificaEntidad");

            entity.HasIndex(e => new { e.PPdcId, e.ClaCtaNodoNivel, e.ClaCtaNodoCodigoAlt }, "GlbI_ClasificaEntidad_I02").HasFillFactor(90);

            entity.HasIndex(e => new { e.PEntId, e.PPdcId }, "GlbI_ClasificaEntidad_I03").HasFillFactor(90);

            entity.Property(e => e.PPdcId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pPdcId");
            entity.Property(e => e.PEntId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntId");
            entity.Property(e => e.ClaCtaNodoNombre)
                .HasMaxLength(40)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<GlbTComuna>(entity =>
        {
            entity.HasKey(e => e.CmuCodigo).HasName("GlgI_Comunas_I01");

            entity.ToTable("GlbT_Comunas");

            entity.Property(e => e.CmuCodigo).ValueGeneratedNever();
            entity.Property(e => e.CmuNombre)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<GlbTConfigProcesosSii>(entity =>
        {
            entity.HasKey(e => e.PEmpId).HasName("GlbT_ConfigProcesosSii_01");

            entity.ToTable("GlbT_ConfigProcesosSii");

            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.IndUsaCodOc).HasColumnName("IndUsaCodOC");
            entity.Property(e => e.MailEnviosDteRec)
                .HasMaxLength(250)
                .IsUnicode(false);
            entity.Property(e => e.MailEnviosDteVta)
                .HasMaxLength(250)
                .IsUnicode(false);
            entity.Property(e => e.WebServiceProduccion)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.WebServiceTesting)
                .HasMaxLength(255)
                .IsUnicode(false);
        });

        modelBuilder.Entity<GlbTConfiguracion>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("GlbT_Configuracion");

            entity.Property(e => e.CfgCtaIdInter).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.CfgCtaIdInterFlujo).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.CfgDiasAtrasoDte).HasColumnName("CfgDiasAtrasoDTE");
            entity.Property(e => e.CfgGlosaMailDte)
                .HasColumnType("text")
                .HasColumnName("CfgGlosaMailDTE");
            entity.Property(e => e.CfgMailDte)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("CfgMailDTE");
            entity.Property(e => e.CfgPathArchivosFisicos)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.CfgTiempoHh).HasColumnName("CfgTiempoHH");
            entity.Property(e => e.EmpPwd)
                .HasMaxLength(15)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("EmpPWD");
            entity.Property(e => e.EmpUid)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("EmpUID");
            entity.Property(e => e.IndEmpEmpDiv).HasColumnName("IndEmp_EmpDiv");
            entity.Property(e => e.PEntReceptorId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntReceptorId");
            entity.Property(e => e.PMonedaPaisId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMonedaPaisId");
            entity.Property(e => e.PPdcId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pPdcId");
        });

        modelBuilder.Entity<GlbTCtrUsuario>(entity =>
        {
            entity.HasKey(e => new { e.CtrUsuFuncionalidad, e.CtrUsuUsuario, e.CtrUsuIp, e.CtrUsuOwner }).HasName("GlbI_CtrUsuarios_PK");

            entity.ToTable("GlbT_CtrUsuarios");

            entity.Property(e => e.CtrUsuFuncionalidad)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.CtrUsuUsuario)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.CtrUsuIp)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("CtrUsuIP");
            entity.Property(e => e.CtrUsuFecha).HasColumnType("datetime");
            entity.Property(e => e.CtrUsuGlosa)
                .HasMaxLength(120)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.CtrUsuIdentificador).HasColumnType("numeric(9, 0)");
        });

        modelBuilder.Entity<GlbTDetalleMensaje>(entity =>
        {
            entity.HasKey(e => e.DetMenId).HasName("GlbI_DetMensaje_PK");

            entity.ToTable("GlbT_DetalleMensaje");

            entity.HasIndex(e => e.PCabMenId, "GlbI_DetMensaje_I01").HasFillFactor(90);

            entity.Property(e => e.DetMenId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.DetMenPara)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PCabMenId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCabMenId");
        });

        modelBuilder.Entity<GlbTDivision>(entity =>
        {
            entity.HasKey(e => e.DivCodigo).HasName("GlbI_Division_I01");

            entity.ToTable("GlbT_Division");

            entity.Property(e => e.DivCodigo).ValueGeneratedNever();
            entity.Property(e => e.DivGlosa)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<GlbTDocumento>(entity =>
        {
            entity.HasKey(e => e.TdoId).HasName("GlbI_Documentos_I01");

            entity.ToTable("GlbT_Documentos", tb => tb.HasTrigger("Fin700v7_v7_GlbT_Documentos_Delete"));

            entity.Property(e => e.TdoId).ValueGeneratedNever();
            entity.Property(e => e.TdoGlosa)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.TdoNomCorto)
                .HasMaxLength(10)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<GlbTDocumentoFisico>(entity =>
        {
            entity.HasKey(e => e.DocFisId).HasName("GlbI_DocFis_PK");

            entity.ToTable("GlbT_DocumentoFisico");

            entity.Property(e => e.DocFisId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.DocFisArchivo)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.DocFisNumero)
                .HasMaxLength(25)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.DocFisRuta)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionalidad)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcionalidad");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PDocumentoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pDocumentoId");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PEntId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntId");
        });

        modelBuilder.Entity<GlbTDocumentosSistema>(entity =>
        {
            entity.HasKey(e => e.DocSisId).HasName("GlbI_DocSis_PK");

            entity.ToTable("GlbT_DocumentosSistemas");

            entity.HasIndex(e => new { e.SisCodOri, e.TdoId }, "GlbI_DocSis_I01").IsUnique();

            entity.Property(e => e.DocSisId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.DocSisFecVigencia).HasColumnType("datetime");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
        });

        modelBuilder.Entity<GlbTEjercicio>(entity =>
        {
            entity.HasKey(e => new { e.PEmpId, e.EjeAno }).HasName("GlbI_Ejercicios_I01");

            entity.ToTable("GlbT_Ejercicios");

            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
        });

        modelBuilder.Entity<GlbTEmpresa>(entity =>
        {
            entity.HasKey(e => e.EmpId).HasName("GlbI_Empresas_I01");

            entity.ToTable("GlbT_Empresas");

            entity.Property(e => e.EmpId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EmpFecAutorizaSii)
                .HasColumnType("datetime")
                .HasColumnName("EmpFecAutorizaSII");
            entity.Property(e => e.EmpFecIniActividad).HasColumnType("datetime");
            entity.Property(e => e.EmpFecIniTransac).HasColumnType("datetime");
            entity.Property(e => e.EmpIndCertDesctoGlobal)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EmpIndRecepcionaLc).HasColumnName("EmpIndRecepcionaLC");
            entity.Property(e => e.EmpMailContactoEmp)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EmpMailContactoSii)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("EmpMailContactoSII");
            entity.Property(e => e.EmpMailTexto)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.EmpNomContGeneral)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EmpNomRepLegal)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EmpNumRegContador)
                .HasMaxLength(15)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EmpNumResolucion).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EmpRolComercial)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EmpRolCredito)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EmpRolLogistico)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EmpRolOtro)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EmpRutcontGeneral)
                .HasMaxLength(12)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("EmpRUTContGeneral");
            entity.Property(e => e.EmpRutrepLegal)
                .HasMaxLength(12)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("EmpRUTRepLegal");
            entity.Property(e => e.EmpUsaLprecio).HasColumnName("EmpUsaLPrecio");
            entity.Property(e => e.PEntId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntId");
            entity.Property(e => e.PEntIdAdmDte)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntIdAdmDTE");
        });

        modelBuilder.Entity<GlbTEmpresaCentroResp>(entity =>
        {
            entity.HasKey(e => new { e.PEmpId, e.PCreId }).HasName("GlbI_EmpCenRes_PK");

            entity.ToTable("GlbT_EmpresaCentroResp");

            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PCreId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCreId");
        });

        modelBuilder.Entity<GlbTEmpresaCobrador>(entity =>
        {
            entity.HasKey(e => new { e.PEmpId, e.UniCodigoCbza, e.FldUserCode }).HasName("PK_GlbT_EmpCob");

            entity.ToTable("GlbT_EmpresaCobrador");

            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.FldUserCode)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("fld_UserCode");
        });

        modelBuilder.Entity<GlbTEmpresaCodigoFin>(entity =>
        {
            entity.HasKey(e => new { e.PEmpId, e.CfiCodigo }).HasName("GlbI_EmpCodFin_PK");

            entity.ToTable("GlbT_EmpresaCodigoFin");

            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
        });

        modelBuilder.Entity<GlbTEmpresaConceptoImp>(entity =>
        {
            entity.HasKey(e => new { e.PEmpId, e.CdiCodigo }).HasName("GlbI_EmpConImp_PK");

            entity.ToTable("GlbT_EmpresaConceptoImp");

            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
        });

        modelBuilder.Entity<GlbTEmpresaCuentaFinanza>(entity =>
        {
            entity.HasKey(e => new { e.PEmpId, e.TipCtaFin, e.PCtaId }).HasName("GlbI_EmpresaCtaFinanzas_PK");

            entity.ToTable("GlbT_EmpresaCuentaFinanza");

            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PCtaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtaId");
        });

        modelBuilder.Entity<GlbTEmpresaCuentum>(entity =>
        {
            entity.HasKey(e => new { e.PEmpId, e.PCtaId }).HasName("GlbI_EmpCta_PK");

            entity.ToTable("GlbT_EmpresaCuenta");

            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PCtaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtaId");
        });

        modelBuilder.Entity<GlbTEmpresaDivCentro>(entity =>
        {
            entity.HasKey(e => new { e.PEmpId, e.DivCodigo, e.PCreId }).HasName("GlbI_EmpDivCen_PK");

            entity.ToTable("GlbT_EmpresaDivCentro");

            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PCreId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCreId");
        });

        modelBuilder.Entity<GlbTEmpresaDivision>(entity =>
        {
            entity.HasKey(e => new { e.PEmpId, e.DivCodigo }).HasName("GlbI_EmpDiv_PK");

            entity.ToTable("GlbT_EmpresaDivision");

            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
        });

        modelBuilder.Entity<GlbTEmpresaVendedor>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("GlbT_EmpresaVendedor");

            entity.Property(e => e.FldUserCode)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("fld_UserCode");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
        });

        modelBuilder.Entity<GlbTEntidad>(entity =>
        {
            entity.HasKey(e => e.EntId).HasName("GlbI_Entidad_PK");

            entity.ToTable("GlbT_Entidad", tb =>
                {
                    tb.HasTrigger("Fin700v7_v7_GlbT_Entidad_Delete");
                    tb.HasTrigger("GlbT_Entidad_Delete");
                    tb.HasTrigger("GlbT_Entidadv7_Delete");
                    tb.HasTrigger("GlbT_Entidadv7_Insert");
                    tb.HasTrigger("GlbT_Entidadv7_Update");
                    tb.HasTrigger("Glbt_Entidad_InsUpd");
                });

            entity.HasIndex(e => e.EntRut, "GlbI_Entidad_I1").IsUnique();

            entity.HasIndex(e => new { e.EntId, e.EntRut, e.EntRazonSocial }, "GlbT_Entidad_idx010");

            entity.HasIndex(e => new { e.EntId, e.EntRut }, "GlbT_Entidad_idx_070");

            entity.Property(e => e.EntId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.CodContribuyente)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.Cuit)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("CUIT");
            entity.Property(e => e.EntFecActivacion).HasColumnType("datetime");
            entity.Property(e => e.EntMail)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.EntNomFantasia)
                .HasMaxLength(40)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EntRazonSocial)
                .HasMaxLength(120)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EntRazonSocialExtendida).HasColumnType("text");
            entity.Property(e => e.EntRut)
                .HasMaxLength(12)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EntSitioWeb)
                .HasMaxLength(120)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.IndRetIva).HasColumnName("IndRetIVA");
            entity.Property(e => e.PEntRutHolding)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntRutHolding");
            entity.Property(e => e.PPorcRetId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pPorcRetId");
        });

        modelBuilder.Entity<GlbTEntidadAtributo>(entity =>
        {
            entity.HasKey(e => new { e.CodAtributo, e.IndCategoria }).HasName("GlbI_EntidadAtributos01");

            entity.ToTable("GlbT_EntidadAtributos");

            entity.Property(e => e.EntGlosaAtributo)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<GlbTEntidadAuditorium>(entity =>
        {
            entity.HasKey(e => e.EntAuditoriaId).HasName("GlbI_EntidadAuditoria01");

            entity.ToTable("GlbT_EntidadAuditoria");

            entity.Property(e => e.EntAuditoriaId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EntAudAccion)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EntAudCampoAfectado)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EntAudDatoAntiguo)
                .HasMaxLength(200)
                .IsUnicode(false);
            entity.Property(e => e.EntAudDatoNuevo)
                .HasMaxLength(200)
                .IsUnicode(false);
            entity.Property(e => e.EntAudFechaMod).HasColumnType("datetime");
            entity.Property(e => e.EntAudUsuario)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EntRut)
                .HasMaxLength(12)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PEntConId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntConId");
            entity.Property(e => e.PEntDirId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntDirId");
            entity.Property(e => e.PEntId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntId");
            entity.Property(e => e.PEntSucId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntSucId");
        });

        modelBuilder.Entity<GlbTEntidadBitacoraEstado>(entity =>
        {
            entity.HasKey(e => e.EntBitId).HasName("GlbI_EntBitEst_PK");

            entity.ToTable("GlbT_EntidadBitacoraEstado");

            entity.HasIndex(e => e.PEntId, "I1_GlbT_EntBitEst").HasFillFactor(90);

            entity.Property(e => e.EntBitId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EntBitFecEstado).HasColumnType("datetime");
            entity.Property(e => e.EntBitGlosaEstado)
                .HasMaxLength(255)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EntBitIndEstado)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EntBitUsuEstado)
                .HasMaxLength(15)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PEntId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntId");
        });

        modelBuilder.Entity<GlbTEntidadContacto>(entity =>
        {
            entity.HasKey(e => e.EntConId).HasName("GlbI_EntContacto_PK");

            entity.ToTable("GlbT_EntidadContacto", tb =>
                {
                    tb.HasTrigger("GlbT_EntidadContactov7_Delete");
                    tb.HasTrigger("GlbT_EntidadContactov7_Insert");
                    tb.HasTrigger("GlbT_EntidadContactov7_Update");
                });

            entity.Property(e => e.EntConId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EntConApeMaterno)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EntConApePaterno)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EntConGlosaCargo)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EntConMail)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EntConNombres)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EntConSexo)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PEntDirId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntDirId");
            entity.Property(e => e.PEntId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntId");
        });

        modelBuilder.Entity<GlbTEntidadDireccion>(entity =>
        {
            entity.HasKey(e => e.EntDirId).HasName("GlbI_EntDireccion_PK");

            entity.ToTable("GlbT_EntidadDireccion", tb =>
                {
                    tb.HasTrigger("Fin700v7_v7_GlbT_EntidadDireccion_Delete");
                    tb.HasTrigger("GlbT_EntidadDireccion_Delete");
                    tb.HasTrigger("GlbT_EntidadDireccionv7_Delete");
                    tb.HasTrigger("GlbT_EntidadDireccionv7_Insert");
                    tb.HasTrigger("GlbT_EntidadDireccionv7_Update");
                });

            entity.Property(e => e.EntDirId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EntDirCodPostal)
                .HasMaxLength(15)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EntDirDireccion)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EntDirDireccionLarga)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.EntDirFax)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EntDirFono)
                .HasMaxLength(40)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PEntId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntId");
        });

        modelBuilder.Entity<GlbTEntidadEmpresa>(entity =>
        {
            entity.HasKey(e => e.EntEmpId).HasName("GlbI_EntEmpresa_PK");

            entity.ToTable("GlbT_EntidadEmpresa");

            entity.Property(e => e.EntEmpId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EntEmpCodPresupuesto)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EntEmpTipoClasificacion)
                .HasMaxLength(2)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PEntId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntId");
        });

        modelBuilder.Entity<GlbTEntidadEmpresaSucursal>(entity =>
        {
            entity.HasKey(e => e.EntEmpSucId).HasName("GlbI_EntEmpSuc_PK");

            entity.ToTable("GlbT_EntidadEmpresaSucursal");

            entity.Property(e => e.EntEmpSucId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EntEmpSucCobrador)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PEntEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntEmpId");
        });

        modelBuilder.Entity<GlbTEntidadSucursal>(entity =>
        {
            entity.HasKey(e => e.EntSucId).HasName("GlbI_EntSucursal_PK");

            entity.ToTable("GlbT_EntidadSucursal", tb =>
                {
                    tb.HasTrigger("Fin700v7_v7_GlbT_EntidadSucursal_Delete");
                    tb.HasTrigger("GlbT_EntidadSucursal_Delete");
                    tb.HasTrigger("GlbT_EntidadSucursal_Update");
                    tb.HasTrigger("GlbT_EntidadSucursalv7_Delete");
                    tb.HasTrigger("GlbT_EntidadSucursalv7_Insert");
                    tb.HasTrigger("GlbT_EntidadSucursalv7_Update");
                });

            entity.HasIndex(e => new { e.PEntId, e.EntSucNumero }, "GlbI_EntSucursal_I1").IsUnique();

            entity.HasIndex(e => new { e.PEntId, e.EntSucNumero, e.EntSucId, e.PEntDirId }, "GlbT_EntidadSucursal_idx081");

            entity.Property(e => e.EntSucId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EntSucCodCtaCteBco)
                .HasMaxLength(15)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EntSucCodCtaCteBcoMx)
                .HasMaxLength(25)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EntSucDescripcion)
                .HasMaxLength(120)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PEntConId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntConId");
            entity.Property(e => e.PEntDirId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntDirId");
            entity.Property(e => e.PEntId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntId");
            entity.Property(e => e.PFormaPagoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pFormaPagoId");
        });

        modelBuilder.Entity<GlbTEntidadSucursalContacto>(entity =>
        {
            entity.HasKey(e => e.EntSucConId).HasName("GlbI_EntSucCon_PK");

            entity.ToTable("GlbT_EntidadSucursalContacto");

            entity.Property(e => e.EntSucConId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PEntConId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntConId");
            entity.Property(e => e.PEntSucId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntSucId");
        });

        modelBuilder.Entity<GlbTEscenario>(entity =>
        {
            entity.HasKey(e => e.EscenarioCod).HasName("GlbI_Escenarios01");

            entity.ToTable("GlbT_Escenarios");

            entity.Property(e => e.EscenarioDes)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PCtaIdAjusAuto)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtaIdAjusAuto");
            entity.Property(e => e.PCtaIdCierre)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtaIdCierre");
            entity.Property(e => e.PCtaIdPuente)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtaIdPuente");
        });

        modelBuilder.Entity<GlbTEstadoEntidad>(entity =>
        {
            entity.HasKey(e => e.EstEntCod).HasName("GlbI_EstadoEntidad_PK");

            entity.ToTable("GlbT_EstadoEntidad", tb => tb.HasTrigger("GlbT_EstadoEntidad_Delete"));

            entity.Property(e => e.EstEntGlosa)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<GlbTFechaControlDiv>(entity =>
        {
            entity.HasKey(e => new { e.PEmpId, e.DivCodigo, e.EjeAno, e.SisCodOri, e.FechaControlDivId }).HasName("ConI_FechaControlDiv_PK");

            entity.ToTable("GlbT_FechaControlDiv");

            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.FechaControlDivId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.CfgConFechaMaximaImp).HasColumnType("datetime");
            entity.Property(e => e.CfgConFechaMinimaImp).HasColumnType("datetime");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
        });

        modelBuilder.Entity<GlbTFormaPago>(entity =>
        {
            entity.HasKey(e => e.FormaPagoId).HasName("GlbI_FormaPago_PK");

            entity.ToTable("GlbT_FormaPago");

            entity.Property(e => e.FormaPagoId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.FormaPagoGlosa)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PCtaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtaId");
        });

        modelBuilder.Entity<GlbTFormaPagoBco>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("GlbT_FormaPagoBco");

            entity.Property(e => e.FormaPagoGlosaBco)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<GlbTFormaPagoDet>(entity =>
        {
            entity.HasKey(e => e.FormaPagoDetId).HasName("GlbI_FormaPagodet_PK");

            entity.ToTable("GlbT_FormaPagoDet");

            entity.HasIndex(e => new { e.PFormaPagoId, e.TdoId }, "GlbI_FormaPagoDet_I01").IsUnique();

            entity.Property(e => e.FormaPagoDetId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.PFormaPagoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pFormaPagoId");
        });

        modelBuilder.Entity<GlbTFormaPagoExterno>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("GlbT_FormaPagoExterno");

            entity.Property(e => e.FormaPagoCodExtGlosa)
                .HasMaxLength(80)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<GlbTFormato>(entity =>
        {
            entity.HasKey(e => e.FormatoId);

            entity.ToTable("GlbT_Formatos");

            entity.Property(e => e.FormatoId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.FormatoGlosa)
                .HasMaxLength(25)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.IndFormato)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<GlbTFormatoCheque>(entity =>
        {
            entity.HasKey(e => e.TesFormatoCheque);

            entity.ToTable("GlbT_FormatoCheque");

            entity.Property(e => e.TesFormatoGlosa)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.TesTipoFormato).HasColumnType("numeric(9, 0)");
        });

        modelBuilder.Entity<GlbTFormatoFecha>(entity =>
        {
            entity.HasKey(e => e.FormatoFechaId).HasName("PK_FormatoFecha");

            entity.ToTable("GlbT_FormatoFecha");

            entity.Property(e => e.FormatoFechaId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.FormatoFecha)
                .HasMaxLength(10)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.IndSeleccion)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Ind_Seleccion");
        });

        modelBuilder.Entity<GlbTGiro>(entity =>
        {
            entity.HasKey(e => e.GirCod).HasName("GlbI_Giros_I01");

            entity.ToTable("GlbT_Giros");

            entity.Property(e => e.GirCod).ValueGeneratedNever();
            entity.Property(e => e.GirGlosa)
                .HasMaxLength(40)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.GirGlosa255)
                .HasMaxLength(255)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<GlbTImagenCab>(entity =>
        {
            entity.HasKey(e => new { e.SisCodOri, e.TigCodigo, e.ImcNombreArchivo }).HasName("Pk_ImagenCab");

            entity.ToTable("GlbT_ImagenCab");

            entity.Property(e => e.ImcNombreArchivo)
                .HasMaxLength(255)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.ImagenCabId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
        });

        modelBuilder.Entity<GlbTImagenDet>(entity =>
        {
            entity.HasKey(e => new { e.PImagenCabId, e.PEmpId }).HasName("Pk_ImagenDet");

            entity.ToTable("GlbT_ImagenDet");

            entity.Property(e => e.PImagenCabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pImagenCabId");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
        });

        modelBuilder.Entity<GlbTImpresoraMatriz>(entity =>
        {
            entity.HasKey(e => e.ImpresoraMatrizId).HasName("GlbI_ImpresoraMatriz_PK");

            entity.ToTable("GlbT_ImpresoraMatriz");

            entity.HasIndex(e => new { e.IdFuncionalidad, e.GlbCodImpresora }, "GlbI_ImpresoraMatriz_I01").IsUnique();

            entity.Property(e => e.ImpresoraMatrizId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.GlbCodImpresora)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.GlbRutaImpresora)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.IdFuncionalidad)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcionalidad");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
        });

        modelBuilder.Entity<GlbTIpc>(entity =>
        {
            entity.HasKey(e => e.PerId).HasName("GlbI_IPC_I01");

            entity.ToTable("GlbT_IPC");

            entity.Property(e => e.PerId).ValueGeneratedNever();
        });

        modelBuilder.Entity<GlbTMoneda>(entity =>
        {
            entity.HasKey(e => e.MonedaId).HasName("GlbI_Moneda_I01");

            entity.ToTable("GlbT_Monedas", tb => tb.HasTrigger("Fin700v7_v7_GlbT_Monedas_Delete"));

            entity.Property(e => e.MonedaId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.MonCodigoSii)
                .HasMaxLength(15)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("MonCodigoSII");
            entity.Property(e => e.MonGlosa)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.MonGlosaValor1)
                .HasMaxLength(10)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.MonSimbolo)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<GlbTMotivo>(entity =>
        {
            entity.HasKey(e => e.GlbMotivoId).HasName("Pk_GlbT_Motivo");

            entity.ToTable("GlbT_Motivo");

            entity.Property(e => e.GlbMotivoId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.GlbMotivoGlosa)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.GlbMotivoNomCorto)
                .HasMaxLength(10)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
        });

        modelBuilder.Entity<GlbTMsgReclaAcepDte>(entity =>
        {
            entity.HasKey(e => e.MsgReclaAcepDteid).HasName("GlbT_MsgReclaAcepDTE_PK");

            entity.ToTable("GlbT_MsgReclaAcepDTE");

            entity.HasIndex(e => new { e.MetodoWs, e.CodigoWs }, "GlbT_MsgReclaAcepDTE_I01").IsUnique();

            entity.Property(e => e.MsgReclaAcepDteid)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("MsgReclaAcepDTEId");
            entity.Property(e => e.AccionWs).HasColumnName("AccionWS");
            entity.Property(e => e.CodigoWs)
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasColumnName("CodigoWS");
            entity.Property(e => e.DescripcionWs)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("DescripcionWS");
            entity.Property(e => e.GlosaAccionWs)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("GlosaAccionWS");
            entity.Property(e => e.MetodoWs)
                .HasMaxLength(30)
                .IsUnicode(false)
                .HasColumnName("MetodoWS");
        });

        modelBuilder.Entity<GlbTNivele>(entity =>
        {
            entity.HasKey(e => e.NivId).HasName("GlbI_Niveles_PK");

            entity.ToTable("GlbT_Niveles", tb => tb.HasTrigger("GlbT_Niveles_Delete"));

            entity.Property(e => e.NivGlosa)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<GlbTNumerosRefId>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("GlbT_NumerosRefId");

            entity.Property(e => e.CabReferenciaId).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.DetReferenciaId).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.NcoNombreVariable)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<GlbTPaise>(entity =>
        {
            entity.HasKey(e => e.PaisId).HasName("GlbI_Paises_I01");

            entity.ToTable("GlbT_Paises");

            entity.Property(e => e.PaisId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.PPaisId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pPaisId");
            entity.Property(e => e.PZonaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pZonaId");
            entity.Property(e => e.PaisCodigoSii).HasColumnName("PaisCodigoSII");
            entity.Property(e => e.PaisNombre)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<GlbTPeriodo>(entity =>
        {
            entity.HasKey(e => new { e.PEmpId, e.PerId, e.EjeAno }).HasName("GlbI_Periodos_I01");

            entity.ToTable("GlbT_Periodos");

            entity.HasIndex(e => e.PerId, "GlbI_Periodos_I02").HasFillFactor(90);

            entity.HasIndex(e => new { e.PEmpId, e.EjeAno, e.PerId, e.PerMes }, "GlbT_Periodos_idx04");

            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PerFecInicio).HasColumnType("datetime");
            entity.Property(e => e.PerFecTermino).HasColumnType("datetime");
            entity.Property(e => e.PerGlosa)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PerGlosaCorta)
                .HasMaxLength(10)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<GlbTPlanEntidad>(entity =>
        {
            entity.HasKey(e => e.PdcId).HasName("GlbI_PlanEntidad_I01");

            entity.ToTable("GlbT_PlanEntidad");

            entity.Property(e => e.PdcId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.PdcNomNivel1)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PdcNomNivel2)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PdcNomNivel3)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PdcNomNivel4)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PdcNomNivel5)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PdcNomNivel6)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PdcNomNivel7)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PdcNomPlan)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PdcOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<GlbTProcesoNegocio>(entity =>
        {
            entity.HasKey(e => e.ProNegocioId).HasName("GlbI_ProNeg_PK");

            entity.ToTable("GlbT_ProcesoNegocio");

            entity.Property(e => e.ProNegocioId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.ProNegocioGlosa)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<GlbTProcesoNegocioAux>(entity =>
        {
            entity.HasKey(e => e.ProNegocioAuxId).HasName("GlbI_ProNegAux_PK");

            entity.ToTable("GlbT_ProcesoNegocioAux");

            entity.HasIndex(e => new { e.ProNegocioCod, e.TauId, e.SisCodOri }, "GlbI_ProNegAux_I01").IsUnique();

            entity.Property(e => e.ProNegocioAuxId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
        });

        modelBuilder.Entity<GlbTProcesoNegocioSisFun>(entity =>
        {
            entity.HasKey(e => new { e.ProNegocioCod, e.SisCodOri, e.IdFuncionalidad }).HasName("GlbI_ProNegSisFun_PK");

            entity.ToTable("GlbT_ProcesoNegocioSisFun");

            entity.Property(e => e.IdFuncionalidad)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcionalidad");
        });

        modelBuilder.Entity<GlbTProyCalEjercicio>(entity =>
        {
            entity.HasKey(e => new { e.PEmpId, e.EjeAno }).HasName("GlbI_ProyCalEjercicios_I01");

            entity.ToTable("GlbT_ProyCalEjercicios");

            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
        });

        modelBuilder.Entity<GlbTProyCalPeriodo>(entity =>
        {
            entity.HasKey(e => new { e.PEmpId, e.PerId, e.EjeAno }).HasName("GlbI_ProyCalPeriodos_I01");

            entity.ToTable("GlbT_ProyCalPeriodos");

            entity.HasIndex(e => e.PerId, "GlbI_ProyCalPeriodos_I02");

            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PerFecInicio).HasColumnType("datetime");
            entity.Property(e => e.PerFecTermino).HasColumnType("datetime");
            entity.Property(e => e.PerGlosa)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PerGlosaCorta)
                .HasMaxLength(10)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<GlbTProyecto>(entity =>
        {
            entity.HasKey(e => new { e.PTprId, e.PryNumero }).HasName("GlbI_Proyectos_PK");

            entity.ToTable("GlbT_Proyectos", tb => tb.HasTrigger("Fin700v7_v7_GlbT_Proyectos_Delete"));

            entity.HasIndex(e => e.PryId, "GlbI_Proyectos_I01").IsUnique();

            entity.Property(e => e.PTprId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTprId");
            entity.Property(e => e.PryNumero)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.FldUserCode)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("fld_UserCode");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PCreId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCreId");
            entity.Property(e => e.PEntId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntId");
            entity.Property(e => e.PryFecInicio).HasColumnType("datetime");
            entity.Property(e => e.PryFecTermino).HasColumnType("datetime");
            entity.Property(e => e.PryFecVigencia).HasColumnType("datetime");
            entity.Property(e => e.PryGlosa)
                .HasMaxLength(40)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PryId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
        });

        modelBuilder.Entity<GlbTRegione>(entity =>
        {
            entity.HasKey(e => e.RegCodigo).HasName("GlbI_Regiones_I01");

            entity.ToTable("GlbT_Regiones");

            entity.Property(e => e.PPaisId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pPaisId");
            entity.Property(e => e.RegNombre)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<GlbTRutaArchivo>(entity =>
        {
            entity.HasKey(e => e.RutaArchivoId).HasName("GlbI_RutaArchivos_PK");

            entity.ToTable("GlbT_RutaArchivos");

            entity.Property(e => e.RutaArchivoId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.IdProcesoNegocio)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Proceso_Negocio");
            entity.Property(e => e.RutaArchivoRuta)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<GlbTSistema>(entity =>
        {
            entity.HasKey(e => e.SisCodOri).HasName("GlbI_Sistemas_PK");

            entity.ToTable("GlbT_Sistemas");

            entity.HasIndex(e => e.IdProcesoNegocio, "GlbI_Sistemas_I01").HasFillFactor(90);

            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdProcesoNegocio)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Proceso_Negocio");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.SisGlosa)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<GlbTTipoCartaRut>(entity =>
        {
            entity.HasKey(e => new { e.PTipoCartaId, e.PEntId }).HasName("GlbI_TipoCartaRut01");

            entity.ToTable("GlbT_TipoCartaRut");

            entity.Property(e => e.PTipoCartaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTipoCartaId");
            entity.Property(e => e.PEntId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntId");
        });

        modelBuilder.Entity<GlbTTipoEntidade>(entity =>
        {
            entity.HasKey(e => new { e.TipoEntidad, e.GloTipoEntidad }).HasName("ApfI_TipoEntidades01");

            entity.ToTable("GlbT_TipoEntidades");

            entity.Property(e => e.GloTipoEntidad)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<GlbTTipoFlujo>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("GlbT_TipoFlujo");

            entity.Property(e => e.TipoFlujoCod).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.TipoFlujoDescripcion)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<GlbTTipoFlujoCuentum>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("GlbT_TipoFlujoCuenta");

            entity.Property(e => e.PCtaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtaId");
            entity.Property(e => e.TipoFlujoCod).HasColumnType("numeric(9, 0)");
        });

        modelBuilder.Entity<GlbTTipoGasto>(entity =>
        {
            entity.HasKey(e => e.TgasCodigo).HasName("GlbI_Gasto01");

            entity.ToTable("GlbT_TipoGasto");

            entity.Property(e => e.TgasCodigo)
                .ValueGeneratedNever()
                .HasColumnName("TGasCodigo");
            entity.Property(e => e.PCtaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtaId");
            entity.Property(e => e.TgasNombre)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("TGasNombre");
        });

        modelBuilder.Entity<GlbTTipoImagen>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("GlbT_TipoImagen");

            entity.Property(e => e.TigGlosa)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<GlbTTipoItem>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("GlbT_TipoItems");

            entity.Property(e => e.TipoGlosa)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<GlbTTipoMonedaCnci>(entity =>
        {
            entity.HasKey(e => e.TipoMonedaCnci).HasName("Pl_TipoMonedaCnci");

            entity.ToTable("GlbT_TipoMonedaCnci");

            entity.Property(e => e.TipoMonedaCnci).ValueGeneratedNever();
            entity.Property(e => e.MonedaGlosaAduana)
                .HasMaxLength(15)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.MonedaGlosaCnci)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<GlbTTipoMotivo>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("GlbT_TipoMotivo");

            entity.Property(e => e.GlbTipoMotivoGlosa)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<GlbTTipoProceso>(entity =>
        {
            entity.HasKey(e => e.ProcesoCod).HasName("GlbI_TipoProceso_PK");

            entity.ToTable("GlbT_TipoProceso");

            entity.Property(e => e.ProcesoGlosa)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<GlbTTipoSociedad>(entity =>
        {
            entity.HasKey(e => e.EntTipoSociedadCod).HasName("GlbI_TipoSociedad_PK");

            entity.ToTable("GlbT_TipoSociedad");

            entity.Property(e => e.EntTipoSociedadDes)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<GlbTTipoVencimiento>(entity =>
        {
            entity.HasKey(e => e.TvenCodigo).HasName("GlbI_TipoVencimiento01");

            entity.ToTable("GlbT_TipoVencimiento");

            entity.Property(e => e.TvenCodigo)
                .ValueGeneratedNever()
                .HasColumnName("TVenCodigo");
            entity.Property(e => e.TvenNombre)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("TVenNombre");
        });

        modelBuilder.Entity<GlbTTiposCarta>(entity =>
        {
            entity.HasKey(e => e.TipoCartaId).HasName("GlbI_TiposCartas01");

            entity.ToTable("GlbT_TiposCartas");

            entity.Property(e => e.TipoCartaId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.TipoCartaDescripcion)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<GlbTTiposCartasAtrib>(entity =>
        {
            entity.HasKey(e => new { e.PTipoCartaId, e.FinCatAtributo }).HasName("GlbI_TiposCartasAtrib01");

            entity.ToTable("GlbT_TiposCartasAtrib");

            entity.Property(e => e.PTipoCartaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTipoCartaId");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
        });

        modelBuilder.Entity<GlbTTiposProyecto>(entity =>
        {
            entity.HasKey(e => e.TprId).HasName("GlbI_TiposProyectos_PK");

            entity.ToTable("GlbT_TiposProyectos", tb => tb.HasTrigger("Fin700v7_v7_GlbT_TiposProyectos_Delete"));

            entity.Property(e => e.TprId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.TprGlosa)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<GlbTTmpEmpresa>(entity =>
        {
            entity.HasKey(e => new { e.CodOwner, e.PEmpId }).HasName("GlbI_TmpEmpresas01");

            entity.ToTable("GlbT_TmpEmpresas");

            entity.Property(e => e.CodOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
        });

        modelBuilder.Entity<GlbTUnidadAdm>(entity =>
        {
            entity.HasKey(e => e.UniCodigo).HasName("GlbI_UnidadAdm_I01");

            entity.ToTable("GlbT_UnidadAdm");

            entity.Property(e => e.UniCodigo).ValueGeneratedNever();
            entity.Property(e => e.UniNombre)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<GlbTUsoFin700>(entity =>
        {
            entity.HasKey(e => new { e.PEmpId, e.SisCodOri }).HasName("GlbI_UsoFin700_I01");

            entity.ToTable("GlbT_UsoFin700");

            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
        });

        modelBuilder.Entity<GlbTUsuEmpDiv>(entity =>
        {
            entity.HasKey(e => new { e.FldUserCode, e.PEmpId, e.DivCodigo }).HasName("GlbI_UsuEmpDiv_I01");

            entity.ToTable("GlbT_UsuEmpDiv");

            entity.Property(e => e.FldUserCode)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("fld_UserCode");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
        });

        modelBuilder.Entity<GlbTUsuEmpDivUni>(entity =>
        {
            entity.HasKey(e => new { e.FldUserCode, e.PEmpId, e.DivCodigo, e.UniCodigo }).HasName("GlbI_UsuEmpDivUni_I01");

            entity.ToTable("GlbT_UsuEmpDivUni");

            entity.Property(e => e.FldUserCode)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("fld_UserCode");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
        });

        modelBuilder.Entity<GlbTUsuarioEmpresa>(entity =>
        {
            entity.HasKey(e => new { e.FldUserCode, e.PEmpId }).HasName("GlbI_UsuarioEmpresas_I01");

            entity.ToTable("GlbT_UsuarioEmpresas");

            entity.Property(e => e.FldUserCode)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("fld_UserCode");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.EmpIdDefault).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.PEntId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntId");
        });

        modelBuilder.Entity<GlbTValorDiario>(entity =>
        {
            entity.HasKey(e => new { e.PMonedaId, e.MonVdmFec }).HasName("GlbI_ValorDiario_I01");

            entity.ToTable("GlbT_ValorDiario", tb =>
                {
                    tb.HasTrigger("GlbT_ValorDiariov7_Delete");
                    tb.HasTrigger("GlbT_ValorDiariov7_Insert");
                    tb.HasTrigger("GlbT_ValorDiariov7_Update");
                });

            entity.HasIndex(e => e.PMonedaId, "GlbT_ValorDiario_idx010");

            entity.Property(e => e.PMonedaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMonedaId");
            entity.Property(e => e.MonVdmFec).HasColumnType("datetime");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.MonVdmDifCm).HasColumnName("MonVdmDifCM");
        });

        modelBuilder.Entity<GlbTZona>(entity =>
        {
            entity.HasKey(e => e.ZonaId).HasName("GlbI_Zonas_I01");

            entity.ToTable("GlbT_Zonas");

            entity.Property(e => e.ZonaId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.ZonaDescripcion)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<GlbtEstadosRevisaDte>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("Glbt_EstadosRevisaDte");

            entity.Property(e => e.AccionReclamo)
                .HasMaxLength(5)
                .IsUnicode(false);
            entity.Property(e => e.FechaReclamo).HasColumnType("datetime");
        });

        modelBuilder.Entity<GlbtProcesonegociosisfunBak>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("glbt_procesonegociosisfun_bak");

            entity.Property(e => e.IdFuncionalidad)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcionalidad");
        });

        modelBuilder.Entity<ImpTAgentesAduana>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("ImpT_AgentesAduana");

            entity.Property(e => e.AgenteAdId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.PEntId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntId");
            entity.Property(e => e.PMonedaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMonedaId");
        });

        modelBuilder.Entity<ImpTClaseDocumento>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("ImpT_ClaseDocumento");

            entity.Property(e => e.ClaseImpDes)
                .HasMaxLength(50)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.ClaseImpId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.PTipoConceptoImpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTipoConceptoImpId");
        });

        modelBuilder.Entity<ImpTCoberturaCab>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("ImpT_CoberturaCab");

            entity.Property(e => e.CoberturaId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.FechaCobertura).HasColumnType("datetime");
            entity.Property(e => e.FechaEstado).HasColumnType("datetime");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
        });

        modelBuilder.Entity<ImpTCoberturaDet>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("ImpT_CoberturaDet");

            entity.Property(e => e.CoberturaDetId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.DocEmbFecPar).HasColumnType("datetime");
            entity.Property(e => e.DocEmbNum)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.DocEmbParidad).HasColumnType("money");
            entity.Property(e => e.DocFechaVenc).HasColumnType("datetime");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.FechaPago).HasColumnType("datetime");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PCoberturaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCoberturaId");
            entity.Property(e => e.PCondPagoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCondPagoId");
            entity.Property(e => e.PCtaCteBcoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtaCteBcoId");
            entity.Property(e => e.PEmbarqueDocId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmbarqueDocId");
            entity.Property(e => e.PMonedaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMonedaId");
        });

        modelBuilder.Entity<ImpTCoberturaPago>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("ImpT_CoberturaPago");

            entity.Property(e => e.CoberturaPagoId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PCoberturaDetId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCoberturaDetId");
            entity.Property(e => e.PCtaCteBcoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtaCteBcoId");
        });

        modelBuilder.Entity<ImpTConceptoImportacion>(entity =>
        {
            entity.HasKey(e => e.ConceptoImpId).HasName("ImpT_ConceptoImportacion_PK");

            entity.ToTable("ImpT_ConceptoImportacion");

            entity.Property(e => e.ConceptoImpId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.ConceptoImpGlosa)
                .HasMaxLength(50)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.FechaVigencia).HasColumnType("datetime");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionalidad)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcionalidad");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PCcdiId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCCdiId");
            entity.Property(e => e.PCcreId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCCreId");
            entity.Property(e => e.PCctaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCCtaId");
            entity.Property(e => e.PCdiId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCdiId");
            entity.Property(e => e.PCreId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCreId");
            entity.Property(e => e.PCtaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtaId");
            entity.Property(e => e.PCtprId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCTprId");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PPartidaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pPartidaId");
            entity.Property(e => e.PTipoConceptoImpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTipoConceptoImpId");
            entity.Property(e => e.PTipoOpeId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTipoOpeId");
            entity.Property(e => e.PTprId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTprId");
            entity.Property(e => e.PryNumero)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PryNumeroCtaCta)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<ImpTConfiguracion>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("ImpT_Configuracion");

            entity.Property(e => e.Apoderado1).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.Apoderado2).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.Apoderado3).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.FechaVigencia).HasColumnType("datetime");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionalidad)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcionalidad");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PCtaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtaId");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PMonedaIdDolar)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMonedaIdDolar");
            entity.Property(e => e.PMonedaIdDolarAduanero)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMonedaIdDolarAduanero");
            entity.Property(e => e.PPaisId)
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("pPaisId");
        });

        modelBuilder.Entity<ImpTEmbarqueCab>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("ImpT_EmbarqueCab");

            entity.Property(e => e.CodOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EmbarqueCabId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.FechaApertura).HasColumnType("datetime");
            entity.Property(e => e.FechaEmbarque).HasColumnType("datetime");
            entity.Property(e => e.FechaProceso).HasColumnType("datetime");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionalidad)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcionalidad");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.MatrizCod).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.Observacion)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PPaisId)
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("pPaisId");
            entity.Property(e => e.PPuertoDestino)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pPuertoDestino");
            entity.Property(e => e.PPuertoOrigen)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pPuertoOrigen");
        });

        modelBuilder.Entity<ImpTEmbarqueCompNulo>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("ImpT_EmbarqueCompNulos");

            entity.Property(e => e.EmbarqueCompId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.FechaReversa).HasColumnType("datetime");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PCabOpeId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCabOpeId");
            entity.Property(e => e.PEmbarqueDocId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmbarqueDocId");
            entity.Property(e => e.PMovLlgId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMovLlgId");
        });

        modelBuilder.Entity<ImpTEmbarqueDet>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("ImpT_EmbarqueDet");

            entity.Property(e => e.CodOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.DetEmbCantDoc).HasColumnType("money");
            entity.Property(e => e.DetEmbCantFac).HasColumnType("money");
            entity.Property(e => e.DetEmbCantOcpen)
                .HasColumnType("money")
                .HasColumnName("DetEmbCantOCPen");
            entity.Property(e => e.EmbarqueDetId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionalidad)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcionalidad");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PEmbarqueCabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmbarqueCabId");
            entity.Property(e => e.PEmbarqueDocId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmbarqueDocId");
            entity.Property(e => e.POcCabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pOcCabId");
            entity.Property(e => e.POcDetId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pOcDetId");
            entity.Property(e => e.PProductoEmbarqueId)
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("pProductoEmbarqueId");
            entity.Property(e => e.PTipoPackingId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTipoPackingId");
        });

        modelBuilder.Entity<ImpTEmbarqueDocto>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("ImpT_EmbarqueDoctos");

            entity.Property(e => e.DocEmbFec).HasColumnType("datetime");
            entity.Property(e => e.DocEmbFecPar).HasColumnType("datetime");
            entity.Property(e => e.DocEmbNum)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.DocEmbObser)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.DocEmbParidad).HasColumnType("money");
            entity.Property(e => e.DocFechaVenc).HasColumnType("datetime");
            entity.Property(e => e.EmbarqueDocId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PCabOpeId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCabOpeId");
            entity.Property(e => e.PCcdiId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCCdiId");
            entity.Property(e => e.PCcreId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCCreId");
            entity.Property(e => e.PCctaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCCtaId");
            entity.Property(e => e.PCdiId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCdiId");
            entity.Property(e => e.PClaseImpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pClaseImpId");
            entity.Property(e => e.PConceptoImpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pConceptoImpId");
            entity.Property(e => e.PCondPagoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCondPagoId");
            entity.Property(e => e.PCreId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCreId");
            entity.Property(e => e.PCtaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtaId");
            entity.Property(e => e.PCtprId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCTprId");
            entity.Property(e => e.PEmbarqueCabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmbarqueCabId");
            entity.Property(e => e.PEntId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntId");
            entity.Property(e => e.PEntSucId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntSucId");
            entity.Property(e => e.PMonedaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMonedaId");
            entity.Property(e => e.PMovCceId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMovCceId");
            entity.Property(e => e.PMovLlgId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMovLlgId");
            entity.Property(e => e.PPartidaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pPartidaId");
            entity.Property(e => e.PTprId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTprId");
            entity.Property(e => e.PryNumero)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PryNumeroCtaCta)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<ImpTEmbarqueDoctosAge>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("ImpT_EmbarqueDoctosAge");

            entity.Property(e => e.EmbFechaManifiesto).HasColumnType("datetime");
            entity.Property(e => e.EmbManifiesto)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EmbarqueDocAgeId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PEmbarqueDocId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmbarqueDocId");
        });

        modelBuilder.Entity<ImpTEmbarqueDoctosCon>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("ImpT_EmbarqueDoctosCon");

            entity.Property(e => e.EmbViaje)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EmbarqueDocConId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EmcNave)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PEmbarqueDocId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmbarqueDocId");
            entity.Property(e => e.PPuertoDestino)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pPuertoDestino");
            entity.Property(e => e.PPuertoOrigen)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pPuertoOrigen");
            entity.Property(e => e.PTipoPackingId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTipoPackingId");
            entity.Property(e => e.Volumen).HasColumnType("money");
        });

        modelBuilder.Entity<ImpTEmbarqueDoctosSeg>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("ImpT_EmbarqueDoctosSeg");

            entity.Property(e => e.EmbarqueDocSegId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PEmbarqueDocId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmbarqueDocId");
            entity.Property(e => e.PEntId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntId");
            entity.Property(e => e.PEntSucId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntSucId");
        });

        modelBuilder.Entity<ImpTEmbarqueFecha>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("ImpT_EmbarqueFechas");

            entity.Property(e => e.EmbFecBodF).HasColumnType("datetime");
            entity.Property(e => e.EmbFecBodI).HasColumnType("datetime");
            entity.Property(e => e.EmbFecEmbF).HasColumnType("datetime");
            entity.Property(e => e.EmbFecEmbI).HasColumnType("datetime");
            entity.Property(e => e.EmbFecEta)
                .HasColumnType("datetime")
                .HasColumnName("EmbFecETA");
            entity.Property(e => e.EmbFecRta)
                .HasColumnType("datetime")
                .HasColumnName("EmbFecRTA");
            entity.Property(e => e.EmbarqueFecId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.Observacion)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PEmbarqueCabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmbarqueCabId");
        });

        modelBuilder.Entity<ImpTMatrizImportacion>(entity =>
        {
            entity.HasKey(e => e.MatrizId).HasName("ImpT_MatrizImportacion_PK");

            entity.ToTable("ImpT_MatrizImportacion");

            entity.Property(e => e.MatrizId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.FechaVigencia).HasColumnType("datetime");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionalidad)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcionalidad");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.MatrizCod).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.MatrizGlosa)
                .HasMaxLength(50)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PConceptoImpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pConceptoImpId");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
        });

        modelBuilder.Entity<ImpTPreEmbarqueCab>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("ImpT_PreEmbarqueCab");

            entity.Property(e => e.CodOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.FechaAprobacion).HasColumnType("datetime");
            entity.Property(e => e.FechaEmbarque).HasColumnType("datetime");
            entity.Property(e => e.FechaProceso).HasColumnType("datetime");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionalidad)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcionalidad");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.MatrizCod).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.Observacion)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PBodegaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pBodegaId");
            entity.Property(e => e.PConceptoImpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pConceptoImpId");
            entity.Property(e => e.PEmbarqueCabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmbarqueCabId");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PEntId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntId");
            entity.Property(e => e.PPuertoOrigen)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pPuertoOrigen");
            entity.Property(e => e.PreEmbarqueId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
        });

        modelBuilder.Entity<ImpTPreEmbarqueDet>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("ImpT_PreEmbarqueDet");

            entity.Property(e => e.DetEmbCantFac).HasColumnType("money");
            entity.Property(e => e.DocEmbFecPar).HasColumnType("datetime");
            entity.Property(e => e.DocEmbNum)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.DocEmbParidad).HasColumnType("money");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PCabOpeId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCabOpeId");
            entity.Property(e => e.PCcdiId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCCdiId");
            entity.Property(e => e.PCcreId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCCreId");
            entity.Property(e => e.PCctaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCCtaId");
            entity.Property(e => e.PCdiId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCdiId");
            entity.Property(e => e.PConceptoImpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pConceptoImpId");
            entity.Property(e => e.PCreId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCreId");
            entity.Property(e => e.PCtaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtaId");
            entity.Property(e => e.PCtprId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCTprId");
            entity.Property(e => e.PEmbarqueDocId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmbarqueDocId");
            entity.Property(e => e.PMonedaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMonedaId");
            entity.Property(e => e.POcCabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pOcCabId");
            entity.Property(e => e.PPartidaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pPartidaId");
            entity.Property(e => e.PPreEmbarqueId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pPreEmbarqueId");
            entity.Property(e => e.PTprId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTprId");
            entity.Property(e => e.PreEmbarqueDetId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.PryNumero)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PryNumeroCtaCta)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<ImpTTipoConceptoImp>(entity =>
        {
            entity.HasKey(e => e.TipoConceptoImpId).HasName("ImpT_TipoConceptoImp_PK");

            entity.ToTable("ImpT_TipoConceptoImp");

            entity.Property(e => e.TipoConceptoImpId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.TipoConceptoImpGlosa)
                .HasMaxLength(50)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<InmTAdicionalTipoInm>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("InmT_AdicionalTipoInm");

            entity.Property(e => e.PTprId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTprId");
            entity.Property(e => e.TinmId).HasColumnName("TInmId");
        });

        modelBuilder.Entity<InmTAdicionalVentum>(entity =>
        {
            entity.HasKey(e => new { e.PTprId, e.AdiId });

            entity.ToTable("InmT_AdicionalVenta");

            entity.Property(e => e.PTprId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTprId");
            entity.Property(e => e.AdiGlosa)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PMonedaCostoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMonedaCostoId");
            entity.Property(e => e.PMonedaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMonedaId");
        });

        modelBuilder.Entity<InmTAfluencium>(entity =>
        {
            entity.HasKey(e => e.AfluId).HasName("InmI_Afluencia");

            entity.ToTable("InmT_Afluencia");

            entity.Property(e => e.AfluId).ValueGeneratedNever();
            entity.Property(e => e.AfluGlosa)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<InmTArbolProyecto>(entity =>
        {
            entity.HasKey(e => new { e.PTprId, e.NodoId }).HasName("InmI_ArbolProyecto01");

            entity.ToTable("InmT_ArbolProyecto");

            entity.Property(e => e.PTprId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTprId");
            entity.Property(e => e.DescripcionNodo)
                .HasMaxLength(40)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.NodoExternoId)
                .HasMaxLength(21)
                .IsUnicode(false);
            entity.Property(e => e.Precedencia)
                .HasMaxLength(50)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<InmTArbolProyectoAux>(entity =>
        {
            entity.HasKey(e => new { e.PTprId, e.NodoId }).HasName("InmI_ArbolProyectoAux01");

            entity.ToTable("InmT_ArbolProyectoAux");

            entity.Property(e => e.PTprId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTprId");
            entity.Property(e => e.DescripcionNodo)
                .HasMaxLength(40)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.NodoExternoId)
                .HasMaxLength(21)
                .IsUnicode(false);
            entity.Property(e => e.Precedencia)
                .HasMaxLength(50)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<InmTAtributosUsuario>(entity =>
        {
            entity.HasKey(e => e.AtributoId).HasName("InmI_AtributosUsuario");

            entity.ToTable("InmT_AtributosUsuario");

            entity.Property(e => e.AtributoId).ValueGeneratedNever();
            entity.Property(e => e.AtributoGlosa)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<InmTAuditoriaEscrituracion>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("InmT_AuditoriaEscrituracion");

            entity.Property(e => e.FactorM2legales).HasColumnName("FactorM2Legales");
            entity.Property(e => e.FechaCalculo).HasColumnType("datetime");
            entity.Property(e => e.FechaEscrit).HasColumnType("datetime");
            entity.Property(e => e.FechaProceso).HasColumnType("datetime");
            entity.Property(e => e.M2legalesTotales).HasColumnName("M2Legales_Totales");
            entity.Property(e => e.MontoCeecUf).HasColumnName("MontoCeecUF");
            entity.Property(e => e.MontoIva).HasColumnName("MontoIVA");
            entity.Property(e => e.PBitacoraId).HasColumnName("pBitacoraId");
            entity.Property(e => e.PCartaOfertaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCartaOfertaId");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PTprId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTprId");
            entity.Property(e => e.SupUtilAd).HasColumnName("SupUtilAD");
            entity.Property(e => e.SupUtilCo).HasColumnName("SupUtilCO");
        });

        modelBuilder.Entity<InmTBitacora>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("InmT_Bitacora");

            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.Fecha).HasColumnType("datetime");
            entity.Property(e => e.FechaFinProg).HasColumnType("datetime");
            entity.Property(e => e.FechaIniProg).HasColumnType("datetime");
            entity.Property(e => e.FechaProxInst).HasColumnType("datetime");
            entity.Property(e => e.FechaReal).HasColumnType("datetime");
            entity.Property(e => e.FldUserCode)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("fld_UserCode");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.InstPvtaId).HasColumnName("InstPVtaId");
            entity.Property(e => e.ObsGlosa)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PTprId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTprId");
            entity.Property(e => e.UserInstancia)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<InmTBitacoraAux>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("InmT_BitacoraAux");

            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.Fecha).HasColumnType("datetime");
            entity.Property(e => e.FechaFinProg).HasColumnType("datetime");
            entity.Property(e => e.FechaIniProg).HasColumnType("datetime");
            entity.Property(e => e.FechaProxInst).HasColumnType("datetime");
            entity.Property(e => e.FechaReal).HasColumnType("datetime");
            entity.Property(e => e.FldUserCode)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("fld_UserCode");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.InstPvtaId).HasColumnName("InstPVtaId");
            entity.Property(e => e.ObsGlosa)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PTprId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTprId");
            entity.Property(e => e.UserInstancia)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<InmTBitacoraManejoIvaCab>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("InmT_BitacoraManejoIvaCab");

            entity.Property(e => e.BitacoraId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.FechaProceso).HasColumnType("datetime");
            entity.Property(e => e.FechaVigencia).HasColumnType("datetime");
            entity.Property(e => e.M2legales).HasColumnName("M2Legales");
            entity.Property(e => e.M2terrenoAva).HasColumnName("M2TerrenoAva");
            entity.Property(e => e.M2totTerreno).HasColumnName("M2TotTerreno");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PTprId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTprId");
            entity.Property(e => e.Usuario)
                .HasMaxLength(50)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<InmTBitacoraManejoIvaDet>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("InmT_BitacoraManejoIvaDet");

            entity.Property(e => e.M2legalesMod).HasColumnName("M2LegalesMod");
            entity.Property(e => e.M2legalesOri).HasColumnName("M2LegalesOri");
            entity.Property(e => e.PBitacoraId).HasColumnName("pBitacoraId");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PTprId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTprId");
            entity.Property(e => e.PinmuebleId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("PInmuebleId");
        });

        modelBuilder.Entity<InmTCabIncentivo>(entity =>
        {
            entity.HasKey(e => new { e.PTprId, e.PCargoId }).HasName("InmI_CabIncentivo");

            entity.ToTable("InmT_CabIncentivo");

            entity.Property(e => e.PTprId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTprId");
            entity.Property(e => e.PCargoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCargoId");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.IncentivoId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
        });

        modelBuilder.Entity<InmTCabPlanillaPromesa>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("InmT_CabPlanillaPromesa");

            entity.Property(e => e.Descripcion)
                .HasMaxLength(50)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.Ruta)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.TipoDoc).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.TipoDocId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
        });

        modelBuilder.Entity<InmTCabeceraMailing>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("InmT_CabeceraMailing");

            entity.Property(e => e.AsuntoMailing)
                .HasMaxLength(200)
                .IsUnicode(false);
            entity.Property(e => e.BodyMailing).HasColumnType("text");
            entity.Property(e => e.CodOrientacion)
                .HasMaxLength(15)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.FechaMailing).HasColumnType("datetime");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.InmuebleCodigo)
                .HasMaxLength(15)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.MailingId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.PCategoriaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCategoriaId");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PTprId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTprId");
            entity.Property(e => e.Piso)
                .HasMaxLength(5)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PryNumero)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.TinmId).HasColumnName("TInmId");
            entity.Property(e => e.TituloMailing)
                .HasMaxLength(100)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<InmTCabeceraProgramacion>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("InmT_CabeceraProgramacion");

            entity.Property(e => e.CodigoEstado)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.FechaAprobacion).HasColumnType("datetime");
            entity.Property(e => e.FechaDigitacion).HasColumnType("datetime");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PTprId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTprId");
            entity.Property(e => e.ProgramacionId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.Usuario)
                .HasMaxLength(50)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<InmTCalculoComision>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("InmT_CalculoComision");

            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PCartaOfertaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCartaOfertaId");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PTprId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTprId");
            entity.Property(e => e.PinmuebleId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("PInmuebleId");
            entity.Property(e => e.Usuario)
                .HasMaxLength(50)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<InmTCalculoComisionRezagado>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("InmT_CalculoComisionRezagados");

            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PCartaOfertaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCartaOfertaId");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PTprId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTprId");
            entity.Property(e => e.PinmuebleId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("PInmuebleId");
            entity.Property(e => e.Usuario)
                .HasMaxLength(50)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<InmTCambioVendedor>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("InmT_CambioVendedor");

            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.FechaCambioVenid).HasColumnType("datetime");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PTprId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTprId");
            entity.Property(e => e.PinmuebleId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("PInmuebleId");
        });

        modelBuilder.Entity<InmTCamposPromesa>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("InmT_CamposPromesa");

            entity.Property(e => e.CampoId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.CamposTab)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.Descripcion)
                .HasMaxLength(50)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<InmTCarOfeAdicional>(entity =>
        {
            entity.HasKey(e => new { e.PCartaOfertaId, e.AdiId }).HasName("InmI_CarOfeAdicional");

            entity.ToTable("InmT_CarOfeAdicional");

            entity.Property(e => e.PCartaOfertaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCartaOfertaId");
            entity.Property(e => e.PMonedaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMonedaId");
        });

        modelBuilder.Entity<InmTCarOfeDetItemFinan>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("InmT_CarOfeDetItemFinan");

            entity.Property(e => e.FechaVenc).HasColumnType("datetime");
            entity.Property(e => e.PCartaOfertaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCartaOfertaId");
        });

        modelBuilder.Entity<InmTCarOfeDoctoRespaldo>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("InmT_CarOfeDoctoRespaldo");

            entity.Property(e => e.Comentario)
                .HasMaxLength(255)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.FechaRegistro).HasColumnType("datetime");
            entity.Property(e => e.PCartaOfertaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCartaOfertaId");
        });

        modelBuilder.Entity<InmTCarOfeItemDescto>(entity =>
        {
            entity.HasKey(e => new { e.PCartaOfertaId, e.ItemDesctoId }).HasName("InmI_CarOfeItemDescto");

            entity.ToTable("InmT_CarOfeItemDescto");

            entity.Property(e => e.PCartaOfertaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCartaOfertaId");
            entity.Property(e => e.PMonedaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMonedaId");

            entity.HasOne(d => d.ItemDescto).WithMany(p => p.InmTCarOfeItemDesctos)
                .HasForeignKey(d => d.ItemDesctoId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_InmT_CarOfeItemDescto01");
        });

        modelBuilder.Entity<InmTCarOfeItemFinan>(entity =>
        {
            entity.HasKey(e => new { e.PCartaOfertaId, e.ItemFinId }).HasName("InmI_CarOfeItemFinan");

            entity.ToTable("InmT_CarOfeItemFinan");

            entity.Property(e => e.PCartaOfertaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCartaOfertaId");
            entity.Property(e => e.DivCodigoRi).HasColumnName("DivCodigoRI");
            entity.Property(e => e.PEmpIdRi)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpIdRI");
            entity.Property(e => e.PMonedaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMonedaId");
            entity.Property(e => e.RefFechaVcto).HasColumnType("datetime");
            entity.Property(e => e.RefId)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();

            entity.HasOne(d => d.ItemFin).WithMany(p => p.InmTCarOfeItemFinans)
                .HasForeignKey(d => d.ItemFinId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_InmT_CarOfeItemFinan01");
        });

        modelBuilder.Entity<InmTCarOfeProductoAdi>(entity =>
        {
            entity.HasKey(e => new { e.PCartaOfertaId, e.PTprId, e.PryNumero }).HasName("InmI_CarOfeProductoAdi");

            entity.ToTable("InmT_CarOfeProductoAdi");

            entity.Property(e => e.PCartaOfertaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCartaOfertaId");
            entity.Property(e => e.PTprId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTprId");
            entity.Property(e => e.PryNumero)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PMonedaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMonedaId");
        });

        modelBuilder.Entity<InmTCargoUsuarioProyecto>(entity =>
        {
            entity.HasKey(e => new { e.PTprId, e.Usuario, e.PCargoId }).HasName("InmI_CargoUsuarioProyecto");

            entity.ToTable("InmT_CargoUsuarioProyecto");

            entity.Property(e => e.PTprId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTprId");
            entity.Property(e => e.Usuario)
                .HasMaxLength(50)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PCargoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCargoId");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
        });

        modelBuilder.Entity<InmTCargoUsuarioProyecto20170503>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("InmT_CargoUsuarioProyecto20170503");

            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PCargoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCargoId");
            entity.Property(e => e.PTprId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTprId");
            entity.Property(e => e.Usuario)
                .HasMaxLength(50)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<InmTCartaOfertum>(entity =>
        {
            entity.HasKey(e => e.CartaOfertaId).HasName("InmI_CartaOferta");

            entity.ToTable("InmT_CartaOferta");

            entity.HasIndex(e => new { e.PEmpId, e.DivCodigo, e.CarOfeNumInterno, e.PTprId }, "InmI_CartaOferta1").IsUnique();

            entity.Property(e => e.CartaOfertaId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.CarOfeFecha).HasColumnType("datetime");
            entity.Property(e => e.CtrSanumInterno).HasColumnName("CtrSANumInterno");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.FechaContrato).HasColumnType("datetime");
            entity.Property(e => e.FechaDesist).HasColumnType("datetime");
            entity.Property(e => e.FechaEscrit).HasColumnType("datetime");
            entity.Property(e => e.FechaPagoTot).HasColumnType("datetime");
            entity.Property(e => e.FechaPromesa).HasColumnType("datetime");
            entity.Property(e => e.FechaTraspaso).HasColumnType("datetime");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.ObservacionCoferta)
                .HasMaxLength(255)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("ObservacionCOferta");
            entity.Property(e => e.PCabOpeIdEsc)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCabOpeIdEsc");
            entity.Property(e => e.PCabOpeIdPro)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCabOpeIdPro");
            entity.Property(e => e.PCabOpeIdProVen)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCabOpeIdProVen");
            entity.Property(e => e.PCotizacionId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCotizacionId");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PEntId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntId");
            entity.Property(e => e.PMonedaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMonedaId");
            entity.Property(e => e.PTprId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTprId");
            entity.Property(e => e.PrecioFinalCo).HasColumnName("PrecioFinalCO");
            entity.Property(e => e.PryNumero)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.TventaId).HasColumnName("TVentaId");
        });

        modelBuilder.Entity<InmTCategoriaCliente>(entity =>
        {
            entity.HasKey(e => e.CategoriaId).HasName("InmI_CategoriaCliente");

            entity.ToTable("InmT_CategoriaCliente");

            entity.Property(e => e.CategoriaId).ValueGeneratedNever();
            entity.Property(e => e.CategoriaGlosa)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<InmTCausalDevolucion>(entity =>
        {
            entity.HasKey(e => e.CausalId).HasName("InmI_CausalDevolucion");

            entity.ToTable("InmT_CausalDevolucion");

            entity.Property(e => e.CausalId).ValueGeneratedNever();
            entity.Property(e => e.CausalGlosa)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<InmTCausalRechazo>(entity =>
        {
            entity.HasKey(e => e.CausalId).HasName("InmI_CausalRechazo");

            entity.ToTable("InmT_CausalRechazo");

            entity.Property(e => e.CausalId).ValueGeneratedNever();
            entity.Property(e => e.CausalGlosa)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<InmTClasificacion>(entity =>
        {
            entity.HasKey(e => e.ClasificaId).HasName("InmI_Clasificacion");

            entity.ToTable("InmT_Clasificacion");

            entity.Property(e => e.Descripcion)
                .HasMaxLength(50)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<InmTClienteTipoDocto>(entity =>
        {
            entity.HasKey(e => new { e.TcliId, e.TdoId }).HasName("InmI_ClienteTipoDocto");

            entity.ToTable("InmT_ClienteTipoDocto");

            entity.HasOne(d => d.Tcli).WithMany(p => p.InmTClienteTipoDoctos)
                .HasForeignKey(d => d.TcliId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_InmT_ClienteTipoDocto01");
        });

        modelBuilder.Entity<InmTComisionesProyectoCargo>(entity =>
        {
            entity.HasKey(e => new { e.PEmpId, e.PTprId, e.PCargoId, e.ClasificaId }).HasName("InmI_ComisionesProyectoCargo");

            entity.ToTable("InmT_ComisionesProyectoCargo");

            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PTprId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTprId");
            entity.Property(e => e.PCargoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCargoId");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
        });

        modelBuilder.Entity<InmTConceptoIngreso>(entity =>
        {
            entity.HasKey(e => e.CdiIngId).HasName("InmI_ConceptoIngreso");

            entity.ToTable("InmT_ConceptoIngreso");

            entity.Property(e => e.CdiIngId).ValueGeneratedNever();
            entity.Property(e => e.CdiIngGlosa)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PCreId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCreId");
            entity.Property(e => e.PCtaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtaId");
            entity.Property(e => e.PTprId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTprId");
            entity.Property(e => e.PryNumero)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<InmTConfiguraBono>(entity =>
        {
            entity.HasKey(e => e.PTprId).HasName("InmI_ConfiguraBono");

            entity.ToTable("InmT_ConfiguraBono");

            entity.Property(e => e.PTprId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTprId");
            entity.Property(e => e.BonoUf).HasColumnName("BonoUF");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.FechaVigencia).HasColumnType("datetime");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PCtaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtaId");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
        });

        modelBuilder.Entity<InmTConfiguracion>(entity =>
        {
            entity.HasKey(e => new { e.PEmpId, e.EjeAno }).HasName("InmI_Configuracion");

            entity.ToTable("InmT_Configuracion");

            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PCorIdCarOfe)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCorIdCarOfe");
            entity.Property(e => e.PCorIdConvenio)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCorIdConvenio");
            entity.Property(e => e.PCorIdPagares)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCorIdPagares");
            entity.Property(e => e.PCorIdPromesa)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCorIdPromesa");
            entity.Property(e => e.PCreIdAboCosto)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCreIdAboCosto");
            entity.Property(e => e.PCreIdAboEsc)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCreIdAboEsc");
            entity.Property(e => e.PCreIdAboPro)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCreIdAboPro");
            entity.Property(e => e.PCreIdCarCosto)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCreIdCarCosto");
            entity.Property(e => e.PCreIdCarEsc)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCreIdCarEsc");
            entity.Property(e => e.PCreIdCarPro)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCreIdCarPro");
            entity.Property(e => e.PCtaIdAboCosto).HasColumnName("pCtaIdAboCosto");
            entity.Property(e => e.PCtaIdAboEsc).HasColumnName("pCtaIdAboEsc");
            entity.Property(e => e.PCtaIdAboPro)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtaIdAboPro");
            entity.Property(e => e.PCtaIdAntDeudores)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtaIdAntDeudores");
            entity.Property(e => e.PCtaIdAntFuturo)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtaIdAntFuturo");
            entity.Property(e => e.PCtaIdCarCosto)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtaIdCarCosto");
            entity.Property(e => e.PCtaIdCarEsc)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtaIdCarEsc");
            entity.Property(e => e.PCtaIdCarPro)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtaIdCarPro");
            entity.Property(e => e.PCtaIdExcedente)
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("pCtaIdExcedente");
            entity.Property(e => e.PCtaIdIntDev)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtaIdIntDev");
            entity.Property(e => e.PCtaIdIntNoDev)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtaIdIntNoDev");
            entity.Property(e => e.PCtaIdPagos)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtaIdPagos");
            entity.Property(e => e.PCtaIdVtaDesis)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtaIdVtaDesis");
            entity.Property(e => e.PTipoFact)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTipoFact");
            entity.Property(e => e.PTipoFactEx)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTipoFactEx");
            entity.Property(e => e.PTipoNegocio)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTipoNegocio");
            entity.Property(e => e.PTipoOpeAnt).HasColumnName("pTipoOpeAnt");
            entity.Property(e => e.PTipoOpeId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTipoOpeId");
            entity.Property(e => e.PTipoOpeIdEsc)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTipoOpeIdEsc");
            entity.Property(e => e.PTipoOpeIdPro)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTipoOpeIdPro");
            entity.Property(e => e.PTipoOpeIdTraspaso)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTipoOpeIdTraspaso");
            entity.Property(e => e.PTprIdAboCosto)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTprIdAboCosto");
            entity.Property(e => e.PTprIdAboEsc)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTprIdAboEsc");
            entity.Property(e => e.PTprIdAboPro)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTprIdAboPro");
            entity.Property(e => e.PTprIdCarCosto)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTprIdCarCosto");
            entity.Property(e => e.PTprIdCarEsc)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTprIdCarEsc");
            entity.Property(e => e.PTprIdCarPro)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTprIdCarPro");
            entity.Property(e => e.PathDocumentos)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PathPlanos)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PryNumeroAboCosto)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PryNumeroAboEsc)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PryNumeroAboPro)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PryNumeroCarCosto)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PryNumeroCarEsc)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PryNumeroCarPro)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<InmTConveniosInst>(entity =>
        {
            entity.HasKey(e => e.ConveId).HasName("InmI_ConveniosInst");

            entity.ToTable("InmT_ConveniosInst");

            entity.Property(e => e.ConveId).ValueGeneratedNever();
            entity.Property(e => e.ConveGlosa)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<InmTCotAdicional>(entity =>
        {
            entity.HasKey(e => new { e.PCotizacionId, e.AdiId }).HasName("InmI_CotAdicional");

            entity.ToTable("InmT_CotAdicional");

            entity.Property(e => e.PCotizacionId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCotizacionId");
            entity.Property(e => e.PMonedaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMonedaId");
        });

        modelBuilder.Entity<InmTCotDetItemFinan>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("InmT_CotDetItemFinan");

            entity.Property(e => e.FechaVenc).HasColumnType("datetime");
            entity.Property(e => e.PCotizacionId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCotizacionId");

            entity.HasOne(d => d.ItemFin).WithMany()
                .HasForeignKey(d => d.ItemFinId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_InmT_CotDetItemFinan01");
        });

        modelBuilder.Entity<InmTCotDividendo>(entity =>
        {
            entity.HasKey(e => new { e.PCotizacionId, e.ItemFinId, e.AnosDividendo }).HasName("InmI_CotDividendo");

            entity.ToTable("InmT_CotDividendo");

            entity.Property(e => e.PCotizacionId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCotizacionId");
        });

        modelBuilder.Entity<InmTCotEncuestum>(entity =>
        {
            entity.HasKey(e => new { e.PCotizacionId, e.PreguntaId }).HasName("InmI_CotEncuesta");

            entity.ToTable("InmT_CotEncuesta");

            entity.Property(e => e.PCotizacionId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCotizacionId");
            entity.Property(e => e.RespuestaGlosa)
                .HasMaxLength(250)
                .IsUnicode(false);
        });

        modelBuilder.Entity<InmTCotItemFinan>(entity =>
        {
            entity.HasKey(e => new { e.PCotizacionId, e.ItemFinId }).HasName("InmI_CotItemFinan");

            entity.ToTable("InmT_CotItemFinan");

            entity.Property(e => e.PCotizacionId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCotizacionId");
            entity.Property(e => e.CotDetGlosa)
                .HasMaxLength(250)
                .IsUnicode(false);
            entity.Property(e => e.PMonedaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMonedaId");
        });

        modelBuilder.Entity<InmTCotProductoAdi>(entity =>
        {
            entity.HasKey(e => new { e.PCotizacionId, e.PTprId, e.PryNumero }).HasName("InmI_CotProductoAdi");

            entity.ToTable("InmT_CotProductoAdi");

            entity.Property(e => e.PCotizacionId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCotizacionId");
            entity.Property(e => e.PTprId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTprId");
            entity.Property(e => e.PryNumero)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PMonedaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMonedaId");
        });

        modelBuilder.Entity<InmTCotizacion>(entity =>
        {
            entity.HasKey(e => e.CotizacionId).HasName("InmI_Cotizacion");

            entity.ToTable("InmT_Cotizacion");

            entity.HasIndex(e => new { e.PEmpId, e.DivCodigo, e.CotDocNumInterno, e.PTprId }, "InmI_Cotizacion1").IsUnique();

            entity.Property(e => e.CotizacionId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.CliRazonSocial)
                .HasMaxLength(120)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.CliRut)
                .HasMaxLength(12)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.CliSucDireccion)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.CliSucFono)
                .HasMaxLength(40)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.CotFecha).HasColumnType("datetime");
            entity.Property(e => e.CotFechaCambio).HasColumnType("datetime");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.ObservacionInm)
                .HasMaxLength(255)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PCategoriaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCategoriaId");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PMonedaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMonedaId");
            entity.Property(e => e.PTprId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTprId");
            entity.Property(e => e.PryNumero)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.TventaId).HasColumnName("TVentaId");

            entity.HasOne(d => d.Aflu).WithMany(p => p.InmTCotizacions)
                .HasForeignKey(d => d.AfluId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_InmT_Cotizacion01");

            entity.HasOne(d => d.Tcli).WithMany(p => p.InmTCotizacions)
                .HasForeignKey(d => d.TcliId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_InmT_Cotizacion02");

            entity.HasOne(d => d.Tventa).WithMany(p => p.InmTCotizacions)
                .HasForeignKey(d => d.TventaId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_InmT_Cotizacion03");
        });

        modelBuilder.Entity<InmTCotizacionLog>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("InmT_CotizacionLog");

            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.FechaUpdate).HasColumnType("datetime");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PCotizacionId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCotizacionId");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PTprId).HasColumnName("pTprId");
            entity.Property(e => e.ProcNombre)
                .HasMaxLength(100)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<InmTCotizacionLogHistorica>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("InmT_CotizacionLogHistorica");

            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.FechaUpdate).HasColumnType("datetime");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PCotizacionId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCotizacionId");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PTprId).HasColumnName("pTprId");
            entity.Property(e => e.ProcNombre)
                .HasMaxLength(100)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<InmTDestinoCompra>(entity =>
        {
            entity.HasKey(e => e.DesComId).HasName("InmI_DestinoCompra");

            entity.ToTable("InmT_DestinoCompra");

            entity.Property(e => e.DesComGlosa)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<InmTDetIncentivo>(entity =>
        {
            entity.HasKey(e => new { e.PIncentivoId, e.NroTramo }).HasName("InmI_DetIncentivo");

            entity.ToTable("InmT_DetIncentivo");

            entity.Property(e => e.PIncentivoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pIncentivoId");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
        });

        modelBuilder.Entity<InmTDetPlanillaPromesa>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("InmT_DetPlanillaPromesa");

            entity.Property(e => e.PCamposId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCamposId");
            entity.Property(e => e.PTipoDocId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTipoDocId");
        });

        modelBuilder.Entity<InmTDetalleMailing>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("InmT_DetalleMailing");

            entity.Property(e => e.Email)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("EMail");
            entity.Property(e => e.EntRut)
                .HasMaxLength(12)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PMailingId).HasColumnName("pMailingId");
        });

        modelBuilder.Entity<InmTDetalleProgramacion>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("InmT_DetalleProgramacion");

            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PProgramacionId).HasColumnName("pProgramacionId");
            entity.Property(e => e.PTprId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTprId");
            entity.Property(e => e.TinmId).HasColumnName("TInmId");
        });

        modelBuilder.Entity<InmTDoctoInstCredito>(entity =>
        {
            entity.HasKey(e => new { e.InstCod, e.TdoId }).HasName("InmI_DoctoInstCredito");

            entity.ToTable("InmT_DoctoInstCredito");
        });

        modelBuilder.Entity<InmTDocumentosAtachado>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("InmT_DocumentosAtachados");

            entity.Property(e => e.CliRut)
                .HasMaxLength(12)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.CodReferencia)
                .HasMaxLength(15)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.DocumentosId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.FechaIngreso).HasColumnType("datetime");
            entity.Property(e => e.Glosa)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.NombreArchivo)
                .HasMaxLength(120)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PTprId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTprId");
        });

        modelBuilder.Entity<InmTEncuestum>(entity =>
        {
            entity.HasKey(e => e.PreguntaId).HasName("InmI_Encuesta");

            entity.ToTable("InmT_Encuesta");

            entity.Property(e => e.PreguntaId).ValueGeneratedNever();
            entity.Property(e => e.PreguntaGlosa)
                .HasMaxLength(250)
                .IsUnicode(false);
        });

        modelBuilder.Entity<InmTEscrituracion>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("InmT_Escrituracion");

            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.FechaCalculo).HasColumnType("datetime");
            entity.Property(e => e.FechaEscrit).HasColumnType("datetime");
            entity.Property(e => e.FechaProceso).HasColumnType("datetime");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PCartaOfertaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCartaOfertaId");
        });

        modelBuilder.Entity<InmTEstado>(entity =>
        {
            entity.HasKey(e => new { e.TipoEstado, e.DocEstado }).HasName("InmI_Estados");

            entity.ToTable("InmT_Estados");

            entity.Property(e => e.Descripcion)
                .HasMaxLength(50)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.InmuebleColor)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<InmTEstadoCivil>(entity =>
        {
            entity.HasKey(e => e.CodEstCivil).HasName("InmI_EstadoCivil");

            entity.ToTable("InmT_EstadoCivil");

            entity.Property(e => e.CodEstCivil).ValueGeneratedNever();
            entity.Property(e => e.GlosaEstCivil)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<InmTEvento>(entity =>
        {
            entity.HasKey(e => e.EventoId).HasName("InmI_Eventos");

            entity.ToTable("InmT_Eventos");

            entity.Property(e => e.EventoId).ValueGeneratedNever();
            entity.Property(e => e.EventoGlosa)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<InmTExpectativa>(entity =>
        {
            entity.HasKey(e => e.ExpId).HasName("InmI_Expectativa");

            entity.ToTable("InmT_Expectativa");

            entity.Property(e => e.ExpId).ValueGeneratedNever();
            entity.Property(e => e.ExpGlosa)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<InmTFactorInstCredito>(entity =>
        {
            entity.HasKey(e => new { e.InstCod, e.AnosDividendo }).HasName("InmI_FactorInstCredito");

            entity.ToTable("InmT_FactorInstCredito");
        });

        modelBuilder.Entity<InmTFormaContacto>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("InmT_FormaContacto");

            entity.Property(e => e.FormaGlosa)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<InmTGestionCredito>(entity =>
        {
            entity.HasKey(e => new { e.PEntId, e.InstCod }).HasName("InmI_GestionCredito");

            entity.ToTable("InmT_GestionCredito");

            entity.Property(e => e.PEntId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntId");
        });

        modelBuilder.Entity<InmTGrupoVentum>(entity =>
        {
            entity.HasKey(e => new { e.PEmpId, e.VenId }).HasName("InmI_GrupoVenta");

            entity.ToTable("InmT_GrupoVenta");

            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
        });

        modelBuilder.Entity<InmTHojaAntecedente>(entity =>
        {
            entity.HasKey(e => e.PEntId).HasName("InmI_HojaAntecedentes");

            entity.ToTable("InmT_HojaAntecedentes");

            entity.Property(e => e.PEntId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntId");
            entity.Property(e => e.CelularConyuge)
                .HasMaxLength(40)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.CelularConyuge2)
                .HasMaxLength(40)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.CelularCotitular)
                .HasMaxLength(40)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.CelularTitular)
                .HasMaxLength(40)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.CelularTitular2)
                .HasMaxLength(40)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.CiudadEmpresaComp)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.CmuCiudadConyuge)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.CmuCiudadTitular)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.DireccionConyuge)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.DireccionTitular)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EmailConyuge)
                .HasMaxLength(40)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("EMailConyuge");
            entity.Property(e => e.EmailConyuge2)
                .HasMaxLength(40)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("EMailConyuge2");
            entity.Property(e => e.EmailCotitular)
                .HasMaxLength(40)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("EMailCotitular");
            entity.Property(e => e.EmailEmpresaComp)
                .HasMaxLength(40)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("EMailEmpresaComp");
            entity.Property(e => e.EmailTitular)
                .HasMaxLength(40)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("EMailTitular");
            entity.Property(e => e.EmailTitular2)
                .HasMaxLength(40)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("EMailTitular2");
            entity.Property(e => e.EmpleadorConyuge)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EmpleadorConyuge2)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EmpleadorCotitular)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EmpleadorTitular)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EmpleadorTitular2)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FaxConyuge)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.FaxConyuge2)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.FaxCotitular)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.FaxEmpresaComp)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.FaxTitular)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.FaxTitular2)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.FechaNacConyuge).HasColumnType("datetime");
            entity.Property(e => e.FechaNacConyuge2).HasColumnType("datetime");
            entity.Property(e => e.FechaNacCotitular).HasColumnType("datetime");
            entity.Property(e => e.FechaNacTitular).HasColumnType("datetime");
            entity.Property(e => e.FechaNacTitular2).HasColumnType("datetime");
            entity.Property(e => e.FechaRechazo).HasColumnType("datetime");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.MotivoRechazo)
                .HasMaxLength(255)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.Nacionalidad)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.ProfesionConyuge)
                .HasMaxLength(40)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.ProfesionConyuge2)
                .HasMaxLength(40)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.ProfesionCotitular)
                .HasMaxLength(40)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.ProfesionEmpComp)
                .HasMaxLength(40)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.ProfesionTitular)
                .HasMaxLength(40)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.ProfesionTitular2)
                .HasMaxLength(40)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.RutCoTitular)
                .HasMaxLength(12)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.RutConyuge)
                .HasMaxLength(12)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.RutConyuge2)
                .HasMaxLength(12)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.RutEmpresaComp)
                .HasMaxLength(12)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.RutEmpresaCompRleg2)
                .HasMaxLength(12)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("RutEmpresaCompRLeg2");
            entity.Property(e => e.RutEmpresaCompRleg3)
                .HasMaxLength(12)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("RutEmpresaCompRLeg3");
            entity.Property(e => e.RutEmpresaRepLeg)
                .HasMaxLength(12)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.RutTitular2)
                .HasMaxLength(12)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.RutTitularRepLeg)
                .HasMaxLength(12)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.TelefonoConyuge)
                .HasMaxLength(40)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.TelefonoConyuge2)
                .HasMaxLength(40)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.TelefonoCotitular)
                .HasMaxLength(40)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.TelefonoEmpConyuge)
                .HasMaxLength(40)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.TelefonoEmpConyuge2)
                .HasMaxLength(40)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.TelefonoEmpCotitular)
                .HasMaxLength(40)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.TelefonoEmpTitular)
                .HasMaxLength(40)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.TelefonoEmpTitular2)
                .HasMaxLength(40)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.TelefonoEmpresaComp)
                .HasMaxLength(40)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.TelefonoTitular)
                .HasMaxLength(40)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.TelefonoTitular2)
                .HasMaxLength(40)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<InmTInformeGerencialCab>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("InmT_InformeGerencialCab");

            entity.Property(e => e.CodigoEstado)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.FechaCreacion).HasColumnType("datetime");
            entity.Property(e => e.FotoPortada)
                .HasMaxLength(50)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PTprId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTprId");
            entity.Property(e => e.ProyeccionCantidad).HasColumnType("datetime");
            entity.Property(e => e.Qfaltante).HasColumnName("QFaltante");
            entity.Property(e => e.Uffaltante).HasColumnName("UFFaltante");
            entity.Property(e => e.Usuario)
                .HasMaxLength(50)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<InmTInformeGerencialDet>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("InmT_InformeGerencialDet");

            entity.Property(e => e.CodigoEstado)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.Descripcion)
                .HasMaxLength(50)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PTprId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTprId");
            entity.Property(e => e.Usuario)
                .HasMaxLength(50)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<InmTInformeGerencialDetCantidad>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("InmT_InformeGerencialDetCantidad");

            entity.Property(e => e.CodigoEstado)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PTprId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTprId");
        });

        modelBuilder.Entity<InmTInformeGerencialDetMonto>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("InmT_InformeGerencialDetMonto");

            entity.Property(e => e.CodigoEstado)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.MaxQfinal).HasColumnName("MaxQFinal");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PTprId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTprId");
        });

        modelBuilder.Entity<InmTInmuebleProyecto>(entity =>
        {
            entity.HasKey(e => new { e.PTprId, e.PryNumero, e.InmuebleId }).HasName("InmI_InmuebleProyecto");

            entity.ToTable("InmT_InmuebleProyecto");

            entity.Property(e => e.PTprId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTprId");
            entity.Property(e => e.PryNumero)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.InmuebleId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.CodOrientacion)
                .HasMaxLength(15)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.CodigoRol)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.ColorInm)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.Deslindes)
                .HasMaxLength(250)
                .IsUnicode(false);
            entity.Property(e => e.DireccionInmueble)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.FechaRecepcion).HasColumnType("datetime");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.InmuebleCodigo)
                .HasMaxLength(15)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.M2legales).HasColumnName("M2Legales");
            entity.Property(e => e.NomArchPlano)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.NumeroMunicipal)
                .HasMaxLength(15)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PCreId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCreId");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PMonedaCostoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMonedaCostoId");
            entity.Property(e => e.PMonedaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMonedaId");
            entity.Property(e => e.Piso)
                .HasMaxLength(5)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.TinmId).HasColumnName("TInmId");
        });

        modelBuilder.Entity<InmTInmuebleProyectoLog>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("InmT_InmuebleProyectoLog");

            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.FechaUpdate).HasColumnType("datetime");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.InmuebleCodigo)
                .HasMaxLength(15)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PTprId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTprId");
            entity.Property(e => e.ProcNombre)
                .HasMaxLength(200)
                .IsUnicode(false);
            entity.Property(e => e.PryNumero)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<InmTInmuebleProyectoModMasiva>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("InmT_InmuebleProyectoModMasiva");

            entity.Property(e => e.CodOrientacion)
                .HasMaxLength(15)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.CodigoRol)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.ColorInm)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.Deslindes)
                .HasMaxLength(250)
                .IsUnicode(false);
            entity.Property(e => e.DireccionInmueble)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.FechaRecepcion).HasColumnType("datetime");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.InmuebleCodigo)
                .HasMaxLength(15)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.M2legales).HasColumnName("M2Legales");
            entity.Property(e => e.NomArchPlano)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.NumeroMunicipal)
                .HasMaxLength(15)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PCreId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCreId");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PMonedaCostoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMonedaCostoId");
            entity.Property(e => e.PMonedaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMonedaId");
            entity.Property(e => e.PTprId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTprId");
            entity.Property(e => e.PinmuebleId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("PInmuebleId");
            entity.Property(e => e.Piso)
                .HasMaxLength(5)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PryNumero)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.TinmId).HasColumnName("TInmId");
        });

        modelBuilder.Entity<InmTInmuebleProyectoRel>(entity =>
        {
            entity.HasKey(e => new { e.PTprId, e.PryNumero, e.PinmuebleId, e.PTprIdRel, e.PryNumeroRel, e.PinmuebleIdRel }).HasName("InmI_InmuebleProyectoRel");

            entity.ToTable("InmT_InmuebleProyectoRel");

            entity.Property(e => e.PTprId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTprId");
            entity.Property(e => e.PryNumero)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PinmuebleId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("PInmuebleId");
            entity.Property(e => e.PTprIdRel)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTprIdRel");
            entity.Property(e => e.PryNumeroRel)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PinmuebleIdRel)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("PInmuebleIdRel");
        });

        modelBuilder.Entity<InmTInstancia>(entity =>
        {
            entity.HasKey(e => e.InstPvtaId).HasName("InmI_Instancias");

            entity.ToTable("InmT_Instancias");

            entity.Property(e => e.InstPvtaId).HasColumnName("InstPVtaId");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.InstGlosa)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<InmTInstanciaVentum>(entity =>
        {
            entity.HasKey(e => new { e.TventaId, e.InstPvtaId, e.Secuencia }).HasName("InmI_InstanciaVenta");

            entity.ToTable("InmT_InstanciaVenta");

            entity.Property(e => e.TventaId).HasColumnName("TVentaId");
            entity.Property(e => e.InstPvtaId).HasColumnName("InstPVtaId");

            entity.HasOne(d => d.InstPvta).WithMany(p => p.InmTInstanciaVenta)
                .HasForeignKey(d => d.InstPvtaId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_InmT_InstanciaVenta02");

            entity.HasOne(d => d.Tventa).WithMany(p => p.InmTInstanciaVenta)
                .HasForeignKey(d => d.TventaId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_InmT_InstanciaVenta01");
        });

        modelBuilder.Entity<InmTIntegracion>(entity =>
        {
            entity.HasKey(e => new { e.PTprId, e.NodoId }).HasName("InmI_Integracion");

            entity.ToTable("InmT_Integracion");

            entity.Property(e => e.PTprId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTprId");
            entity.Property(e => e.NodoExternoId)
                .HasMaxLength(21)
                .IsUnicode(false);
        });

        modelBuilder.Entity<InmTItemDescuento>(entity =>
        {
            entity.HasKey(e => e.ItemDesctoId).HasName("InmI_ItemDescuento");

            entity.ToTable("InmT_ItemDescuento");

            entity.Property(e => e.ItemDesctoId).ValueGeneratedNever();
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.ItemDesctoGlosa)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PCreId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCreId");
            entity.Property(e => e.PCtaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtaId");
            entity.Property(e => e.PTprId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTprId");
            entity.Property(e => e.PryNumero)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<InmTItemFinanciamiento>(entity =>
        {
            entity.HasKey(e => e.ItemFinId).HasName("InmI_ItemFinanciamiento");

            entity.ToTable("InmT_ItemFinanciamiento");

            entity.Property(e => e.ItemFinId).ValueGeneratedNever();
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.IndConformaPventa).HasColumnName("IndConformaPVenta");
            entity.Property(e => e.ItemFinGlosa)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PCreId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCreId");
            entity.Property(e => e.PCtaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtaId");
            entity.Property(e => e.PMonedaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMonedaId");
            entity.Property(e => e.PTprId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTprId");
            entity.Property(e => e.PryNumero)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<InmTItemGenerico>(entity =>
        {
            entity.HasKey(e => e.ItemGenId).HasName("InmI_ItemGenerico");

            entity.ToTable("InmT_ItemGenerico");

            entity.Property(e => e.ItemGenGlosa)
                .HasMaxLength(15)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<InmTLogAutorizaCotizacion>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("InmT_LogAutorizaCotizacion");

            entity.Property(e => e.FechaHora).HasColumnType("datetime");
            entity.Property(e => e.PCotizacionId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCotizacionId");
            entity.Property(e => e.PTprId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTprId");
            entity.Property(e => e.Usuario)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<InmTLogCambioTraspasoCo>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("InmT_LogCambioTraspasoCO");

            entity.Property(e => e.CartaOfeIdNew).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.FechaLog).HasColumnType("datetime");
            entity.Property(e => e.GlosaEvento)
                .HasMaxLength(150)
                .IsUnicode(false);
            entity.Property(e => e.NroGiantiguo).HasColumnName("NroGIAntiguo");
            entity.Property(e => e.NroGinuevo).HasColumnName("NroGINuevo");
            entity.Property(e => e.OpeIdAnt).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.OpeIdNuevo).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.PCartaOfertaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCartaOfertaId");
            entity.Property(e => e.RutAntiguo)
                .HasMaxLength(12)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.RutNuevo)
                .HasMaxLength(12)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.UsuarioResp)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<InmTLogCambiosPrecio>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("InmT_LogCambiosPrecios");

            entity.Property(e => e.FechaCambio).HasColumnType("datetime");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.MontoMonPlista).HasColumnName("MontoMonPLista");
            entity.Property(e => e.MontoPorPlista).HasColumnName("MontoPorPLista");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PTprId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTprId");
            entity.Property(e => e.PinmuebleId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("PInmuebleId");
            entity.Property(e => e.Usuario)
                .HasMaxLength(50)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<InmTLogSucursalCero>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("InmT_LogSucursalCero");

            entity.Property(e => e.PCabOpeId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCabOpeId");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
        });

        modelBuilder.Entity<InmTLogVendedor>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("InmT_LogVendedor");

            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PCotizacionId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCotizacionId");
            entity.Property(e => e.PTprId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTprId");
        });

        modelBuilder.Entity<InmTModoContacto>(entity =>
        {
            entity.HasKey(e => e.ModoId).HasName("InmI_ModoContacto");

            entity.ToTable("InmT_ModoContacto");

            entity.Property(e => e.ModoId).ValueGeneratedNever();
            entity.Property(e => e.ModoGlosa)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<InmTNotarium>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("InmT_Notaria");

            entity.Property(e => e.Ciudad)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.Direccion)
                .HasMaxLength(100)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.GlosaNotaria)
                .HasMaxLength(100)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.Telefono)
                .HasMaxLength(15)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<InmTObservacione>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("InmT_Observaciones");

            entity.Property(e => e.CliRut)
                .HasMaxLength(12)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.Fecha).HasColumnType("datetime");
            entity.Property(e => e.ObservacGlosa)
                .HasMaxLength(200)
                .IsUnicode(false);
            entity.Property(e => e.PAtencionId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pAtencionId");
            entity.Property(e => e.PTprId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTprId");
        });

        modelBuilder.Entity<InmTOficina>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("InmT_Oficina");

            entity.Property(e => e.Ciudad)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.Direccion)
                .HasMaxLength(100)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.GlosaOficina)
                .HasMaxLength(100)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.Telefono)
                .HasMaxLength(15)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<InmTPagosCartaOfertum>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("InmT_PagosCartaOferta");

            entity.Property(e => e.Comprobante).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.CtaCteValeVista)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.FechaContable).HasColumnType("datetime");
            entity.Property(e => e.FechaPago).HasColumnType("datetime");
            entity.Property(e => e.FechaVenc).HasColumnType("datetime");
            entity.Property(e => e.PCabOpeId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCabOpeId");
            entity.Property(e => e.PCartaOfertaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCartaOfertaId");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PFormaPagoDetId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pFormaPagoDetId");
            entity.Property(e => e.Usuario)
                .HasMaxLength(50)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.Voucher).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.XDocCceNumero)
                .HasMaxLength(25)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("xDocCceNumero");
        });

        modelBuilder.Entity<InmTParComisione>(entity =>
        {
            entity.HasKey(e => new { e.PEmpId, e.Descripcion }).HasName("InmI_ParComisiones");

            entity.ToTable("InmT_ParComisiones");

            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.Descripcion)
                .HasMaxLength(50)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.CargoId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
        });

        modelBuilder.Entity<InmTParCtasConfig>(entity =>
        {
            entity.HasKey(e => e.PEmpId).HasName("InmI_ParCtasConfig");

            entity.ToTable("InmT_ParCtasConfig");

            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.XCtaCodigo).HasColumnName("xCtaCodigo");
            entity.Property(e => e.XCtaUsaCentroResp).HasColumnName("xCtaUsaCentroResp");
            entity.Property(e => e.XCtaUsaConcepto).HasColumnName("xCtaUsaConcepto");
            entity.Property(e => e.XCtaUsaProyecto).HasColumnName("xCtaUsaProyecto");
        });

        modelBuilder.Entity<InmTParEstadosProyecto>(entity =>
        {
            entity.HasKey(e => e.CodigoEstadoProyecto).HasName("InmI_ParEstadosProyectos01");

            entity.ToTable("InmT_ParEstadosProyectos");

            entity.Property(e => e.CodigoEstadoProyecto).ValueGeneratedNever();
            entity.Property(e => e.Descripcion)
                .HasMaxLength(50)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
        });

        modelBuilder.Entity<InmTParOrientacion>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("InmT_ParOrientacion");

            entity.Property(e => e.CodOrientacion)
                .HasMaxLength(15)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.Descripcion)
                .HasMaxLength(50)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<InmTParReferencium>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("InmT_ParReferencia");

            entity.Property(e => e.CodReferencia)
                .HasMaxLength(15)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.Descripcion)
                .HasMaxLength(50)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<InmTParTipoComisione>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("InmT_ParTipoComisiones");

            entity.Property(e => e.Descripcion)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<InmTParTipoDocumento>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("InmT_ParTipoDocumentos");

            entity.Property(e => e.Descripcion)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<InmTParTipoOpeComi>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("InmT_ParTipoOpeComi");

            entity.Property(e => e.Descripcion)
                .HasMaxLength(50)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<InmTParametrosInforme>(entity =>
        {
            entity.HasKey(e => new { e.Usuario, e.InmNombreInforme }).HasName("InmI_ParametrosInformes");

            entity.ToTable("InmT_ParametrosInformes");

            entity.Property(e => e.Usuario)
                .HasMaxLength(50)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.InmNombreInforme)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.InmParamInforme)
                .HasMaxLength(120)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<InmTPasivosDeuda>(entity =>
        {
            entity.HasKey(e => new { e.PEntId, e.IdenCorrelativo }).HasName("InmI_PasivosDeudas");

            entity.ToTable("InmT_PasivosDeudas");

            entity.Property(e => e.PEntId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntId");
            entity.Property(e => e.DestinoCredito)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.InstEndeudamiento)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<InmTPatrimonio>(entity =>
        {
            entity.HasKey(e => new { e.PEntId, e.IdenCorrelativo }).HasName("InmI_Patrimonio");

            entity.ToTable("InmT_Patrimonio");

            entity.Property(e => e.PEntId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntId");
            entity.Property(e => e.DescActivo)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PMonedaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMonedaId");
        });

        modelBuilder.Entity<InmTPeriodoComision>(entity =>
        {
            entity.HasKey(e => new { e.PEmpId, e.Periodo }).HasName("InmI_PeriodoComision");

            entity.ToTable("InmT_PeriodoComision");

            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.FechaInicio).HasColumnType("datetime");
            entity.Property(e => e.FechaTermino).HasColumnType("datetime");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
        });

        modelBuilder.Entity<InmTPlantillasDocumento>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("InmT_PlantillasDocumentos");

            entity.Property(e => e.DocumentoHtml)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("DocumentoHTML");
            entity.Property(e => e.DocumentoId).HasColumnName("DocumentoID");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.FechaIngreso).HasColumnType("datetime");
            entity.Property(e => e.FechaVigencia).HasColumnType("datetime");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.NombreDocumento)
                .HasMaxLength(100)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.Objetivo)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PTprId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTprId");
            entity.Property(e => e.Usuario)
                .HasMaxLength(50)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<InmTProceso>(entity =>
        {
            entity.HasKey(e => e.ProcId).HasName("InmI_Procesos");

            entity.ToTable("InmT_Procesos");

            entity.Property(e => e.ProcGlosa)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<InmTPromesasImpresa>(entity =>
        {
            entity.HasKey(e => new { e.PEmpId, e.PTprId, e.PCartaOfertaId }).HasName("InmI_PromesasImpresas01");

            entity.ToTable("InmT_PromesasImpresas");

            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PTprId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTprId");
            entity.Property(e => e.PCartaOfertaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCartaOfertaId");
            entity.Property(e => e.DireccEmpresaComp)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.DireccionTitular)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EntRazonSocial)
                .HasMaxLength(120)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EntRazonSocial2)
                .HasMaxLength(120)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EntRazonSocial3)
                .HasMaxLength(120)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.FechaEmision).HasColumnType("datetime");
            entity.Property(e => e.FechaEstado).HasColumnType("datetime");
            entity.Property(e => e.RutCartaOferta)
                .HasMaxLength(12)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.RutTitular2)
                .HasMaxLength(12)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.RutTitularRepLeg)
                .HasMaxLength(12)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.Usuario)
                .HasMaxLength(50)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<InmTProyecto>(entity =>
        {
            entity.HasKey(e => e.PTprId).HasName("InmI_Proyecto");

            entity.ToTable("InmT_Proyecto");

            entity.Property(e => e.PTprId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTprId");
            entity.Property(e => e.FechaAvaluo).HasColumnType("datetime");
            entity.Property(e => e.FechaFin).HasColumnType("datetime");
            entity.Property(e => e.FechaIngMunicipal).HasColumnType("datetime");
            entity.Property(e => e.FechaInicio).HasColumnType("datetime");
            entity.Property(e => e.IndUsaCcunico).HasColumnName("IndUsaCCUnico");
            entity.Property(e => e.M2totTerreno).HasColumnName("M2TotTerreno");
            entity.Property(e => e.PCreId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCreId");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PEntIdRepLegal1)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntIdRepLegal1");
            entity.Property(e => e.PEntIdRepLegal2)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntIdRepLegal2");
            entity.Property(e => e.PEntIdRepLegal3)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntIdRepLegal3");
            entity.Property(e => e.PMonedaCostoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMonedaCostoId");
            entity.Property(e => e.PMonedaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMonedaId");
            entity.Property(e => e.PPdcId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pPdcId");
            entity.Property(e => e.TventaId).HasColumnName("TVentaId");
        });

        modelBuilder.Entity<InmTProyectoClasificaComision>(entity =>
        {
            entity.HasKey(e => new { e.PTprId, e.ClasificaId }).HasName("InmI_ProyectoClasificaComision");

            entity.ToTable("InmT_ProyectoClasificaComision");

            entity.Property(e => e.PTprId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTprId");
        });

        modelBuilder.Entity<InmTProyectoEtapa>(entity =>
        {
            entity.HasKey(e => new { e.PTprId, e.NodoId }).HasName("InmI_ProyectoEtapa");

            entity.ToTable("InmT_ProyectoEtapa");

            entity.Property(e => e.PTprId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTprId");
            entity.Property(e => e.FechaEntregaEtapa).HasColumnType("datetime");
            entity.Property(e => e.FechaInicio).HasColumnType("datetime");
            entity.Property(e => e.FechaTermino).HasColumnType("datetime");
            entity.Property(e => e.FechaVentaEtapa).HasColumnType("datetime");
            entity.Property(e => e.PCreId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCreId");
        });

        modelBuilder.Entity<InmTProyectoEtapaInst>(entity =>
        {
            entity.HasKey(e => new { e.PCreId, e.AnosDividendo, e.PTprId, e.InstCod }).HasName("InmI_ProyectoEtapaInst");

            entity.ToTable("InmT_ProyectoEtapaInst");

            entity.Property(e => e.PCreId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCreId");
            entity.Property(e => e.PTprId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTprId");
        });

        modelBuilder.Entity<InmTProyectoOficina>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("InmT_ProyectoOficina");

            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PTprId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTprId");
        });

        modelBuilder.Entity<InmTRegimenConyugal>(entity =>
        {
            entity.HasKey(e => e.CodRegConyugal).HasName("InmI_RegimenConyugal");

            entity.ToTable("InmT_RegimenConyugal");

            entity.Property(e => e.CodRegConyugal).ValueGeneratedNever();
            entity.Property(e => e.GlosaRegConyugal)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<InmTRelDetalleDoc>(entity =>
        {
            entity.HasKey(e => new { e.EmpId, e.DivCodigo, e.UniCodigo, e.PerId, e.TesTdoId, e.TesDocNumInterno, e.TesDocLinea }).HasName("InmI_RelDetalledoc");

            entity.ToTable("InmT_RelDetalleDoc");

            entity.Property(e => e.MontoUf).HasColumnName("MontoUF");
        });

        modelBuilder.Entity<InmTRelDetalleDoc20112012>(entity =>
        {
            entity.HasKey(e => new { e.EmpId, e.DivCodigo, e.UniCodigo, e.PerId, e.TesTdoId, e.TesDocNumInterno, e.TesDocLinea }).HasName("InmI_RelDetalleDoc20112012");

            entity.ToTable("InmT_RelDetalleDoc20112012");
        });

        modelBuilder.Entity<InmTRelDocumento>(entity =>
        {
            entity.HasKey(e => new { e.EmpId, e.DivCodigo, e.UniCodigo, e.PerId, e.TesTdoId, e.TesDocNumInterno, e.CarOfeNumInterno }).HasName("InmI_RelDocumentos");

            entity.ToTable("InmT_RelDocumentos");

            entity.Property(e => e.PTprId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTprId");
            entity.Property(e => e.TesDocFecha).HasColumnType("datetime");
        });

        modelBuilder.Entity<InmTRelDocumentos20112012>(entity =>
        {
            entity.HasKey(e => new { e.EmpId, e.DivCodigo, e.UniCodigo, e.PerId, e.TesTdoId, e.TesDocNumInterno, e.CarOfeNumInterno }).HasName("InmI_RelDocumentos20112012");

            entity.ToTable("InmT_RelDocumentos20112012");
        });

        modelBuilder.Entity<InmTRequisito>(entity =>
        {
            entity.HasKey(e => new { e.EventoId, e.RequisitoId }).HasName("InmI_Requisitos");

            entity.ToTable("InmT_Requisitos");

            entity.Property(e => e.RequisitoGlosa)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<InmTSeguimientoCliente>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("InmT_SeguimientoCliente");

            entity.Property(e => e.CliRut)
                .HasMaxLength(12)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.Fecha).HasColumnType("datetime");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PFormaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pFormaId");
            entity.Property(e => e.PTprId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTprId");
            entity.Property(e => e.SeguiGlosa)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.SeguiId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.Telefono)
                .HasMaxLength(15)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<InmTSituacion>(entity =>
        {
            entity.HasKey(e => e.SituacionId).HasName("InmI_Situacion");

            entity.ToTable("InmT_Situacion");

            entity.Property(e => e.SituacionGlosa)
                .HasMaxLength(15)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<InmTTipoCliente>(entity =>
        {
            entity.HasKey(e => e.TcliId).HasName("InmI_TipoCliente");

            entity.ToTable("InmT_TipoCliente");

            entity.Property(e => e.TcliId).ValueGeneratedNever();
            entity.Property(e => e.TcliGlosa)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<InmTTipoDesistimiento>(entity =>
        {
            entity.HasKey(e => e.TipoDesId).HasName("InmI_TipoDesistimiento");

            entity.ToTable("InmT_TipoDesistimiento");

            entity.Property(e => e.TipoDesId).ValueGeneratedNever();
            entity.Property(e => e.TipoDesGlosa)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<InmTTipoDocumento>(entity =>
        {
            entity.HasKey(e => e.TdoId).HasName("InmI_TipoDocumentos");

            entity.ToTable("InmT_TipoDocumentos");

            entity.Property(e => e.TdoId).ValueGeneratedNever();
            entity.Property(e => e.TdoGlosa)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<InmTTipoGrupoVentum>(entity =>
        {
            entity.HasKey(e => new { e.PEmpId, e.TgvId }).HasName("InmI_TipoGrupoVenta");

            entity.ToTable("InmT_TipoGrupoVenta");

            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.TgvGlosa)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<InmTTipoInmueble>(entity =>
        {
            entity.HasKey(e => new { e.TinmId, e.PTprId }).HasName("InmI_TipoInmbueble");

            entity.ToTable("InmT_TipoInmueble");

            entity.Property(e => e.TinmId).HasColumnName("TInmId");
            entity.Property(e => e.PTprId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTprId");
            entity.Property(e => e.NomArchPlano)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PMonedaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMonedaId");
            entity.Property(e => e.TinmGlosa)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("TInmGlosa");
            entity.Property(e => e.TinmGlosaLarga)
                .HasMaxLength(100)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("TInmGlosaLarga");
        });

        modelBuilder.Entity<InmTTipoTraspaso>(entity =>
        {
            entity.HasKey(e => e.TraspasoId).HasName("InmT_TipoTraspaso_1");

            entity.ToTable("InmT_TipoTraspaso");

            entity.Property(e => e.TraspasoId).ValueGeneratedNever();
            entity.Property(e => e.TraspasoGlosa)
                .HasMaxLength(50)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<InmTTipoVentum>(entity =>
        {
            entity.HasKey(e => e.TventaId).HasName("InmI_TipoVenta");

            entity.ToTable("InmT_TipoVenta");

            entity.Property(e => e.TventaId)
                .ValueGeneratedNever()
                .HasColumnName("TVentaId");
            entity.Property(e => e.TventaGlosa)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("TVentaGlosa");

            entity.HasMany(d => d.ItemFins).WithMany(p => p.Tventa)
                .UsingEntity<Dictionary<string, object>>(
                    "InmTItemesVentum",
                    r => r.HasOne<InmTItemFinanciamiento>().WithMany()
                        .HasForeignKey("ItemFinId")
                        .OnDelete(DeleteBehavior.ClientSetNull)
                        .HasConstraintName("FK_InmT_ItemesVenta01"),
                    l => l.HasOne<InmTTipoVentum>().WithMany()
                        .HasForeignKey("TventaId")
                        .OnDelete(DeleteBehavior.ClientSetNull)
                        .HasConstraintName("FK_InmT_ItemesVenta02"),
                    j =>
                    {
                        j.HasKey("TventaId", "ItemFinId").HasName("InmI_ItemesVenta");
                        j.ToTable("InmT_ItemesVenta");
                        j.IndexerProperty<short>("TventaId").HasColumnName("TVentaId");
                    });
        });

        modelBuilder.Entity<InmTTmpCotizacion>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("InmT_TmpCotizacion");

            entity.Property(e => e.EntRut)
                .HasMaxLength(12)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.ObservacionInm)
                .HasMaxLength(255)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PCategoriaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCategoriaId");
            entity.Property(e => e.PCotizacionId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCotizacionId");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PTprId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTprId");
            entity.Property(e => e.PryNumero)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.TventaId).HasColumnName("TVentaId");
            entity.Property(e => e.Usuario)
                .HasMaxLength(50)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<InmTTmpPagosCartaOfertum>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("InmT_TmpPagosCartaOferta");

            entity.Property(e => e.Comprobante).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.CtaCteValeVista)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.FechaContable).HasColumnType("datetime");
            entity.Property(e => e.FechaPago).HasColumnType("datetime");
            entity.Property(e => e.FechaVenc).HasColumnType("datetime");
            entity.Property(e => e.PCartaOfertaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCartaOfertaId");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PFormaPagoDetId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pFormaPagoDetId");
            entity.Property(e => e.Usuario)
                .HasMaxLength(50)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.Voucher).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.XDocCceNumero)
                .HasMaxLength(25)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("xDocCceNumero");
        });

        modelBuilder.Entity<InmTTmpPagosTraspasoCartaOfertum>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("InmT_TmpPagosTraspasoCartaOferta");

            entity.Property(e => e.IndConformaPventa).HasColumnName("IndConformaPVenta");
            entity.Property(e => e.PCartaOfertaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCartaOfertaId");
            entity.Property(e => e.Usuario)
                .HasMaxLength(50)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<InmTUsuario>(entity =>
        {
            entity.HasKey(e => new { e.IdUsuario, e.AtributoId }).HasName("InmI_Usuarios");

            entity.ToTable("InmT_Usuarios");

            entity.Property(e => e.IdUsuario)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario");
        });

        modelBuilder.Entity<InmTVendedore>(entity =>
        {
            entity.HasKey(e => new { e.PEmpId, e.VenId }).HasName("InmI_Vendedores");

            entity.ToTable("InmT_Vendedores");

            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.VenNombre)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.VenUserName)
                .HasMaxLength(15)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<InmTVersionCarOfeAdicional>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("InmT_VersionCarOfeAdicional");

            entity.Property(e => e.PCartaOfertaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCartaOfertaId");
            entity.Property(e => e.PMonedaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMonedaId");
        });

        modelBuilder.Entity<InmTVersionCarOfeDetItemFinan>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("InmT_VersionCarOfeDetItemFinan");

            entity.Property(e => e.FechaVenc).HasColumnType("datetime");
            entity.Property(e => e.PCartaOfertaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCartaOfertaId");
        });

        modelBuilder.Entity<InmTVersionCarOfeDoctoRespaldo>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("InmT_VersionCarOfeDoctoRespaldo");

            entity.Property(e => e.Comentario)
                .HasMaxLength(255)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.FechaRegistro).HasColumnType("datetime");
            entity.Property(e => e.PCartaOfertaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCartaOfertaId");
        });

        modelBuilder.Entity<InmTVersionCarOfeItemFinan>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("InmT_VersionCarOfeItemFinan");

            entity.Property(e => e.DivCodigoRi).HasColumnName("DivCodigoRI");
            entity.Property(e => e.PCartaOfertaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCartaOfertaId");
            entity.Property(e => e.PEmpIdRi)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpIdRI");
            entity.Property(e => e.PMonedaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMonedaId");
            entity.Property(e => e.RefFechaVcto).HasColumnType("datetime");
            entity.Property(e => e.RefId)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();

            entity.HasOne(d => d.ItemFin).WithMany()
                .HasForeignKey(d => d.ItemFinId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_InmT_VersionCarOfeItemFinan01");
        });

        modelBuilder.Entity<InmTVersionCarOfeProductoAdi>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("InmT_VersionCarOfeProductoAdi");

            entity.Property(e => e.PCartaOfertaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCartaOfertaId");
            entity.Property(e => e.PMonedaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMonedaId");
            entity.Property(e => e.PTprId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTprId");
            entity.Property(e => e.PryNumero)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<InmTVersionCartaOfertum>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("InmT_VersionCartaOferta");

            entity.Property(e => e.CarOfeFecha).HasColumnType("datetime");
            entity.Property(e => e.CartaOfertaId).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.CtrSanumInterno).HasColumnName("CtrSANumInterno");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.FechaContrato).HasColumnType("datetime");
            entity.Property(e => e.FechaDesist).HasColumnType("datetime");
            entity.Property(e => e.FechaEscrit).HasColumnType("datetime");
            entity.Property(e => e.FechaPagoTot).HasColumnType("datetime");
            entity.Property(e => e.FechaPromesa).HasColumnType("datetime");
            entity.Property(e => e.FechaTraspaso).HasColumnType("datetime");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.ObservacionCoferta)
                .HasMaxLength(255)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("ObservacionCOferta");
            entity.Property(e => e.PCabOpeIdEsc)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCabOpeIdEsc");
            entity.Property(e => e.PCabOpeIdPro)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCabOpeIdPro");
            entity.Property(e => e.PCabOpeIdProVen)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCabOpeIdProVen");
            entity.Property(e => e.PCotizacionId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCotizacionId");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PEntId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntId");
            entity.Property(e => e.PMonedaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMonedaId");
            entity.Property(e => e.PTprId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTprId");
            entity.Property(e => e.PrecioFinalCo).HasColumnName("PrecioFinalCO");
            entity.Property(e => e.PryNumero)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.TventaId).HasColumnName("TVentaId");
        });

        modelBuilder.Entity<InmTVersionPagosCartaOfertum>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("InmT_VersionPagosCartaOferta");

            entity.Property(e => e.Comprobante).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.CtaCteValeVista)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.FechaPago).HasColumnType("datetime");
            entity.Property(e => e.FechaVenc).HasColumnType("datetime");
            entity.Property(e => e.PCabOpeId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCabOpeId");
            entity.Property(e => e.PCartaOfertaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCartaOfertaId");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PFormaPagoDetId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pFormaPagoDetId");
            entity.Property(e => e.Usuario)
                .HasMaxLength(50)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.Voucher).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.XDocCceNumero)
                .HasMaxLength(25)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("xDocCceNumero");
        });

        modelBuilder.Entity<InmtArbolProyectoResp20170217>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("Inmt_ArbolProyectoResp20170217");

            entity.Property(e => e.DescripcionNodo)
                .HasMaxLength(40)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.NodoExternoId)
                .HasMaxLength(21)
                .IsUnicode(false);
            entity.Property(e => e.PTprId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTprId");
            entity.Property(e => e.Precedencia)
                .HasMaxLength(50)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<InmtCabeceraprogramacionElSol>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("inmt_cabeceraprogramacionElSol");

            entity.Property(e => e.CodigoEstado)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.FechaAprobacion).HasColumnType("datetime");
            entity.Property(e => e.FechaDigitacion).HasColumnType("datetime");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PTprId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTprId");
            entity.Property(e => e.ProgramacionId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.Usuario)
                .HasMaxLength(50)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<InmtCotPruebaImagene>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("Inmt_CotPruebaImagenes");

            entity.Property(e => e.Correlativo).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.Depto)
                .HasMaxLength(50)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.Descripcion)
                .HasMaxLength(120)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.Imagen).HasMaxLength(1);
            entity.Property(e => e.ImagenId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.Precio)
                .HasMaxLength(50)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<InmtDetalleprogramacionElSol>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("inmt_detalleprogramacionElSol");

            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PProgramacionId).HasColumnName("pProgramacionId");
            entity.Property(e => e.PTprId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTprId");
            entity.Property(e => e.TinmId).HasColumnName("TInmId");
        });

        modelBuilder.Entity<InmtTmpCuadraturaPago>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("Inmt_TmpCuadraturaPagos");

            entity.Property(e => e.CabOpeFecha)
                .HasColumnType("datetime")
                .HasColumnName("CabOPeFecha");
            entity.Property(e => e.MontoRecibidoFicoDebe).HasColumnType("numeric(18, 6)");
            entity.Property(e => e.MontoRecibidoFicoHaber).HasColumnType("numeric(18, 6)");
            entity.Property(e => e.MontoRecibidoGi)
                .HasColumnType("numeric(18, 6)")
                .HasColumnName("MontoRecibidoGI");
            entity.Property(e => e.PCartaOfertaId).HasColumnName("pCartaOfertaId");
            entity.Property(e => e.PEmpid).HasColumnName("pEmpid");
        });

        modelBuilder.Entity<IntTFormato>(entity =>
        {
            entity.HasKey(e => e.IntFmtOrden).HasName("InI_Formato_PK");

            entity.ToTable("IntT_Formato");

            entity.Property(e => e.IntFmtOrden).ValueGeneratedNever();
            entity.Property(e => e.IntFmtCampo)
                .HasMaxLength(40)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.IntFmtValor)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.TipoDato)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<IntTInterfazAux>(entity =>
        {
            entity.HasKey(e => e.IntIntId).HasName("IntI_InterfazAux_PK");

            entity.ToTable("IntT_InterfazAux");

            entity.HasIndex(e => new { e.IntTmpOwner, e.SisCodOri, e.IdFuncionalidad, e.PEmpId, e.DivCodigo, e.UniCodigo, e.IntBitArchivo }, "IntI_InterfazAux_I01").HasFillFactor(90);

            entity.Property(e => e.IntIntId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.CabOpeFecha).HasColumnType("datetime");
            entity.Property(e => e.CabOpeGlosa)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.CodCtaCteBco)
                .HasMaxLength(15)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.ConCcpCod).HasColumnName("ConCCpCod");
            entity.Property(e => e.CtoNumero).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.DocCceFecEmi).HasColumnType("datetime");
            entity.Property(e => e.DocCceFecProyectada).HasColumnType("datetime");
            entity.Property(e => e.DocCceNumero)
                .HasMaxLength(25)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EntRut)
                .HasMaxLength(12)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EntRutSec)
                .HasMaxLength(12)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EntRutTer)
                .HasMaxLength(12)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.IdFuncionalidad)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcionalidad");
            entity.Property(e => e.IntBitArchivo)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.IntTmpOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.LineaProdCodigo)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.MovCceFecPagoPropuesta).HasColumnType("datetime");
            entity.Property(e => e.MovCceFecVenc).HasColumnType("datetime");
            entity.Property(e => e.MovCceGlosa)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.MovCcePeriodo)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PCabReferenciaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCabReferenciaId");
            entity.Property(e => e.PDetReferenciaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pDetReferenciaId");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PFormaPagoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pFormaPagoId");
            entity.Property(e => e.PMonedaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMonedaId");
            entity.Property(e => e.PTprId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTprId");
            entity.Property(e => e.PryNumero)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.RutBeneficiario)
                .HasMaxLength(12)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<IntTInterfazAuxLet>(entity =>
        {
            entity.HasKey(e => e.IntIntId).HasName("IntI_InterfazAuxLet_PK");

            entity.ToTable("IntT_InterfazAuxLet");

            entity.HasIndex(e => new { e.IntTmpOwner, e.SisCodOri, e.IdFuncionalidad, e.PEmpId, e.DivCodigo, e.UniCodigo }, "IntI_InterfazAuxLet_I01").HasFillFactor(90);

            entity.Property(e => e.IntIntId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.CabOpeFecha).HasColumnType("datetime");
            entity.Property(e => e.CabOpeGlosa)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.DocCceDocRef)
                .HasMaxLength(25)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.DocCceFecEmi).HasColumnType("datetime");
            entity.Property(e => e.DocCceFecProrroga).HasColumnType("datetime");
            entity.Property(e => e.DocCceFecProyectada).HasColumnType("datetime");
            entity.Property(e => e.DocCceNumCedente)
                .HasMaxLength(25)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.DocCceNumDocBanco)
                .HasMaxLength(25)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.DocCceNumPagCedente)
                .HasMaxLength(25)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.DocCceNumero)
                .HasMaxLength(25)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EntRut)
                .HasMaxLength(12)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EntRutSec)
                .HasMaxLength(12)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EntRutTer)
                .HasMaxLength(12)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.IdFuncionalidad)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcionalidad");
            entity.Property(e => e.IntTmpOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.LineaProdCodigo)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.MovCceFecPagoPropuesta).HasColumnType("datetime");
            entity.Property(e => e.MovCceFecVenc).HasColumnType("datetime");
            entity.Property(e => e.MovCceGlosa)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.MovCcePeriodo)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PCabReferenciaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCabReferenciaId");
            entity.Property(e => e.PDetReferenciaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pDetReferenciaId");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PFormaPagoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pFormaPagoId");
            entity.Property(e => e.PMonedaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMonedaId");
            entity.Property(e => e.PTprId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTprId");
            entity.Property(e => e.PryNumero)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.RutBeneficiario)
                .HasMaxLength(12)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<IntTInterfazBitacora>(entity =>
        {
            entity.HasKey(e => new { e.PEmpId, e.DivCodigo, e.UniCodigo, e.IntBitArchivo }).HasName("IntI_InterfazBitacora_PK");

            entity.ToTable("IntT_InterfazBitacora");

            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.IntBitArchivo)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.IntBitArchivoLco)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.IntBitFec).HasColumnType("datetime");
            entity.Property(e => e.IntBitIndUnicoPl)
                .HasMaxLength(50)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("IntBitIndUnicoPL");
            entity.Property(e => e.IntBitOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<IntTInterfazBitacoraEnt>(entity =>
        {
            entity.HasKey(e => e.IntBitArchivo).HasName("IntI_InterfazBitacoraEnt_PK");

            entity.ToTable("IntT_InterfazBitacoraEnt");

            entity.Property(e => e.IntBitArchivo)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.IntBitFec).HasColumnType("datetime");
            entity.Property(e => e.IntBitIndUnicoPl)
                .HasMaxLength(50)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("IntBitIndUnicoPL");
            entity.Property(e => e.IntBitOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.IntProcesoLargoId)
                .HasMaxLength(40)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<IntTInterfazBitacoraFu>(entity =>
        {
            entity.HasKey(e => e.IntBitArchivo).HasName("IntI_InterfazBitacoraFus_PK");

            entity.ToTable("IntT_InterfazBitacoraFUS");

            entity.Property(e => e.IntBitArchivo)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.IntBitFec).HasColumnType("datetime");
            entity.Property(e => e.IntBitIndUnicoPl)
                .HasMaxLength(50)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("IntBitIndUnicoPL");
            entity.Property(e => e.IntBitOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.IntProcesoLargoId)
                .HasMaxLength(40)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<IntTInterfazEntidade>(entity =>
        {
            entity.HasKey(e => e.IntIntId).HasName("IntI_InterfazEntidades_PK");

            entity.ToTable("IntT_InterfazEntidades");

            entity.Property(e => e.IntIntId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EntConApeMaterno)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EntConApePaterno)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EntConGlosaCargo)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EntConMail)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EntConNombres)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EntConSexo)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EntDirCodPostal)
                .HasMaxLength(15)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EntDirDireccion)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EntDirFax)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EntDirFono)
                .HasMaxLength(40)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EntFecActivacion).HasColumnType("datetime");
            entity.Property(e => e.EntNomFantasia)
                .HasMaxLength(40)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EntRazonSocial)
                .HasMaxLength(120)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EntRut)
                .HasMaxLength(12)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EntRutHolding)
                .HasMaxLength(12)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EntSitioWeb)
                .HasMaxLength(120)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EntSucCodCtaCteBco)
                .HasMaxLength(15)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EntSucDescripcion)
                .HasMaxLength(120)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.IntTmpOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PFormaPagoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pFormaPagoId");
            entity.Property(e => e.XEntSucNumero).HasColumnName("xEntSucNumero");
        });

        modelBuilder.Entity<IntTInterfazError>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("IntT_InterfazError");

            entity.HasIndex(e => new { e.IntTmpOwner, e.SisCodOri, e.IdFuncionalidad, e.PEmpId, e.DivCodigo, e.UniCodigo, e.CabOpeFecha, e.IntPeriodo, e.OpeCod, e.CabOpeNumero, e.CabOpeLinea, e.IntBitArchivo }, "IntI_InterfazError_I01").HasFillFactor(90);

            entity.Property(e => e.CabOpeFecha).HasColumnType("datetime");
            entity.Property(e => e.IdFuncionalidad)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcionalidad");
            entity.Property(e => e.IntBitArchivo)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.IntGlosaError).HasColumnType("text");
            entity.Property(e => e.IntTmpOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.LlgDocNumDoc)
                .HasMaxLength(25)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
        });

        modelBuilder.Entity<IntTInterfazErrorEnt>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("IntT_InterfazErrorEnt");

            entity.Property(e => e.Fecha).HasColumnType("datetime");
            entity.Property(e => e.IntBitArchivo)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.IntGlosaError).HasColumnType("text");
            entity.Property(e => e.IntTmpOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.Rut)
                .HasMaxLength(12)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<IntTInterfazErrorFu>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("IntT_InterfazErrorFus");

            entity.Property(e => e.Fecha).HasColumnType("datetime");
            entity.Property(e => e.IntBitArchivo)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.IntGlosaError).HasColumnType("text");
            entity.Property(e => e.IntTmpOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.Rut)
                .HasMaxLength(12)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<IntTInterfazLco>(entity =>
        {
            entity.HasKey(e => e.IntLcoId).HasName("IntI_InterfazLco_PK");

            entity.ToTable("IntT_InterfazLco");

            entity.HasIndex(e => new { e.IntTmpOwner, e.SisCodOri, e.IdFuncionalidad, e.PEmpId, e.DivCodigo, e.UniCodigo }, "IntI_InterfazLCO_I01").HasFillFactor(90);

            entity.Property(e => e.IntLcoId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.DocCceDocRef)
                .HasMaxLength(25)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EntRut)
                .HasMaxLength(12)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EntRutSec)
                .HasMaxLength(12)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EntRutTer)
                .HasMaxLength(12)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.IdFuncionalidad)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcionalidad");
            entity.Property(e => e.IntBitArchivoLco)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.IntTmpOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.LlgDocFecha).HasColumnType("datetime");
            entity.Property(e => e.LlgDocFechaIng).HasColumnType("datetime");
            entity.Property(e => e.LlgDocFechaVenc).HasColumnType("datetime");
            entity.Property(e => e.LlgDocGlosa)
                .HasMaxLength(80)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.LlgDocMtoConvAfecto).HasColumnType("money");
            entity.Property(e => e.LlgDocMtoConvDerAdu).HasColumnType("money");
            entity.Property(e => e.LlgDocMtoConvExento).HasColumnType("money");
            entity.Property(e => e.LlgDocMtoConvIva).HasColumnType("money");
            entity.Property(e => e.LlgDocMtoConvNeto).HasColumnType("money");
            entity.Property(e => e.LlgDocMtoConvOtrosImp).HasColumnType("money");
            entity.Property(e => e.LlgDocMtoConvRete).HasColumnType("money");
            entity.Property(e => e.LlgDocMtoConvTotal).HasColumnType("money");
            entity.Property(e => e.LlgDocMtoImpuAfecto).HasColumnType("money");
            entity.Property(e => e.LlgDocMtoImpuDerAdu).HasColumnType("money");
            entity.Property(e => e.LlgDocMtoImpuExento).HasColumnType("money");
            entity.Property(e => e.LlgDocMtoImpuIva).HasColumnType("money");
            entity.Property(e => e.LlgDocMtoImpuNeto).HasColumnType("money");
            entity.Property(e => e.LlgDocMtoImpuOtrosImp).HasColumnType("money");
            entity.Property(e => e.LlgDocMtoImpuRete).HasColumnType("money");
            entity.Property(e => e.LlgDocMtoImpuTotal).HasColumnType("money");
            entity.Property(e => e.LlgDocMtoIvaNoRec).HasColumnType("money");
            entity.Property(e => e.LlgDocMtoIvaRec100).HasColumnType("money");
            entity.Property(e => e.LlgDocMtoIvaRecPro).HasColumnType("money");
            entity.Property(e => e.LlgDocMtoLocalAfecto).HasColumnType("money");
            entity.Property(e => e.LlgDocMtoLocalDerAdu).HasColumnType("money");
            entity.Property(e => e.LlgDocMtoLocalExento).HasColumnType("money");
            entity.Property(e => e.LlgDocMtoLocalIva).HasColumnType("money");
            entity.Property(e => e.LlgDocMtoLocalNeto).HasColumnType("money");
            entity.Property(e => e.LlgDocMtoLocalOtrosImp).HasColumnType("money");
            entity.Property(e => e.LlgDocMtoLocalRete).HasColumnType("money");
            entity.Property(e => e.LlgDocMtoLocalTotal).HasColumnType("money");
            entity.Property(e => e.LlgDocNumDoc)
                .HasMaxLength(25)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PMonedaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMonedaId");
        });

        modelBuilder.Entity<IntTInterfazTmp>(entity =>
        {
            entity.HasKey(e => new { e.IntPasoId, e.PEmpId, e.DivCodigo, e.UniCodigo, e.IntTmpArchivo, e.IntTmpOwner }).HasName("IntI_InterfazTmp_PK");

            entity.ToTable("IntT_InterfazTmp");

            entity.HasIndex(e => new { e.IntTmpOwner, e.PEmpId, e.DivCodigo, e.UniCodigo, e.IntTmpArchivo }, "IntT_InterfazTmp_idx02");

            entity.HasIndex(e => new { e.PEmpId, e.DivCodigo, e.UniCodigo, e.IntTmpArchivo, e.IntTmpOwner }, "IntT_InterfazTmp_idx03");

            entity.Property(e => e.IntPasoId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.IntTmpArchivo)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.IntTmpOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.IntTmpRegistro).HasColumnType("text");
        });

        modelBuilder.Entity<IntTInterfazTmpEnt>(entity =>
        {
            entity.HasKey(e => new { e.IntPasoId, e.IntTmpArchivo, e.IntTmpOwner }).HasName("IntI_InterfazTmpEnt_PK");

            entity.ToTable("IntT_InterfazTmpEnt");

            entity.Property(e => e.IntPasoId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.IntTmpArchivo)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.IntTmpOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.IntTmpRegistro).HasColumnType("text");
        });

        modelBuilder.Entity<IntTInterfazTmpFu>(entity =>
        {
            entity.HasKey(e => new { e.IntPasoId, e.IntTmpArchivo, e.IntTmpOwner }).HasName("IntI_InterfazTmpFUS_PK");

            entity.ToTable("IntT_InterfazTmpFus");

            entity.Property(e => e.IntPasoId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.IntTmpArchivo)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.IntTmpOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.IntTmpRegistro).HasColumnType("text");
        });

        modelBuilder.Entity<IntTInvBalDato>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("IntT_InvBalDatos");

            entity.HasIndex(e => new { e.PEmpId, e.DivCodigo, e.UniCodigo, e.EjeAno, e.PerId, e.IntTmpOwner, e.IntTmpArchivo }, "IntI_InvBalDatos_I01").HasFillFactor(90);

            entity.Property(e => e.DetDesCalFecha).HasColumnType("datetime");
            entity.Property(e => e.DetDesCodigo)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.DetDesDescripcion)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.DetDesFecVenc).HasColumnType("datetime");
            entity.Property(e => e.DetDesGlosa)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.DetDesNumero)
                .HasMaxLength(25)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.IntTmpArchivo)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.IntTmpOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PMonedaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMonedaId");
        });

        modelBuilder.Entity<IntTInvBalError>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("IntT_InvBalError");

            entity.HasIndex(e => new { e.PEmpId, e.DivCodigo, e.UniCodigo, e.EjeAno, e.PerId, e.IntTmpOwner, e.IntTmpArchivo }, "IntI_InvBalError_I01").HasFillFactor(90);

            entity.Property(e => e.IntGlosaError).HasColumnType("text");
            entity.Property(e => e.IntTmpArchivo)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.IntTmpOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PMonedaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMonedaId");
        });

        modelBuilder.Entity<IntTInvBalTmp>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("IntT_InvBalTmp");

            entity.HasIndex(e => new { e.PEmpId, e.DivCodigo, e.UniCodigo, e.EjeAno, e.PerId, e.IntTmpOwner, e.IntTmpArchivo }, "IntI_InvBalTmp_I01").HasFillFactor(90);

            entity.Property(e => e.IntTmpArchivo)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.IntTmpOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.IntTmpRegistro).HasColumnType("text");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
        });

        modelBuilder.Entity<IntTVtaCabExpInterfazAux>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("IntT_VtaCabExpInterfazAux");

            entity.Property(e => e.ContactoConsignatario)
                .HasMaxLength(90)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.ContactoNotificador)
                .HasMaxLength(90)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.DireccionConsignatario)
                .HasMaxLength(100)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.DireccionNotificador)
                .HasMaxLength(100)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EntRutNotificador)
                .HasMaxLength(12)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IntBitArchivo)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.IntTmpOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PClausulaVenta)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pClausulaVenta");
            entity.Property(e => e.PDoctoVentaCabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pDoctoVentaCabId");
            entity.Property(e => e.PIdiomaEspId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pIdiomaEspId");
            entity.Property(e => e.PUnidadMedClienteId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pUnidadMedClienteId");
            entity.Property(e => e.RutConsignatario)
                .HasMaxLength(12)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<IntTVtaCabInterfazAux>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("IntT_VtaCabInterfazAux");

            entity.Property(e => e.DvcFecDespacho).HasColumnType("datetime");
            entity.Property(e => e.DvcFecOrdenC).HasColumnType("datetime");
            entity.Property(e => e.DvcNumOrdenC)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.DvcTipoFecha)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EntDirDireccion)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EntDirDireccionSec)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EntRut)
                .HasMaxLength(12)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EntRutDigitador)
                .HasMaxLength(12)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EntRutVendedor)
                .HasMaxLength(12)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.FechaDocumento).HasColumnType("datetime");
            entity.Property(e => e.FechaParidad).HasColumnType("datetime");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IntBitArchivo)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.IntTmpOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PCdiId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCdiId");
            entity.Property(e => e.PCondPagoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCondPagoId");
            entity.Property(e => e.PConvenioCabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pConvenioCabId");
            entity.Property(e => e.PCreId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCreId");
            entity.Property(e => e.PDoctoVentaCabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pDoctoVentaCabId");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PEntDirDespachoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntDirDespachoId");
            entity.Property(e => e.PEntDirId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntDirId");
            entity.Property(e => e.PEntId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntId");
            entity.Property(e => e.PEntSucId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntSucId");
            entity.Property(e => e.PMonedaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMonedaId");
            entity.Property(e => e.PNegocioVtaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pNegocioVtaId");
            entity.Property(e => e.PTprId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTprId");
            entity.Property(e => e.PVendedorDigitaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pVendedorDigitaId");
            entity.Property(e => e.PVendedorId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pVendedorId");
            entity.Property(e => e.PryNumero)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<IntTVtaInterfazAux>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("IntT_VtaInterfazAux");

            entity.Property(e => e.CategoriaCod)
                .HasMaxLength(10)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.DvdFecDespacho).HasColumnType("datetime");
            entity.Property(e => e.IntBitArchivo)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.IntTmpOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PBodegaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pBodegaId");
            entity.Property(e => e.PCategoriaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCategoriaId");
            entity.Property(e => e.PCdiId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCdiId");
            entity.Property(e => e.PCreId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCreId");
            entity.Property(e => e.PDoctoVentaCabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pDoctoVentaCabId");
            entity.Property(e => e.PDoctoVentaDetId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pDoctoVentaDetId");
            entity.Property(e => e.PListaPreCabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pListaPreCabId");
            entity.Property(e => e.PProductoCodId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pProductoCodId");
            entity.Property(e => e.PProductoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pProductoId");
            entity.Property(e => e.PServicioId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pServicioId");
            entity.Property(e => e.PTprId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTprId");
            entity.Property(e => e.PUnidadMedId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pUnidadMedId");
            entity.Property(e => e.PUnidadMedStockId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pUnidadMedStockId");
            entity.Property(e => e.ProductoCod)
                .HasMaxLength(25)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PryNumero)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.ServicioCod)
                .HasMaxLength(25)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.UnidadMedCod)
                .HasMaxLength(10)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.UnidadMedCodStock)
                .HasMaxLength(10)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<IntTVtaInterfazAuxGlo>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("IntT_VtaInterfazAuxGlo");

            entity.Property(e => e.DvgGlosaItem)
                .HasMaxLength(90)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.IntBitArchivo)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.IntTmpOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PDoctoVentaCabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pDoctoVentaCabId");
            entity.Property(e => e.PDoctoVentaDetId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pDoctoVentaDetId");
        });

        modelBuilder.Entity<IntTVtaInterfazAuxImp>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("IntT_VtaInterfazAuxImp");

            entity.Property(e => e.IntBitArchivo)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.IntTmpOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PDoctoVentaCabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pDoctoVentaCabId");
            entity.Property(e => e.PDoctoVentaDetId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pDoctoVentaDetId");
            entity.Property(e => e.PImpuestoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pImpuestoId");
        });

        modelBuilder.Entity<IsaTMovimiento>(entity =>
        {
            entity.HasKey(e => e.MovIsaId).HasName("IsaI_Movimientos_PK");

            entity.ToTable("IsaT_Movimientos");

            entity.HasIndex(e => e.MovIsaOwner, "IsaI_Movimientos01").HasFillFactor(90);

            entity.HasIndex(e => new { e.PCabOpeIdOri, e.SisCodOri }, "IsaI_Movimientos_I05").HasFillFactor(90);

            entity.HasIndex(e => new { e.PCabOpeId, e.SisCodOri }, "IsaI_Movimientos_I07").HasFillFactor(90);

            entity.Property(e => e.MovIsaId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.MovIsaCalFecha).HasColumnType("datetime");
            entity.Property(e => e.MovIsaConFecha).HasColumnType("datetime");
            entity.Property(e => e.MovIsaDocRef)
                .HasMaxLength(25)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.MovIsaFecProyectada).HasColumnType("datetime");
            entity.Property(e => e.MovIsaFecVenc).HasColumnType("datetime");
            entity.Property(e => e.MovIsaGlosa)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.MovIsaMontoConvDebe).HasColumnName("MOvIsaMontoConvDebe");
            entity.Property(e => e.MovIsaNumero)
                .HasMaxLength(25)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.MovIsaOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.MovIsaSecInterno).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.PCabCompId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCabCompId");
            entity.Property(e => e.PCabOpeId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCabOpeId");
            entity.Property(e => e.PCabOpeIdOri)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCabOpeIdOri");
            entity.Property(e => e.PCreId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCreId");
            entity.Property(e => e.PCtaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtaId");
            entity.Property(e => e.PDetCompId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pDetCompId");
            entity.Property(e => e.PDetReferenciaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pDetReferenciaId");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PEmpIdDestino)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpIdDestino");
            entity.Property(e => e.PEntId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntId");
            entity.Property(e => e.PEntIdSec)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntIdSec");
            entity.Property(e => e.PEntIdTer)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntIdTer");
            entity.Property(e => e.PLineaProdId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pLineaProdId");
            entity.Property(e => e.PMonedaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMonedaId");
            entity.Property(e => e.PPartidaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pPartidaId");
            entity.Property(e => e.PTprId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTprId");
            entity.Property(e => e.PryNumero)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();

            entity.HasOne(d => d.DivCodigoNavigation).WithMany(p => p.IsaTMovimientos)
                .HasForeignKey(d => d.DivCodigo)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_IsaMovDivCodigo");

            entity.HasOne(d => d.PCabOpe).WithMany(p => p.IsaTMovimientos)
                .HasForeignKey(d => d.PCabOpeId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_IsaMovCabOpeId");

            entity.HasOne(d => d.PCta).WithMany(p => p.IsaTMovimientos)
                .HasForeignKey(d => d.PCtaId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_IsaMovCtaId");

            entity.HasOne(d => d.PEmp).WithMany(p => p.IsaTMovimientos)
                .HasForeignKey(d => d.PEmpId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_IsaMovpEmpId");

            entity.HasOne(d => d.PMoneda).WithMany(p => p.IsaTMovimientos)
                .HasForeignKey(d => d.PMonedaId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_IsaMovMonedaId");

            entity.HasOne(d => d.UniCodigoNavigation).WithMany(p => p.IsaTMovimientos)
                .HasForeignKey(d => d.UniCodigo)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_IsaMovUniCodigo");
        });

        modelBuilder.Entity<ItitAsociaCuenta>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("ITIT_AsociaCuentas");

            entity.Property(e => e.PCtaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtaId");
        });

        modelBuilder.Entity<LlgTCabeceraDoc>(entity =>
        {
            entity.HasKey(e => e.CabLlgId).HasName("LlgI_CabeceraDoc_PK");

            entity.ToTable("LlgT_CabeceraDoc", tb =>
                {
                    tb.HasTrigger("Fin700Net_Trigger_Contab_LLG_Saldos");
                    tb.HasTrigger("Fin700Net_Trigger_Contabilizar_LLG");
                });

            entity.HasIndex(e => new { e.PEmpId, e.DivCodigo, e.UniCodigo, e.PerId, e.PTipoOpeId, e.LlgDocNumInterno }, "LlgI_CabeceraDoc_I01").IsUnique();

            entity.HasIndex(e => new { e.LlgDocFechaIng, e.CabLlgId }, "LlgI_CabeceraDoc_I04");

            entity.HasIndex(e => new { e.LlgDocNumInterno, e.CabLlgId }, "LlgI_CabeceraDoc_I05");

            entity.HasIndex(e => new { e.LlgDocEstado, e.CabLlgId }, "LlgI_CabeceraDoc_I06");

            entity.HasIndex(e => new { e.LlgDocOwner, e.CabLlgId }, "LlgI_CabeceraDoc_I07");

            entity.Property(e => e.CabLlgId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.FelError)
                .HasMaxLength(40)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.FelTipo)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.LlgCorrFolio).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.LlgDocActFecha).HasColumnType("datetime");
            entity.Property(e => e.LlgDocActUsuario)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.LlgDocAprFecha).HasColumnType("datetime");
            entity.Property(e => e.LlgDocAprUsuario)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.LlgDocDigFecha).HasColumnType("datetime");
            entity.Property(e => e.LlgDocDigUsuario)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.LlgDocFecha).HasColumnType("datetime");
            entity.Property(e => e.LlgDocFechaIng).HasColumnType("datetime");
            entity.Property(e => e.LlgDocFechaReversa).HasColumnType("datetime");
            entity.Property(e => e.LlgDocFechaVenc).HasColumnType("datetime");
            entity.Property(e => e.LlgDocGlosa)
                .HasMaxLength(80)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.LlgDocMtoConvAfecto).HasColumnType("money");
            entity.Property(e => e.LlgDocMtoConvDerAdu).HasColumnType("money");
            entity.Property(e => e.LlgDocMtoConvExento).HasColumnType("money");
            entity.Property(e => e.LlgDocMtoConvIva).HasColumnType("money");
            entity.Property(e => e.LlgDocMtoConvNeto).HasColumnType("money");
            entity.Property(e => e.LlgDocMtoConvOtrosImp).HasColumnType("money");
            entity.Property(e => e.LlgDocMtoConvRete).HasColumnType("money");
            entity.Property(e => e.LlgDocMtoConvTotal).HasColumnType("money");
            entity.Property(e => e.LlgDocMtoImpGravIva)
                .HasColumnType("money")
                .HasColumnName("LlgDocMtoImpGravIVA");
            entity.Property(e => e.LlgDocMtoImpRetIva)
                .HasColumnType("money")
                .HasColumnName("LlgDocMtoImpRetIVA");
            entity.Property(e => e.LlgDocMtoImpuAfecto).HasColumnType("money");
            entity.Property(e => e.LlgDocMtoImpuDerAdu).HasColumnType("money");
            entity.Property(e => e.LlgDocMtoImpuExento).HasColumnType("money");
            entity.Property(e => e.LlgDocMtoImpuIva).HasColumnType("money");
            entity.Property(e => e.LlgDocMtoImpuNeto).HasColumnType("money");
            entity.Property(e => e.LlgDocMtoImpuOtrosImp).HasColumnType("money");
            entity.Property(e => e.LlgDocMtoImpuRete).HasColumnType("money");
            entity.Property(e => e.LlgDocMtoImpuTotal).HasColumnType("money");
            entity.Property(e => e.LlgDocMtoIvaConvNoRec).HasColumnType("money");
            entity.Property(e => e.LlgDocMtoIvaConvRec100).HasColumnType("money");
            entity.Property(e => e.LlgDocMtoIvaConvRecPro).HasColumnType("money");
            entity.Property(e => e.LlgDocMtoIvaLocalNoRec).HasColumnType("money");
            entity.Property(e => e.LlgDocMtoIvaLocalRec100).HasColumnType("money");
            entity.Property(e => e.LlgDocMtoIvaLocalRecPro).HasColumnType("money");
            entity.Property(e => e.LlgDocMtoIvaNoRec).HasColumnType("money");
            entity.Property(e => e.LlgDocMtoIvaRec100).HasColumnType("money");
            entity.Property(e => e.LlgDocMtoIvaRecPro).HasColumnType("money");
            entity.Property(e => e.LlgDocMtoLocalAfecto).HasColumnType("money");
            entity.Property(e => e.LlgDocMtoLocalDerAdu).HasColumnType("money");
            entity.Property(e => e.LlgDocMtoLocalExento).HasColumnType("money");
            entity.Property(e => e.LlgDocMtoLocalIva).HasColumnType("money");
            entity.Property(e => e.LlgDocMtoLocalNeto).HasColumnType("money");
            entity.Property(e => e.LlgDocMtoLocalOtrosImp).HasColumnType("money");
            entity.Property(e => e.LlgDocMtoLocalRete).HasColumnType("money");
            entity.Property(e => e.LlgDocMtoLocalTotal).HasColumnType("money");
            entity.Property(e => e.LlgDocMtoTotalNeto).HasColumnType("money");
            entity.Property(e => e.LlgDocNumDoc)
                .HasMaxLength(25)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.LlgDocOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.LlgIdReversa).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.PCabCompId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCabCompId");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PEntId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntId");
            entity.Property(e => e.PEntIdSec)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntIdSec");
            entity.Property(e => e.PEntIdTer)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntIdTer");
            entity.Property(e => e.PLibId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pLibId");
            entity.Property(e => e.PMonedaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMonedaId");
            entity.Property(e => e.PPorcRetId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pPorcRetId");
            entity.Property(e => e.PTipoOpeId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTipoOpeId");
            entity.Property(e => e.TipoEnvio)
                .HasMaxLength(10)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<LlgTCertificado>(entity =>
        {
            entity.HasKey(e => new { e.PEmpId, e.EjeAno, e.PEntId, e.CerNumero }).HasName("LlgI_Certificados_PK");

            entity.ToTable("LlgT_Certificados");

            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PEntId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntId");
            entity.Property(e => e.CerOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<LlgTClasificaIva>(entity =>
        {
            entity.HasKey(e => e.ClaIvaId).HasName("LlgI_ClasificaIva_PK");

            entity.ToTable("LlgT_ClasificaIva");

            entity.Property(e => e.ClaIvaCodigoSii).HasColumnName("ClaIvaCodigoSII");
            entity.Property(e => e.ClaIvaGlosa)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<LlgTColumnaLibro>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("LlgT_ColumnaLibro");

            entity.Property(e => e.ClcGlosa)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<LlgTConfiguracion>(entity =>
        {
            entity.HasKey(e => new { e.PEmpId, e.EjeAno, e.SisCodOri }).HasName("LlgI_Configuracion_PK");

            entity.ToTable("LlgT_Configuracion");

            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.CerOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.CfgLcoFecMaxImp).HasColumnType("datetime");
            entity.Property(e => e.CfgLcoFecMinImp).HasColumnType("datetime");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
        });

        modelBuilder.Entity<LlgTConfiguracionAuDi>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("LlgT_ConfiguracionAuDi");

            entity.Property(e => e.CerOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.CfgLcoFecMaxImp).HasColumnType("datetime");
            entity.Property(e => e.CfgLcoFecMinImp).HasColumnType("datetime");
            entity.Property(e => e.EntAudAccion)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EntAudFechaMod).HasColumnType("datetime");
            entity.Property(e => e.EntAudUsuario)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.LlgConfigAuid)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
        });

        modelBuilder.Entity<LlgTDesgloseImp>(entity =>
        {
            entity.HasKey(e => new { e.PCabLlgId, e.ClcId, e.ImpSiiId }).HasName("LlgI_DesgloseImp");

            entity.ToTable("LlgT_DesgloseImp");

            entity.Property(e => e.PCabLlgId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCabLlgId");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
        });

        modelBuilder.Entity<LlgTDocumento>(entity =>
        {
            entity.HasKey(e => e.LlgDocId).HasName("LlgI_Documentos_PK");

            entity.ToTable("LlgT_Documentos");

            entity.Property(e => e.LlgDocId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.FelError)
                .HasMaxLength(40)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.FelTipo)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.LlgDocActFecha).HasColumnType("datetime");
            entity.Property(e => e.LlgDocActUsuario)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.LlgDocAprFecha).HasColumnType("datetime");
            entity.Property(e => e.LlgDocAprUsuario)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.LlgDocDigFecha).HasColumnType("datetime");
            entity.Property(e => e.LlgDocDigUsuario)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.LlgDocFecha).HasColumnType("datetime");
            entity.Property(e => e.LlgDocFechaIng).HasColumnType("datetime");
            entity.Property(e => e.LlgDocFechaReversa).HasColumnType("datetime");
            entity.Property(e => e.LlgDocFechaVenc).HasColumnType("datetime");
            entity.Property(e => e.LlgDocGlosa)
                .HasMaxLength(80)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.LlgDocMtoImpuAfecto).HasColumnType("money");
            entity.Property(e => e.LlgDocMtoImpuDerAdu).HasColumnType("money");
            entity.Property(e => e.LlgDocMtoImpuExento).HasColumnType("money");
            entity.Property(e => e.LlgDocMtoImpuIva).HasColumnType("money");
            entity.Property(e => e.LlgDocMtoImpuNeto).HasColumnType("money");
            entity.Property(e => e.LlgDocMtoImpuOtrosImp).HasColumnType("money");
            entity.Property(e => e.LlgDocMtoImpuRete).HasColumnType("money");
            entity.Property(e => e.LlgDocMtoImpuTotal).HasColumnType("money");
            entity.Property(e => e.LlgDocMtoIvaNoRec).HasColumnType("money");
            entity.Property(e => e.LlgDocMtoIvaRec100).HasColumnType("money");
            entity.Property(e => e.LlgDocMtoIvaRecPro).HasColumnType("money");
            entity.Property(e => e.LlgDocMtoLocalTotal).HasColumnType("money");
            entity.Property(e => e.LlgDocMtoTotalNeto).HasColumnType("money");
            entity.Property(e => e.LlgDocNumDoc)
                .HasMaxLength(25)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.LlgDocOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.LlgIdReversa).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.PCreId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCreId");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PEntId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntId");
            entity.Property(e => e.PMonedaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMonedaId");
            entity.Property(e => e.TipoEnvio)
                .HasMaxLength(10)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<LlgTFacturaRecep>(entity =>
        {
            entity.HasKey(e => e.FactRecepId).HasName("LlgI_FacturaRecep01");

            entity.ToTable("LlgT_FacturaRecep", tb => tb.HasTrigger("LlgT_FacturaRecep_Delete"));

            entity.HasIndex(e => new { e.PCabLlgId, e.POpeLogtCabId, e.Linea }, "LlgI_FacturaRecep02").IsUnique();

            entity.Property(e => e.FactRecepId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PCabLlgId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCabLlgId");
            entity.Property(e => e.PCdiId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCdiId");
            entity.Property(e => e.PCreId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCreId");
            entity.Property(e => e.PCtaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtaId");
            entity.Property(e => e.PDocOrigenId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pDocOrigenId");
            entity.Property(e => e.PMonedaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMonedaId");
            entity.Property(e => e.POpeLogtCabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pOpeLogtCabId");
            entity.Property(e => e.POpeLogtDetId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pOpeLogtDetId");
            entity.Property(e => e.PProductoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pProductoId");
            entity.Property(e => e.PServicioId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pServicioId");
            entity.Property(e => e.PTprId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTprId");
            entity.Property(e => e.PryNumero)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<LlgTFacturaRecepV60>(entity =>
        {
            entity.HasKey(e => e.FactRecepId).HasName("LlgI_FacturaRecepV601");

            entity.ToTable("LlgT_FacturaRecepV60");

            entity.HasIndex(e => new { e.PCabLlgId, e.PEmpId, e.DivCodigo, e.UniCodigo, e.CodigoBodega, e.TipoTransaccion, e.EmbNumId, e.RecNumId, e.RecDetLinea, e.Linea }, "LlgI_FacturaRecepV602").IsUnique();

            entity.Property(e => e.FactRecepId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.CodigoArticulo)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PCabLlgId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCabLlgId");
            entity.Property(e => e.PCdiId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCdiId");
            entity.Property(e => e.PCreId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCreId");
            entity.Property(e => e.PCtaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtaId");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PMonedaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMonedaId");
            entity.Property(e => e.PTprId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTprId");
            entity.Property(e => e.PryNumero)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<LlgTFormulario>(entity =>
        {
            entity.HasKey(e => e.CodFormulario).HasName("LlgI_Formularios_PK");

            entity.ToTable("LlgT_Formularios");

            entity.Property(e => e.CodFormulario).ValueGeneratedNever();
            entity.Property(e => e.DesFormulario)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<LlgTImpuestoSii>(entity =>
        {
            entity.HasKey(e => e.ImpSiiId).HasName("Pk_LlgT_ImpuestoSII");

            entity.ToTable("LlgT_ImpuestoSII");

            entity.Property(e => e.ImpSiiId).ValueGeneratedNever();
            entity.Property(e => e.ImpSiiGlosa)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<LlgTLcoRetencionDet>(entity =>
        {
            entity.HasKey(e => e.LcoRetenDetId).HasName("index_LlgT_LcoRetenecionDet");

            entity.ToTable("LlgT_LcoRetencionDet");

            entity.Property(e => e.LcoRetenDetId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.LcoCodFuente)
                .HasMaxLength(6)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.LcoPorcFuente).HasColumnType("money");
            entity.Property(e => e.LcoPorcIva).HasColumnType("money");
            entity.Property(e => e.LcoPorcIvaRet).HasColumnType("money");
            entity.Property(e => e.PFactRecepId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pFactRecepId");
            entity.Property(e => e.PLcoRetenId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pLcoRetenId");
            entity.Property(e => e.PProductoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pProductoId");
            entity.Property(e => e.PServicioId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pServicioId");
        });

        modelBuilder.Entity<LlgTLibro>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("LlgT_Libro");

            entity.Property(e => e.LblGlosa)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<LlgTMovimiento>(entity =>
        {
            entity.HasKey(e => e.MovLlgId).HasName("LlgI_Movimientos_PK");

            entity.ToTable("LlgT_Movimientos");

            entity.HasIndex(e => e.PMovCceId, "LlgI_Movimientos_I02").HasFillFactor(90);

            entity.HasIndex(e => new { e.PCabllgId, e.LlgDocDetMtoLocalDebe, e.LlgDocDetMtoLocalHaber, e.MovLlgId }, "LlgT_Movimientos_idx05");

            entity.Property(e => e.MovLlgId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("MovLLgId");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.LlgDocDetMtoImpuDebe).HasColumnType("money");
            entity.Property(e => e.LlgDocDetMtoImpuHaber).HasColumnType("money");
            entity.Property(e => e.LlgDocDetMtoLocalDebe).HasColumnType("money");
            entity.Property(e => e.LlgDocDetMtoLocalHaber).HasColumnType("money");
            entity.Property(e => e.LlgDocFecProyectada).HasColumnType("datetime");
            entity.Property(e => e.LlgDocFechaVenc).HasColumnType("datetime");
            entity.Property(e => e.LlgDocGlosa)
                .HasMaxLength(80)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.LlgDocNumDoc)
                .HasMaxLength(25)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.LlgDocOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.MovLlgDocRef)
                .HasMaxLength(25)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PCabCompId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCabCompId");
            entity.Property(e => e.PCabllgId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCabllgId");
            entity.Property(e => e.PCreId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCreId");
            entity.Property(e => e.PCtaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtaId");
            entity.Property(e => e.PDetCompId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pDetCompId");
            entity.Property(e => e.PDetReferenciaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pDetReferenciaId");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PEmpIdDestino)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpIdDestino");
            entity.Property(e => e.PEntId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntId");
            entity.Property(e => e.PEntIdSec)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntIdSec");
            entity.Property(e => e.PEntIdTer)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntIdTer");
            entity.Property(e => e.PLineaProdId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pLineaProdId");
            entity.Property(e => e.PMonedaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMonedaId");
            entity.Property(e => e.PMovCceId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMovCceId");
            entity.Property(e => e.PPartidaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pPartidaId");
            entity.Property(e => e.PTprId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTprId");
            entity.Property(e => e.PryNumero)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<LlgTTipoFactura>(entity =>
        {
            entity.HasKey(e => e.TipFactId).HasName("LlgI_TipoFactura_PK");

            entity.ToTable("LlgT_TipoFactura");

            entity.Property(e => e.TipFactGlosa)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<LlgTTipoOperacion>(entity =>
        {
            entity.HasKey(e => e.TipoOpeId).HasName("LlgI_TipoOperacion_PK");

            entity.ToTable("LlgT_TipoOperacion", tb => tb.HasTrigger("LlgT_TipoOperacion_Delete"));

            entity.HasIndex(e => new { e.PEmpId, e.OpeCod, e.SisCodOri }, "LlgI_TipoOperacion_I01").IsUnique();

            entity.Property(e => e.TipoOpeId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.OpeFecVigencia).HasColumnType("datetime");
            entity.Property(e => e.OpeGlosa)
                .HasMaxLength(40)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PCorId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCorId");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PMonedaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMonedaId");
        });

        modelBuilder.Entity<LlgTTipoOperacionDet>(entity =>
        {
            entity.HasKey(e => e.TipoOpeDetId).HasName("LlgI_TipoOperacionDet_PK");

            entity.ToTable("LlgT_TipoOperacionDet");

            entity.HasIndex(e => new { e.PTipoOpeId, e.ClcId }, "LlgI_TipoOperacionDet_I01").IsUnique();

            entity.Property(e => e.TipoOpeDetId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.OpeDetDescripcion)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PCtaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtaId");
            entity.Property(e => e.PTipoOpeId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTipoOpeId");
        });

        modelBuilder.Entity<LlgTTipoOperacionDgl>(entity =>
        {
            entity.HasKey(e => e.TipoOpeDglId).HasName("LlgI_TipoOperacionDgl_PK");

            entity.ToTable("LlgT_TipoOperacionDgl");

            entity.HasIndex(e => new { e.PTipoOpeDetId, e.OpeDglLinea }, "LlgI_TipoOperacionDgl_I01").IsUnique();

            entity.Property(e => e.TipoOpeDglId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PCreId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCreId");
            entity.Property(e => e.PCtaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtaId");
            entity.Property(e => e.PTipoOpeDetId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTipoOpeDetId");
        });

        modelBuilder.Entity<LlgTTipoOriDocto>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("LlgT_TipoOriDocto");

            entity.Property(e => e.TipOriDoctoGlosa)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<LlgTUbicacion>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("LlgT_Ubicacion");

            entity.Property(e => e.IndDlgMe).HasColumnName("IndDlgME");
            entity.Property(e => e.UblGlosa)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<LlgtUbicacionBak>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("llgt_ubicacion_bak");

            entity.Property(e => e.IndDlgMe).HasColumnName("IndDlgME");
            entity.Property(e => e.UblGlosa)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<LogTAccionContable>(entity =>
        {
            entity.HasKey(e => e.AccionContCod).HasName("LogT_AccionContable_PK");

            entity.ToTable("LogT_AccionContable");

            entity.Property(e => e.AccionContDes)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<LogTCmfinanciera>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("LogT_CMFinanciera");

            entity.Property(e => e.CostoMonedaAltCm).HasColumnName("CostoMonedaAltCM");
            entity.Property(e => e.CostoMonedaCm).HasColumnName("CostoMonedaCM");
            entity.Property(e => e.CostoPromMonedaAltCm).HasColumnName("CostoPromMonedaAltCM");
            entity.Property(e => e.CostoPromMonedaCm).HasColumnName("CostoPromMonedaCM");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.FechaUltCompra).HasColumnType("datetime");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.IndProvisorioCm).HasColumnName("IndProvisorioCM");
            entity.Property(e => e.LogOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PBodegaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pBodegaId");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PIndCmid)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pIndCMId");
            entity.Property(e => e.PLoteProductoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pLoteProductoId");
            entity.Property(e => e.PMonedaUltCompraId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMonedaUltCompraId");
            entity.Property(e => e.PProductoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pProductoId");
            entity.Property(e => e.PSerieProductoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pSerieProductoId");
            entity.Property(e => e.PUnidadMedId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pUnidadMedId");
        });

        modelBuilder.Entity<LogTCmtcuentaEspejo>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("LogT_CMTCuentaEspejo");

            entity.Property(e => e.PCctaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCCtaId");
            entity.Property(e => e.PCtaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtaId");
        });

        modelBuilder.Entity<LogTCmtributarium>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("LogT_CMTributaria");

            entity.Property(e => e.CostoMonedaAltCm).HasColumnName("CostoMonedaAltCM");
            entity.Property(e => e.CostoMonedaCm).HasColumnName("CostoMonedaCM");
            entity.Property(e => e.CostoPromMonedaAltCm).HasColumnName("CostoPromMonedaAltCM");
            entity.Property(e => e.CostoPromMonedaCm).HasColumnName("CostoPromMonedaCM");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.FechaMayorValor).HasColumnType("datetime");
            entity.Property(e => e.FechaUltCompra).HasColumnType("datetime");
            entity.Property(e => e.FechaUltCompraImp).HasColumnType("datetime");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.IndProvisorioCm).HasColumnName("IndProvisorioCM");
            entity.Property(e => e.LogOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PBodegaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pBodegaId");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PIndCmid)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pIndCMId");
            entity.Property(e => e.PLoteProductoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pLoteProductoId");
            entity.Property(e => e.PMonedaMayorValorId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMonedaMayorValorId");
            entity.Property(e => e.PMonedaUltCompraId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMonedaUltCompraId");
            entity.Property(e => e.PMonedaUltCompraImpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMonedaUltCompraImpId");
            entity.Property(e => e.PProductoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pProductoId");
            entity.Property(e => e.PSerieProductoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pSerieProductoId");
            entity.Property(e => e.PUnidadMedId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pUnidadMedId");
        });

        modelBuilder.Entity<LogTCondicionPago>(entity =>
        {
            entity.HasKey(e => e.CondPagoCod).HasName("Idx_CondPagoCod");

            entity.ToTable("LogT_CondicionPago");

            entity.Property(e => e.CondPagoCod).ValueGeneratedNever();
            entity.Property(e => e.CondPagoDes)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.CondPagoId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.FechaVigencia).HasColumnType("datetime");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PFormaPagoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pFormaPagoId");
            entity.Property(e => e.PMonedaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMonedaId");
        });

        modelBuilder.Entity<LogTConfiguracion>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("LogT_Configuracion");

            entity.Property(e => e.IncGlosaDesp).HasColumnName("Inc_Glosa_Desp");
            entity.Property(e => e.NoContabilizaCm).HasColumnName("NoContabilizaCM");
            entity.Property(e => e.TipoContabCm).HasColumnName("TipoContabCM");
        });

        modelBuilder.Entity<LogTConvenioCab>(entity =>
        {
            entity.HasKey(e => e.ConvenioCabId);

            entity.ToTable("LogT_ConvenioCab");

            entity.HasIndex(e => new { e.CocNumConvenio, e.CocNumVersion }, "IDX_LogT_ConvenioCab");

            entity.Property(e => e.ConvenioCabId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.CocDescripcion)
                .HasMaxLength(80)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.CocFecBaseReajuste).HasColumnType("datetime");
            entity.Property(e => e.CocGlosa)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.CocGlosaCierre)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.CocReferencia)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.CocUltFechaDiferido).HasColumnType("datetime");
            entity.Property(e => e.CocUltFechaReajuste).HasColumnType("datetime");
            entity.Property(e => e.CocUsuarioDiferido)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.CodOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.FechaDesde).HasColumnType("datetime");
            entity.Property(e => e.FechaHasta).HasColumnType("datetime");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PBodegaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pBodegaId");
            entity.Property(e => e.PClausulaVenta)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pClausulaVenta");
            entity.Property(e => e.PCondPagoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCondPagoId");
            entity.Property(e => e.PConvenioCabOrigenId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pConvenioCabOrigenId");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PEntComisionistaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntComisionistaId");
            entity.Property(e => e.PEntId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntId");
            entity.Property(e => e.PEntSucComisionistaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntSucComisionistaId");
            entity.Property(e => e.PEntSucId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntSucId");
            entity.Property(e => e.PFormaPagoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pFormaPagoId");
            entity.Property(e => e.PMonedaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMonedaId");
            entity.Property(e => e.PPuertoDestino)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pPuertoDestino");
            entity.Property(e => e.PUbicacionId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pUbicacionId");
        });

        modelBuilder.Entity<LogTConvenioDet>(entity =>
        {
            entity.HasKey(e => e.ConvenioDetId);

            entity.ToTable("LogT_ConvenioDet");

            entity.HasIndex(e => e.PConvenioCabId, "Idx_Logt_ConvenioDet").HasFillFactor(90);

            entity.Property(e => e.ConvenioDetId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.CantMinimaCompra).HasColumnType("money");
            entity.Property(e => e.CodEtiqueta)
                .HasMaxLength(80)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.CodReferencia)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.Observaciones)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.PBodegaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pBodegaId");
            entity.Property(e => e.PCategoriaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCategoriaId");
            entity.Property(e => e.PConvenioCabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pConvenioCabId");
            entity.Property(e => e.PLineaProdId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pLineaProdId");
            entity.Property(e => e.PMarcaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMarcaId");
            entity.Property(e => e.PMonedaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMonedaId");
            entity.Property(e => e.PProductoCodId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pProductoCodId");
            entity.Property(e => e.PProductoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pProductoId");
            entity.Property(e => e.PServicioId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pServicioId");
            entity.Property(e => e.PUbicacionId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pUbicacionId");
            entity.Property(e => e.PUnidadMedId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pUnidadMedId");
            entity.Property(e => e.PUnidadMedStockId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pUnidadMedStockId");
        });

        modelBuilder.Entity<LogTCorrelativo>(entity =>
        {
            entity.HasKey(e => e.CorrLogtId).HasName("LogT_Correlativos_PK");

            entity.ToTable("LogT_Correlativos");

            entity.Property(e => e.CorrLogtId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.IdFuncionalidad)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcionalidad");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PTipoOpeId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTipoOpeId");

            entity.HasOne(d => d.PEmp).WithMany(p => p.LogTCorrelativos)
                .HasForeignKey(d => d.PEmpId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_CorrelativosEmpId");
        });

        modelBuilder.Entity<LogTDatosDespacho>(entity =>
        {
            entity.HasKey(e => e.DatosDespId).HasName("LogT_DatosDespacho_PK");

            entity.ToTable("LogT_DatosDespacho");

            entity.Property(e => e.DatosDespId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(18, 0)");
            entity.Property(e => e.DatosDespAtencion)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.DatosDespDir)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.DatosDespHorario)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.GlosaExis)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.PEntDirId)
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("pEntDirId");
            entity.Property(e => e.PEntId)
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("pEntId");
            entity.Property(e => e.PEntSucId)
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("pEntSucId");
            entity.Property(e => e.POpeLogtCabId)
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("pOpeLogtCabId");
            entity.Property(e => e.PRutaDespId)
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("pRutaDespId");
        });

        modelBuilder.Entity<LogTDescuento>(entity =>
        {
            entity.HasKey(e => e.DescuentoId).HasName("LogT_Descuento_PK");

            entity.ToTable("LogT_Descuento");

            entity.Property(e => e.DescuentoId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.FechaDesde).HasColumnType("datetime");
            entity.Property(e => e.FechaHasta).HasColumnType("datetime");
            entity.Property(e => e.GlosaLarga)
                .HasMaxLength(50)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PCategoriaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCategoriaId");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PLineaProdId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pLineaProdId");
            entity.Property(e => e.PMarcaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMarcaId");
            entity.Property(e => e.PProductoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pProductoId");
            entity.Property(e => e.PUnidadMedId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pUnidadMedId");
        });

        modelBuilder.Entity<LogTDespachoConceptoCab>(entity =>
        {
            entity.HasKey(e => new { e.DespachoCabId, e.PEmpId, e.DivCodigo, e.UniCodigo }).HasName("LogT_DespachoConceptoCab_I1");

            entity.ToTable("LogT_DespachoConceptoCab");

            entity.Property(e => e.DespachoCabId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.FechaEmision).HasColumnType("datetime");
            entity.Property(e => e.GlosaExis)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.GlosaTraslado)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.LogOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PDoctoLegalCabHastaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pDoctoLegalCabHastaId");
            entity.Property(e => e.PDoctoLegalCabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pDoctoLegalCabId");
            entity.Property(e => e.PEntId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntId");
            entity.Property(e => e.PEntSucId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntSucId");
            entity.Property(e => e.PTdoId).HasColumnName("pTdoId");
        });

        modelBuilder.Entity<LogTDespachoConceptoDet>(entity =>
        {
            entity.HasKey(e => new { e.DespachoDetId, e.PDespachoCabId }).HasName("LogT_DespachoConceptoDet_I1");

            entity.ToTable("LogT_DespachoConceptoDet");

            entity.Property(e => e.DespachoDetId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.PDespachoCabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pDespachoCabId");
            entity.Property(e => e.CodigoArticulo)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.DescripcionTec)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PUnidadMedId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pUnidadMedId");
        });

        modelBuilder.Entity<LogTDocumentoFisico>(entity =>
        {
            entity.HasKey(e => e.DocFisId).HasName("Logt_DoctoFis_PK");

            entity.ToTable("LogT_DocumentoFisico");

            entity.Property(e => e.DocFisId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.DocFisArchivo)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.DocFisRuta)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionalidad)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcionalidad");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PDocOrigenId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pDocOrigenId");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
        });

        modelBuilder.Entity<LogTEstadoProducto>(entity =>
        {
            entity.HasKey(e => e.EstadoProdCod).HasName("LogT_EstadoProducto_PK");

            entity.ToTable("LogT_EstadoProducto");

            entity.Property(e => e.EstadoProdDes)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<LogTEstadoReserva>(entity =>
        {
            entity.HasKey(e => new { e.CodEstadoReserva, e.FormaAtencionCod, e.ConEstCod }).HasName("EstadoReserva_key");

            entity.ToTable("LogT_EstadoReserva");

            entity.Property(e => e.GlosaEstadoReserva)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<LogTFactCorrMonetarium>(entity =>
        {
            entity.HasKey(e => new { e.PEmpId, e.EjercicioContable, e.PMonedaId, e.PeriodoControl }).HasName("LogT_FactCorrMonetaria_PK");

            entity.ToTable("LogT_FactCorrMonetaria");

            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PMonedaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMonedaId");
        });

        modelBuilder.Entity<LogTFactorConversion>(entity =>
        {
            entity.HasKey(e => e.FactorConversionId).HasName("LogT_FactorConversion_PK");

            entity.ToTable("LogT_FactorConversion");

            entity.Property(e => e.FactorConversionId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.PUnidadMedDestinoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pUnidadMedDestinoId");
            entity.Property(e => e.PUnidadMedId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pUnidadMedId");
        });

        modelBuilder.Entity<LogTFormaAtencion>(entity =>
        {
            entity.HasKey(e => e.FormaAtencionCod).HasName("LogT_FormaAtencion_PK");

            entity.ToTable("LogT_FormaAtencion");

            entity.Property(e => e.FormaAtencionDes)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<LogTImpFormato>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("LogT_ImpFormato");

            entity.Property(e => e.IntFmtCampo)
                .HasMaxLength(40)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.IntFmtValor)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.TipoDato)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<LogTImpInterfazAux>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("LogT_ImpInterfazAux");

            entity.Property(e => e.CconsumoCod).HasColumnName("CConsumoCod");
            entity.Property(e => e.FechaProceso).HasColumnType("datetime");
            entity.Property(e => e.FechaRequerida).HasColumnType("datetime");
            entity.Property(e => e.GlosaLogtCab)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.GlosaLogtDet)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.IdDocumento).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.IdUsuario)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario");
            entity.Property(e => e.InterfazAuxId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.InterfazBitArchivo)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.InterfazTmpOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PTipoOpeId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTipoOpeId");
            entity.Property(e => e.PTprId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTprId");
            entity.Property(e => e.ProductoCod)
                .HasMaxLength(25)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PryNumero)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.UnidadMedCod)
                .HasMaxLength(10)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<LogTImpInterfazBitacora>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("LogT_ImpInterfazBitacora");

            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.InterfazBitArchivo)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.InterfazBitFecha).HasColumnType("datetime");
            entity.Property(e => e.InterfazBitIndUnicoPl)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("InterfazBitIndUnicoPL");
            entity.Property(e => e.InterfazBitOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
        });

        modelBuilder.Entity<LogTImpInterfazError>(entity =>
        {
            entity.HasKey(e => e.InterfazErrorId).HasName("LogT_ImpInterfazError_PK");

            entity.ToTable("LogT_ImpInterfazError");

            entity.Property(e => e.InterfazErrorId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.CconsumoCod).HasColumnName("CConsumoCod");
            entity.Property(e => e.IdDocumento).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.IntGlosaError).HasColumnType("text");
            entity.Property(e => e.InterfazBitArchivo)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PTipoOpeId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTipoOpeId");
            entity.Property(e => e.ProductoCod)
                .HasMaxLength(25)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<LogTImpInterfazSisProc>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("LogT_ImpInterfazSisProc");
        });

        modelBuilder.Entity<LogTImpuesto>(entity =>
        {
            entity.HasKey(e => e.ImpuestoId).HasName("LogT_Impuestos_PK");

            entity.ToTable("LogT_Impuestos");

            entity.Property(e => e.ImpuestoId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.FechaVigencia).HasColumnType("datetime");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.ImpuestoDes)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.IsiiCodigo).HasColumnName("ISiiCodigo");
            entity.Property(e => e.PCtaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtaId");
            entity.Property(e => e.PMonedaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMonedaId");
            entity.Property(e => e.PTipoImpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTipoImpId");
            entity.Property(e => e.PUnidadMedId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pUnidadMedId");

            entity.HasOne(d => d.PTipoImp).WithMany(p => p.LogTImpuestos)
                .HasForeignKey(d => d.PTipoImpId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_ImpuestosTipoImpId");
        });

        modelBuilder.Entity<LogTImpuestoEmpCtum>(entity =>
        {
            entity.HasKey(e => new { e.PImpuestoId, e.PEmpId, e.PCtaId });

            entity.ToTable("LogT_ImpuestoEmpCta");

            entity.Property(e => e.PImpuestoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pImpuestoId");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PCtaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtaId");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
        });

        modelBuilder.Entity<LogTImpuestoSii>(entity =>
        {
            entity.HasKey(e => e.IsiiCodigo).HasName("LogT_ImpuestoSii_Pk");

            entity.ToTable("LogT_ImpuestoSii");

            entity.Property(e => e.IsiiCodigo)
                .ValueGeneratedNever()
                .HasColumnName("ISiiCodigo");
            entity.Property(e => e.IsiiDescripcion)
                .HasMaxLength(180)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("ISiiDescripcion");
            entity.Property(e => e.IsiiDescripcionLarga)
                .HasMaxLength(255)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("ISiiDescripcionLarga");
        });

        modelBuilder.Entity<LogTImpuestosOtraTasa>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("LogT_Impuestos_OtraTasa");

            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.FechaFinVigencia).HasColumnType("datetime");
            entity.Property(e => e.FechaInicioVigencia).HasColumnType("datetime");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.ImpuestoOtraTasaId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("ImpuestoOtraTasaID");
            entity.Property(e => e.PImpuestoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pImpuestoId");
        });

        modelBuilder.Entity<LogTImpuestosProducto>(entity =>
        {
            entity.HasKey(e => e.ImpuestoProdId).HasName("LogT_ImpuestosProductos_PK");

            entity.ToTable("LogT_ImpuestosProductos");

            entity.Property(e => e.ImpuestoProdId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PImpuestoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pImpuestoId");
            entity.Property(e => e.PProductoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pProductoId");
            entity.Property(e => e.PServicioId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pServicioId");

            entity.HasOne(d => d.PImpuesto).WithMany(p => p.LogTImpuestosProductos)
                .HasForeignKey(d => d.PImpuestoId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_ImpProdImpuestoId");
        });

        modelBuilder.Entity<LogTIndicadorCm>(entity =>
        {
            entity.HasKey(e => e.IndCmid).HasName("LogT_IndicadorCM_PK");

            entity.ToTable("LogT_IndicadorCM");

            entity.Property(e => e.IndCmid)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("IndCMId");
            entity.Property(e => e.IndCmcod).HasColumnName("IndCMCod");
            entity.Property(e => e.IndCmdes)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("IndCMDes");
        });

        modelBuilder.Entity<LogTInventarioCab>(entity =>
        {
            entity.HasKey(e => e.InvCabId).HasName("LogT_InventarioCab_PK");

            entity.ToTable("LogT_InventarioCab");

            entity.Property(e => e.InvCabId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.FechaAprobacion).HasColumnType("datetime");
            entity.Property(e => e.FechaProceso).HasColumnType("datetime");
            entity.Property(e => e.GlosaExis)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionalidad)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcionalidad");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.LogOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PBodegaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pBodegaId");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PEntId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntId");
            entity.Property(e => e.PTipoOpeId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTipoOpeId");
            entity.Property(e => e.UsuarioAnula)
                .HasMaxLength(50)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.UsuarioAprobacion)
                .HasMaxLength(50)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.UsuarioProceso)
                .HasMaxLength(50)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<LogTInventarioDet>(entity =>
        {
            entity.HasKey(e => e.InvDetId).HasName("LogT_InventarioDet_PK");

            entity.ToTable("LogT_InventarioDet");

            entity.Property(e => e.InvDetId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.FechaConfirmacion).HasColumnType("datetime");
            entity.Property(e => e.FechaRecuento).HasColumnType("datetime");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PInvCabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pInvCabId");
            entity.Property(e => e.PLoteProductoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pLoteProductoId");
            entity.Property(e => e.PProductoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pProductoId");
            entity.Property(e => e.PSerieProductoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pSerieProductoId");
            entity.Property(e => e.PUbicacionId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pUbicacionId");
            entity.Property(e => e.PUnidadMed2Id)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pUnidadMed2Id");
            entity.Property(e => e.PUnidadMedId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pUnidadMedId");
            entity.Property(e => e.RespConfirmacion)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.RespRecuento)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<LogTInventarioDetProducto>(entity =>
        {
            entity.HasKey(e => e.InvDetProdId).HasName("LogT_InventarioDetProducto_PK");

            entity.ToTable("LogT_InventarioDetProducto");

            entity.Property(e => e.InvDetProdId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.CategoriaCod)
                .HasMaxLength(10)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.FechaVigencia).HasColumnType("datetime");
            entity.Property(e => e.LineaProdCod)
                .HasMaxLength(10)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PBodegaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pBodegaId");
            entity.Property(e => e.PInvCabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pInvCabId");
            entity.Property(e => e.PLoteProductoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pLoteProductoId");
            entity.Property(e => e.PProductoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pProductoId");
            entity.Property(e => e.PSerieProductoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pSerieProductoId");
            entity.Property(e => e.PUbicacionId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pUbicacionId");
            entity.Property(e => e.PUnidadMedId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pUnidadMedId");
            entity.Property(e => e.ProductoDes)
                .HasMaxLength(50)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.UnidadMedCod)
                .HasMaxLength(10)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<LogTListaPrecioCab>(entity =>
        {
            entity.HasKey(e => e.ListaPreCabId).HasName("LogT_ListaPrecioCab_PK");

            entity.ToTable("LogT_ListaPrecioCab");

            entity.Property(e => e.ListaPreCabId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.ClausulaPorcCif).HasColumnName("ClausulaPorcCIF");
            entity.Property(e => e.ClausulaPorcFob).HasColumnName("ClausulaPorcFOB");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.FechaProceso).HasColumnType("datetime");
            entity.Property(e => e.FechaVigencia).HasColumnType("datetime");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.ListaPreDes)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.LogOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PClausulaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pClausulaId");
            entity.Property(e => e.PCondPagoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCondPagoId");
            entity.Property(e => e.PDescuentoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pDescuentoId");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PEntId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntId");
            entity.Property(e => e.PMonedaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMonedaId");
            entity.Property(e => e.ReferenciaProv)
                .HasMaxLength(10)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.UsuarioProceso)
                .HasMaxLength(50)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<LogTListaPrecioDet>(entity =>
        {
            entity.HasKey(e => e.ListaPreDetId).HasName("LogT_ListaPrecioDet_PK");

            entity.ToTable("LogT_ListaPrecioDet");

            entity.Property(e => e.ListaPreDetId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.FechaDesde).HasColumnType("datetime");
            entity.Property(e => e.FechaHasta).HasColumnType("datetime");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PCategoriaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCategoriaId");
            entity.Property(e => e.PDescuentoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pDescuentoId");
            entity.Property(e => e.PListaPreCabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pListaPreCabId");
            entity.Property(e => e.PMonedaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMonedaId");
            entity.Property(e => e.PProductoCodId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pProductoCodId");
            entity.Property(e => e.PProductoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pProductoId");
            entity.Property(e => e.PServicioId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pServicioId");
            entity.Property(e => e.PUnidadMedId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pUnidadMedId");
            entity.Property(e => e.PUnidadMedStockId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pUnidadMedStockId");
        });

        modelBuilder.Entity<LogTListaPrecioDetTramo>(entity =>
        {
            entity.HasKey(e => new { e.PListaPreDetId, e.LprDetCorr }).HasName("Logt_ListaPrecioDetTramo_PK");

            entity.ToTable("LogT_ListaPrecioDetTramo");

            entity.Property(e => e.PListaPreDetId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pListaPreDetId");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PListaPreCabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pListaPreCabId");
        });

        modelBuilder.Entity<LogTListaTipoPrecioMin>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("LogT_ListaTipoPrecioMin");

            entity.Property(e => e.TipoPrecioDes)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<LogTLotesProducto>(entity =>
        {
            entity.HasKey(e => e.LoteProductoId).HasName("LogT_LotesProducto_PK");

            entity.ToTable("LogT_LotesProducto", tb => tb.HasTrigger("LogT_LotesProducto_Insert"));

            entity.HasIndex(e => new { e.LoteProductoId, e.LoteProductoCod }, "LogT_LotesProducto_idx050");

            entity.HasIndex(e => new { e.LoteProductoCod, e.LoteProductoId }, "LogT_LotesProducto_idx051");

            entity.HasIndex(e => new { e.LoteFecExpiracion, e.LoteProductoId, e.LoteProductoCod, e.SituacionContCod, e.EstadoProdCod }, "LogT_LotesProducto_idx052");

            entity.Property(e => e.LoteProductoId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.LoteFecCreacion).HasColumnType("datetime");
            entity.Property(e => e.LoteFecExpiracion).HasColumnType("datetime");
            entity.Property(e => e.LoteProductoCod)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PProductoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pProductoId");
            entity.Property(e => e.Referencia1Logt)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.Referencia2Logt)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();

            entity.HasOne(d => d.EstadoProdCodNavigation).WithMany(p => p.LogTLotesProductos)
                .HasForeignKey(d => d.EstadoProdCod)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_LotesProductoEstadoProdCod");

            entity.HasOne(d => d.PProducto).WithMany(p => p.LogTLotesProductos)
                .HasForeignKey(d => d.PProductoId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_LotesProductoProductoId");

            entity.HasOne(d => d.SituacionContCodNavigation).WithMany(p => p.LogTLotesProductos)
                .HasForeignKey(d => d.SituacionContCod)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_LotesProductoSituacionContCod");
        });

        modelBuilder.Entity<LogTOperacionesLogtCab>(entity =>
        {
            entity.HasKey(e => e.OpeLogtCabId).HasName("LogT_OperacionesLogtCab_PK");

            entity.ToTable("LogT_OperacionesLogtCab", tb =>
                {
                    tb.HasTrigger("LogT_OperacionesLogtCab_Update");
                    tb.HasTrigger("LogT_OperacionesLogtCab_Val");
                    tb.HasTrigger("logt_operacioneslogtcab_valfis");
                });

            entity.HasIndex(e => new { e.PEmpId, e.DivCodigo, e.UniCodigo }, "LogT_OperacionesLogtCab_I1").HasFillFactor(90);

            entity.HasIndex(e => new { e.PDocOrigenId, e.ProNegocioCod, e.OpeLogtCabId, e.IdFuncionalidad }, "LogT_OperacionesLogtCab_I2");

            entity.HasIndex(e => new { e.ConEstCod, e.OpeLogtCabId, e.PEmpId, e.DivCodigo, e.FechaProceso, e.ProNegocioCod, e.PTipoOpeId }, "LogT_OperacionesLogtCab_I3");

            entity.HasIndex(e => e.IdFuncionalidad, "LogT_OperacionesLogtCab_I4").HasFillFactor(90);

            entity.HasIndex(e => new { e.FechaProceso, e.ConEstCod, e.PEmpId, e.DivCodigo, e.OpeLogtCabId }, "LogT_OperacionesLogtCab_I5");

            entity.HasIndex(e => new { e.ConEstCod, e.FechaProceso, e.PEmpId, e.DivCodigo, e.OpeLogtCabId }, "LogT_OperacionesLogtCab_I5A");

            entity.HasIndex(e => new { e.LogOwner, e.OpeLogtCabId }, "LogT_OperacionesLogtCab_idx010");

            entity.HasIndex(e => new { e.PerId, e.ConEstCod, e.PEmpId, e.DivCodigo, e.FechaProceso, e.OpeLogtCabId, e.PTipoOpeId }, "LogT_OperacionesLogtCab_idx017");

            entity.HasIndex(e => new { e.DivCodigo, e.PEmpId, e.PTipoOpeId, e.OpeLogtCabId, e.PBodegaId, e.FechaProceso, e.IdFuncionalidad, e.ConEstCod }, "LogT_OperacionesLogtCab_idx019");

            entity.HasIndex(e => new { e.ConEstCod, e.PEmpId, e.DivCodigo, e.ProNegocioCod, e.PEntId, e.OpeLogtCabId, e.PMonedaOrigenId, e.PDocOrigenId, e.FechaProceso }, "LogT_OperacionesLogtCab_idx022");

            entity.HasIndex(e => new { e.PDocOrigenId, e.IdFuncionalidad, e.OpeLogtCabId, e.PEmpId, e.DivCodigo, e.ConEstCod, e.FechaProceso }, "LogT_OperacionesLogtCab_idx023");

            entity.HasIndex(e => new { e.OpeLogtCabId, e.DivCodigo, e.PEmpId, e.ConEstCod, e.ProNegocioCod, e.IdFuncionalidad, e.PTipoOpeId }, "LogT_OperacionesLogtCab_idx024");

            entity.HasIndex(e => e.PTipoOpeId, "LogT_OperacionesLogtCab_idx025");

            entity.HasIndex(e => new { e.PDocOrigenId, e.OpeLogtCabId, e.ProNegocioCod, e.PBodegaId, e.IdFuncionalidad, e.FechaProceso, e.PEmpId, e.DivCodigo, e.UniCodigo, e.PTipoOpeId, e.ConEstCod, e.LogOwner, e.IdFuncionUltModifReg }, "LogT_OperacionesLogtCab_idx050");

            entity.HasIndex(e => e.PTipoOpeId, "LogT_OperacionesLogtCab_idx051");

            entity.HasIndex(e => new { e.PTipoOpeId, e.PEmpId, e.DivCodigo }, "LogT_OperacionesLogtCab_idx052");

            entity.HasIndex(e => new { e.PTipoOpeId, e.PEmpId, e.DivCodigo, e.UniCodigo, e.OpeLogtCabId, e.PDocOrigenId, e.IdFuncionalidad, e.ConEstCod, e.ProNegocioCod, e.PBodegaId }, "LogT_OperacionesLogtCab_idx053");

            entity.HasIndex(e => new { e.OpeLogtCabId, e.ConEstCod, e.PTipoOpeId, e.IdFuncionalidad, e.ProNegocioCod, e.PBodegaId, e.PEmpId, e.FechaProceso, e.DivCodigo, e.UniCodigo, e.UsuarioProceso, e.UsuarioAprobacion, e.FechaAprobacion }, "LogT_OperacionesLogtCab_idx054");

            entity.HasIndex(e => new { e.PTipoOpeId, e.PDocOrigenId, e.OpeLogtCabId, e.PBodegaId, e.ProNegocioCod, e.IdFuncionalidad, e.FechaProceso, e.PEmpId, e.DivCodigo, e.UniCodigo, e.ConEstCod, e.LogOwner, e.IdFuncionUltModifReg }, "LogT_OperacionesLogtCab_idx057");

            entity.HasIndex(e => new { e.LogOwner, e.OpeLogtCabId, e.PEmpId, e.ConEstCod, e.FechaAprobacion }, "LogT_OperacionesLogtCab_idx058");

            entity.HasIndex(e => new { e.IdFuncionalidad, e.ProNegocioCod, e.PEmpId, e.DivCodigo, e.UniCodigo, e.OpeLogtCabId, e.FechaProceso, e.ConEstCod }, "LogT_OperacionesLogtCab_idx062");

            entity.HasIndex(e => new { e.IdFuncionalidad, e.ProNegocioCod, e.OpeLogtCabId }, "LogT_OperacionesLogtCab_idx063");

            entity.HasIndex(e => new { e.ConEstCod, e.PTipoOpeId, e.OpeLogtCabId }, "LogT_OperacionesLogtCab_idx071");

            entity.HasIndex(e => new { e.ConEstCod, e.PEmpId, e.DivCodigo, e.OpeLogtCabId }, "LogT_OperacionesLogtCab_idx081");

            entity.HasIndex(e => new { e.ConEstCod, e.OpeLogtCabId, e.PEmpId, e.DivCodigo, e.PerId, e.PEntId, e.FechaProceso }, "LogT_OperacionesLogtCab_idx0999");

            entity.HasIndex(e => new { e.PTipoOpeId, e.ConEstCod, e.DivCodigo, e.PEmpId, e.OpeLogtCabId, e.ProNegocioCod, e.IdFuncionalidad, e.PBodegaId, e.FechaProceso, e.UniCodigo, e.PDocOrigenId, e.PEntId }, "LogT_OperacionesLogtCab_idx153");

            entity.Property(e => e.OpeLogtCabId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecActBod).HasColumnType("datetime");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecTasaIni).HasColumnType("datetime");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.FechaAprobacion).HasColumnType("datetime");
            entity.Property(e => e.FechaCierre).HasColumnType("datetime");
            entity.Property(e => e.FechaProceso).HasColumnType("datetime");
            entity.Property(e => e.GlosaExis)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionalidad)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcionalidad");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.IntWms).HasColumnName("IntWMS");
            entity.Property(e => e.LogOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.NumRecepEmbarque).HasColumnType("numeric(18, 0)");
            entity.Property(e => e.PBodOrigenId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pBodOrigenId");
            entity.Property(e => e.PBodegaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pBodegaId");
            entity.Property(e => e.PCconsumoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCConsumoId");
            entity.Property(e => e.PConvenioCabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pConvenioCabId");
            entity.Property(e => e.PDevolucionCabId)
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("pDevolucionCabId");
            entity.Property(e => e.PDocOrigenId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pDocOrigenId");
            entity.Property(e => e.PEmbarqueCabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmbarqueCabId");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PEntId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntId");
            entity.Property(e => e.PEntSucId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntSucId");
            entity.Property(e => e.PMonedaOrigenId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMonedaOrigenId");
            entity.Property(e => e.PTipoOpeId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTipoOpeId");
            entity.Property(e => e.UsuarioAnula)
                .HasMaxLength(50)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.UsuarioAprobacion)
                .HasMaxLength(50)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.UsuarioProceso)
                .HasMaxLength(50)
                .IsUnicode(false)
                .IsFixedLength();

            entity.HasOne(d => d.DivCodigoNavigation).WithMany(p => p.LogTOperacionesLogtCabs)
                .HasForeignKey(d => d.DivCodigo)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_OpeLogtCabDivCodigo");

            entity.HasOne(d => d.PBodega).WithMany(p => p.LogTOperacionesLogtCabs)
                .HasForeignKey(d => d.PBodegaId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_OpeLogtCabBodegaId");

            entity.HasOne(d => d.PEmp).WithMany(p => p.LogTOperacionesLogtCabs)
                .HasForeignKey(d => d.PEmpId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_OpeLogtCabEmpId");
        });

        modelBuilder.Entity<LogTOperacionesLogtCabCont>(entity =>
        {
            entity.HasKey(e => e.OpeLogtCabContId).HasName("LogT_OperacionesLogtCabCont_PK");

            entity.ToTable("LogT_OperacionesLogtCabCont", tb => tb.HasTrigger("LogT_OperacionesLogtCabCont_D"));

            entity.HasIndex(e => new { e.POpeLogtCabId, e.CabOpeNumero }, "LogT_OperacionesLogtCabCont_idx050");

            entity.Property(e => e.OpeLogtCabContId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.FechaCentralizacion).HasColumnType("datetime");
            entity.Property(e => e.FechaDocumento).HasColumnType("datetime");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PCabReferenciaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCabReferenciaId");
            entity.Property(e => e.PCdiId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCdiId");
            entity.Property(e => e.PCreId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCreId");
            entity.Property(e => e.POpeLogtCabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pOpeLogtCabId");
            entity.Property(e => e.PPartidaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pPartidaId");
            entity.Property(e => e.PTprId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTprId");
            entity.Property(e => e.PryNumero)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();

            entity.HasOne(d => d.POpeLogtCab).WithMany(p => p.LogTOperacionesLogtCabConts)
                .HasForeignKey(d => d.POpeLogtCabId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_OpeLogtCabContOpeLogtCabId");
        });

        modelBuilder.Entity<LogTOperacionesLogtDet>(entity =>
        {
            entity.HasKey(e => e.OpeLogtDetId).HasName("LogT_OperacionesLogtDet_PK");

            entity.ToTable("LogT_OperacionesLogtDet", tb =>
                {
                    tb.HasTrigger("LogT_OperacionesLogTDet_InsertVal");
                    tb.HasTrigger("LogT_OperacionesLogtDet_Delete");
                    tb.HasTrigger("Logt_OperacionesLogtDet_Update");
                    tb.HasTrigger("logt_operacioneslogtdet_insprodkit");
                });

            entity.HasIndex(e => new { e.POpeLogtCabId, e.IndicaLote, e.OpeLogtDetId, e.IndicaSerie }, "LogT_OperacionesLogtDet_I1");

            entity.HasIndex(e => new { e.PProductoId, e.FechaProceso, e.PBodegaId, e.SituacionContCod, e.EstadoProdCod, e.PLoteProductoDetId, e.PUbicacionDetId, e.OpeLogtDetId }, "LogT_OperacionesLogtDet_I2");

            entity.HasIndex(e => e.PBodegaId, "LogT_OperacionesLogtDet_I3").HasFillFactor(90);

            entity.HasIndex(e => new { e.PDocOrigenDetId, e.IdFuncionalidad }, "LogT_OperacionesLogtDet_I4").HasFillFactor(90);

            entity.HasIndex(e => e.PServicioId, "LogT_OperacionesLogtDet_I5").HasFillFactor(90);

            entity.HasIndex(e => new { e.PProductoId, e.PBodegaId, e.OpeLogtDetId, e.POpeLogtCabId, e.SituacionContCod, e.EstadoProdCod, e.POpeLogtCabFifoId }, "LogT_OperacionesLogtDet_idx018");

            entity.HasIndex(e => new { e.POpeLogtCabId, e.OpeLogtDetId, e.CantEntrada, e.CantSalida, e.ValorUniOpeMonedaOrigen, e.ValorOpeMoneda }, "LogT_OperacionesLogtDet_idx020");

            entity.HasIndex(e => new { e.POpeLogtCabId, e.Linea, e.PProductoId, e.OpeLogtDetId, e.PServicioId, e.CantEntrada, e.CantSalida }, "LogT_OperacionesLogtDet_idx021");

            entity.HasIndex(e => new { e.POpeLogtCabId, e.Linea, e.OpeLogtDetId, e.PServicioId, e.CantEntrada, e.CantSalida }, "LogT_OperacionesLogtDet_idx022");

            entity.HasIndex(e => new { e.POpeLogtCabId, e.Linea, e.PProductoId, e.CantEntrada }, "LogT_OperacionesLogtDet_idx023");

            entity.HasIndex(e => new { e.SituacionContCod, e.PProductoId, e.EstadoProdCod, e.FechaProceso, e.OpeLogtDetId, e.PLoteProductoDetId, e.POpeLogtCabId, e.PUbicacionDetId, e.PUnidadMedStockId }, "LogT_OperacionesLogtDet_idx025");

            entity.HasIndex(e => new { e.PDocOrigenDetId, e.OpeLogtDetId, e.POpeLogtCabId }, "LogT_OperacionesLogtDet_idx026");

            entity.HasIndex(e => new { e.IndicaLote, e.FechaProceso }, "LogT_OperacionesLogtDet_idx050");

            entity.HasIndex(e => e.FechaProceso, "LogT_OperacionesLogtDet_idx051");

            entity.HasIndex(e => new { e.POpeLogtCabId, e.IndicaSerie, e.OpeLogtDetId }, "LogT_OperacionesLogtDet_idx052");

            entity.HasIndex(e => new { e.PProductoId, e.PBodegaId, e.PLoteProductoDetId, e.PUbicacionDetId, e.CantSalida, e.OpeLogtDetId, e.POpeLogtCabId, e.FechaAprobacion }, "LogT_OperacionesLogtDet_idx053");

            entity.HasIndex(e => new { e.PDocOrigenDetId, e.POpeLogtCabId, e.OpeLogtDetId }, "LogT_OperacionesLogtDet_idx054");

            entity.HasIndex(e => new { e.POpeLogtCabId, e.PProductoId, e.OpeLogtDetId, e.PBodegaId, e.PUnidadMedStockId }, "LogT_OperacionesLogtDet_idx055");

            entity.HasIndex(e => new { e.POpeLogtCabId, e.OpeLogtDetId, e.PMonedaOrigenId, e.PUnidadMedStockId, e.PBodegaId, e.PProductoId, e.PServicioId }, "LogT_OperacionesLogtDet_idx056");

            entity.HasIndex(e => new { e.PProductoId, e.FechaProceso, e.SituacionContCod, e.EstadoProdCod, e.POpeLogtCabFifoId, e.PBodegaId, e.OpeLogtDetId }, "LogT_OperacionesLogtDet_idx061");

            entity.HasIndex(e => new { e.POpeLogtCabId, e.SituacionContCod, e.PProductoId, e.EstadoProdCod }, "LogT_OperacionesLogtDet_idx063");

            entity.HasIndex(e => new { e.POpeLogtCabId, e.ItemDet, e.OpeLogtDetId, e.PBodegaId, e.SituacionContCod, e.PUnidadMedOrigenId, e.PUnidadMedStockId }, "LogT_OperacionesLogtDet_idx064");

            entity.HasIndex(e => new { e.POpeLogtCabId, e.OpeLogtDetId, e.PProductoId, e.PBodegaId }, "LogT_OperacionesLogtDet_idx070");

            entity.HasIndex(e => new { e.ValorOpeMoneda, e.POpeLogtCabId }, "LogT_OperacionesLogtDet_idx071");

            entity.HasIndex(e => new { e.FechaProceso, e.OpeLogtDetId, e.PProductoId, e.POpeLogtCabId, e.PBodegaId, e.SituacionContCod, e.EstadoProdCod }, "LogT_OperacionesLogtDet_idx080");

            entity.HasIndex(e => new { e.PProductoId, e.POpeLogtCabId, e.PBodegaId, e.SituacionContCod, e.EstadoProdCod, e.FechaProceso }, "LogT_OperacionesLogtDet_idx081");

            entity.HasIndex(e => new { e.FechaProceso, e.PBodegaId, e.PProductoId, e.SituacionContCod, e.EstadoProdCod, e.OpeLogtDetId, e.POpeLogtCabId }, "LogT_OperacionesLogtDet_idx082");

            entity.HasIndex(e => new { e.EstadoProdCod, e.OpeLogtDetId, e.PBodegaId, e.POpeLogtCabFifoId, e.PProductoId, e.SituacionContCod, e.POpeLogtCabId }, "LogT_OperacionesLogtDet_idx099");

            entity.HasIndex(e => new { e.POpeLogtCabId, e.FechaProceso }, "LogT_OperacionesLogtDet_idx153");

            entity.HasIndex(e => new { e.SituacionContCod, e.PProductoId, e.EstadoProdCod, e.PBodegaId, e.POpeLogtCabFifoId, e.OpeLogtDetId, e.POpeLogtCabId }, "LogT_OperacionesLogtDet_idx154");

            entity.Property(e => e.OpeLogtDetId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.FechaAprobacion).HasColumnType("datetime");
            entity.Property(e => e.FechaProceso).HasColumnType("datetime");
            entity.Property(e => e.GlosaExisDet)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionalidad)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcionalidad");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.LogOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PBodegaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pBodegaId");
            entity.Property(e => e.PCierreDlgId)
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("pCierreDlgId");
            entity.Property(e => e.PDocOrigenDetId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pDocOrigenDetId");
            entity.Property(e => e.PDoctoVentaDetId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pDoctoVentaDetId");
            entity.Property(e => e.PLoteProductoDetId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pLoteProductoDetId");
            entity.Property(e => e.PMonedaOrigenId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMonedaOrigenId");
            entity.Property(e => e.POpeLogtCabFifoId)
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("pOpeLogtCabFifoId");
            entity.Property(e => e.POpeLogtCabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pOpeLogtCabId");
            entity.Property(e => e.PProductoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pProductoId");
            entity.Property(e => e.PServicioId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pServicioId");
            entity.Property(e => e.PUbicacionDetId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pUbicacionDetId");
            entity.Property(e => e.PUnidadMed2Id)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pUnidadMed2Id");
            entity.Property(e => e.PUnidadMedOrigenId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pUnidadMedOrigenId");
            entity.Property(e => e.PUnidadMedStockId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pUnidadMedStockId");
            entity.Property(e => e.RefControlCalidad).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.UsuarioAnula)
                .HasMaxLength(50)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.UsuarioAprobacion)
                .HasMaxLength(50)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.UsuarioProceso)
                .HasMaxLength(50)
                .IsUnicode(false)
                .IsFixedLength();

            entity.HasOne(d => d.PBodega).WithMany(p => p.LogTOperacionesLogtDets)
                .HasForeignKey(d => d.PBodegaId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_OpeLogtDetBodegaId");

            entity.HasOne(d => d.POpeLogtCab).WithMany(p => p.LogTOperacionesLogtDets)
                .HasForeignKey(d => d.POpeLogtCabId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_OpeLogtDetOpeLogtCabId");

            entity.HasOne(d => d.PUnidadMedOrigen).WithMany(p => p.LogTOperacionesLogtDetPUnidadMedOrigens)
                .HasForeignKey(d => d.PUnidadMedOrigenId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_OpeLogtDetUnidadMedId_1");

            entity.HasOne(d => d.PUnidadMedStock).WithMany(p => p.LogTOperacionesLogtDetPUnidadMedStocks)
                .HasForeignKey(d => d.PUnidadMedStockId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_OpeLogtDetUnidadMedId_3");

            entity.HasOne(d => d.SituacionContCodNavigation).WithMany(p => p.LogTOperacionesLogtDets)
                .HasForeignKey(d => d.SituacionContCod)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_OpeLogtDetSituacionContCod");
        });

        modelBuilder.Entity<LogTOperacionesLogtDetCont>(entity =>
        {
            entity.HasKey(e => e.OpeLogtDetContId).HasName("LogT_OperacionesLogtDetCont_PK");

            entity.ToTable("LogT_OperacionesLogtDetCont", tb => tb.HasTrigger("LogT_OperacionesLogtDetCont_D"));

            entity.HasIndex(e => new { e.PCdiId, e.PCreId, e.PCtaId, e.PTprId, e.PryNumero, e.OpeLogtDetContId, e.PPartidaId, e.POpeLogtDetId }, "LogT_OperacionesLogtDetCont_idx05");

            entity.HasIndex(e => new { e.POpeLogtDetId, e.PCreId, e.PCdiId, e.PTprId, e.PryNumero, e.PCtaId, e.PCctaId }, "LogT_OperacionesLogtDetCont_idx050");

            entity.HasIndex(e => new { e.POpeLogtDetId, e.PPartidaId, e.OpeLogtDetContId }, "LogT_OperacionesLogtDetCont_idx051");

            entity.Property(e => e.OpeLogtDetContId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PCctaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCCtaId");
            entity.Property(e => e.PCdiId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCdiId");
            entity.Property(e => e.PCreId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCreId");
            entity.Property(e => e.PCtaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtaId");
            entity.Property(e => e.PDetReferenciaCctaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pDetReferenciaCCtaId");
            entity.Property(e => e.PDetReferenciaCtaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pDetReferenciaCtaId");
            entity.Property(e => e.POpeLogtDetId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pOpeLogtDetId");
            entity.Property(e => e.PPartidaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pPartidaId");
            entity.Property(e => e.PSaldoCierreId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pSaldoCierreId");
            entity.Property(e => e.PTprId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTprId");
            entity.Property(e => e.PryNumero)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();

            entity.HasOne(d => d.POpeLogtDet).WithMany(p => p.LogTOperacionesLogtDetConts)
                .HasForeignKey(d => d.POpeLogtDetId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_OpeLogtDetContOpeLogtDetId");
        });

        modelBuilder.Entity<LogTOperacionesLogtDetPacking>(entity =>
        {
            entity.HasKey(e => e.OpeLogtDetPacId).HasName("LogT_OperacionesLogtDetPacking_PK");

            entity.ToTable("LogT_OperacionesLogtDetPacking");

            entity.Property(e => e.OpeLogtDetPacId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.GlosaExis)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.IndEmbarque)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PEmbId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmbId");
            entity.Property(e => e.POpeLogtDetId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pOpeLogtDetId");
            entity.Property(e => e.POpeLogtDetSerId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pOpeLogtDetSerId");
            entity.Property(e => e.POpeLogtDetserlotId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pOpeLogtDetserlotId");
            entity.Property(e => e.PTipoPackingId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTipoPackingId");
            entity.Property(e => e.PackingCod)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PackingSello)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<LogTOperacionesLogtDetSerie>(entity =>
        {
            entity.HasKey(e => e.OpeLogtDetSerId).HasName("LogT_OperacionesLogtDetSerie_PK");

            entity.ToTable("LogT_OperacionesLogtDetSerie");

            entity.Property(e => e.OpeLogtDetSerId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.PDocReferenciaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pDocReferenciaId");
            entity.Property(e => e.POpeLogtDetId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pOpeLogtDetId");
            entity.Property(e => e.POpeLogtDetserlotId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pOpeLogtDetserlotId");
            entity.Property(e => e.PSerieProductoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pSerieProductoId");
            entity.Property(e => e.PUbicacionId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pUbicacionId");
            entity.Property(e => e.PUnidadMed2Id)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pUnidadMed2Id");
            entity.Property(e => e.PUnidadMedOrigenId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pUnidadMedOrigenId");
            entity.Property(e => e.PUnidadMedStockId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pUnidadMedStockId");
        });

        modelBuilder.Entity<LogTOperacionesLogtDetSerieLote>(entity =>
        {
            entity.HasKey(e => e.OpeLogtDetSerLotId).HasName("LogT_OperacionesLogtDetSerieLote_PK");

            entity.ToTable("LogT_OperacionesLogtDetSerieLote", tb => tb.HasTrigger("LogT_OperacionesLogtDetSerieLote_D"));

            entity.HasIndex(e => new { e.POpeLogtDetId, e.OpeLogtDetSerLotId, e.PUbicacionId, e.PLoteProductoId }, "LogT_OperacionesLogtDetSerieLote_idx03");

            entity.HasIndex(e => e.POpeLogtDetId, "LogT_OperacionesLogtDetSerieLote_idx050");

            entity.HasIndex(e => e.POpeLogtDetId, "LogT_OperacionesLogtDetSerieLote_idx080");

            entity.HasIndex(e => new { e.PLoteProductoId, e.PUbicacionId, e.OpeLogtDetSerLotId, e.POpeLogtDetId, e.CantEntrada, e.CantSalida, e.CantEntrada2, e.CantSalida2 }, "LogT_OperacionesLogtDetSerieLote_idx099");

            entity.HasIndex(e => new { e.POpeLogtDetId, e.OpeLogtDetSerLotId }, "LogT_OperacionesLogtDetSerieLote_idx70");

            entity.Property(e => e.OpeLogtDetSerLotId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.PDocReferenciaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pDocReferenciaId");
            entity.Property(e => e.PLoteProductoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pLoteProductoId");
            entity.Property(e => e.POpeLogtDetId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pOpeLogtDetId");
            entity.Property(e => e.PSaldoCierreLoteId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pSaldoCierreLoteId");
            entity.Property(e => e.PSerieProductoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pSerieProductoId");
            entity.Property(e => e.PUbicacionId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pUbicacionId");
            entity.Property(e => e.PUnidadMed2Id)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pUnidadMed2Id");
            entity.Property(e => e.PUnidadMedOrigenId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pUnidadMedOrigenId");
            entity.Property(e => e.PUnidadMedStockId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pUnidadMedStockId");

            entity.HasOne(d => d.POpeLogtDet).WithMany(p => p.LogTOperacionesLogtDetSerieLotes)
                .HasForeignKey(d => d.POpeLogtDetId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_OperacionesLogtDetSerLotOpeLogtDetId");
        });

        modelBuilder.Entity<LogTOperacionesLogtDetUbicacion>(entity =>
        {
            entity.HasKey(e => e.OpeLogtDetUbiId).HasName("LogT_OpeLogTDetUbi_PK");

            entity.ToTable("LogT_OperacionesLogtDetUbicacion");

            entity.Property(e => e.OpeLogtDetUbiId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.PDocReferenciaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pDocReferenciaId");
            entity.Property(e => e.POpeLogtDetId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pOpeLogtDetId");
            entity.Property(e => e.PUbicacionId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pUbicacionId");

            entity.HasOne(d => d.POpeLogtDet).WithMany(p => p.LogTOperacionesLogtDetUbicacions)
                .HasForeignKey(d => d.POpeLogtDetId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_OperacionesLogtDetUbiOpeLogtDetId");

            entity.HasOne(d => d.PUbicacion).WithMany(p => p.LogTOperacionesLogtDetUbicacions)
                .HasForeignKey(d => d.PUbicacionId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_OperacionesLogtDetUbiUbicacionId");
        });

        modelBuilder.Entity<LogTOperacionesLogtDoctoRef>(entity =>
        {
            entity.HasKey(e => new { e.POpeLogtCabId, e.POpeLogtDetId, e.POpeLogtDetserlotId, e.TdoId, e.DlcFolioDocto }).HasName("LogT_OpeLogtDoctoRef_PK");

            entity.ToTable("LogT_OperacionesLogtDoctoRef");

            entity.HasIndex(e => new { e.POpeLogtCabId, e.PDocReferenciaId, e.DlcFolioDocto, e.DlcFecDocto, e.TdoId }, "LogT_OperacionesLogtDoctoRef_idx050");

            entity.HasIndex(e => new { e.POpeLogtDetId, e.POpeLogtCabId, e.DlcFolioDocto, e.POpeLogtDetserlotId, e.TdoId, e.PDocReferenciaId, e.DlcFecDocto, e.LogOwner, e.PDoctoLegalDetId }, "LogT_OperacionesLogtDoctoRef_idx051");

            entity.Property(e => e.POpeLogtCabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pOpeLogtCabId");
            entity.Property(e => e.POpeLogtDetId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pOpeLogtDetId");
            entity.Property(e => e.POpeLogtDetserlotId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pOpeLogtDetserlotId");
            entity.Property(e => e.DlcFecDocto).HasColumnType("datetime");
            entity.Property(e => e.LogOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PDocReferenciaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pDocReferenciaId");
            entity.Property(e => e.PDoctoLegalDetId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pDoctoLegalDetId");
            entity.Property(e => e.POpeLogtDetSerId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pOpeLogtDetSerId");

            entity.HasOne(d => d.POpeLogtCab).WithMany(p => p.LogTOperacionesLogtDoctoRefs)
                .HasForeignKey(d => d.POpeLogtCabId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_OpeLogtDoctoRefOpeLogtCabId_1");
        });

        modelBuilder.Entity<LogTPedidoMaterialCab>(entity =>
        {
            entity.HasKey(e => e.PedidoMaterialId).HasName("LogT_PedidoMaterialCab_PK");

            entity.ToTable("LogT_PedidoMaterialCab");

            entity.HasIndex(e => new { e.PedidoMaterialId, e.FechaRequerida, e.PCconsumoId, e.PBodDestinoId, e.IdFuncionUltModifReg }, "LogT_PedidoMaterialCab_idx050");

            entity.HasIndex(e => new { e.DivCodigo, e.PEmpId, e.PedidoMaterialId }, "LogT_PedidoMaterialCab_idx051");

            entity.HasIndex(e => new { e.PTipoOpeId, e.DivCodigo, e.PEmpId, e.PedidoMaterialId }, "LogT_PedidoMaterialCab_idx052");

            entity.HasIndex(e => new { e.PedidoMaterialId, e.ProNegocioCod }, "LogT_PedidoMaterialCab_idx054");

            entity.HasIndex(e => new { e.LogOwner, e.PedidoMaterialId }, "LogT_pedidomaterialCab_idx021");

            entity.Property(e => e.PedidoMaterialId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.FechaAprobacion).HasColumnType("datetime");
            entity.Property(e => e.FechaEstadoPedido).HasColumnType("datetime");
            entity.Property(e => e.FechaProceso).HasColumnType("datetime");
            entity.Property(e => e.FechaRequerida).HasColumnType("datetime");
            entity.Property(e => e.GlosaExis)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionalidad)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcionalidad");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.Iva).HasColumnName("IVA");
            entity.Property(e => e.LogOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PBodDestinoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pBodDestinoId");
            entity.Property(e => e.PBodegaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pBodegaId");
            entity.Property(e => e.PCconsumoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCConsumoId");
            entity.Property(e => e.PConvenioCabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pConvenioCabId");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PTipoOpeId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTipoOpeId");
            entity.Property(e => e.UsuarioAnula)
                .HasMaxLength(50)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.UsuarioAprobacion)
                .HasMaxLength(50)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.UsuarioProceso)
                .HasMaxLength(50)
                .IsUnicode(false)
                .IsFixedLength();

            entity.HasOne(d => d.DivCodigoNavigation).WithMany(p => p.LogTPedidoMaterialCabs)
                .HasForeignKey(d => d.DivCodigo)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_PedMatCabDivCodigo");

            entity.HasOne(d => d.PBodega).WithMany(p => p.LogTPedidoMaterialCabs)
                .HasForeignKey(d => d.PBodegaId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_PedMatCabBodegaId_1");

            entity.HasOne(d => d.PEmp).WithMany(p => p.LogTPedidoMaterialCabs)
                .HasForeignKey(d => d.PEmpId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_PedMatCabEmpId");

            entity.HasOne(d => d.PTipoOpe).WithMany(p => p.LogTPedidoMaterialCabs)
                .HasForeignKey(d => d.PTipoOpeId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_PedMatCabTipoOpeId");
        });

        modelBuilder.Entity<LogTPedidoMaterialCabCont>(entity =>
        {
            entity.HasKey(e => e.PedidoMaterialContId).HasName("LogT_PedidoMaterialCabCont_PK");

            entity.ToTable("LogT_PedidoMaterialCabCont");

            entity.HasIndex(e => e.PPedidoMaterialId, "LogT_PedidoMaterialCabCont_idx010");

            entity.HasIndex(e => new { e.PPedidoMaterialId, e.PTprId, e.PryNumero }, "LogT_PedidoMaterialCabCont_idx051");

            entity.Property(e => e.PedidoMaterialContId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.FechaDocumento).HasColumnType("datetime");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PCdiId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCdiId");
            entity.Property(e => e.PCreId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCreId");
            entity.Property(e => e.PPartidaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pPartidaId");
            entity.Property(e => e.PPedidoMaterialId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pPedidoMaterialId");
            entity.Property(e => e.PTprId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTprId");
            entity.Property(e => e.PryNumero)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();

            entity.HasOne(d => d.PPedidoMaterial).WithMany(p => p.LogTPedidoMaterialCabConts)
                .HasForeignKey(d => d.PPedidoMaterialId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_PedMatCabContPedidoMaterialId");
        });

        modelBuilder.Entity<LogTPedidoMaterialDet>(entity =>
        {
            entity.HasKey(e => e.PedidoMaterialDetId).HasName("LogT_PedidosMaterialesDet_PK");

            entity.ToTable("LogT_PedidoMaterialDet", tb => tb.HasTrigger("logt_pedidomaterialdet_insprodkit"));

            entity.HasIndex(e => new { e.PedidoMaterialDetId, e.PProductoId, e.IdFuncionalidad, e.PPedidoMaterialId }, "LogT_PedidoMaterialDet_idx050");

            entity.HasIndex(e => new { e.PProductoId, e.PedidoMaterialDetId, e.PPedidoMaterialId }, "LogT_PedidoMaterialDet_idx051");

            entity.HasIndex(e => new { e.PPedidoMaterialId, e.PProductoId, e.PedidoMaterialDetId }, "LogT_PedidoMaterialDet_idx053");

            entity.HasIndex(e => new { e.PedidoMaterialDetId, e.PPedidoMaterialId, e.PProductoId }, "LogT_PedidoMaterialDet_idx054");

            entity.HasIndex(e => new { e.PPedidoMaterialId, e.PedidoMaterialDetId, e.PBodegaId }, "LogT_PedidoMaterialDet_idx080");

            entity.Property(e => e.PedidoMaterialDetId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.FechaAprobacion).HasColumnType("datetime");
            entity.Property(e => e.FechaProceso).HasColumnType("datetime");
            entity.Property(e => e.FechaRequerida).HasColumnType("datetime");
            entity.Property(e => e.GlosaExis)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionalidad)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcionalidad");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PBodegaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pBodegaId");
            entity.Property(e => e.PCategoriaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCategoriaId");
            entity.Property(e => e.PDoctoVentaDetId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pDoctoVentaDetId");
            entity.Property(e => e.PEntId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntId");
            entity.Property(e => e.PMonedaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMonedaId");
            entity.Property(e => e.PPedidoMaterialId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pPedidoMaterialId");
            entity.Property(e => e.PProductoCodId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pProductoCodId");
            entity.Property(e => e.PProductoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pProductoId");
            entity.Property(e => e.PServicioId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pServicioId");
            entity.Property(e => e.PUnidadMedId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pUnidadMedId");
            entity.Property(e => e.PUnidadMedStockId)
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("pUnidadMedStockId");
            entity.Property(e => e.UsuarioAnula)
                .HasMaxLength(50)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.UsuarioAprobacion)
                .HasMaxLength(50)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.UsuarioProceso)
                .HasMaxLength(50)
                .IsUnicode(false)
                .IsFixedLength();

            entity.HasOne(d => d.PCategoria).WithMany(p => p.LogTPedidoMaterialDets)
                .HasForeignKey(d => d.PCategoriaId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_PedMatDetCategoriaId");

            entity.HasOne(d => d.PPedidoMaterial).WithMany(p => p.LogTPedidoMaterialDets)
                .HasForeignKey(d => d.PPedidoMaterialId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_PedMatDetPedidoMaterialId");

            entity.HasOne(d => d.PUnidadMed).WithMany(p => p.LogTPedidoMaterialDets)
                .HasForeignKey(d => d.PUnidadMedId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_PedMatDetUnidadMedId");
        });

        modelBuilder.Entity<LogTPedidoMaterialDetCont>(entity =>
        {
            entity.HasKey(e => e.PedidoMaterialDetContId).HasName("LogT_PedidoMaterialDetCont_PK");

            entity.ToTable("LogT_PedidoMaterialDetCont");

            entity.Property(e => e.PedidoMaterialDetContId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PCdiId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCdiId");
            entity.Property(e => e.PCreId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCreId");
            entity.Property(e => e.PPartidaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pPartidaId");
            entity.Property(e => e.PPedidoMaterialDetId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pPedidoMaterialDetId");
            entity.Property(e => e.PTprId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTprId");
            entity.Property(e => e.PryNumero)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();

            entity.HasOne(d => d.PPedidoMaterialDet).WithMany(p => p.LogTPedidoMaterialDetConts)
                .HasForeignKey(d => d.PPedidoMaterialDetId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_PedMatDetContPedidoMaterialDetId");
        });

        modelBuilder.Entity<LogTPedidoMaterialDetEspTec>(entity =>
        {
            entity.HasKey(e => e.PedidoMaterialDetEspTecId).HasName("LogT_PedidoMaterialDetEspTec_PK");

            entity.ToTable("LogT_PedidoMaterialDetEspTec");

            entity.Property(e => e.PedidoMaterialDetEspTecId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.PPedidoMaterialDetId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pPedidoMaterialDetId");
            entity.Property(e => e.PProductoEspTecDetId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pProductoEspTecDetId");
            entity.Property(e => e.PProductoEspTecId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pProductoEspTecId");

            entity.HasOne(d => d.PPedidoMaterialDet).WithMany(p => p.LogTPedidoMaterialDetEspTecs)
                .HasForeignKey(d => d.PPedidoMaterialDetId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_PedMatDetEspTecPedidoMaterialDetId");

            entity.HasOne(d => d.PProductoEspTec).WithMany(p => p.LogTPedidoMaterialDetEspTecs)
                .HasForeignKey(d => d.PProductoEspTecId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_PedMatDetEspTecProductoEspTecId");
        });

        modelBuilder.Entity<LogTPickingCab>(entity =>
        {
            entity.HasKey(e => e.PickingId).HasName("LogT_PickingCab_PK");

            entity.ToTable("LogT_PickingCab");

            entity.HasIndex(e => new { e.PickingId, e.ConEstCod, e.FechaProceso, e.IdUsuarioIngReg }, "LogT_PickingCab_idx050");

            entity.HasIndex(e => new { e.PickingId, e.ConEstCod, e.FechaProceso, e.IdUsuarioIngReg }, "LogT_PickingCab_idx051").IsDescending(true, false, false, false);

            entity.Property(e => e.PickingId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.FechaAprobacion).HasColumnType("datetime");
            entity.Property(e => e.FechaConfirma).HasColumnType("datetime");
            entity.Property(e => e.FechaProceso).HasColumnType("datetime");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.LogOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.UsuarioAnula)
                .HasMaxLength(50)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.UsuarioAprobacion)
                .HasMaxLength(50)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.UsuarioConfirma)
                .HasMaxLength(50)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.UsuarioProceso)
                .HasMaxLength(50)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<LogTPickingDet>(entity =>
        {
            entity.HasKey(e => e.PickingDetId).HasName("LogT_PickingDet_PK");

            entity.ToTable("LogT_PickingDet");

            entity.HasIndex(e => new { e.PPickingId, e.PickingDetId, e.PReservasDetId }, "LogT_PickingDet_idx050");

            entity.HasIndex(e => new { e.PPickingId, e.FechaProceso }, "LogT_PickingDet_idx051");

            entity.Property(e => e.PickingDetId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.CantAprepStock).HasColumnName("CantAPrepStock");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.FechaAprobacion).HasColumnType("datetime");
            entity.Property(e => e.FechaConfirma).HasColumnType("datetime");
            entity.Property(e => e.FechaProceso).HasColumnType("datetime");
            entity.Property(e => e.GlosaExis)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PDoctoVentaDetId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pDoctoVentaDetId");
            entity.Property(e => e.PPickingId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pPickingId");
            entity.Property(e => e.PProductoCodId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pProductoCodId");
            entity.Property(e => e.PReservasDetId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pReservasDetId");
            entity.Property(e => e.PUnidadMed2Id)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pUnidadMed2Id");
            entity.Property(e => e.UsuarioAnula)
                .HasMaxLength(50)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.UsuarioAprobacion)
                .HasMaxLength(50)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.UsuarioConfirma)
                .HasMaxLength(50)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.UsuarioProceso)
                .HasMaxLength(50)
                .IsUnicode(false)
                .IsFixedLength();

            entity.HasOne(d => d.PPicking).WithMany(p => p.LogTPickingDets)
                .HasForeignKey(d => d.PPickingId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_PickingDetPickingCabId");

            entity.HasOne(d => d.PReservasDet).WithMany(p => p.LogTPickingDets)
                .HasForeignKey(d => d.PReservasDetId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_PickingDetReservasDetId");
        });

        modelBuilder.Entity<LogTPickingDetUbicacion>(entity =>
        {
            entity.HasKey(e => e.PickingDetUbiId).HasName("LogT_PickingDetUbi_PK");

            entity.ToTable("LogT_PickingDetUbicacion");

            entity.Property(e => e.PickingDetUbiId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.PPickingDetId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pPickingDetId");
            entity.Property(e => e.PUbicacionId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pUbicacionId");

            entity.HasOne(d => d.PPickingDet).WithMany(p => p.LogTPickingDetUbicacions)
                .HasForeignKey(d => d.PPickingDetId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_PickingDetUbiPickingDetId");

            entity.HasOne(d => d.PUbicacion).WithMany(p => p.LogTPickingDetUbicacions)
                .HasForeignKey(d => d.PUbicacionId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_PickingDetUbiUbicacionId");
        });

        modelBuilder.Entity<LogTReserva>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("LogT_Reservas");

            entity.Property(e => e.FechaActivacion).HasColumnType("datetime");
        });

        modelBuilder.Entity<LogTReservasCab>(entity =>
        {
            entity.HasKey(e => e.ReservasCabId).HasName("LogT_ReservasCab_PK");

            entity.ToTable("LogT_ReservasCab");

            entity.HasIndex(e => new { e.PPedidoMaterialId, e.ReservasCabId }, "LogT_ReservasCab_idx04");

            entity.HasIndex(e => new { e.ReservasCabId, e.PPedidoMaterialId }, "LogT_ReservasCab_idx060");

            entity.Property(e => e.ReservasCabId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.PPedidoMaterialId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pPedidoMaterialId");

            entity.HasOne(d => d.PPedidoMaterial).WithMany(p => p.LogTReservasCabs)
                .HasForeignKey(d => d.PPedidoMaterialId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_ReservasCabPedidoMaterialId");
        });

        modelBuilder.Entity<LogTReservasCabBak>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("LogT_ReservasCab_bak");

            entity.Property(e => e.PPedidoMaterialId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pPedidoMaterialId");
            entity.Property(e => e.ReservasCabId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
        });

        modelBuilder.Entity<LogTReservasDet>(entity =>
        {
            entity.HasKey(e => e.ReservasDetId).HasName("LogT_ReservaDet_PK");

            entity.ToTable("LogT_ReservasDet", tb => tb.HasTrigger("logt_reservasdet_upd_cantStock0"));

            entity.HasIndex(e => new { e.ConEstCod, e.PBodegaId, e.EstadoProdCod, e.SituacionContCod, e.FormaAtencionCod, e.PDocAtencionId, e.PPedidoMaterialDetId, e.CantidadStock }, "LogT_ReservasDet_idx050");

            entity.HasIndex(e => new { e.PPedidoMaterialDetId, e.PBodegaId, e.PUnidadMedStockId }, "LogT_ReservasDet_idx051");

            entity.HasIndex(e => new { e.POcDetId, e.ReservasDetId, e.PReservasCabId }, "LogT_ReservasDet_idx060");

            entity.HasIndex(e => new { e.PReservasCabId, e.ReservasDetId, e.PDocAtencionId }, "LogT_ReservasDet_idx07");

            entity.Property(e => e.ReservasDetId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.FechaAprobacion).HasColumnType("datetime");
            entity.Property(e => e.FechaProceso).HasColumnType("datetime");
            entity.Property(e => e.FechaProduccion).HasColumnType("datetime");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.LogOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PBodegaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pBodegaId");
            entity.Property(e => e.PDocAtencionId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pDocAtencionId");
            entity.Property(e => e.PLoteProductoId)
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("pLoteProductoId");
            entity.Property(e => e.POcDetId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pOcDetId");
            entity.Property(e => e.PPedidoMaterialDetId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pPedidoMaterialDetId");
            entity.Property(e => e.PRecCabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pRecCabId");
            entity.Property(e => e.PReservasCabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pReservasCabId");
            entity.Property(e => e.PUnidadMedStockId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pUnidadMedStockId");
            entity.Property(e => e.UsuarioAnula)
                .HasMaxLength(50)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.UsuarioAprobacion)
                .HasMaxLength(50)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.UsuarioProceso)
                .HasMaxLength(50)
                .IsUnicode(false)
                .IsFixedLength();

            entity.HasOne(d => d.EstadoProdCodNavigation).WithMany(p => p.LogTReservasDets)
                .HasForeignKey(d => d.EstadoProdCod)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_ResDetEstadoProdCod");

            entity.HasOne(d => d.PBodega).WithMany(p => p.LogTReservasDets)
                .HasForeignKey(d => d.PBodegaId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_ResDetBodegaId");

            entity.HasOne(d => d.PPedidoMaterialDet).WithMany(p => p.LogTReservasDets)
                .HasForeignKey(d => d.PPedidoMaterialDetId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_ResDetPedidoMaterialDetId");

            entity.HasOne(d => d.PReservasCab).WithMany(p => p.LogTReservasDets)
                .HasForeignKey(d => d.PReservasCabId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_ResDetReservasCabId");

            entity.HasOne(d => d.PUnidadMedStock).WithMany(p => p.LogTReservasDets)
                .HasForeignKey(d => d.PUnidadMedStockId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_ResDetUnidadMedStockId");

            entity.HasOne(d => d.SituacionContCodNavigation).WithMany(p => p.LogTReservasDets)
                .HasForeignKey(d => d.SituacionContCod)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_ResDetSituacionContCod");
        });

        modelBuilder.Entity<LogTReservasDetBak>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("LogT_ReservasDet_bak");

            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.FechaAprobacion).HasColumnType("datetime");
            entity.Property(e => e.FechaProceso).HasColumnType("datetime");
            entity.Property(e => e.FechaProduccion).HasColumnType("datetime");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.LogOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PBodegaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pBodegaId");
            entity.Property(e => e.PDocAtencionId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pDocAtencionId");
            entity.Property(e => e.PLoteProductoId)
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("pLoteProductoId");
            entity.Property(e => e.PPedidoMaterialDetId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pPedidoMaterialDetId");
            entity.Property(e => e.PRecCabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pRecCabId");
            entity.Property(e => e.PReservasCabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pReservasCabId");
            entity.Property(e => e.PUnidadMedStockId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pUnidadMedStockId");
            entity.Property(e => e.ReservasDetId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.UsuarioAnula)
                .HasMaxLength(50)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.UsuarioAprobacion)
                .HasMaxLength(50)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.UsuarioProceso)
                .HasMaxLength(50)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<LogTRutaDespacho>(entity =>
        {
            entity.HasKey(e => e.RutaDespId).HasName("Logt_RutaDespacho_PK");

            entity.ToTable("LogT_RutaDespacho");

            entity.Property(e => e.RutaDespId).HasColumnType("numeric(18, 0)");
            entity.Property(e => e.PTipoVehId)
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("pTipoVehId");
            entity.Property(e => e.RutaDespDes)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<LogTSaldosBodega>(entity =>
        {
            entity.HasKey(e => e.SaldoBodegaId).HasName("LogT_SaldosBodega_PK");

            entity.ToTable("LogT_SaldosBodega", tb => tb.HasTrigger("LogT_SaldosBodega_Insert"));

            entity.HasIndex(e => new { e.EstadoProdCod, e.PBodegaId, e.PProductoId, e.SituacionContCod }, "LogT_SaldosBodega_idx010");

            entity.HasIndex(e => new { e.PBodegaId, e.PProductoId }, "LogT_SaldosBodega_idx050");

            entity.HasIndex(e => new { e.PBodegaId, e.PProductoId, e.SaldoBodegaId, e.EstadoProdCod, e.SituacionContCod, e.FechaHoraSaldos, e.Cantidad }, "LogT_SaldosBodega_idx051");

            entity.HasIndex(e => new { e.PProductoId, e.PBodegaId, e.EstadoProdCod, e.SituacionContCod }, "LogT_SaldosBodega_idx052");

            entity.HasIndex(e => new { e.PProductoId, e.PBodegaId, e.SaldoBodegaId, e.EstadoProdCod, e.SituacionContCod, e.FechaHoraSaldos }, "logT_SaldosBiodega_idx085");

            entity.Property(e => e.SaldoBodegaId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.FechaHoraSaldos).HasColumnType("datetime");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PBodegaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pBodegaId");
            entity.Property(e => e.PEntConsignadorId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntConsignadorId");
            entity.Property(e => e.POpeLogtCabFifoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pOpeLogtCabFifoId");
            entity.Property(e => e.PProductoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pProductoId");
            entity.Property(e => e.PSaldoEmpresaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pSaldoEmpresaId");

            entity.HasOne(d => d.EstadoProdCodNavigation).WithMany(p => p.LogTSaldosBodegas)
                .HasForeignKey(d => d.EstadoProdCod)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_SalBodEstadoProdCod");

            entity.HasOne(d => d.PBodega).WithMany(p => p.LogTSaldosBodegas)
                .HasForeignKey(d => d.PBodegaId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_SalBodBodegaId");

            entity.HasOne(d => d.PProducto).WithMany(p => p.LogTSaldosBodegas)
                .HasForeignKey(d => d.PProductoId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_SalBodProductoId");

            entity.HasOne(d => d.SituacionContCodNavigation).WithMany(p => p.LogTSaldosBodegas)
                .HasForeignKey(d => d.SituacionContCod)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_SalBodSituacionContCod");
        });

        modelBuilder.Entity<LogTSaldosCierre>(entity =>
        {
            entity.HasKey(e => e.SaldoCierreId).HasName("LogT_SaldosCierre_PK");

            entity.ToTable("LogT_SaldosCierre");

            entity.HasIndex(e => new { e.PerId, e.PEmpId, e.DivCodigo, e.CierreDefinitivo, e.SaldoCierreId }, "LogT_SaldosCierre_idx04");

            entity.HasIndex(e => new { e.PProductoId, e.PBodegaId, e.PEmpId, e.DivCodigo, e.PerId, e.FechaCierre }, "LogT_SaldosCierre_idx05");

            entity.HasIndex(e => new { e.PEmpId, e.DivCodigo }, "LogT_SaldosCierre_idx050");

            entity.HasIndex(e => new { e.CierreDefinitivo, e.FechaCierre, e.PBodegaId, e.PProductoId, e.SituacionContCod, e.EstadoProdCod }, "LogT_SaldosCierre_idx051");

            entity.HasIndex(e => new { e.PEmpId, e.PProductoId, e.SituacionContCod, e.EstadoProdCod, e.PBodegaId, e.FechaCierre, e.SaldoCierreId, e.DivCodigo, e.FechaHoraSaldos, e.Cantidad, e.CostoMoneda, e.CostoMonedaAlt }, "LogT_SaldosCierre_idx052");

            entity.HasIndex(e => new { e.PEmpId, e.PProductoId, e.SituacionContCod, e.EstadoProdCod, e.PBodegaId, e.DivCodigo, e.FechaCierre, e.FechaHoraSaldos, e.Cantidad }, "LogT_SaldosCierre_idx053");

            entity.HasIndex(e => new { e.FechaCierre, e.PEmpId, e.DivCodigo, e.EstadoProdCod, e.SituacionContCod, e.PBodegaId, e.SaldoCierreId, e.PProductoId }, "LogT_SaldosCierre_idx054");

            entity.HasIndex(e => new { e.PEmpId, e.FechaCierre }, "LogT_SaldosCierre_idx056");

            entity.HasIndex(e => new { e.PEmpId, e.DivCodigo, e.CierreDefinitivo, e.FechaCierre, e.SaldoCierreId }, "LogT_SaldosCierre_idx06");

            entity.HasIndex(e => new { e.PProductoId, e.FechaCierre, e.PBodegaId, e.PEmpId, e.DivCodigo, e.SaldoCierreId, e.EstadoProdCod, e.SituacionContCod }, "LogT_SaldosCierre_idx07");

            entity.HasIndex(e => new { e.FechaCierre, e.PProductoId, e.PBodegaId, e.PEmpId, e.DivCodigo, e.EstadoProdCod, e.SituacionContCod, e.SaldoCierreId }, "LogT_SaldosCierre_idx08");

            entity.HasIndex(e => new { e.PEmpId, e.DivCodigo, e.FechaCierre, e.Cantidad, e.PBodegaId, e.PProductoId, e.SituacionContCod, e.EstadoProdCod, e.Cantidad2 }, "LogT_SaldosCierre_idx080");

            entity.HasIndex(e => new { e.PEmpId, e.DivCodigo, e.FechaCierre, e.Cantidad, e.PBodegaId, e.PProductoId, e.SituacionContCod, e.EstadoProdCod, e.SaldoCierreId }, "LogT_SaldosCierre_idx081");

            entity.HasIndex(e => new { e.CierreDefinitivo, e.PEmpId, e.DivCodigo, e.FechaCierre }, "LogT_SaldosCierre_idx083");

            entity.Property(e => e.SaldoCierreId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.FechaCierre).HasColumnType("datetime");
            entity.Property(e => e.FechaHoraSaldos).HasColumnType("datetime");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PBodegaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pBodegaId");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PEntConsignadorId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntConsignadorId");
            entity.Property(e => e.POpeLogtCabFifoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pOpeLogtCabFifoId");
            entity.Property(e => e.POpeLogtDetId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pOpeLogtDetId");
            entity.Property(e => e.PProductoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pProductoId");
            entity.Property(e => e.PSaldoBodegaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pSaldoBodegaId");
            entity.Property(e => e.PSaldoEmpresaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pSaldoEmpresaId");
        });

        modelBuilder.Entity<LogTSaldosCierreLote>(entity =>
        {
            entity.HasKey(e => e.SaldoCierreLoteId).HasName("LogT_SaldosCierreLote_PK");

            entity.ToTable("LogT_SaldosCierreLote");

            entity.HasIndex(e => new { e.PSaldoCierreId, e.PLoteProductoId, e.PUbicacionId, e.SaldoCierreLoteId, e.Cantidad, e.Cantidad2 }, "LogT_SaldosCierreLote_idx03");

            entity.HasIndex(e => new { e.PSaldoCierreId, e.PLoteProductoId, e.PUbicacionId, e.Cantidad }, "LogT_SaldosCierreLote_idx050");

            entity.HasIndex(e => new { e.PSaldoCierreId, e.PUbicacionId, e.PLoteProductoId, e.Cantidad }, "LogT_SaldosCierreLote_idx051");

            entity.HasIndex(e => new { e.PSaldoCierreId, e.SaldoCierreLoteId }, "LogT_SaldosCierreLote_idx080");

            entity.HasIndex(e => new { e.PSaldoCierreId, e.SaldoCierreLoteId, e.PSaldoCierreLoteValId }, "logt_saldoscierrelote_idx20140724");

            entity.Property(e => e.SaldoCierreLoteId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.FechaCierre).HasColumnType("datetime");
            entity.Property(e => e.FechaHoraSaldos).HasColumnType("datetime");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PLoteProductoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pLoteProductoId");
            entity.Property(e => e.POpeLogtDetserlotId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pOpeLogtDetserlotId");
            entity.Property(e => e.PSaldoCierreId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pSaldoCierreId");
            entity.Property(e => e.PSaldoCierreLoteValId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pSaldoCierreLoteValId");
            entity.Property(e => e.PUbicacionId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pUbicacionId");
        });

        modelBuilder.Entity<LogTSaldosCierreLotePorValor>(entity =>
        {
            entity.HasKey(e => e.SaldoCierreLoteValId).HasName("LogT_SaldosCierreLoteVal_PK");

            entity.ToTable("LogT_SaldosCierreLotePorValor");

            entity.Property(e => e.SaldoCierreLoteValId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.FechaCierre).HasColumnType("datetime");
            entity.Property(e => e.FechaHoraSaldos).HasColumnType("datetime");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PLoteProductoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pLoteProductoId");
            entity.Property(e => e.POpeLogtDetId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pOpeLogtDetId");
            entity.Property(e => e.PProductoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pProductoId");
            entity.Property(e => e.PUbicacionId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pUbicacionId");
        });

        modelBuilder.Entity<LogTSaldosCierreXx>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("LogT_SaldosCierre_xx");

            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.FechaCierre).HasColumnType("datetime");
            entity.Property(e => e.FechaHoraSaldos).HasColumnType("datetime");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PBodegaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pBodegaId");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.POpeLogtDetId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pOpeLogtDetId");
            entity.Property(e => e.PProductoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pProductoId");
            entity.Property(e => e.PSaldoBodegaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pSaldoBodegaId");
            entity.Property(e => e.PSaldoEmpresaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pSaldoEmpresaId");
            entity.Property(e => e.SaldoCierreId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
        });

        modelBuilder.Entity<LogTSaldosEmpresa>(entity =>
        {
            entity.HasKey(e => e.SaldoEmpresaId).HasName("LogT_SaldosEmpresa_PK");

            entity.ToTable("LogT_SaldosEmpresa", tb => tb.HasTrigger("LogT_SaldosEmpresa_Insert"));

            entity.HasIndex(e => new { e.PProductoId, e.SituacionContCod, e.EstadoProdCod, e.Cantidad, e.Cantidad2, e.CostoMoneda, e.CostoMonedaAlt, e.CostoPromMoneda, e.CostoPromMonedaAlt, e.DivCodigo, e.FechaHoraSaldos, e.PEmpId }, "LogT_SaldosEmpresa_idx050");

            entity.Property(e => e.SaldoEmpresaId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.FechaHoraSaldos).HasColumnType("datetime");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PProductoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pProductoId");
        });

        modelBuilder.Entity<LogTSaldosLogtLote>(entity =>
        {
            entity.HasKey(e => e.SaldoPorLoteId).HasName("LogT_SaldosLogtLote_PK");

            entity.ToTable("LogT_SaldosLogtLote");

            entity.Property(e => e.SaldoPorLoteId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PLoteProductoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pLoteProductoId");
            entity.Property(e => e.PProductoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pProductoId");
            entity.Property(e => e.PUbicacionId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pUbicacionId");
        });

        modelBuilder.Entity<LogTSaldosLogtSerie>(entity =>
        {
            entity.HasKey(e => e.SaldoPorSerieId).HasName("LogT_SaldosLogtSerie_PK");

            entity.ToTable("LogT_SaldosLogtSerie");

            entity.Property(e => e.SaldoPorSerieId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PSaldoBodegaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pSaldoBodegaId");
            entity.Property(e => e.PSaldoPorUbicacionLoteId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pSaldoPorUbicacionLoteId");
            entity.Property(e => e.PSerieProductoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pSerieProductoId");
            entity.Property(e => e.PUbicacionId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pUbicacionId");
        });

        modelBuilder.Entity<LogTSaldosLogtUbicacionLote>(entity =>
        {
            entity.HasKey(e => e.SaldoPorUbicacionLoteId).HasName("LogT_SaldosPorUbicacionLote_PK");

            entity.ToTable("LogT_SaldosLogtUbicacionLote");

            entity.HasIndex(e => new { e.PSaldoBodegaId, e.CantidadUbiLote, e.PUbicacionId, e.SaldoPorUbicacionLoteId, e.PLoteProductoId }, "LogT_SaldosLogtUbicacionLote_idx050");

            entity.HasIndex(e => new { e.PSaldoBodegaId, e.SaldoPorUbicacionLoteId, e.CantidadUbiLote, e.CantidadUbiLote2, e.CostoMoneda, e.CostoMonedaAlt, e.CostoPromMoneda, e.CostoPromMonedaAlt, e.PUbicacionId, e.PLoteProductoId }, "LogT_SaldosLogtUbicacionLote_idx051");

            entity.HasIndex(e => new { e.CantidadUbiLote, e.PLoteProductoId, e.PSaldoBodegaId }, "LogT_SaldosLogtUbicacionLote_idx052");

            entity.Property(e => e.SaldoPorUbicacionLoteId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PLoteProductoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pLoteProductoId");
            entity.Property(e => e.PSaldoBodegaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pSaldoBodegaId");
            entity.Property(e => e.PSaldoPorLoteId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pSaldoPorLoteId");
            entity.Property(e => e.PUbicacionId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pUbicacionId");

            entity.HasOne(d => d.PSaldoBodega).WithMany(p => p.LogTSaldosLogtUbicacionLotes)
                .HasForeignKey(d => d.PSaldoBodegaId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_SalUbiLoteSaldoBodegaId");
        });

        modelBuilder.Entity<LogTSeriesProducto>(entity =>
        {
            entity.HasKey(e => e.SerieProductoId).HasName("LogT_SeriesProducto_PK");

            entity.ToTable("LogT_SeriesProducto", tb => tb.HasTrigger("LogT_SeriesProducto_Trigger"));

            entity.Property(e => e.SerieProductoId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PDoctoLegalDetId)
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("pDoctoLegalDetId");
            entity.Property(e => e.POpeLogtDetIdDespacho)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pOpeLogtDetIdDespacho");
            entity.Property(e => e.POpeLogtDetIdRecepcion)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pOpeLogtDetIdRecepcion");
            entity.Property(e => e.PProductoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pProductoId");
            entity.Property(e => e.Referencia1Logt)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.Referencia2Logt)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.Rotulo)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("rotulo");
            entity.Property(e => e.SerieProductoCod)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();

            entity.HasOne(d => d.EstadoProdCodNavigation).WithMany(p => p.LogTSeriesProductos)
                .HasForeignKey(d => d.EstadoProdCod)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_SeriesProductoEstadoProdCod");

            entity.HasOne(d => d.PProducto).WithMany(p => p.LogTSeriesProductos)
                .HasForeignKey(d => d.PProductoId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_SeriesProductoProductoId");

            entity.HasOne(d => d.SituacionContCodNavigation).WithMany(p => p.LogTSeriesProductos)
                .HasForeignKey(d => d.SituacionContCod)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_SeriesProductoSituacionContCod");
        });

        modelBuilder.Entity<LogTSituacionContable>(entity =>
        {
            entity.HasKey(e => e.SituacionContCod).HasName("LogT_SituacionContable_PK");

            entity.ToTable("LogT_SituacionContable");

            entity.Property(e => e.SituacionContDes)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();

            entity.HasOne(d => d.AccionContCodNavigation).WithMany(p => p.LogTSituacionContables)
                .HasForeignKey(d => d.AccionContCod)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_SituacionContableAccionContCod");
        });

        modelBuilder.Entity<LogTTipoCompra>(entity =>
        {
            entity.HasKey(e => e.TipoCompraCod).HasName("LogT_TipoCompra_PK");

            entity.ToTable("LogT_TipoCompra");

            entity.Property(e => e.TipoCompraDes)
                .HasMaxLength(10)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<LogTTipoConvenio>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("LogT_TipoConvenio");

            entity.Property(e => e.TcpGlosa)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<LogTTipoImpuesto>(entity =>
        {
            entity.HasKey(e => e.TipoImpId).HasName("LogT_TipoImp_PK");

            entity.ToTable("LogT_TipoImpuestos");

            entity.Property(e => e.TipoImpId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.TipoImpDes)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<LogTTipoOpeEntidad>(entity =>
        {
            entity.HasKey(e => new { e.PEmpId, e.PTipoOpeId }).HasName("LogT_TipoOpeEntidad_PK");

            entity.ToTable("LogT_TipoOpeEntidad");

            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PTipoOpeId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTipoOpeId");
            entity.Property(e => e.PTipoOpeContId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTipoOpeContId");

            entity.HasOne(d => d.PEmp).WithMany(p => p.LogTTipoOpeEntidads)
                .HasForeignKey(d => d.PEmpId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_TipoOpeEntidadEmpId");

            entity.HasOne(d => d.PTipoOpeCont).WithMany(p => p.LogTTipoOpeEntidads)
                .HasForeignKey(d => d.PTipoOpeContId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_TipoOpeEntidadTipoOpeContId");

            entity.HasOne(d => d.PTipoOpe).WithMany(p => p.LogTTipoOpeEntidads)
                .HasForeignKey(d => d.PTipoOpeId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_TipoOpeEntidadTipoOpeId");
        });

        modelBuilder.Entity<LogTTipoOperacione>(entity =>
        {
            entity.HasKey(e => e.TipoOpeId).HasName("LogT_TipoOperaciones_PK");

            entity.ToTable("LogT_TipoOperaciones", tb => tb.HasTrigger("LogT_TipoOperaciones_Delete"));

            entity.Property(e => e.TipoOpeId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.AfectaCm).HasColumnName("AfectaCM");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.FechaVigencia).HasColumnType("datetime");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PTipoOpeContId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTipoOpeContId");
            entity.Property(e => e.TipoOpeDes)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<LogTTipoPacking>(entity =>
        {
            entity.HasKey(e => e.TipoPackingId).HasName("LogT_TipoPacking_PK");

            entity.ToTable("LogT_TipoPacking");

            entity.Property(e => e.TipoPackingId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.TipoPackingCod)
                .HasMaxLength(10)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.TipoPackingDes)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<LogTTransformacionCab>(entity =>
        {
            entity.HasKey(e => e.TranCabId).HasName("LogT_TransformacionCab_PK");

            entity.ToTable("LogT_TransformacionCab");

            entity.Property(e => e.TranCabId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.FechaAprobacion).HasColumnType("datetime");
            entity.Property(e => e.FechaConfirma).HasColumnType("datetime");
            entity.Property(e => e.FechaProceso).HasColumnType("datetime");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.LogOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PPedidoMaterialId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pPedidoMaterialId");
            entity.Property(e => e.PReservasCabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pReservasCabId");
            entity.Property(e => e.UsuarioAnula)
                .HasMaxLength(50)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.UsuarioAprobacion)
                .HasMaxLength(50)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.UsuarioConfirma)
                .HasMaxLength(50)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.UsuarioProceso)
                .HasMaxLength(50)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<LogTTransformacionDet>(entity =>
        {
            entity.HasKey(e => e.TranDetId).HasName("LogT_TransformacionDet_PK");

            entity.ToTable("LogT_TransformacionDet");

            entity.Property(e => e.TranDetId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.FechaAprobacion).HasColumnType("datetime");
            entity.Property(e => e.FechaConfirma).HasColumnType("datetime");
            entity.Property(e => e.FechaProceso).HasColumnType("datetime");
            entity.Property(e => e.GlosaExis)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PPedidoMaterialDetId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pPedidoMaterialDetId");
            entity.Property(e => e.PProductoCodId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pProductoCodId");
            entity.Property(e => e.PProductoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pProductoId");
            entity.Property(e => e.PReservasDetId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pReservasDetId");
            entity.Property(e => e.PTranCabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTranCabId");
            entity.Property(e => e.PUnidadMed2Id)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pUnidadMed2Id");
            entity.Property(e => e.PUnidadMedId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pUnidadMedId");
            entity.Property(e => e.UsuarioAnula)
                .HasMaxLength(50)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.UsuarioAprobacion)
                .HasMaxLength(50)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.UsuarioConfirma)
                .HasMaxLength(50)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.UsuarioProceso)
                .HasMaxLength(50)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<LogTTransformacionDetSerieLote>(entity =>
        {
            entity.HasKey(e => e.TranDetSerLotId).HasName("LogT_TransformacionDetSerieLote_PK");

            entity.ToTable("LogT_TransformacionDetSerieLote");

            entity.Property(e => e.TranDetSerLotId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.PDocReferenciaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pDocReferenciaId");
            entity.Property(e => e.PLoteProductoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pLoteProductoId");
            entity.Property(e => e.PSerieProductoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pSerieProductoId");
            entity.Property(e => e.PTranDetId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTranDetId");
            entity.Property(e => e.PUbicacionId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pUbicacionId");
            entity.Property(e => e.PUnidadMed2Id)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pUnidadMed2Id");
            entity.Property(e => e.PUnidadMedOrigenId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pUnidadMedOrigenId");
            entity.Property(e => e.PUnidadMedStockId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pUnidadMedStockId");
        });

        modelBuilder.Entity<LogTUnidadesMedidaEntidad>(entity =>
        {
            entity.HasKey(e => e.UnidadMedEntId).HasName("LogT_UnidadesMedidaEntidad_PK");

            entity.ToTable("LogT_UnidadesMedidaEntidad");

            entity.Property(e => e.UnidadMedEntId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.PEntId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntId");
            entity.Property(e => e.PProductoUnidadMedidaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pProductoUnidadMedidaId");

            entity.HasOne(d => d.PEnt).WithMany(p => p.LogTUnidadesMedidaEntidads)
                .HasForeignKey(d => d.PEntId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_UnidadMedEntEntId");

            entity.HasOne(d => d.PProductoUnidadMedida).WithMany(p => p.LogTUnidadesMedidaEntidads)
                .HasForeignKey(d => d.PProductoUnidadMedidaId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_UnidadMedEntProdUnidadMedId");
        });

        modelBuilder.Entity<LogTUsuarioTipoOpe>(entity =>
        {
            entity.HasKey(e => new { e.FldUserCode, e.PTipoOpeId }).HasName("LogT_UsuarioTipoOpe_PK");

            entity.ToTable("LogT_UsuarioTipoOpe");

            entity.Property(e => e.FldUserCode)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("fld_UserCode");
            entity.Property(e => e.PTipoOpeId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTipoOpeId");
            entity.Property(e => e.PTipoOpeIdDefault)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTipoOpeIdDefault");

            entity.HasOne(d => d.PTipoOpe).WithMany(p => p.LogTUsuarioTipoOpes)
                .HasForeignKey(d => d.PTipoOpeId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_UsuarioTipoOpeTipoOpeId_1");
        });

        modelBuilder.Entity<LogTValorNetoRealizacion>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("LogT_ValorNetoRealizacion");

            entity.Property(e => e.FechaProceso).HasColumnType("datetime");
            entity.Property(e => e.PCctaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCCtaId");
            entity.Property(e => e.PCtaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtaId");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PMonedaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMonedaId");
            entity.Property(e => e.PProductoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pProductoId");
            entity.Property(e => e.Vnrid)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("VNRId");
        });

        modelBuilder.Entity<LogtPedidoMaterialDetCcosto>(entity =>
        {
            entity.HasKey(e => new { e.PPedidoMaterialDetId, e.Linea }).HasName("LogT_PedidoMaterialDetCCosto_PK");

            entity.ToTable("Logt_PedidoMaterialDetCCosto");

            entity.Property(e => e.PPedidoMaterialDetId)
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("pPedidoMaterialDetId");
            entity.Property(e => e.PCreId)
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("pCreId");
        });

        modelBuilder.Entity<LprDoctoCab>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("lpr_DoctoCab");

            entity.Property(e => e.CfgDlgSeparador)
                .HasMaxLength(1)
                .IsUnicode(false);
            entity.Property(e => e.DoctoCabId).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.FechaDocto)
                .HasMaxLength(10)
                .IsUnicode(false);
            entity.Property(e => e.FechaOrdenC)
                .HasMaxLength(10)
                .IsUnicode(false);
            entity.Property(e => e.FechaParidad)
                .HasMaxLength(10)
                .IsUnicode(false);
            entity.Property(e => e.FechaVecto)
                .HasMaxLength(10)
                .IsUnicode(false);
            entity.Property(e => e.IndDlgMe).HasColumnName("IndDlgME");
            entity.Property(e => e.NumeroOrdenC)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PCdiId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCdiId");
            entity.Property(e => e.PCondPagoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCondPagoId");
            entity.Property(e => e.PCreId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCreId");
            entity.Property(e => e.PDocReferenciaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pDocReferenciaId");
            entity.Property(e => e.PDoctoLegalCabOid)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pDoctoLegalCabOId");
            entity.Property(e => e.PDoctoVentaCabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pDoctoVentaCabId");
            entity.Property(e => e.PEmbarqueCabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmbarqueCabId");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PEntId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntId");
            entity.Property(e => e.PEntIdSec)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntIdSec");
            entity.Property(e => e.PEntSucId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntSucId");
            entity.Property(e => e.PEntSucIdSec)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntSucIdSec");
            entity.Property(e => e.PIdiomaEspId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pIdiomaEspId");
            entity.Property(e => e.PMonedaConvId).HasColumnName("pMonedaConvId");
            entity.Property(e => e.PMonedaLocalId).HasColumnName("pMonedaLocalId");
            entity.Property(e => e.PMonedaNegocioVtaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMonedaNegocioVtaId");
            entity.Property(e => e.PNegocioVtaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pNegocioVtaId");
            entity.Property(e => e.PTipoOpeId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTipoOpeId");
            entity.Property(e => e.PTprId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTprId");
            entity.Property(e => e.PUnidadEmisoraDetId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pUnidadEmisoraDetId");
            entity.Property(e => e.PVendedorId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pVendedorId");
            entity.Property(e => e.PryNumero)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.TipoDocumento)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.TipoReferencia)
                .HasMaxLength(15)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.UsuarioProceso)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<LprPeriodo>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("lpr_Periodo");

            entity.Property(e => e.FechaDocto).HasColumnType("datetime");
        });

        modelBuilder.Entity<ObrTArbolSubTitulo>(entity =>
        {
            entity.HasKey(e => new { e.PproyectoId, e.NodoId }).HasName("ObrI_ArbolSubTitulo01");

            entity.ToTable("ObrT_ArbolSubTitulo");

            entity.Property(e => e.PproyectoId).HasColumnName("PProyectoId");
            entity.Property(e => e.DescripcionNodo)
                .HasMaxLength(150)
                .IsUnicode(false);
            entity.Property(e => e.Duracion).HasColumnType("numeric(6, 1)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.NodoExternoId)
                .HasMaxLength(15)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.Precedencia)
                .HasMaxLength(50)
                .IsUnicode(false);
        });

        modelBuilder.Entity<ObrTCatalogoPartidum>(entity =>
        {
            entity.HasKey(e => e.PartidaCatalogoId).HasName("ObrI_PartidaCatalogoId01");

            entity.ToTable("ObrT_CatalogoPartida");

            entity.HasIndex(e => new { e.PartidaCatalogoId, e.CodigoExternoPartida, e.EmpId }, "ObrI_PartidaCatalogoId02").IsUnique();

            entity.Property(e => e.PartidaCatalogoId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.CodigoExternoPartida)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.CodigoUnidadMedida)
                .HasMaxLength(10)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.GlosaPartida)
                .HasMaxLength(150)
                .IsUnicode(false);
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.IndTipoCostoPartida)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<ObrTConfiguracion>(entity =>
        {
            entity.HasKey(e => e.PproyectoId).HasName("ObrT_Configuracion01");

            entity.ToTable("ObrT_Configuracion");

            entity.Property(e => e.PproyectoId)
                .ValueGeneratedNever()
                .HasColumnName("PProyectoId");
            entity.Property(e => e.CalificaMo).HasColumnName("CalificaMO");
            entity.Property(e => e.DecParCt).HasColumnName("DecParCT");
            entity.Property(e => e.DecParCu).HasColumnName("DecParCU");
            entity.Property(e => e.DecParVt).HasColumnName("DecParVT");
            entity.Property(e => e.DecParVu).HasColumnName("DecParVU");
            entity.Property(e => e.DecRecPt).HasColumnName("DecRecPT");
            entity.Property(e => e.DecRecPu).HasColumnName("DecRecPU");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.FhaberDina).HasColumnName("FHaberDIna");
            entity.Property(e => e.FhaberDlic).HasColumnName("FHaberDLic");
            entity.Property(e => e.FhaberPesos).HasColumnName("FHaberPesos");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.IndDistHh).HasColumnName("IndDistHH");
            entity.Property(e => e.Iva)
                .HasColumnType("numeric(4, 2)")
                .HasColumnName("IVA");
            entity.Property(e => e.UsrComprador)
                .HasMaxLength(15)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<ObrTEmpresaUsuario>(entity =>
        {
            entity.HasKey(e => new { e.EmpId, e.IdUsuario }).HasName("ObrT_EmpresaUsuarios01");

            entity.ToTable("ObrT_EmpresaUsuarios");

            entity.Property(e => e.IdUsuario)
                .HasMaxLength(50)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario");
        });

        modelBuilder.Entity<ObrTProyecto>(entity =>
        {
            entity.HasKey(e => e.ProyectoId).HasName("ObrI_Proyecto01");

            entity.ToTable("ObrT_Proyecto");

            entity.Property(e => e.ProyectoId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.FechaCambioCosto).HasColumnType("datetime");
            entity.Property(e => e.FechaCambioVenta).HasColumnType("datetime");
            entity.Property(e => e.FechaInicioPpto).HasColumnType("datetime");
            entity.Property(e => e.FechaInicioReal).HasColumnType("datetime");
            entity.Property(e => e.FechaPresentacionPropuesta).HasColumnType("datetime");
            entity.Property(e => e.FechaTerminoPpto).HasColumnType("datetime");
            entity.Property(e => e.FechaTerminoReal).HasColumnType("datetime");
            entity.Property(e => e.FechaVersion).HasColumnType("datetime");
            entity.Property(e => e.GlosaProyecto)
                .HasMaxLength(100)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.IndControlCcosto).HasColumnName("IndControlCCosto");
            entity.Property(e => e.NombreCiudad)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.NombreComuna)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.NombreResponsable)
                .HasMaxLength(50)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.NombreResponsableEpr)
                .HasMaxLength(50)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.ProExternoId)
                .HasMaxLength(15)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.RutResponsable)
                .HasMaxLength(12)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.RutResponsableEpr)
                .HasMaxLength(12)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.Telefono)
                .HasMaxLength(15)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.UbicacionObra)
                .HasMaxLength(50)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.ValorDiarioCosto).HasColumnType("money");
            entity.Property(e => e.ValorDiarioVenta).HasColumnType("money");
        });

        modelBuilder.Entity<ObrTProyectoPartidum>(entity =>
        {
            entity.HasKey(e => new { e.PartidaId, e.PproyectoId }).HasName("ObrI_ProyectoPartida01");

            entity.ToTable("ObrT_ProyectoPartida");

            entity.Property(e => e.PartidaId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.PproyectoId).HasColumnName("PProyectoId");
            entity.Property(e => e.AnexoDescripcion)
                .HasMaxLength(50)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.CantidadPresupuestada).HasColumnType("numeric(15, 6)");
            entity.Property(e => e.CodigoUnidadMedida)
                .HasMaxLength(10)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.CostoTotalNegociado).HasColumnType("numeric(18, 6)");
            entity.Property(e => e.CostoTotalPresupuestadoPartida).HasColumnType("numeric(18, 6)");
            entity.Property(e => e.CostoUnitarioNegociado).HasColumnType("numeric(18, 6)");
            entity.Property(e => e.CostoUnitarioPartida).HasColumnType("numeric(18, 6)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.FechaCambioOrigen).HasColumnType("datetime");
            entity.Property(e => e.FechaCreacionOt)
                .HasColumnType("datetime")
                .HasColumnName("FechaCreacionOT");
            entity.Property(e => e.FechaInicioPresupuesto).HasColumnType("datetime");
            entity.Property(e => e.FechaInicioReal).HasColumnType("datetime");
            entity.Property(e => e.FechaTerminoPresupuesto).HasColumnType("datetime");
            entity.Property(e => e.FechaTerminoReal).HasColumnType("datetime");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.IngresoPresupuestado).HasColumnType("numeric(18, 6)");
            entity.Property(e => e.NumeroOt).HasColumnName("NumeroOT");
            entity.Property(e => e.ParExternoId)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PpartidaCatalogoId).HasColumnName("PPartidaCatalogoId");
            entity.Property(e => e.PrecioUnitarioPartida).HasColumnType("numeric(18, 6)");
        });

        modelBuilder.Entity<ObrTProyectoUsuario>(entity =>
        {
            entity.HasKey(e => new { e.IdAdm, e.IdUsuario, e.PproyectoId }).HasName("ObrI_ProyectoUsuario01");

            entity.ToTable("ObrT_ProyectoUsuario");

            entity.Property(e => e.IdAdm).HasColumnName("Id_Adm");
            entity.Property(e => e.IdUsuario)
                .HasMaxLength(50)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario");
            entity.Property(e => e.PproyectoId).HasColumnName("PProyectoId");
        });

        modelBuilder.Entity<ParAgencia>(entity =>
        {
            entity.HasKey(e => new { e.IdAdm, e.CodAgencia });

            entity.ToTable("PAR_AGENCIAS");

            entity.Property(e => e.IdAdm).HasColumnName("ID_ADM");
            entity.Property(e => e.CodAgencia).HasColumnName("COD_AGENCIA");
            entity.Property(e => e.CodComuna).HasColumnName("COD_COMUNA");
            entity.Property(e => e.CodSubgerencia).HasColumnName("COD_SUBGERENCIA");
            entity.Property(e => e.CodZona).HasColumnName("COD_ZONA");
            entity.Property(e => e.Descripcion)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("DESCRIPCION");
            entity.Property(e => e.Direccion)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("DIRECCION");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasColumnName("ESTADO_REG");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("FEC_ESTADO_REG");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("FEC_ING_REG");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("FEC_ULT_MODIF_REG");
            entity.Property(e => e.Folioreclamo650).HasColumnName("FOLIORECLAMO650");
            entity.Property(e => e.HorarioAtencion)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("HORARIO_ATENCION");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .HasColumnName("ID_FUNCION_ULT_MODIF_REG");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("ID_USUARIO_ING_REG");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("ID_USUARIO_ULT_MODIF_REG");
        });

        modelBuilder.Entity<ParArea>(entity =>
        {
            entity.HasKey(e => new { e.IdAdm, e.CodArea });

            entity.ToTable("PAR_AREAS");

            entity.Property(e => e.IdAdm).HasColumnName("ID_ADM");
            entity.Property(e => e.CodArea).HasColumnName("COD_AREA");
            entity.Property(e => e.Descripcion)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("DESCRIPCION");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasColumnName("ESTADO_REG");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("FEC_ESTADO_REG");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("FEC_ING_REG");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("FEC_ULT_MODIF_REG");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .HasColumnName("ID_FUNCION_ULT_MODIF_REG");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("ID_USUARIO_ING_REG");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("ID_USUARIO_ULT_MODIF_REG");
        });

        modelBuilder.Entity<ParComuna>(entity =>
        {
            entity.HasKey(e => e.CodComuna);

            entity.ToTable("PAR_COMUNAS");

            entity.Property(e => e.CodComuna)
                .ValueGeneratedNever()
                .HasColumnName("COD_COMUNA");
            entity.Property(e => e.Ciudad)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("CIUDAD");
            entity.Property(e => e.CodRegion).HasColumnName("COD_REGION");
            entity.Property(e => e.Descripcion)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("DESCRIPCION");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasColumnName("ESTADO_REG");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("FEC_ESTADO_REG");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("FEC_ING_REG");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("FEC_ULT_MODIF_REG");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .HasColumnName("ID_FUNCION_ULT_MODIF_REG");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("ID_USUARIO_ING_REG");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("ID_USUARIO_ULT_MODIF_REG");
        });

        modelBuilder.Entity<ParCuenta>(entity =>
        {
            entity.HasKey(e => e.Pctaid);

            entity.ToTable("PAR_CUENTAS");

            entity.Property(e => e.Pctaid)
                .ValueGeneratedNever()
                .HasColumnName("PCTAID");
            entity.Property(e => e.Codifrs)
                .HasMaxLength(15)
                .IsUnicode(false)
                .HasColumnName("CODIFRS");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasColumnName("ESTADO_REG");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("FEC_ESTADO_REG");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("FEC_ING_REG");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("FEC_ULT_MODIF_REG");
            entity.Property(e => e.Fecha)
                .HasColumnType("datetime")
                .HasColumnName("FECHA");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .HasColumnName("ID_FUNCION_ULT_MODIF_REG");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("ID_USUARIO_ING_REG");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("ID_USUARIO_ULT_MODIF_REG");
            entity.Property(e => e.Nombre)
                .HasMaxLength(30)
                .IsUnicode(false)
                .HasColumnName("NOMBRE");
        });

        modelBuilder.Entity<ParDatosClave>(entity =>
        {
            entity.HasKey(e => new { e.IdAdm, e.Id }).HasName("PK__PAR_DATOS_CLAVE__4C3053BB");

            entity.ToTable("PAR_DATOS_CLAVE");

            entity.Property(e => e.IdAdm)
                .HasColumnType("numeric(19, 0)")
                .HasColumnName("ID_ADM");
            entity.Property(e => e.Id)
                .HasColumnType("numeric(19, 0)")
                .HasColumnName("ID");
            entity.Property(e => e.DiasAviso)
                .HasColumnType("numeric(19, 0)")
                .HasColumnName("DIAS_AVISO");
            entity.Property(e => e.DiasExpira)
                .HasColumnType("numeric(19, 0)")
                .HasColumnName("DIAS_EXPIRA");
            entity.Property(e => e.DiasInactivo)
                .HasColumnType("numeric(19, 0)")
                .HasColumnName("DIAS_INACTIVO");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasColumnName("ESTADO_REG");
            entity.Property(e => e.Expresion)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("EXPRESION");
            entity.Property(e => e.Expresiondesc)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("EXPRESIONDESC");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("FEC_ESTADO_REG");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("FEC_ING_REG");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("FEC_ULT_MODIF_REG");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .HasColumnName("ID_FUNCION_ULT_MODIF_REG");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("ID_USUARIO_ING_REG");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("ID_USUARIO_ULT_MODIF_REG");
            entity.Property(e => e.LargoMaximo)
                .HasColumnType("numeric(19, 0)")
                .HasColumnName("LARGO_MAXIMO");
            entity.Property(e => e.LargoMinimo)
                .HasColumnType("numeric(19, 0)")
                .HasColumnName("LARGO_MINIMO");
            entity.Property(e => e.NumIntentos)
                .HasColumnType("numeric(19, 0)")
                .HasColumnName("NUM_INTENTOS");
        });

        modelBuilder.Entity<ParFeriado>(entity =>
        {
            entity.HasKey(e => e.FecFeriado).HasName("PK_PAR_FERIADOS_1");

            entity.ToTable("PAR_FERIADOS");

            entity.HasIndex(e => e.FecFeriado, "PK_PAR_FERIADOS").HasFillFactor(90);

            entity.Property(e => e.FecFeriado)
                .HasColumnType("datetime")
                .HasColumnName("FEC_FERIADO");
            entity.Property(e => e.Descripcion)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("DESCRIPCION");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasColumnName("ESTADO_REG");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("FEC_ESTADO_REG");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("FEC_ING_REG");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("FEC_ULT_MODIF_REG");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .HasColumnName("ID_FUNCION_ULT_MODIF_REG");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("ID_USUARIO_ING_REG");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("ID_USUARIO_ULT_MODIF_REG");
        });

        modelBuilder.Entity<ParGeneral>(entity =>
        {
            entity.HasKey(e => new { e.IdAdm, e.CodParametro });

            entity.ToTable("PAR_GENERAL");

            entity.Property(e => e.IdAdm).HasColumnName("ID_ADM");
            entity.Property(e => e.CodParametro)
                .HasMaxLength(30)
                .IsUnicode(false)
                .HasColumnName("COD_PARAMETRO");
            entity.Property(e => e.Columnas)
                .HasColumnType("image")
                .HasColumnName("COLUMNAS");
            entity.Property(e => e.Descripcion)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("DESCRIPCION");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasColumnName("ESTADO_REG");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("FEC_ESTADO_REG");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("FEC_ING_REG");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("FEC_ULT_MODIF_REG");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .HasColumnName("ID_FUNCION_ULT_MODIF_REG");
            entity.Property(e => e.IdProcesoNegocio)
                .HasMaxLength(16)
                .IsUnicode(false)
                .HasColumnName("ID_PROCESO_NEGOCIO");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("ID_USUARIO_ING_REG");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("ID_USUARIO_ULT_MODIF_REG");
            entity.Property(e => e.NombreTabla)
                .HasMaxLength(30)
                .IsUnicode(false)
                .HasColumnName("NOMBRE_TABLA");
            entity.Property(e => e.TipoParametro)
                .HasMaxLength(4)
                .IsUnicode(false)
                .HasColumnName("TIPO_PARAMETRO");
        });

        modelBuilder.Entity<ParMenuContextual>(entity =>
        {
            entity.HasKey(e => new { e.ObjetoNegocio, e.IdMenu });

            entity.ToTable("PAR_MENU_CONTEXTUAL");

            entity.Property(e => e.ObjetoNegocio)
                .HasMaxLength(32)
                .IsUnicode(false)
                .HasColumnName("OBJETO_NEGOCIO");
            entity.Property(e => e.IdMenu).HasColumnName("ID_MENU");
            entity.Property(e => e.Descripcion)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("DESCRIPCION");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasColumnName("ESTADO_REG");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("FEC_ESTADO_REG");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("FEC_ING_REG");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("FEC_ULT_MODIF_REG");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .HasColumnName("ID_FUNCION_ULT_MODIF_REG");
            entity.Property(e => e.IdFuncionalidad)
                .HasMaxLength(16)
                .IsUnicode(false)
                .HasColumnName("ID_FUNCIONALIDAD");
            entity.Property(e => e.IdPadre).HasColumnName("ID_PADRE");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("ID_USUARIO_ING_REG");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("ID_USUARIO_ULT_MODIF_REG");
            entity.Property(e => e.NomUserControl)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("NOM_USER_CONTROL");
            entity.Property(e => e.Orden).HasColumnName("ORDEN");
        });

        modelBuilder.Entity<ParNoticia>(entity =>
        {
            entity.HasKey(e => new { e.IdAdm, e.FecNoticia, e.SeqNoticia });

            entity.ToTable("PAR_NOTICIAS");

            entity.Property(e => e.IdAdm).HasColumnName("ID_ADM");
            entity.Property(e => e.FecNoticia)
                .HasColumnType("datetime")
                .HasColumnName("FEC_NOTICIA");
            entity.Property(e => e.SeqNoticia).HasColumnName("SEQ_NOTICIA");
            entity.Property(e => e.Descripcion)
                .HasMaxLength(512)
                .IsUnicode(false)
                .HasColumnName("DESCRIPCION");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasColumnName("ESTADO_REG");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("FEC_ESTADO_REG");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("FEC_ING_REG");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("FEC_ULT_MODIF_REG");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .HasColumnName("ID_FUNCION_ULT_MODIF_REG");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("ID_USUARIO_ING_REG");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("ID_USUARIO_ULT_MODIF_REG");
        });

        modelBuilder.Entity<ParTiposCargo>(entity =>
        {
            entity.HasKey(e => new { e.IdAdm, e.CodCargo });

            entity.ToTable("PAR_TIPOS_CARGOS");

            entity.Property(e => e.IdAdm).HasColumnName("ID_ADM");
            entity.Property(e => e.CodCargo).HasColumnName("COD_CARGO");
            entity.Property(e => e.Descripcion)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("DESCRIPCION");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasColumnName("ESTADO_REG");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("FEC_ESTADO_REG");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("FEC_ING_REG");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("FEC_ULT_MODIF_REG");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .HasColumnName("ID_FUNCION_ULT_MODIF_REG");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("ID_USUARIO_ING_REG");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("ID_USUARIO_ULT_MODIF_REG");
            entity.Property(e => e.IndRecibeComision)
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasColumnName("IND_RECIBE_COMISION");
        });

        modelBuilder.Entity<ParUsuFormatoReporte>(entity =>
        {
            entity.HasKey(e => new { e.IdAdm, e.IdUsuario, e.IdReporte });

            entity.ToTable("PAR_USU_FORMATO_REPORTE");

            entity.Property(e => e.IdAdm).HasColumnName("ID_ADM");
            entity.Property(e => e.IdUsuario)
                .HasMaxLength(16)
                .IsUnicode(false)
                .HasColumnName("ID_USUARIO");
            entity.Property(e => e.IdReporte)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("ID_REPORTE");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasColumnName("ESTADO_REG");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("FEC_ESTADO_REG");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("FEC_ING_REG");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("FEC_ULT_MODIF_REG");
            entity.Property(e => e.Formato)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("FORMATO");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .HasColumnName("ID_FUNCION_ULT_MODIF_REG");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("ID_USUARIO_ING_REG");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("ID_USUARIO_ULT_MODIF_REG");
        });

        modelBuilder.Entity<ParVtatDoctoventacab>(entity =>
        {
            entity.HasKey(e => e.Doctoventacabid);

            entity.ToTable("PAR_VTAT_DOCTOVENTACAB");

            entity.Property(e => e.Doctoventacabid)
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("DOCTOVENTACABID");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasColumnName("ESTADO_REG");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("FEC_ESTADO_REG");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("FEC_ING_REG");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("FEC_ULT_MODIF_REG");
            entity.Property(e => e.Fechareferencia1)
                .HasColumnType("datetime")
                .HasColumnName("FECHAREFERENCIA1");
            entity.Property(e => e.Fechareferencia2)
                .HasColumnType("datetime")
                .HasColumnName("FECHAREFERENCIA2");
            entity.Property(e => e.Fechareferencia3)
                .HasColumnType("datetime")
                .HasColumnName("FECHAREFERENCIA3");
            entity.Property(e => e.Fechareferencia4)
                .HasColumnType("datetime")
                .HasColumnName("FECHAREFERENCIA4");
            entity.Property(e => e.Fechareferencia5)
                .HasColumnType("datetime")
                .HasColumnName("FECHAREFERENCIA5");
            entity.Property(e => e.Folioreferencia1)
                .HasMaxLength(18)
                .IsUnicode(false)
                .HasColumnName("FOLIOREFERENCIA1");
            entity.Property(e => e.Folioreferencia2)
                .HasMaxLength(18)
                .IsUnicode(false)
                .HasColumnName("FOLIOREFERENCIA2");
            entity.Property(e => e.Folioreferencia3)
                .HasMaxLength(18)
                .IsUnicode(false)
                .HasColumnName("FOLIOREFERENCIA3");
            entity.Property(e => e.Folioreferencia4)
                .HasMaxLength(18)
                .IsUnicode(false)
                .HasColumnName("FOLIOREFERENCIA4");
            entity.Property(e => e.Folioreferencia5)
                .HasMaxLength(18)
                .IsUnicode(false)
                .HasColumnName("FOLIOREFERENCIA5");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .HasColumnName("ID_FUNCION_ULT_MODIF_REG");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("ID_USUARIO_ING_REG");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("ID_USUARIO_ULT_MODIF_REG");
            entity.Property(e => e.Razonreferencia1)
                .HasMaxLength(90)
                .IsUnicode(false)
                .HasColumnName("RAZONREFERENCIA1");
            entity.Property(e => e.Razonreferencia2)
                .HasMaxLength(90)
                .IsUnicode(false)
                .HasColumnName("RAZONREFERENCIA2");
            entity.Property(e => e.Razonreferencia3)
                .HasMaxLength(90)
                .IsUnicode(false)
                .HasColumnName("RAZONREFERENCIA3");
            entity.Property(e => e.Razonreferencia4)
                .HasMaxLength(90)
                .IsUnicode(false)
                .HasColumnName("RAZONREFERENCIA4");
            entity.Property(e => e.Razonreferencia5)
                .HasMaxLength(90)
                .IsUnicode(false)
                .HasColumnName("RAZONREFERENCIA5");
            entity.Property(e => e.Tiporeferencia1)
                .HasMaxLength(3)
                .IsUnicode(false)
                .HasColumnName("TIPOREFERENCIA1");
            entity.Property(e => e.Tiporeferencia2)
                .HasMaxLength(3)
                .IsUnicode(false)
                .HasColumnName("TIPOREFERENCIA2");
            entity.Property(e => e.Tiporeferencia3)
                .HasMaxLength(3)
                .IsUnicode(false)
                .HasColumnName("TIPOREFERENCIA3");
            entity.Property(e => e.Tiporeferencia4)
                .HasMaxLength(3)
                .IsUnicode(false)
                .HasColumnName("TIPOREFERENCIA4");
            entity.Property(e => e.Tiporeferencia5)
                .HasMaxLength(3)
                .IsUnicode(false)
                .HasColumnName("TIPOREFERENCIA5");
        });

        modelBuilder.Entity<ParWflFiltroAdicional>(entity =>
        {
            entity.HasKey(e => new { e.IdAdm, e.Atproyid, e.Attipoexpid, e.Atributo });

            entity.ToTable("PAR_WFL_FILTRO_ADICIONAL");

            entity.Property(e => e.IdAdm).HasColumnName("ID_ADM");
            entity.Property(e => e.Atproyid).HasColumnName("ATPROYID");
            entity.Property(e => e.Attipoexpid)
                .HasMaxLength(16)
                .IsUnicode(false)
                .HasColumnName("ATTIPOEXPID");
            entity.Property(e => e.Atributo)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("ATRIBUTO");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasColumnName("ESTADO_REG");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("FEC_ESTADO_REG");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("FEC_ING_REG");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("FEC_ULT_MODIF_REG");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .HasColumnName("ID_FUNCION_ULT_MODIF_REG");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("ID_USUARIO_ING_REG");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("ID_USUARIO_ULT_MODIF_REG");
            entity.Property(e => e.Tipo)
                .HasMaxLength(16)
                .IsUnicode(false)
                .HasColumnName("TIPO");
            entity.Property(e => e.Titulo)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("TITULO");
        });

        modelBuilder.Entity<PopTCfgCuenta>(entity =>
        {
            entity.HasKey(e => new { e.EmpId, e.CfgNumId, e.CtaCodigo, e.CtaCodigoContra }).HasName("PopI_CfgCuentas");

            entity.ToTable("PopT_CfgCuentas");
        });

        modelBuilder.Entity<PopTCompCentraxHora>(entity =>
        {
            entity.HasKey(e => new { e.EmpId, e.DivCodigo, e.CfgNumId, e.PerId }).HasName("PopI_CompCentraxHora01");

            entity.ToTable("PopT_CompCentraxHora");

            entity.Property(e => e.HorasMensuales).HasColumnType("money");
        });

        modelBuilder.Entity<PopTComprobante>(entity =>
        {
            entity.HasKey(e => new { e.EmpId, e.DivCodigo, e.UniCodigo, e.CfgNumId, e.PerId, e.ComNumero }).HasName("PopI_Comprobantes01");

            entity.ToTable("PopT_Comprobantes");

            entity.Property(e => e.ComFecDig).HasColumnType("datetime");
            entity.Property(e => e.ComGlosa)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.ComOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EmpRut)
                .HasMaxLength(12)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<PopTConfiguracion>(entity =>
        {
            entity.HasKey(e => e.CfgPreId).HasName("PopI_Configuracion01");

            entity.ToTable("PopT_Configuracion");

            entity.HasIndex(e => new { e.PEmpId, e.CfgNumId }, "PopI_Configuracion02").IsUnique();

            entity.Property(e => e.CfgPreId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.CfgDescripcion)
                .HasMaxLength(40)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.CfgDescripcionLarga)
                .HasMaxLength(255)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.CfgFecDig).HasColumnType("datetime");
            entity.Property(e => e.CfgUsuario)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.MonCodigo).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PPciId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pPciId");
            entity.Property(e => e.PPcrId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pPcrId");
            entity.Property(e => e.PPdcId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pPdcId");
        });

        modelBuilder.Entity<PopTCtaUserResponsable>(entity =>
        {
            entity.HasKey(e => new { e.PEmpId, e.DivCodigo, e.PCfgPreId, e.PCtaId, e.FldUserCode }).HasName("PopI_CtaUserResponsable01");

            entity.ToTable("PopT_CtaUserResponsable");

            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PCfgPreId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCfgPreId");
            entity.Property(e => e.PCtaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtaId");
            entity.Property(e => e.FldUserCode)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("fld_UserCode");
            entity.Property(e => e.CtaNombre)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<PopTDetCtoImputacion>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("PopT_DetCtoImputacion");

            entity.Property(e => e.DetPreImpId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.MontoPpto).HasColumnType("money");
            entity.Property(e => e.MontoProyectado).HasColumnType("money");
            entity.Property(e => e.PCreId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCreId");
            entity.Property(e => e.PCtaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtaId");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
        });

        modelBuilder.Entity<PopTDetEmpRelacionadum>(entity =>
        {
            entity.HasKey(e => new { e.EmpId, e.DivCodigo, e.UniCodigo, e.CfgNumId, e.CreCodigo, e.CtaCodigo, e.EmpIdRel, e.PerId, e.CreCodigoRel }).HasName("PopI_DetEmpRelacionada");

            entity.ToTable("PopT_DetEmpRelacionada");

            entity.Property(e => e.MontoPpto).HasColumnType("money");
        });

        modelBuilder.Entity<PopTDetIntegracion>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("PopT_DetIntegracion");

            entity.Property(e => e.GlosaLineaDetalle)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.MontoPpto).HasColumnType("money");
        });

        modelBuilder.Entity<PopTDetLineaProducto>(entity =>
        {
            entity.HasKey(e => new { e.EmpId, e.DivCodigo, e.UniCodigo, e.CfgNumId, e.CreCodigo, e.CtaCodigo, e.PerId, e.LineaProId }).HasName("PopI_DetLineaProducto");

            entity.ToTable("PopT_DetLineaProducto");

            entity.Property(e => e.MontoPpto).HasColumnType("money");
        });

        modelBuilder.Entity<PopTDetPresupuesto>(entity =>
        {
            entity.HasKey(e => e.DetPreOpeId).HasName("PopI_DepPresupuesto01");

            entity.ToTable("PopT_DetPresupuesto");

            entity.HasIndex(e => new { e.PEmpId, e.DivCodigo, e.UniCodigo, e.PCfgPreId, e.PCreId, e.PCtaId, e.PPerId }, "PopI_DetPresupuesto02").IsUnique();

            entity.Property(e => e.DetPreOpeId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.MontoPpto).HasColumnType("money");
            entity.Property(e => e.MontoProyectado).HasColumnType("money");
            entity.Property(e => e.PCfgPreId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCfgPreId");
            entity.Property(e => e.PCreId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCreId");
            entity.Property(e => e.PCtaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtaId");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PPerId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pPerId");
        });

        modelBuilder.Entity<PopTLineaProducto>(entity =>
        {
            entity.HasKey(e => e.LineaProId).HasName("PopI_LineaProducto");

            entity.ToTable("PopT_LineaProducto");

            entity.Property(e => e.LineaProId).ValueGeneratedNever();
            entity.Property(e => e.LineaProDesc)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<PopTPlanilla>(entity =>
        {
            entity.HasKey(e => e.PlaPreId).HasName("PopI_Planillas01");

            entity.ToTable("PopT_Planillas");

            entity.Property(e => e.PlaPreId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.CtaNombre)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.FldUserCode)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("fld_UserCode");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PCfgPreId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCfgPreId");
            entity.Property(e => e.PCreId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCreId");
            entity.Property(e => e.PCtaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtaId");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
        });

        modelBuilder.Entity<PopTPlanillaRel>(entity =>
        {
            entity.HasKey(e => new { e.EmpId, e.DivCodigo, e.UniCodigo, e.CfgNumId, e.CreCodigo, e.FldUserCode, e.FldUserCodeRel }).HasName("PopI_PlantillaRel01");

            entity.ToTable("PopT_PlanillaRel", tb =>
                {
                    tb.HasTrigger("Version70_Trigger_Borrar_PopPlanillaRel");
                    tb.HasTrigger("Version70_Trigger_Copiar_PopPlanillaRel");
                });

            entity.Property(e => e.FldUserCode)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("fld_UserCode");
            entity.Property(e => e.FldUserCodeRel)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("Fld_UserCodeRel");
        });

        modelBuilder.Entity<PopTPlanillasCtoImp>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("PopT_PlanillasCtoImp");

            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.FldUserCode)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("fld_UserCode");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PCreId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCreId");
            entity.Property(e => e.PCtaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtaId");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PlaCtoImp)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
        });

        modelBuilder.Entity<PopTPlanillasLproducto>(entity =>
        {
            entity.HasKey(e => new { e.EmpId, e.DivCodigo, e.UniCodigo, e.CfgNumId, e.FldUserCode, e.CreCodigo, e.CtaCodigo, e.LineaProId }).HasName("PopI_PlanillasLProducto");

            entity.ToTable("PopT_PlanillasLProducto");

            entity.Property(e => e.FldUserCode)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("fld_UserCode");
            entity.Property(e => e.PorcCosto).HasColumnType("money");
            entity.Property(e => e.PorcMargen).HasColumnType("money");
            entity.Property(e => e.PorcVenta).HasColumnType("money");
        });

        modelBuilder.Entity<PopTPlanillasRel>(entity =>
        {
            entity.HasKey(e => e.PlaRelPreId).HasName("PopI_PlanillasRel01");

            entity.ToTable("PopT_PlanillasRel");

            entity.HasIndex(e => new { e.PEmpId, e.DivCodigo, e.PCfgPreId, e.PCreId, e.FldUserCode, e.FldUserCodeRel }, "PopI_PlanillasRel02").IsUnique();

            entity.Property(e => e.PlaRelPreId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.FldUserCode)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("fld_UserCode");
            entity.Property(e => e.FldUserCodeRel)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("Fld_UserCodeRel");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PCfgPreId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCfgPreId");
            entity.Property(e => e.PCreId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCreId");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
        });

        modelBuilder.Entity<PopTPlantilla>(entity =>
        {
            entity.HasKey(e => e.PlantillaId).HasName("PopI_Plantillas");

            entity.ToTable("PopT_Plantillas");

            entity.Property(e => e.PlantillaDesc)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<PopTUbiPlantilla>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("PopT_UbiPlantillas");

            entity.Property(e => e.UbiPlantillas)
                .HasMaxLength(140)
                .IsUnicode(false);
        });

        modelBuilder.Entity<PopTValoresMonedum>(entity =>
        {
            entity.HasKey(e => new { e.PMonedaId, e.PPerId }).HasName("PopI_ValoresMoneda01");

            entity.ToTable("PopT_ValoresMoneda");

            entity.Property(e => e.PMonedaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMonedaId");
            entity.Property(e => e.PPerId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pPerId");
            entity.Property(e => e.ValMonProyectado).HasColumnType("money");
            entity.Property(e => e.ValMonReal).HasColumnType("money");
        });

        modelBuilder.Entity<PrdTActividad>(entity =>
        {
            entity.HasKey(e => e.ActividadId).HasName("PrdI_Actividad_PK");

            entity.ToTable("PrdT_Actividad");

            entity.HasIndex(e => e.ActividadCod, "PrdI_Actividad01").IsUnique();

            entity.Property(e => e.ActividadId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.ActividadCod)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.ActividadDes)
                .HasMaxLength(60)
                .IsUnicode(false);
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
        });

        modelBuilder.Entity<PrdTAtributo>(entity =>
        {
            entity.HasKey(e => e.AtributoId).HasName("PrdI_Atributo_PK");

            entity.ToTable("PrdT_Atributo");

            entity.Property(e => e.AtributoId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.AtributoDato)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.AtributoDefecto)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.AtributoNombre)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
        });

        modelBuilder.Entity<PrdTAtributoGrupo>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("PrdT_AtributoGrupo");

            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PAtributoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pAtributoId");
            entity.Property(e => e.PPrdGrupoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pPrdGrupoId");
        });

        modelBuilder.Entity<PrdTAtributoTabla>(entity =>
        {
            entity.HasKey(e => e.AtributoTablaId).HasName("PrdI_AtributoTabla_PK");

            entity.ToTable("PrdT_AtributoTabla");

            entity.Property(e => e.AtributoTablaId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.AtributoTablaDes)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PAtributoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pAtributoId");
        });

        modelBuilder.Entity<PrdTConfiguracion>(entity =>
        {
            entity.HasKey(e => e.ConfiguracionId).HasName("PrdI_Configuracion_PK");

            entity.ToTable("PrdT_Configuracion");

            entity.Property(e => e.ConfiguracionId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.CantOpinfVta).HasColumnName("CantOPInfVta");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.IndImpRecOp).HasColumnName("IndImpRecOP");
            entity.Property(e => e.MaqBodegaIdConsumo)
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("Maq_BodegaIdConsumo");
            entity.Property(e => e.MaqMaquinaId)
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("Maq_MaquinaId");
            entity.Property(e => e.MaqSeccionId)
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("Maq_SeccionId");
            entity.Property(e => e.MaqTipoOp)
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("Maq_TipoOP");
            entity.Property(e => e.MaqTipoOpeIdConsumo)
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("Maq_TipoOpeIdConsumo");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PTipoOpeDevConsumo).HasColumnName("pTipoOpeDevConsumo");
            entity.Property(e => e.PTipoOpeIdOpeExt)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTipoOpeIdOpeExt");
            entity.Property(e => e.PTipoOpeIdPrdAjuEnt)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTipoOpeIdPrdAjuEnt");
            entity.Property(e => e.PTipoOpeIdPrdAjuSal)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTipoOpeIdPrdAjuSal");
            entity.Property(e => e.PTipoOpeIdPrdCub)
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("pTipoOpeIdPrdCUb");
            entity.Property(e => e.PTipoOpeIdPrdDev)
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("pTipoOpeIdPrdDev");
            entity.Property(e => e.PTipoOpeIdPrdEnt)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTipoOpeIdPrdEnt");
            entity.Property(e => e.PTipoOpeIdPrdPed)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTipoOpeIdPrdPed");
            entity.Property(e => e.PTipoOpeIdPrdTra)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTipoOpeIdPrdTra");
            entity.Property(e => e.PTipoOpeTraspasoOp)
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("pTipoOpeTraspasoOP");
            entity.Property(e => e.PUnidadMed2Id)
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("pUnidadMed2Id");
            entity.Property(e => e.PcctaPrdTribId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pcctaPrdTribId");
            entity.Property(e => e.PctaPrdTribId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pctaPrdTribId");
        });

        modelBuilder.Entity<PrdTDescarte>(entity =>
        {
            entity.HasKey(e => e.DescarteId).HasName("PrdT_Descarte_PK");

            entity.ToTable("PrdT_Descarte");

            entity.Property(e => e.DescarteId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.FechaIngreso).HasColumnType("datetime");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.POpcabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pOPCabId");
            entity.Property(e => e.PProductoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pProductoId");
            entity.Property(e => e.Rendimiento).HasColumnType("numeric(9, 0)");
        });

        modelBuilder.Entity<PrdTDevolucionAsigCon>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("PrdT_DevolucionAsigCons");

            entity.HasIndex(e => new { e.CodOwner, e.Devolucion, e.Marcado }, "PrdT_DevolucionAsigCons_idx01").IsClustered();

            entity.HasIndex(e => new { e.CodOwner, e.PProductoId, e.PLoteProductoId, e.Devolucion, e.Marcado }, "PrdT_DevolucionAsigCons_idx02");

            entity.Property(e => e.CodOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.OpeLogtDetId).HasColumnType("numeric(18, 0)");
            entity.Property(e => e.PLoteProductoId)
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("pLoteProductoId");
            entity.Property(e => e.POpcabId)
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("pOPCabId");
            entity.Property(e => e.PProductoId)
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("pProductoId");
        });

        modelBuilder.Entity<PrdTDocumentoFisico>(entity =>
        {
            entity.HasKey(e => e.DocFisId).HasName("PrdI_DocumentoFisico_PK");

            entity.ToTable("PrdT_DocumentoFisico");

            entity.Property(e => e.DocFisId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.DocFisArchivo)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.DocFisDes)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.DocFisRuta)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
        });

        modelBuilder.Entity<PrdTEstadoOp>(entity =>
        {
            entity.HasKey(e => e.EstadoCod).HasName("PrdI_EstadoOP_PK");

            entity.ToTable("PrdT_EstadoOP");

            entity.Property(e => e.EstadoCod)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EstadoDes)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<PrdTEstadoOpregla>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("PrdT_EstadoOPRegla");

            entity.HasIndex(e => e.EstadoCod, "PrdI_EstadoOPRegla_PK");

            entity.Property(e => e.EstadoCod)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EstadoCodDestino)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<PrdTExterior>(entity =>
        {
            entity.HasKey(e => e.ExteriorId).HasName("PrdI_Exterior_PK");

            entity.ToTable("PrdT_Exterior");

            entity.HasIndex(e => new { e.PEmpId, e.ExteriorCod }, "PrdI_Exterior01").IsUnique();

            entity.Property(e => e.ExteriorId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.ExteriorCod)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.ExteriorDes)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PCctaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCCtaId");
            entity.Property(e => e.PCdiId)
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("pCdiId");
            entity.Property(e => e.PCreId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCreId");
            entity.Property(e => e.PCtaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtaId");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PUnidadRendimientoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pUnidadRendimientoId");
            entity.Property(e => e.TypGlosaPrd)
                .HasMaxLength(255)
                .IsUnicode(false);
        });

        modelBuilder.Entity<PrdTExteriorCosto>(entity =>
        {
            entity.HasKey(e => e.ExteriorCostoId).HasName("PrdI_ExteriorCosto_PK");

            entity.ToTable("PrdT_ExteriorCosto");

            entity.Property(e => e.ExteriorCostoId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PExteriorId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pExteriorId");
        });

        modelBuilder.Entity<PrdTForAtributo>(entity =>
        {
            entity.HasKey(e => e.ForAtributoId).HasName("PrdI_ForAtributo_PK");

            entity.ToTable("PrdT_ForAtributo");

            entity.Property(e => e.ForAtributoId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.AtributoValor)
                .HasMaxLength(140)
                .IsUnicode(false);
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PAtributoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pAtributoId");
            entity.Property(e => e.PFormulaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pFormulaId");
        });

        modelBuilder.Entity<PrdTForDocumentoFisico>(entity =>
        {
            entity.HasKey(e => e.ForDocFisId).HasName("PrdI_ForDocumentoFisico_PK");

            entity.ToTable("PrdT_ForDocumentoFisico");

            entity.Property(e => e.ForDocFisId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PDocFisId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pDocFisId");
            entity.Property(e => e.PFormulaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pFormulaId");
        });

        modelBuilder.Entity<PrdTForEspTec>(entity =>
        {
            entity.HasKey(e => e.ForEspTecId).HasName("PrdI_ForEspTec_PK");

            entity.ToTable("PrdT_ForEspTec");

            entity.Property(e => e.ForEspTecId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EspecificacionTec)
                .HasMaxLength(90)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PFormulaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pFormulaId");
        });

        modelBuilder.Entity<PrdTForExterior>(entity =>
        {
            entity.HasKey(e => e.ForExteriorId).HasName("PrdI_ForExterior_PK");

            entity.ToTable("PrdT_ForExterior");

            entity.Property(e => e.ForExteriorId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PExteriorId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pExteriorId");
            entity.Property(e => e.PFormulaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pFormulaId");
            entity.Property(e => e.PorSobreConsumo).HasColumnType("numeric(5, 2)");
        });

        modelBuilder.Entity<PrdTForMaterial>(entity =>
        {
            entity.HasKey(e => e.ForMaterialId).HasName("PrdI_ForMaterial_PK");

            entity.ToTable("PrdT_ForMaterial");

            entity.Property(e => e.ForMaterialId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PFormulaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pFormulaId");
            entity.Property(e => e.POperacionId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pOperacionId");
            entity.Property(e => e.PProductoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pProductoId");
            entity.Property(e => e.PorSobreConsumo).HasColumnType("numeric(5, 2)");
        });

        modelBuilder.Entity<PrdTForOperacion>(entity =>
        {
            entity.HasKey(e => e.ForOperacionId).HasName("PrdI_ForOperacion_PK");

            entity.ToTable("PrdT_ForOperacion");

            entity.HasIndex(e => new { e.PFormulaId, e.POperacionId }, "PrdI_ForOperacion01").IsUnique();

            entity.Property(e => e.ForOperacionId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PFormulaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pFormulaId");
            entity.Property(e => e.POperacionId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pOperacionId");
            entity.Property(e => e.PorSobreConsumo).HasColumnType("numeric(5, 2)");
        });

        modelBuilder.Entity<PrdTForSemiElab>(entity =>
        {
            entity.HasKey(e => e.ForSemiElabId).HasName("PrdI_ForSemiElab_PK");

            entity.ToTable("PrdT_ForSemiElab");

            entity.Property(e => e.ForSemiElabId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PFormulaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pFormulaId");
            entity.Property(e => e.PFormulaIdSe)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pFormulaIdSE");
            entity.Property(e => e.POperacionId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pOperacionId");
            entity.Property(e => e.PProductoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pProductoId");
            entity.Property(e => e.PServicioId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pServicioId");
            entity.Property(e => e.PorSobreConsumo).HasColumnType("numeric(5, 2)");
        });

        modelBuilder.Entity<PrdTForSubProducto>(entity =>
        {
            entity.HasKey(e => e.ForSubProductoId).HasName("PrdI_ForSubProducto_PK");

            entity.ToTable("PrdT_ForSubProducto");

            entity.Property(e => e.ForSubProductoId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PFormulaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pFormulaId");
            entity.Property(e => e.PProductoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pProductoId");
            entity.Property(e => e.PorSobreConsumo).HasColumnType("numeric(5, 2)");
        });

        modelBuilder.Entity<PrdTForUtillaje>(entity =>
        {
            entity.HasKey(e => e.ForUtillajeId).HasName("PrdI_ForUtillaje_PK");

            entity.ToTable("PrdT_ForUtillaje");

            entity.HasIndex(e => new { e.PFormulaId, e.PUtillajeId }, "PrdI_ForUtillaje01").IsUnique();

            entity.Property(e => e.ForUtillajeId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PFormulaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pFormulaId");
            entity.Property(e => e.PUtillajeId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pUtillajeId");
            entity.Property(e => e.PorSobreConsumo).HasColumnType("numeric(5, 2)");
        });

        modelBuilder.Entity<PrdTFormatoEtiquetaOp>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("PrdT_FormatoEtiquetaOP");

            entity.Property(e => e.Descripcion)
                .HasMaxLength(50)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.NombreReporte)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PSeccionId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pSeccionId");
        });

        modelBuilder.Entity<PrdTFormula>(entity =>
        {
            entity.HasKey(e => e.FormulaId).HasName("PrdI_Formula_PK");

            entity.ToTable("PrdT_Formula");

            entity.Property(e => e.FormulaId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.FormulaDes)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.POpcabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pOPCabId");
            entity.Property(e => e.PProductoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pProductoId");
            entity.Property(e => e.PServicioId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pServicioId");
            entity.Property(e => e.PUnidadMedIdFormula)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pUnidadMedIdFormula");
        });

        modelBuilder.Entity<PrdTFormulaCosto>(entity =>
        {
            entity.HasKey(e => e.FormulaCostoId).HasName("PrdI_FormulaCosto_PK");

            entity.ToTable("PrdT_FormulaCosto");

            entity.HasIndex(e => new { e.PEmpId, e.PFormulaId, e.PerId }, "PrdI_FormulaCosto_01").IsUnique();

            entity.Property(e => e.FormulaCostoId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PFormulaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pFormulaId");
        });

        modelBuilder.Entity<PrdTGrupo>(entity =>
        {
            entity.HasKey(e => e.PrdGrupoId).HasName("PrdI_Grupo_PK");

            entity.ToTable("PrdT_Grupo");

            entity.Property(e => e.PrdGrupoId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PInstanciaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pInstanciaId");
            entity.Property(e => e.PrdGrupoDes)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<PrdTImportacionFormula>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("PrdT_ImportacionFormulas");

            entity.HasIndex(e => e.CodOwner, "PrdI_ImportacionFormulas");

            entity.Property(e => e.CodError).HasColumnName("Cod_Error");
            entity.Property(e => e.CodOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.CodigoArticulo)
                .HasMaxLength(25)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Codigo_Articulo");
            entity.Property(e => e.Descrip)
                .HasMaxLength(60)
                .IsUnicode(false);
            entity.Property(e => e.ErrGlosa)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.UnidadMedCod)
                .HasMaxLength(10)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<PrdTImportacionRecurso>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("PrdT_ImportacionRecursos");

            entity.HasIndex(e => e.CodOwner, "PrdI_ImportacionRecursos");

            entity.Property(e => e.CantidadRecStr)
                .HasMaxLength(140)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.CodError).HasColumnName("Cod_Error");
            entity.Property(e => e.CodOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.CodigoArticulo)
                .HasMaxLength(25)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Codigo_Articulo");
            entity.Property(e => e.CodigoRecurso)
                .HasMaxLength(25)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Codigo_Recurso");
            entity.Property(e => e.ErrGlosa)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PorSobreConsumo).HasColumnType("numeric(5, 2)");
            entity.Property(e => e.TipoRecurso)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Tipo_Recurso");
        });

        modelBuilder.Entity<PrdTInformaError>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("PrdT_InformaError");

            entity.Property(e => e.CodigoError)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.DescripcionError)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.PFormulaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pFormulaId");
        });

        modelBuilder.Entity<PrdTInstancium>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("PrdT_Instancia");

            entity.Property(e => e.InstanciaDes)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.InstanciaId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
        });

        modelBuilder.Entity<PrdTMaquina>(entity =>
        {
            entity.HasKey(e => e.MaquinaId).HasName("PrdI_Maquina_PK");

            entity.ToTable("PrdT_Maquina");

            entity.HasIndex(e => new { e.PEmpId, e.PSeccionId, e.MaquinaCod }, "PrdI_Maquina01").IsUnique();

            entity.Property(e => e.MaquinaId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.MaquinaCod)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.MaquinaDes)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.MaquinaVel).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.PActividadId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pActividadId");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PRegimenId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pRegimenId");
            entity.Property(e => e.PSeccionId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pSeccionId");
            entity.Property(e => e.PUnidadRendimientoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pUnidadRendimientoId");
        });

        modelBuilder.Entity<PrdTMaquinaFormula>(entity =>
        {
            entity.HasKey(e => e.MaquinaFormulaId).HasName("PrdI_MaquinaFormula_PK");

            entity.ToTable("PrdT_MaquinaFormula");

            entity.HasIndex(e => new { e.PMaquinaId, e.PFormulaId }, "PrdI_MaquinaFormula_01").IsUnique();

            entity.HasIndex(e => new { e.PMaquinaId, e.PProductoId }, "PrdI_MaquinaFormula_02");

            entity.HasIndex(e => e.PFormulaId, "PrdI_MaquinaFormula_03");

            entity.Property(e => e.MaquinaFormulaId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.MaquinaVel).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.PFormulaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pFormulaId");
            entity.Property(e => e.PMaquinaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMaquinaId");
            entity.Property(e => e.PProductoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pProductoId");
        });

        modelBuilder.Entity<PrdTMaquinaRegiman>(entity =>
        {
            entity.HasKey(e => e.MaquinaRegimenId).HasName("PrdI_MaquinaRegimen_PK");

            entity.ToTable("PrdT_MaquinaRegimen");

            entity.HasIndex(e => new { e.PMaquinaId, e.FechaInicio }, "PrdI_MaquinaRegimen01").IsUnique();

            entity.Property(e => e.MaquinaRegimenId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.FechaInicio).HasColumnType("datetime");
            entity.Property(e => e.FechaTermino).HasColumnType("datetime");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PMaquinaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMaquinaId");
            entity.Property(e => e.PRegimenId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pRegimenId");
        });

        modelBuilder.Entity<PrdTOpEntregaConsumo>(entity =>
        {
            entity.HasKey(e => new { e.POpentregaId, e.POpeLogtCabId }).HasName("PrdI_OPEntregaConsumo2_PK");

            entity.ToTable("PrdT_OpEntregaConsumo");

            entity.Property(e => e.POpentregaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pOPEntregaId");
            entity.Property(e => e.POpeLogtCabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pOpeLogtCabId");
        });

        modelBuilder.Entity<PrdTOpatributo>(entity =>
        {
            entity.HasKey(e => e.OpatributoId).HasName("PrdI_OPAtributo_PK");

            entity.ToTable("PrdT_OPAtributo");

            entity.HasIndex(e => new { e.POpcabId, e.POpdetId, e.PAtributoId }, "PrdI_OPAtributo_01").IsUnique();

            entity.Property(e => e.OpatributoId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("OPAtributoId");
            entity.Property(e => e.AtributoValor)
                .HasMaxLength(140)
                .IsUnicode(false);
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PAtributoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pAtributoId");
            entity.Property(e => e.PForAtributoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pForAtributoId");
            entity.Property(e => e.POpcabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pOPCabId");
            entity.Property(e => e.POpdetId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pOPDetId");
        });

        modelBuilder.Entity<PrdTOpcab>(entity =>
        {
            entity.HasKey(e => e.OpcabId).HasName("PrdI_OPCab_PK");

            entity.ToTable("PrdT_OPCab");

            entity.Property(e => e.OpcabId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("OPCabId");
            entity.Property(e => e.EstadoCod)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.FechaAprobacion).HasColumnType("datetime");
            entity.Property(e => e.FechaCierre).HasColumnType("datetime");
            entity.Property(e => e.FechaEntrega).HasColumnType("datetime");
            entity.Property(e => e.FechaProceso).HasColumnType("datetime");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PBodegaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pBodegaId");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PPryId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pPryId");
            entity.Property(e => e.PSeccionId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pSeccionId");
            entity.Property(e => e.PTprId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTprId");
            entity.Property(e => e.PUbicacionId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pUbicacionId");
            entity.Property(e => e.PryNumero)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.UsuarioAprobacion)
                .HasMaxLength(50)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.UsuarioCierre)
                .HasMaxLength(50)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<PrdTOpconsumo>(entity =>
        {
            entity.HasKey(e => e.OpconsumoId).HasName("PrdI_OPConsumo_PK");

            entity.ToTable("PrdT_OPConsumo");

            entity.HasIndex(e => e.POpcabId, "PrdI_OPConsumo_01");

            entity.HasIndex(e => new { e.POpcabId, e.EstadoProceso, e.PProductoId, e.OpconsumoId, e.PLoteProductoId, e.LoteProductoCod }, "PrdT_OPConsumo_idx050");

            entity.HasIndex(e => new { e.POpcabId, e.EstadoProceso, e.TipoVolcado, e.OpconsumoId, e.LoteProductoCod }, "PrdT_OpConsumo_idx051");

            entity.HasIndex(e => new { e.LoteProductoCod, e.POpcabId, e.EstadoProceso, e.TipoVolcado, e.OpconsumoId }, "PrdT_OpConsumo_idx052");

            entity.Property(e => e.OpconsumoId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("OPConsumoId");
            entity.Property(e => e.CodOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EstadoProceso)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.FechaIngresoHora).HasColumnType("datetime");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.LoteProductoCod)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PBodegaIdSolicitud)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pBodegaIdSolicitud");
            entity.Property(e => e.PLoteProductoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pLoteProductoId");
            entity.Property(e => e.PMaquinaId)
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("pMaquinaId");
            entity.Property(e => e.POpcabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pOPCabId");
            entity.Property(e => e.POpeLogtCabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pOpeLogtCabId");
            entity.Property(e => e.PProductoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pProductoId");
            entity.Property(e => e.PUbicacionId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pUbicacionId");
            entity.Property(e => e.TipoVolcado)
                .HasMaxLength(2)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<PrdTOpconsumobkp>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("PrdT_OPConsumobkp");

            entity.Property(e => e.EstadoProceso)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.FechaIngresoHora).HasColumnType("datetime");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.LoteProductoCod)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.OpconsumoId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("OPConsumoId");
            entity.Property(e => e.PBodegaIdSolicitud)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pBodegaIdSolicitud");
            entity.Property(e => e.POpcabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pOPCabId");
        });

        modelBuilder.Entity<PrdTOpdet>(entity =>
        {
            entity.HasKey(e => e.OpdetId).HasName("PrdI_OPDet_PK");

            entity.ToTable("PrdT_OPDet");

            entity.HasIndex(e => new { e.PBodegaId, e.PProductoId, e.POpcabId, e.CantPendiente, e.OpdetId }, "PrdT_OPDet_idx050");

            entity.HasIndex(e => new { e.POpcabId, e.Revalorizado, e.PProductoId, e.OpdetId }, "PrdT_OPDet_idx051");

            entity.Property(e => e.OpdetId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("OPDetId");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.FechaEntrega).HasColumnType("datetime");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PBodegaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pBodegaId");
            entity.Property(e => e.PDocOrigenDetId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pDocOrigenDetId");
            entity.Property(e => e.PEntId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntId");
            entity.Property(e => e.PFormulaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pFormulaId");
            entity.Property(e => e.POpcabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pOPCabId");
            entity.Property(e => e.POpdestinoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pOPDestinoId");
            entity.Property(e => e.POpmadreId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pOPMadreId");
            entity.Property(e => e.PPedidoMaterialId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pPedidoMaterialId");
            entity.Property(e => e.PProductoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pProductoId");
            entity.Property(e => e.PPuertoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pPuertoId");
            entity.Property(e => e.PServicioId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pServicioId");
            entity.Property(e => e.PUnidadMedIdFormula)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pUnidadMedIdFormula");
            entity.Property(e => e.PUnidadMedIdProduccion)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pUnidadMedIdProduccion");
            entity.Property(e => e.TipoDestinoOp).HasColumnName("TipoDestinoOP");
        });

        modelBuilder.Entity<PrdTOpdocumentoFisico>(entity =>
        {
            entity.HasKey(e => e.OpdocFisId).HasName("PrdI_OPDocumentoFisico_PK");

            entity.ToTable("PrdT_OPDocumentoFisico");

            entity.HasIndex(e => e.POpcabId, "PrdI_OPDocuemntoFisico_01");

            entity.Property(e => e.OpdocFisId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("OPDocFisId");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PDocFisId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pDocFisId");
            entity.Property(e => e.PForDocFisId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pForDocFisId");
            entity.Property(e => e.POpcabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pOPCabId");
            entity.Property(e => e.POpdetId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pOPDetId");
        });

        modelBuilder.Entity<PrdTOpentrega>(entity =>
        {
            entity.HasKey(e => e.OpentregaId).HasName("PrdI_OPEntrega_PK");

            entity.ToTable("PrdT_OPEntrega");

            entity.HasIndex(e => new { e.POpcabId, e.EstadoProceso }, "PrdT_OPEntrega_idx070");

            entity.Property(e => e.OpentregaId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("OPEntregaId");
            entity.Property(e => e.EstadoProceso)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.FechaIngresoHora).HasColumnType("datetime");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.LoteProductoCod)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.Observacion)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PLoteProductoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pLoteProductoId");
            entity.Property(e => e.PMaquinaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMaquinaId");
            entity.Property(e => e.POpcabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pOPCabId");
            entity.Property(e => e.POpeLogtCabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pOpeLogtCabId");
            entity.Property(e => e.PProductoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pProductoId");
            entity.Property(e => e.PTurnoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTurnoId");
        });

        modelBuilder.Entity<PrdTOpentregaRelConsumo>(entity =>
        {
            entity.HasKey(e => new { e.POpentregaId, e.POpconsumoId }).HasName("PrdI_OPEntregaRelConsumo_PK");

            entity.ToTable("PrdT_OPEntregaRelConsumo");

            entity.Property(e => e.POpentregaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pOPEntregaId");
            entity.Property(e => e.POpconsumoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pOPConsumoId");
        });

        modelBuilder.Entity<PrdTOperacion>(entity =>
        {
            entity.HasKey(e => e.OperacionId).HasName("PrdI_Operacion_PK");

            entity.ToTable("PrdT_Operacion");

            entity.HasIndex(e => new { e.PEmpId, e.PSeccionId, e.OperacionCod }, "PrdI_Operacion01").IsUnique();

            entity.Property(e => e.OperacionId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FactorMobraMaqEstd).HasColumnName("FactorMObraMaqEstd");
            entity.Property(e => e.FactorMobraMaqReal).HasColumnName("FactorMObraMaqReal");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.OperacionCod)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.OperacionDes)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PCreId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCreId");
            entity.Property(e => e.PCtaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtaId");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PSeccionId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pSeccionId");
            entity.Property(e => e.PUnidadRendimientoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pUnidadRendimientoId");
        });

        modelBuilder.Entity<PrdTOperacionActividad>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("PrdT_OperacionActividad");

            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PActividadId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pActividadId");
            entity.Property(e => e.POperacionId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pOperacionId");
        });

        modelBuilder.Entity<PrdTOperacionCosto>(entity =>
        {
            entity.HasKey(e => e.OperacionCostoId).HasName("PrdI_OperacionCosto_PK");

            entity.ToTable("PrdT_OperacionCosto");

            entity.HasIndex(e => new { e.PEmpId, e.POperacionId, e.PerId }, "PrdI_operacionCosto_01").IsUnique();

            entity.Property(e => e.OperacionCostoId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.POperacionId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pOperacionId");
        });

        modelBuilder.Entity<PrdTOperacionMaquina>(entity =>
        {
            entity.HasKey(e => new { e.POperacionId, e.PMaquinaId }).HasName("PrdI_OperacionMaquina_PK");

            entity.ToTable("PrdT_OperacionMaquina");

            entity.Property(e => e.POperacionId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pOperacionId");
            entity.Property(e => e.PMaquinaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMaquinaId");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
        });

        modelBuilder.Entity<PrdTOpespTec>(entity =>
        {
            entity.HasKey(e => e.OpespTecId).HasName("PrdI_OPEspTec_PK");

            entity.ToTable("PrdT_OPEspTec");

            entity.HasIndex(e => new { e.POpcabId, e.POpdetId, e.EspTecLinea }, "PrdI_OPEspTec_01").IsUnique();

            entity.Property(e => e.OpespTecId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("OPEspTecId");
            entity.Property(e => e.EspecificacionTec)
                .HasMaxLength(90)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PForEspTecId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pForEspTecId");
            entity.Property(e => e.POpcabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pOPCabId");
            entity.Property(e => e.POpdetId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pOPDetId");
        });

        modelBuilder.Entity<PrdTOpexterior>(entity =>
        {
            entity.HasKey(e => e.OpexteriorId).HasName("PrdI_OPExterior_PK");

            entity.ToTable("PrdT_OPExterior");

            entity.HasIndex(e => e.POpcabId, "PrdI_OPExterior_01");

            entity.Property(e => e.OpexteriorId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("OPExteriorId");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PExteriorId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pExteriorId");
            entity.Property(e => e.PForExteriorId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pForExteriorId");
            entity.Property(e => e.POpcabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pOPCabId");
            entity.Property(e => e.POpdetId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pOPDetId");
            entity.Property(e => e.SconAprob)
                .HasColumnType("numeric(5, 2)")
                .HasColumnName("SConAprob");
            entity.Property(e => e.SconEstd)
                .HasColumnType("numeric(5, 2)")
                .HasColumnName("SConEstd");
        });

        modelBuilder.Entity<PrdTOpexteriorTotale>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("PrdT_OPExteriorTotales");

            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.OpexteriorTotId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("OPExteriorTotId");
            entity.Property(e => e.PExteriorId)
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("pExteriorId");
            entity.Property(e => e.POpcabId)
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("pOPCabId");
        });

        modelBuilder.Entity<PrdTOpglosa>(entity =>
        {
            entity.HasKey(e => e.OpglosaId).HasName("PrdI_OPGlosa_PK");

            entity.ToTable("PrdT_OPGlosa");

            entity.HasIndex(e => e.POpcabId, "PrdI_OPGlosa_01");

            entity.Property(e => e.OpglosaId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("OPGlosaId");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.GlosaOp)
                .HasMaxLength(90)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("GlosaOP");
            entity.Property(e => e.GlosaOplinea).HasColumnName("GlosaOPLinea");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.POpcabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pOPCabId");
        });

        modelBuilder.Entity<PrdTOpmaterial>(entity =>
        {
            entity.HasKey(e => e.OpmaterialId).HasName("PrdI_OPMaterial_PK");

            entity.ToTable("PrdT_OPMaterial");

            entity.HasIndex(e => e.POpcabId, "PrdI_OPMaterial_01");

            entity.Property(e => e.OpmaterialId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("OPMaterialId");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PForMaterialId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pForMaterialId");
            entity.Property(e => e.POpcabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pOPCabId");
            entity.Property(e => e.POpdetId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pOPDetId");
            entity.Property(e => e.POperacionId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pOperacionId");
            entity.Property(e => e.PProductoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pProductoId");
            entity.Property(e => e.SconAprob)
                .HasColumnType("numeric(5, 2)")
                .HasColumnName("SConAprob");
            entity.Property(e => e.SconEstd)
                .HasColumnType("numeric(5, 2)")
                .HasColumnName("SConEstd");
        });

        modelBuilder.Entity<PrdTOpmaterialTotale>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("PrdT_OPMaterialTotales");

            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.OpmaterialTotId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("OPMaterialTotId");
            entity.Property(e => e.POpcabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pOPCabId");
            entity.Property(e => e.PProductoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pProductoId");
        });

        modelBuilder.Entity<PrdTOpoperacion>(entity =>
        {
            entity.HasKey(e => e.OpoperacionId).HasName("PrdI_OPOperacion_PK");

            entity.ToTable("PrdT_OPOperacion");

            entity.HasIndex(e => e.POpcabId, "PrdI_OPOperacion_01");

            entity.Property(e => e.OpoperacionId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("OPOperacionId");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PForOperacionId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pForOperacionId");
            entity.Property(e => e.POpcabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pOPCabId");
            entity.Property(e => e.POpdetId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pOPDetId");
            entity.Property(e => e.POperacionId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pOperacionId");
            entity.Property(e => e.SconAprob)
                .HasColumnType("numeric(5, 2)")
                .HasColumnName("SConAprob");
            entity.Property(e => e.SconEstd)
                .HasColumnType("numeric(5, 2)")
                .HasColumnName("SConEstd");
        });

        modelBuilder.Entity<PrdTOpoperacionTotale>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("PrdT_OPOperacionTotales");

            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.OpoperacionTotId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("OPOperacionTotId");
            entity.Property(e => e.POpcabId)
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("pOPCabId");
            entity.Property(e => e.POperacionId)
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("pOperacionId");
        });

        modelBuilder.Entity<PrdTOpprogEntr>(entity =>
        {
            entity.HasKey(e => e.OpprogEntrId).HasName("PrdI_OPProgEntr_PK");

            entity.ToTable("PrdT_OPProgEntr");

            entity.HasIndex(e => e.POpcabId, "PrdI_OPProgEntr_01");

            entity.Property(e => e.OpprogEntrId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("OPProgEntrId");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.Observacion)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PMaquinaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMaquinaId");
            entity.Property(e => e.POpcabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pOPCabId");
            entity.Property(e => e.POpdetId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pOPDetId");
        });

        modelBuilder.Entity<PrdTOpsemiElab>(entity =>
        {
            entity.HasKey(e => e.OpsemiElabId).HasName("PrdI_OPSemiElab_PK");

            entity.ToTable("PrdT_OPSemiElab");

            entity.HasIndex(e => e.POpcabId, "PrdI_OPSemiElab_01");

            entity.HasIndex(e => new { e.POpcabId, e.OpsemiElabId, e.PProductoId }, "PrdT_OPSemiElab_idx070");

            entity.Property(e => e.OpsemiElabId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("OPSemiElabId");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PForSemiElabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pForSemiElabId");
            entity.Property(e => e.PFormulaIdSe)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pFormulaIdSE");
            entity.Property(e => e.POpcabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pOPCabId");
            entity.Property(e => e.POpdetId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pOPDetId");
            entity.Property(e => e.POperacionId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pOperacionId");
            entity.Property(e => e.PProductoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pProductoId");
            entity.Property(e => e.PServicioId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pServicioId");
            entity.Property(e => e.SconAprob)
                .HasColumnType("numeric(5, 2)")
                .HasColumnName("SConAprob");
            entity.Property(e => e.SconEstd)
                .HasColumnType("numeric(5, 2)")
                .HasColumnName("SConEstd");
        });

        modelBuilder.Entity<PrdTOpsemiElabTotale>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("PrdT_OPSemiElabTotales");

            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.OpsemiElabTotId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("OPSemiElabTotId");
            entity.Property(e => e.POpcabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pOPCabId");
            entity.Property(e => e.PProductoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pProductoId");
            entity.Property(e => e.PServicioId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pServicioId");
            entity.Property(e => e.SconAprob)
                .HasColumnType("numeric(5, 2)")
                .HasColumnName("SConAprob");
            entity.Property(e => e.SconEstd)
                .HasColumnType("numeric(5, 2)")
                .HasColumnName("SConEstd");
        });

        modelBuilder.Entity<PrdTOputillaje>(entity =>
        {
            entity.HasKey(e => e.OputillajeId).HasName("PrdI_OPUtillaje_PK");

            entity.ToTable("PrdT_OPUtillaje");

            entity.HasIndex(e => e.POpcabId, "PrdI_OPUtillaje_01");

            entity.Property(e => e.OputillajeId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("OPUtillajeId");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PForUtillajeId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pForUtillajeId");
            entity.Property(e => e.POpcabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pOPCabId");
            entity.Property(e => e.POpdetId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pOPDetId");
            entity.Property(e => e.PUtillajeId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pUtillajeId");
            entity.Property(e => e.SconAprob)
                .HasColumnType("numeric(5, 2)")
                .HasColumnName("SConAprob");
            entity.Property(e => e.SconEstd)
                .HasColumnType("numeric(5, 2)")
                .HasColumnName("SConEstd");
        });

        modelBuilder.Entity<PrdTProductoAtributoGrupo>(entity =>
        {
            entity.HasKey(e => e.ProductoAtributoGrupoId).HasName("PrdI_ProductoAtributoGrupo_PK");

            entity.ToTable("PrdT_ProductoAtributoGrupo");

            entity.Property(e => e.ProductoAtributoGrupoId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(18, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PInstanciaId)
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("pInstanciaId");
            entity.Property(e => e.PPrdGrupoId)
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("pPrdGrupoId");
            entity.Property(e => e.PProductoId)
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("pProductoId");
        });

        modelBuilder.Entity<PrdTProductoCosto>(entity =>
        {
            entity.HasKey(e => e.ProductoCostoId).HasName("PrdI_ProductoCosto_PK");

            entity.ToTable("PrdT_ProductoCosto");

            entity.HasIndex(e => new { e.PEmpId, e.PProductoId, e.PerId }, "PrdI_productoCosto_01").IsUnique();

            entity.Property(e => e.ProductoCostoId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PProductoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pProductoId");
        });

        modelBuilder.Entity<PrdTProductoMaquilaSeleccionado>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("PrdT_ProductoMaquilaSeleccionado");

            entity.Property(e => e.CantidadProducir).HasColumnType("numeric(18, 0)");
            entity.Property(e => e.FormulaId).HasColumnType("numeric(18, 0)");
            entity.Property(e => e.POpeLogtCabId)
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("pOpeLogtCabId");
            entity.Property(e => e.ProductoId).HasColumnType("numeric(18, 0)");
        });

        modelBuilder.Entity<PrdTRegiman>(entity =>
        {
            entity.HasKey(e => e.RegimenId).HasName("PrdI_Regimen_PK");

            entity.ToTable("PrdT_Regimen");

            entity.HasIndex(e => new { e.PEmpId, e.RegimenCod }, "PrdI_Regimen01").IsUnique();

            entity.Property(e => e.RegimenId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.RegimenCod)
                .HasMaxLength(10)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.RegimenDes)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<PrdTSeccion>(entity =>
        {
            entity.HasKey(e => e.SeccionId).HasName("PrdI_Seccion_PK");

            entity.ToTable("PrdT_Seccion");

            entity.HasIndex(e => new { e.PEmpId, e.SeccionCod }, "PrdI_Seccion01").IsUnique();

            entity.Property(e => e.SeccionId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PBodegaIdEntrega)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pBodegaIdEntrega");
            entity.Property(e => e.PBodegaIdGranel)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pBodegaIdGranel");
            entity.Property(e => e.PBodegaIdProceso)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pBodegaIdProceso");
            entity.Property(e => e.PBodegaIdSolicitud)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pBodegaIdSolicitud");
            entity.Property(e => e.PCconsumoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCConsumoId");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.SeccionCod)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.SeccionDes)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<PrdTSeccionBodEntrega>(entity =>
        {
            entity.HasKey(e => e.SeccionBodEntregaId).HasName("PrdI_SeccionBodEntrega_PK");

            entity.ToTable("PrdT_SeccionBodEntrega");

            entity.HasIndex(e => new { e.PSeccionId, e.PBodegaId }, "PrdI_SeccionBodEntrega_01").IsUnique();

            entity.Property(e => e.SeccionBodEntregaId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PBodegaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pBodegaId");
            entity.Property(e => e.PSeccionId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pSeccionId");
        });

        modelBuilder.Entity<PrdTSeccionBodSolicitud>(entity =>
        {
            entity.HasKey(e => e.SeccionBodSolicitudId).HasName("PrdI_SeccionBodSolicitud_PK");

            entity.ToTable("PrdT_SeccionBodSolicitud");

            entity.HasIndex(e => new { e.PSeccionId, e.PBodegaId }, "PrdI_SeccionBodSolicitud_01").IsUnique();

            entity.Property(e => e.SeccionBodSolicitudId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PBodegaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pBodegaId");
            entity.Property(e => e.PSeccionId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pSeccionId");
        });

        modelBuilder.Entity<PrdTSustituyeMp>(entity =>
        {
            entity.HasKey(e => e.CodOwner).HasName("PrdI_SustituyeMp");

            entity.ToTable("PrdT_SustituyeMP");

            entity.Property(e => e.CodOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PFormulaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pFormulaId");
            entity.Property(e => e.ProductoCod)
                .HasMaxLength(25)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<PrdTTipoOp>(entity =>
        {
            entity.HasKey(e => e.PTprId).HasName("PrdI_TipoOP_PK");

            entity.ToTable("PrdT_TipoOP");

            entity.Property(e => e.PTprId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTprId");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
        });

        modelBuilder.Entity<PrdTTipoProducto>(entity =>
        {
            entity.HasKey(e => e.TipoProductoId).HasName("PrdI_Tipoproducto01");

            entity.ToTable("PrdT_TipoProducto");

            entity.Property(e => e.TipoProductoId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.CodigoTipoProducto)
                .HasMaxLength(2)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.Descripcion)
                .HasMaxLength(50)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
        });

        modelBuilder.Entity<PrdTTipoRecurso>(entity =>
        {
            entity.HasKey(e => e.TipoRecursoCod).HasName("PrdI_TipoRecurso_PK");

            entity.ToTable("PrdT_TipoRecurso");

            entity.Property(e => e.TipoRecursoDes)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<PrdTTmpCambiaEstadoOp>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("PrdT_TmpCambiaEstadoOP");

            entity.HasIndex(e => e.CodOwner, "PrdI_TmpCambiaEstadoOP_Pk");

            entity.Property(e => e.CodOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.POpcabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pOPCabId");
        });

        modelBuilder.Entity<PrdTTmpCierreOp>(entity =>
        {
            entity.HasKey(e => new { e.CodOwner, e.POpcabId }).HasName("PrdI_TmpCierreOP_PK");

            entity.ToTable("PrdT_TmpCierreOP");

            entity.Property(e => e.CodOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.POpcabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pOPCabId");
            entity.Property(e => e.ErrGlosa)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.IndProceso)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.Saldo).HasColumnType("money");
        });

        modelBuilder.Entity<PrdTTmpCorreccionPatron>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("PrdT_TmpCorreccionPatron");

            entity.HasIndex(e => e.CodOwner, "PrdI_TmpCorreccionPatron_PK");

            entity.Property(e => e.CodOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PFormulaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pFormulaId");
        });

        modelBuilder.Entity<PrdTTmpDetallePedidoOp>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("PrdT_TmpDetallePedidoOP");

            entity.HasIndex(e => e.CodOwner, "PrdI_TmpDetallePedidoOP_Pk");

            entity.Property(e => e.CodOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PProductoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pProductoId");
        });

        modelBuilder.Entity<PrdTTmpDevolTrasp>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("PrdT_TmpDevolTrasp");

            entity.Property(e => e.CodOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.Lote)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PDevolucionCabId).HasColumnName("pDevolucionCabId");
            entity.Property(e => e.POpcabId)
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("pOPCabId");
            entity.Property(e => e.POpeLogtCabId)
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("pOpeLogtCabId");
            entity.Property(e => e.PProductoId)
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("pProductoId");
            entity.Property(e => e.Porcentaje).HasColumnType("money");
            entity.Property(e => e.Saldo).HasColumnType("money");
            entity.Property(e => e.UnidadMedCod)
                .HasMaxLength(10)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<PrdTTmpImpEntrega>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("PrdT_TmpImpEntrega");

            entity.HasIndex(e => e.CodOwner, "PrdI_TmpImpEntrega");

            entity.Property(e => e.CodOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.FechaIngresoHora).HasColumnType("datetime");
            entity.Property(e => e.LoteProductoCod)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.MaquinaCod)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.Observacion)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.ProductoCod)
                .HasMaxLength(25)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.TurnoCod)
                .HasMaxLength(10)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<PrdTTmpImpOp>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("PrdT_TmpImpOP");

            entity.HasIndex(e => e.CodOwner, "PrdI_TmpImpOP_Pk");

            entity.Property(e => e.CodError).HasColumnName("Cod_Error");
            entity.Property(e => e.CodOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.ErrGlosa)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.FechaEntrega).HasColumnType("datetime");
            entity.Property(e => e.FechaProceso).HasColumnType("datetime");
            entity.Property(e => e.PTprId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTprId");
            entity.Property(e => e.ProductoCod)
                .HasMaxLength(25)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.SeccionCod)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.UnidadMedCod)
                .HasMaxLength(10)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<PrdTTmpMantenedorCosto>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("PrdT_TmpMantenedorCosto");

            entity.HasIndex(e => e.CodOwner, "PrdI_TmpMantenedorCosto_pk");

            entity.Property(e => e.CodError).HasColumnName("Cod_Error");
            entity.Property(e => e.CodOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.ErrGlosa)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.ProductoCod)
                .HasMaxLength(25)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<PrdTTurno>(entity =>
        {
            entity.HasKey(e => e.TurnoId).HasName("PrdI_Turno_PK");

            entity.ToTable("PrdT_Turno");

            entity.HasIndex(e => new { e.PEmpId, e.TurnoCod }, "PrdI_Turno01").IsUnique();

            entity.Property(e => e.TurnoId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.TurnoCod)
                .HasMaxLength(10)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.TurnoDes)
                .HasMaxLength(140)
                .IsUnicode(false);
        });

        modelBuilder.Entity<PrdTUnidadRendimiento>(entity =>
        {
            entity.HasKey(e => e.UnidadRendimientoId).HasName("PrdI_UnidadRendimiento_PK");

            entity.ToTable("PrdT_UnidadRendimiento");

            entity.HasIndex(e => e.UnidadRendimientoCod, "PrdI_UnidadRendimiento01").IsUnique();

            entity.Property(e => e.UnidadRendimientoId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.UnidadRendimientoCod)
                .HasMaxLength(10)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.UnidadRendimientoDes)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<PrdTUtillaje>(entity =>
        {
            entity.HasKey(e => e.UtillajeId).HasName("PrdI_Utillaje_PK");

            entity.ToTable("PrdT_Utillaje");

            entity.HasIndex(e => new { e.PEmpId, e.UtillajeCod }, "PrdI_Utillaje01").IsUnique();

            entity.Property(e => e.UtillajeId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PCreId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCreId");
            entity.Property(e => e.PCtaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtaId");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.POpentregaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pOPEntregaId");
            entity.Property(e => e.PUnidadRendimientoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pUnidadRendimientoId");
            entity.Property(e => e.UtillajeCod)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.UtillajeDes)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<PrdTUtillajeCosto>(entity =>
        {
            entity.HasKey(e => e.UtillajeCostoId).HasName("PrdI_UtillajeCosto_PK");

            entity.ToTable("PrdT_UtillajeCosto");

            entity.Property(e => e.UtillajeCostoId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PUtillajeId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pUtillajeId");
        });

        modelBuilder.Entity<PreTValoresMonedum>(entity =>
        {
            entity.HasKey(e => new { e.MonCodigo, e.PerId }).HasName("PreI_ValoresMoneda01");

            entity.ToTable("PreT_ValoresMoneda");

            entity.Property(e => e.ValMonProyectado).HasColumnType("money");
            entity.Property(e => e.ValMonReal).HasColumnType("money");
        });

        modelBuilder.Entity<RemInformesCol>(entity =>
        {
            entity.HasKey(e => e.InfColId).HasName("PK_RemInformesConc");

            entity.ToTable("RemInformesCol");

            entity.Property(e => e.InfColId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.InfCfecIniVigencia)
                .HasColumnType("datetime")
                .HasColumnName("InfCFecIniVigencia");
            entity.Property(e => e.InfCfecTerVigencia)
                .HasColumnType("datetime")
                .HasColumnName("InfCFecTerVigencia");
            entity.Property(e => e.InfCsecColumna).HasColumnName("InfCSecColumna");
            entity.Property(e => e.InfCtituloCol)
                .HasMaxLength(15)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("InfCTituloCol");
            entity.Property(e => e.PClmInfId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pClmInfId");
            entity.Property(e => e.PInfRemId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pInfRemId");
        });

        modelBuilder.Entity<RespAfijoContCuenta>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("RespAfijo_Cont_Cuentas");

            entity.Property(e => e.CtaCtaMayor).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.CtaDescUsoCta)
                .HasMaxLength(255)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.CtaFechaMaxImpu).HasColumnType("datetime");
            entity.Property(e => e.CtaFlujoDebe).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.CtaFlujoHaber).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.CtaId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.CtaNombre)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.CtaPresupuesto).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
        });

        modelBuilder.Entity<RespDlgTRecepcionDet>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("RESP_DlgT_RecepcionDet");

            entity.Property(e => e.AccionReclamo)
                .HasMaxLength(5)
                .IsUnicode(false);
            entity.Property(e => e.DvcNumOrdenC)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.FechaReclamo).HasColumnType("datetime");
            entity.Property(e => e.FolioRef).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.PCabLlgId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCabLlgId");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PEntIdFirma)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntIdFirma");
            entity.Property(e => e.PRecepcionCabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pRecepcionCabId");
            entity.Property(e => e.PRecepcionMercServicioId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pRecepcionMercServicioId");
            entity.Property(e => e.PRecepcionRespId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pRecepcionRespId");
            entity.Property(e => e.RecDetFecEnvia).HasColumnType("datetime");
            entity.Property(e => e.RecDetFecFirma).HasColumnType("datetime");
            entity.Property(e => e.RecDetFechaRecepcion).HasColumnType("datetime");
            entity.Property(e => e.RecDetOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.RecDetRutEmisor)
                .HasMaxLength(12)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.RecDetXml).HasColumnType("text");
            entity.Property(e => e.RecFechaEmision).HasColumnType("datetime");
            entity.Property(e => e.RecFechaSii).HasColumnType("datetime");
            entity.Property(e => e.RecXmlReciboMercaderias).HasColumnType("text");
            entity.Property(e => e.RecepcionDetId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
        });

        modelBuilder.Entity<RhuTApvcAfiliado>(entity =>
        {
            entity.HasKey(e => e.ApvcAfId);

            entity.ToTable("RhuT_ApvcAfiliados");

            entity.HasIndex(e => new { e.PCtoApvcId, e.PCtoId }, "U1_RhuT_ApvcAfiliados").IsUnique();

            entity.Property(e => e.ApvcAfId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.ApvcAfFecInicio).HasColumnType("datetime");
            entity.Property(e => e.ApvcAfFecSuscripcion).HasColumnType("datetime");
            entity.Property(e => e.ApvcAfFecTermino).HasColumnType("datetime");
            entity.Property(e => e.ApvcAfRegTributario).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PCtoApvcId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtoApvcId");
            entity.Property(e => e.PCtoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtoId");
            entity.Property(e => e.PItmFpagoAfId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pItmFPagoAfId");
            entity.Property(e => e.PMonedaAhId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMonedaAhId");

            entity.HasOne(d => d.ApvcAfRegTributarioNavigation).WithMany(p => p.RhuTApvcAfiliadoApvcAfRegTributarioNavigations)
                .HasForeignKey(d => d.ApvcAfRegTributario)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_RhuT_ApvcAFRegTri");

            entity.HasOne(d => d.PCtoApvc).WithMany(p => p.RhuTApvcAfiliados)
                .HasForeignKey(d => d.PCtoApvcId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_RhuT_ApvcAfEmpresa");

            entity.HasOne(d => d.PCto).WithMany(p => p.RhuTApvcAfiliados)
                .HasForeignKey(d => d.PCtoId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_RhuT_ApvcAfCtoTrab");

            entity.HasOne(d => d.PItmFpagoAf).WithMany(p => p.RhuTApvcAfiliadoPItmFpagoAfs)
                .HasForeignKey(d => d.PItmFpagoAfId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_RhuT_ApvcAFOrigen");

            entity.HasOne(d => d.PMonedaAh).WithMany(p => p.RhuTApvcAfiliados)
                .HasForeignKey(d => d.PMonedaAhId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_RhuT_ApvcAFMonedas");
        });

        modelBuilder.Entity<RhuTApvcEmpresa>(entity =>
        {
            entity.HasKey(e => e.CtoApvcId);

            entity.ToTable("RhuT_ApvcEmpresa");

            entity.HasIndex(e => new { e.PEmpId, e.CtoApvcNum, e.PInsParApvcId }, "U1_RhuT_ApvcEmpresa").IsUnique();

            entity.Property(e => e.CtoApvcId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.CodCtaCteBco)
                .HasMaxLength(15)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.CtoApvcFecSuscripcion).HasColumnType("datetime");
            entity.Property(e => e.CtoApvcNum).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.CtoApvcPlan)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PInsParApvcId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pInsParApvcId");
            entity.Property(e => e.PItmParEstId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pItmParEstId");
            entity.Property(e => e.PMonedaApId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMonedaApId");

            entity.HasOne(d => d.PEmp).WithMany(p => p.RhuTApvcEmpresas)
                .HasForeignKey(d => d.PEmpId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_RhuT_ApvcEmpresa");

            entity.HasOne(d => d.PInsParApvc).WithMany(p => p.RhuTApvcEmpresas)
                .HasForeignKey(d => d.PInsParApvcId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_RhuT_ApvcInst");

            entity.HasOne(d => d.PItmParEst).WithMany(p => p.RhuTApvcEmpresas)
                .HasForeignKey(d => d.PItmParEstId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_RhuT_ApvcEstado");

            entity.HasOne(d => d.PMonedaAp).WithMany(p => p.RhuTApvcEmpresas)
                .HasForeignKey(d => d.PMonedaApId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_RhuT_ApvcMonedas");
        });

        modelBuilder.Entity<RhuTApvcLegale>(entity =>
        {
            entity.HasKey(e => e.ApvcLegId);

            entity.ToTable("RhuT_ApvcLegales");

            entity.HasIndex(e => new { e.PCtoApvcId, e.PFnqCauId }, "U1_RhuT_ApvcLegales").IsUnique();

            entity.Property(e => e.ApvcLegId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PCtoApvcId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtoApvcId");
            entity.Property(e => e.PFnqCauId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pFnqCauId");

            entity.HasOne(d => d.PCtoApvc).WithMany(p => p.RhuTApvcLegales)
                .HasForeignKey(d => d.PCtoApvcId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_RhuT_ApvcLegContrato");

            entity.HasOne(d => d.PFnqCau).WithMany(p => p.RhuTApvcLegales)
                .HasForeignKey(d => d.PFnqCauId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_RhuT_ApvcLegCausales");
        });

        modelBuilder.Entity<RhuTBieApertura>(entity =>
        {
            entity.HasKey(e => e.BieApeId);

            entity.ToTable("RhuT_BieApertura");

            entity.HasIndex(e => new { e.EjeAno, e.PBieSocId, e.PBeneficiosId, e.PItmParId }, "U1_RhuT_BieApertura").IsUnique();

            entity.Property(e => e.BieApeId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PBeneficiosId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pBeneficiosId");
            entity.Property(e => e.PBieSocId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pBieSocId");
            entity.Property(e => e.PItmParId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pItmParId");
            entity.Property(e => e.PMonedaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMonedaId");
            entity.Property(e => e.ValAnual)
                .HasColumnType("money")
                .HasColumnName("Val_Anual");

            entity.HasOne(d => d.PBeneficios).WithMany(p => p.RhuTBieAperturas)
                .HasForeignKey(d => d.PBeneficiosId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_RhuT_ApeBenef02");

            entity.HasOne(d => d.PBieSoc).WithMany(p => p.RhuTBieAperturas)
                .HasForeignKey(d => d.PBieSocId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_RhuT_ApeSocio01");
        });

        modelBuilder.Entity<RhuTBieBeneficio>(entity =>
        {
            entity.HasKey(e => e.BeneficiosId);

            entity.ToTable("RhuT_BieBeneficios");

            entity.HasIndex(e => e.CodBeneficio, "U1_RhuT_BieBeneficios").IsUnique();

            entity.Property(e => e.BeneficiosId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.Alcances)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.CodBeneficio).HasColumnType("money");
            entity.Property(e => e.DesBeneficio)
                .HasMaxLength(140)
                .IsUnicode(false);
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecExpiracion)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Expiracion");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.FecVigencia)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Vigencia");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PBieEleFpago)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pBieEleFPago");
            entity.Property(e => e.PCdiId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCdiId");
            entity.Property(e => e.PCreId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCreId");
            entity.Property(e => e.PCtaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtaId");
            entity.Property(e => e.PMonedaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMonedaId");
            entity.Property(e => e.PPryId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pPryId");
            entity.Property(e => e.PTipoOpeId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTipoOpeId");
            entity.Property(e => e.PTprId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTprId");
            entity.Property(e => e.Restriccion)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.TipoAgrupacion).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.TipoApertura).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.TipoBeneficio).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.TipoCarencia).HasColumnType("numeric(9, 0)");

            entity.HasOne(d => d.PBieEleFpagoNavigation).WithMany(p => p.RhuTBieBeneficioPBieEleFpagoNavigations)
                .HasForeignKey(d => d.PBieEleFpago)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_RhuT_BieFormaPago");

            entity.HasOne(d => d.TipoAgrupacionNavigation).WithMany(p => p.RhuTBieBeneficioTipoAgrupacionNavigations)
                .HasForeignKey(d => d.TipoAgrupacion)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_RhuT_BieTipoAgrupa");

            entity.HasOne(d => d.TipoAperturaNavigation).WithMany(p => p.RhuTBieBeneficioTipoAperturaNavigations)
                .HasForeignKey(d => d.TipoApertura)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_RhuT_BieTipoApertura");

            entity.HasOne(d => d.TipoBeneficioNavigation).WithMany(p => p.RhuTBieBeneficioTipoBeneficioNavigations)
                .HasForeignKey(d => d.TipoBeneficio)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_RhuT_BieTipoBenef");

            entity.HasOne(d => d.TipoCarenciaNavigation).WithMany(p => p.RhuTBieBeneficioTipoCarenciaNavigations)
                .HasForeignKey(d => d.TipoCarencia)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_RhuT_BieTipoCarencia");
        });

        modelBuilder.Entity<RhuTBieBeneficiosRemun>(entity =>
        {
            entity.HasKey(e => e.BenRemId).HasName("PK_RhuT_BieBenefRemun");

            entity.ToTable("RhuT_BieBeneficiosRemun");

            entity.HasIndex(e => new { e.PBeneficiosId, e.PEmpId, e.FecDesde, e.PProcRemId }, "U1_RhuT_BieBenefRemun").IsUnique();

            entity.Property(e => e.BenRemId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecDesde)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Desde");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PBeneficiosId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pBeneficiosId");
            entity.Property(e => e.PConcRemId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pConcRemId");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PProcRemId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pProcRemId");

            entity.HasOne(d => d.PBeneficios).WithMany(p => p.RhuTBieBeneficiosRemuns)
                .HasForeignKey(d => d.PBeneficiosId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_RhuT_BieBenefRemun01");
        });

        modelBuilder.Entity<RhuTBieBeneficiosTope>(entity =>
        {
            entity.HasKey(e => e.BenTopId).HasName("PK_RhuT_BieBenefTopes");

            entity.ToTable("RhuT_BieBeneficiosTopes");

            entity.HasIndex(e => new { e.PEmpId, e.PBeneficiosId, e.BenSecuencia, e.IndBeneficiario, e.FecDesde }, "U1_RhuT_BieBenefTopes").IsUnique();

            entity.Property(e => e.BenTopId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.DescripTope)
                .HasMaxLength(50)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecDesde)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Desde");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.IndAplica)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("Ind_Aplica");
            entity.Property(e => e.IndBeneficiario).HasColumnName("Ind_Beneficiario");
            entity.Property(e => e.PBeneficiosId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pBeneficiosId");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PMonedaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMonedaId");
            entity.Property(e => e.ValAnual)
                .HasColumnType("money")
                .HasColumnName("Val_Anual");
            entity.Property(e => e.ValBeneficio)
                .HasColumnType("money")
                .HasColumnName("Val_Beneficio");
            entity.Property(e => e.ValCoPago)
                .HasColumnType("money")
                .HasColumnName("Val_CoPago");
            entity.Property(e => e.ValTope)
                .HasColumnType("money")
                .HasColumnName("Val_Tope");

            entity.HasOne(d => d.IndAplicaNavigation).WithMany(p => p.RhuTBieBeneficiosTopes)
                .HasForeignKey(d => d.IndAplica)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_RhuT_BieBenAplica");

            entity.HasOne(d => d.PBeneficios).WithMany(p => p.RhuTBieBeneficiosTopes)
                .HasForeignKey(d => d.PBeneficiosId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_RhuT_BieBenefTopes");
        });

        modelBuilder.Entity<RhuTBieConvenio>(entity =>
        {
            entity.HasKey(e => e.BieConvId);

            entity.ToTable("RhuT_BieConvenios");

            entity.HasIndex(e => e.NumBieConv, "U1_RhuT_BieConvenios").IsUnique();

            entity.Property(e => e.BieConvId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EntRazonSocial)
                .HasMaxLength(120)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EntRut)
                .HasMaxLength(12)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.FecVigenciaDesde).HasColumnType("datetime");
            entity.Property(e => e.FecVigenciaHasta).HasColumnType("datetime");
            entity.Property(e => e.GlosaBieConv)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.NumBieConv).HasColumnType("money");
            entity.Property(e => e.PMonedaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMonedaId");
            entity.Property(e => e.ValConvenio)
                .HasColumnType("money")
                .HasColumnName("Val_Convenio");
        });

        modelBuilder.Entity<RhuTBieConveniosSdo>(entity =>
        {
            entity.HasKey(e => e.BieConvSdoId).HasName("PK_RhuT_BieConvSdo");

            entity.ToTable("RhuT_BieConveniosSdo");

            entity.HasIndex(e => new { e.PBieConvId, e.PEmpId, e.PNomConcDetId }, "U1_RhuT_BieConvSdo").IsUnique();

            entity.Property(e => e.BieConvSdoId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecProceso).HasColumnType("datetime");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PBieConvId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pBieConvId");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PNomConcDetId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pNomConcDetId");

            entity.HasOne(d => d.PBieConv).WithMany(p => p.RhuTBieConveniosSdos)
                .HasForeignKey(d => d.PBieConvId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_RhuT_BieConveniosSdo01");
        });

        modelBuilder.Entity<RhuTBieEmpConf>(entity =>
        {
            entity.HasKey(e => e.PEmpId);

            entity.ToTable("RhuT_BieEmpConf");

            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.Faporte)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("FAporte");
            entity.Property(e => e.Fdescto)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("FDescto");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PItmParId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pItmParId");
            entity.Property(e => e.PTipoOpeId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTipoOpeId");

            entity.HasOne(d => d.PEmp).WithOne(p => p.RhuTBieEmpConf)
                .HasForeignKey<RhuTBieEmpConf>(d => d.PEmpId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_RhuT_BieEmpConf01");
        });

        modelBuilder.Entity<RhuTBiePagosRem>(entity =>
        {
            entity.HasKey(e => e.BiePagRemId);

            entity.ToTable("RhuT_BiePagosRem");

            entity.HasIndex(e => new { e.PEmpId, e.PProcRemPerId, e.PBeneficiosId, e.PConcRemId, e.PCtoId }, "U1_RhuT_BiePagosRem").IsUnique();

            entity.Property(e => e.BiePagRemId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PBeneficiosId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pBeneficiosId");
            entity.Property(e => e.PConcRemId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pConcRemId");
            entity.Property(e => e.PCtoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtoId");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PNomConcId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pNomConcId");
            entity.Property(e => e.PPerRemId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pPerRemId");
            entity.Property(e => e.PProcRemPerId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pProcRemPerId");
            entity.Property(e => e.ValBeneficio)
                .HasColumnType("money")
                .HasColumnName("Val_Beneficio");
        });

        modelBuilder.Entity<RhuTBiePrestadore>(entity =>
        {
            entity.HasKey(e => e.BiePrestId).HasName("PK_RhuT_BiePrestador");

            entity.ToTable("RhuT_BiePrestadores");

            entity.HasIndex(e => e.EntRut, "U1_RhuT_BiePrestador").IsUnique();

            entity.Property(e => e.BiePrestId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EntRazonSocial)
                .HasMaxLength(120)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EntRut)
                .HasMaxLength(12)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PrestEspecialidad)
                .HasMaxLength(40)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<RhuTBieSocio>(entity =>
        {
            entity.HasKey(e => e.BieSocId);

            entity.ToTable("RhuT_BieSocios");

            entity.Property(e => e.BieSocId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.BieInfSdo)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecExpiracion)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Expiracion");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.FecVigencia)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Vigencia");
            entity.Property(e => e.GlosaMotivo)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PCtoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtoId");
        });

        modelBuilder.Entity<RhuTBieSociosConv>(entity =>
        {
            entity.HasKey(e => e.BieSocConvId).HasName("PK_RhuT_BieSocConv");

            entity.ToTable("RhuT_BieSociosConv");

            entity.HasIndex(e => new { e.PBieSocId, e.PBieConvId }, "U1_RhuT_BieSocConv").IsUnique();

            entity.Property(e => e.BieSocConvId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.FecVigencia)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Vigencia");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PBieConvId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pBieConvId");
            entity.Property(e => e.PBieSocId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pBieSocId");
            entity.Property(e => e.PMonedaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMonedaId");
            entity.Property(e => e.ValCantidad)
                .HasColumnType("money")
                .HasColumnName("Val_Cantidad");
            entity.Property(e => e.ValConvenio)
                .HasColumnType("money")
                .HasColumnName("Val_Convenio");
            entity.Property(e => e.ValMoneda)
                .HasColumnType("money")
                .HasColumnName("Val_Moneda");

            entity.HasOne(d => d.PBieConv).WithMany(p => p.RhuTBieSociosConvs)
                .HasForeignKey(d => d.PBieConvId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_RhuT_BieSociosConv1");

            entity.HasOne(d => d.PBieSoc).WithMany(p => p.RhuTBieSociosConvs)
                .HasForeignKey(d => d.PBieSocId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_RhuT_BieSociosConv");
        });

        modelBuilder.Entity<RhuTBieSociosTope>(entity =>
        {
            entity.HasKey(e => e.BieSocTopId).HasName("PK_RhuT_BieSocTop");

            entity.ToTable("RhuT_BieSociosTopes");

            entity.HasIndex(e => new { e.PBieSocId, e.PBeneficiosId, e.FecDesde }, "U1_RhuT_BieSocTop").IsUnique();

            entity.Property(e => e.BieSocTopId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecDesde)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Desde");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PBeneficiosId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pBeneficiosId");
            entity.Property(e => e.PBieSocId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pBieSocId");
            entity.Property(e => e.PMonedaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMonedaId");
            entity.Property(e => e.ValAnual)
                .HasColumnType("money")
                .HasColumnName("Val_Anual");

            entity.HasOne(d => d.PBeneficios).WithMany(p => p.RhuTBieSociosTopes)
                .HasForeignKey(d => d.PBeneficiosId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_RhuT_BieSocBen");

            entity.HasOne(d => d.PBieSoc).WithMany(p => p.RhuTBieSociosTopes)
                .HasForeignKey(d => d.PBieSocId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_RhuT_BieSociosTop");
        });

        modelBuilder.Entity<RhuTBieSolicitude>(entity =>
        {
            entity.HasKey(e => e.BieSolId);

            entity.ToTable("RhuT_BieSolicitudes");

            entity.HasIndex(e => new { e.PCabOpeId, e.SisCodOri }, "RhuI_BieSolicitudes_I01");

            entity.Property(e => e.BieSolId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.CabOpePagFec).HasColumnType("datetime");
            entity.Property(e => e.CodOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EntRut2)
                .HasMaxLength(12)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecDesde)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Desde");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecHasta)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Hasta");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecSolicitud)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Solicitud");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.FechaPago).HasColumnType("datetime");
            entity.Property(e => e.GlosaBenef)
                .HasMaxLength(120)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.IndBeneficiario).HasColumnName("Ind_Beneficiario");
            entity.Property(e => e.MovCcpConFecha).HasColumnType("datetime");
            entity.Property(e => e.NumBoleta)
                .HasColumnType("money")
                .HasColumnName("Num_Boleta");
            entity.Property(e => e.ObsBoleta)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Obs_Boleta");
            entity.Property(e => e.Observacion)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PBenTopId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pBenTopId");
            entity.Property(e => e.PBeneficiosId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pBeneficiosId");
            entity.Property(e => e.PBieEleFpago)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pBieEleFPago");
            entity.Property(e => e.PBieEleId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pBieEleId");
            entity.Property(e => e.PBiePrestId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pBiePrestId");
            entity.Property(e => e.PBieSocId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pBieSocId");
            entity.Property(e => e.PCabCompId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCabCompId");
            entity.Property(e => e.PCabOpeId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCabOpeId");
            entity.Property(e => e.PCabOpeIdOri)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCabOpeIdOri");
            entity.Property(e => e.PCabOpeIntId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCabOpeIntId");
            entity.Property(e => e.PCdiId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCdiId");
            entity.Property(e => e.PCreId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCreId");
            entity.Property(e => e.PCtaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtaId");
            entity.Property(e => e.PDetCompId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pDetCompId");
            entity.Property(e => e.PDetReferenciaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pDetReferenciaId");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PEmpIdDestino)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpIdDestino");
            entity.Property(e => e.PEntIdPago)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntIdPago");
            entity.Property(e => e.PFormaPagoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pFormaPagoId");
            entity.Property(e => e.PMonedaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMonedaId");
            entity.Property(e => e.PMovTesId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMovTesId");
            entity.Property(e => e.PNomConcDetId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pNomConcDetId");
            entity.Property(e => e.PPartidaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pPartidaId");
            entity.Property(e => e.PPryId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pPryId");
            entity.Property(e => e.PTprId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTprId");
            entity.Property(e => e.PryNumero)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.SeqLinea).HasColumnName("Seq_Linea");
            entity.Property(e => e.TipoBeneficio).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.ValAprobado)
                .HasColumnType("money")
                .HasColumnName("Val_Aprobado");
            entity.Property(e => e.ValBoleta)
                .HasColumnType("money")
                .HasColumnName("Val_Boleta");
            entity.Property(e => e.ValBonificacion)
                .HasColumnType("money")
                .HasColumnName("Val_Bonificacion");
            entity.Property(e => e.ValIsapre)
                .HasColumnType("money")
                .HasColumnName("Val_Isapre");
            entity.Property(e => e.ValMoneda)
                .HasColumnType("money")
                .HasColumnName("Val_Moneda");
            entity.Property(e => e.ValSeguros)
                .HasColumnType("money")
                .HasColumnName("Val_Seguros");
            entity.Property(e => e.ValSolicitud)
                .HasColumnType("money")
                .HasColumnName("Val_Solicitud");

            entity.HasOne(d => d.PBenTop).WithMany(p => p.RhuTBieSolicitudes)
                .HasForeignKey(d => d.PBenTopId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_RhuT_BieSolTopes");

            entity.HasOne(d => d.PBeneficios).WithMany(p => p.RhuTBieSolicitudes)
                .HasForeignKey(d => d.PBeneficiosId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_RhuT_BieSolBenf");

            entity.HasOne(d => d.PBieEleFpagoNavigation).WithMany(p => p.RhuTBieSolicitudePBieEleFpagoNavigations)
                .HasForeignKey(d => d.PBieEleFpago)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_RhuT_BieSolFPago");

            entity.HasOne(d => d.PBieEle).WithMany(p => p.RhuTBieSolicitudePBieEles)
                .HasForeignKey(d => d.PBieEleId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_RhuT_BieSolEstado");

            entity.HasOne(d => d.PBiePrest).WithMany(p => p.RhuTBieSolicitudes)
                .HasForeignKey(d => d.PBiePrestId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_RhuT_BieSolPrest");

            entity.HasOne(d => d.PBieSoc).WithMany(p => p.RhuTBieSolicitudes)
                .HasForeignKey(d => d.PBieSocId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_RhuT_BieSolSocios");

            entity.HasOne(d => d.TipoBeneficioNavigation).WithMany(p => p.RhuTBieSolicitudeTipoBeneficioNavigations)
                .HasForeignKey(d => d.TipoBeneficio)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_RhuT_BieSolTBenef");
        });

        modelBuilder.Entity<RhuTBieTmpTegreso>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("RhuT_BieTmpTEgresos");

            entity.Property(e => e.CodBeneficio).HasColumnType("money");
            entity.Property(e => e.CodOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EntRazonSocial)
                .HasMaxLength(120)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EntRut)
                .HasMaxLength(12)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.FecSolicitud)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Solicitud");
            entity.Property(e => e.PBeneficiosId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pBeneficiosId");
            entity.Property(e => e.PBieSocId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pBieSocId");
            entity.Property(e => e.PBieSolId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pBieSolId");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.ValAprobado)
                .HasColumnType("money")
                .HasColumnName("Val_Aprobado");
        });

        modelBuilder.Entity<RhuTBieTmpTnewSocio>(entity =>
        {
            entity.HasKey(e => new { e.PBieSocId, e.PAfiCtoId });

            entity.ToTable("RhuT_BieTmpTNewSocios");

            entity.Property(e => e.PBieSocId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pBieSocId");
            entity.Property(e => e.PAfiCtoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pAfiCtoId");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
        });

        modelBuilder.Entity<RhuTBieTmpTtraspasoRem>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("RhuT_BieTmpTTraspasoRem");

            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.FldUserCode)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("fld_UserCode");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PBieSolId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pBieSolId");
            entity.Property(e => e.PProcRemId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pProcRemId");
        });

        modelBuilder.Entity<RhuTBitacoraFicErr>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("RhuT_BitacoraFicErr");

            entity.Property(e => e.BitFicArchivo)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.BitFicGlosaErr).HasColumnType("text");
            entity.Property(e => e.IdFuncionUlt)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult");
        });

        modelBuilder.Entity<RhuTBitacoraFicha>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("RhuT_BitacoraFichas");

            entity.Property(e => e.BitFicArchivo)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.BitFicFecha).HasColumnType("datetime");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
        });

        modelBuilder.Entity<RhuTCapAgrupaDet>(entity =>
        {
            entity.HasKey(e => e.CapAgrDetId);

            entity.ToTable("RhuT_CapAgrupaDet");

            entity.HasIndex(e => new { e.PCapAgrId, e.PCreId }, "U1_RhuT_CapAgrupaDet").IsUnique();

            entity.Property(e => e.CapAgrDetId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PCapAgrId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCapAgrId");
            entity.Property(e => e.PCreId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCreId");

            entity.HasOne(d => d.PCapAgr).WithMany(p => p.RhuTCapAgrupaDets)
                .HasForeignKey(d => d.PCapAgrId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK02_RhuT_CapAgrupaDet");

            entity.HasOne(d => d.PCre).WithMany(p => p.RhuTCapAgrupaDets)
                .HasForeignKey(d => d.PCreId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK01_RhuT_CapAgrupaDet");
        });

        modelBuilder.Entity<RhuTCapAgrupacion>(entity =>
        {
            entity.HasKey(e => e.CapAgrId);

            entity.ToTable("RhuT_CapAgrupacion");

            entity.HasIndex(e => new { e.PEmpId, e.CapAgrNombre }, "U1_RhuT_CapAgrupacion").IsUnique();

            entity.Property(e => e.CapAgrId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.CapAgrNombre)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
        });

        modelBuilder.Entity<RhuTCapConfigEmp>(entity =>
        {
            entity.HasKey(e => e.CapConfId);

            entity.ToTable("RhuT_CapConfigEmp");

            entity.HasIndex(e => e.PEmpId, "U1_RhuT_CapConfigEmp").IsUnique();

            entity.Property(e => e.CapConfId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PTabParId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTabParId");
        });

        modelBuilder.Entity<RhuTCapCurso>(entity =>
        {
            entity.HasKey(e => e.CapCurId);

            entity.ToTable("RhuT_CapCursos");

            entity.HasIndex(e => e.CapCodCur, "U1_RhuT_CapCursos").IsUnique();

            entity.Property(e => e.CapCurId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.CapCodCur).HasColumnType("money");
            entity.Property(e => e.CapContenido)
                .HasMaxLength(255)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.CapMtoRefCur).HasColumnType("money");
            entity.Property(e => e.CapMtoRefParCur).HasColumnType("money");
            entity.Property(e => e.CapNomCur)
                .HasMaxLength(140)
                .IsUnicode(false);
            entity.Property(e => e.CapObjetivo)
                .HasMaxLength(255)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.CapRequisitos)
                .HasMaxLength(255)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.CapTemario)
                .HasMaxLength(255)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PCapTipCurId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCapTipCurId");
            entity.Property(e => e.PMonedaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMonedaId");

            entity.HasOne(d => d.PCapTipCur).WithMany(p => p.RhuTCapCursos)
                .HasForeignKey(d => d.PCapTipCurId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK01_RhuT_CapCursos");
        });

        modelBuilder.Entity<RhuTCapCursosCalen>(entity =>
        {
            entity.HasKey(e => e.CapCurCalId).HasName("PK_RhuT_CapCalendarios");

            entity.ToTable("RhuT_CapCursosCalen");

            entity.HasIndex(e => new { e.PCapCurEntId, e.CapCurCalFecIni }, "U1_RhuT_CapCalendarios").IsUnique();

            entity.Property(e => e.CapCurCalId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.CapCurCalFecFin).HasColumnType("datetime");
            entity.Property(e => e.CapCurCalFecIni).HasColumnType("datetime");
            entity.Property(e => e.CapCurLugar)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PBieEleId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pBieEleId");
            entity.Property(e => e.PCapCurEntId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCapCurEntId");
            entity.Property(e => e.PCapRelId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCapRelId");

            entity.HasOne(d => d.PCapCurEnt).WithMany(p => p.RhuTCapCursosCalens)
                .HasForeignKey(d => d.PCapCurEntId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK01_RhuT_CapCalen");

            entity.HasOne(d => d.PCapRel).WithMany(p => p.RhuTCapCursosCalens)
                .HasForeignKey(d => d.PCapRelId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK02_RhuT_CapCalen");
        });

        modelBuilder.Entity<RhuTCapCursosEnt>(entity =>
        {
            entity.HasKey(e => e.CapCurEntId).HasName("PK_RhuT_CapCurEnt");

            entity.ToTable("RhuT_CapCursosEnt");

            entity.HasIndex(e => new { e.PEntId, e.PCapCurId }, "U1_RhuT_CapCurEnt").IsUnique();

            entity.Property(e => e.CapCurEntId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.CapCurEntCod).HasColumnType("money");
            entity.Property(e => e.CapCurEntCodSence).HasColumnType("money");
            entity.Property(e => e.CapCurEntFecVig).HasColumnType("datetime");
            entity.Property(e => e.CapCurEntFecVigTer).HasColumnType("datetime");
            entity.Property(e => e.CapCurEntNom)
                .HasMaxLength(100)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PCapCurId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCapCurId");
            entity.Property(e => e.PCapNotasId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCapNotasId");
            entity.Property(e => e.PCapTipEvalId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCapTipEvalId");
            entity.Property(e => e.PEntId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntId");

            entity.HasOne(d => d.PCapCur).WithMany(p => p.RhuTCapCursosEnts)
                .HasForeignKey(d => d.PCapCurId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK01_RhuT_CapCurEnt");

            entity.HasOne(d => d.PCapNotas).WithMany(p => p.RhuTCapCursosEnts)
                .HasForeignKey(d => d.PCapNotasId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK04_RhuT_CapCurNot");

            entity.HasOne(d => d.PCapTipEval).WithMany(p => p.RhuTCapCursosEnts)
                .HasForeignKey(d => d.PCapTipEvalId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK03_RhuT_CapCurEva");

            entity.HasOne(d => d.PEnt).WithMany(p => p.RhuTCapCursosEnts)
                .HasForeignKey(d => d.PEntId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK02_RhuT_CapCurEnt");
        });

        modelBuilder.Entity<RhuTCapCursosHor>(entity =>
        {
            entity.HasKey(e => e.CapCurHorId).HasName("PK_RhuT_CapHoras");

            entity.ToTable("RhuT_CapCursosHor");

            entity.HasIndex(e => new { e.PCapCurCalId, e.CapHorSeq, e.CapHorDia }, "U1_RhuT_CapHoras").IsUnique();

            entity.Property(e => e.CapCurHorId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.CapCurHorFin).HasColumnType("datetime");
            entity.Property(e => e.CapCurHorIni).HasColumnType("datetime");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PCapCurCalId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCapCurCalId");

            entity.HasOne(d => d.PCapCurCal).WithMany(p => p.RhuTCapCursosHors)
                .HasForeignKey(d => d.PCapCurCalId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK01_RhuT_CapHoras");
        });

        modelBuilder.Entity<RhuTCapCursosPrecio>(entity =>
        {
            entity.HasKey(e => e.CapCurPreId).HasName("PK_RhuT_CapCurPre");

            entity.ToTable("RhuT_CapCursosPrecio");

            entity.HasIndex(e => new { e.PCapCurEntId, e.CapCurPreFecVig }, "U1_RhuT_CapCurPre").IsUnique();

            entity.Property(e => e.CapCurPreId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.CapCurPreFecVig).HasColumnType("datetime");
            entity.Property(e => e.CapMtoCur).HasColumnType("money");
            entity.Property(e => e.CapMtoParCur).HasColumnType("money");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PCapCurEntId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCapCurEntId");
            entity.Property(e => e.PMonedaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMonedaId");

            entity.HasOne(d => d.PCapCurEnt).WithMany(p => p.RhuTCapCursosPrecios)
                .HasForeignKey(d => d.PCapCurEntId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK01_RhuT_CapCurPre");
        });

        modelBuilder.Entity<RhuTCapEjeNomina>(entity =>
        {
            entity.HasKey(e => e.CapEjeNomId);

            entity.ToTable("RhuT_CapEjeNominas");

            entity.HasIndex(e => new { e.PCapEjeId, e.PCtoId }, "U1_RhuT_CapEjeNominas").IsUnique();

            entity.Property(e => e.CapEjeNomId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.CapEjeNomMtoEmp).HasColumnType("money");
            entity.Property(e => e.CapEjeNomMtoSen).HasColumnType("money");
            entity.Property(e => e.CapEjeNomMtoTra).HasColumnType("money");
            entity.Property(e => e.CapEjeNomMtoVia).HasColumnType("money");
            entity.Property(e => e.CapEjeNomNotasId).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.CapEjeNomObserv)
                .HasMaxLength(255)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PCapEjeId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCapEjeId");
            entity.Property(e => e.PCtoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtoId");

            entity.HasOne(d => d.CapEjeNomNotas).WithMany(p => p.RhuTCapEjeNominas)
                .HasForeignKey(d => d.CapEjeNomNotasId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK03_RhuT_CapNomCurNot");

            entity.HasOne(d => d.PCapEje).WithMany(p => p.RhuTCapEjeNominas)
                .HasForeignKey(d => d.PCapEjeId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK01_RhuT_CapNomEjecucion");

            entity.HasOne(d => d.PCto).WithMany(p => p.RhuTCapEjeNominas)
                .HasForeignKey(d => d.PCtoId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK02_RhuT_CapNomEjecCto");
        });

        modelBuilder.Entity<RhuTCapEjeSence>(entity =>
        {
            entity.HasKey(e => e.CapEjeSenId);

            entity.ToTable("RhuT_CapEjeSence");

            entity.HasIndex(e => e.PCapEjeId, "U1_RhuT_CapEjeSence").IsUnique();

            entity.Property(e => e.CapEjeSenId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.CapEjeSenFecIng).HasColumnType("datetime");
            entity.Property(e => e.CapEjeSenFecLiq).HasColumnType("datetime");
            entity.Property(e => e.CapEjeSenFecPre).HasColumnType("datetime");
            entity.Property(e => e.CapEjeSenFraApr).HasColumnType("money");
            entity.Property(e => e.CapEjeSenFraSol).HasColumnType("money");
            entity.Property(e => e.CapEjeSenNroReg).HasColumnType("money");
            entity.Property(e => e.CapEjeSenObserv)
                .HasMaxLength(255)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.CapEjeSenTraApr).HasColumnType("money");
            entity.Property(e => e.CapEjeSenTraSol).HasColumnType("money");
            entity.Property(e => e.CapEjeSenViaApr).HasColumnType("money");
            entity.Property(e => e.CapEjeSenViaSol).HasColumnType("money");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PCapEjeId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCapEjeId");
            entity.Property(e => e.PCapEjeSenEstId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCapEjeSenEstId");

            entity.HasOne(d => d.PCapEje).WithOne(p => p.RhuTCapEjeSence)
                .HasForeignKey<RhuTCapEjeSence>(d => d.PCapEjeId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK01_RhuT_CapSenceEjec");

            entity.HasOne(d => d.PCapEjeSenEst).WithMany(p => p.RhuTCapEjeSences)
                .HasForeignKey(d => d.PCapEjeSenEstId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK02_RhuT_CapEjeSenceEst");
        });

        modelBuilder.Entity<RhuTCapEjecucion>(entity =>
        {
            entity.HasKey(e => e.CapEjeId);

            entity.ToTable("RhuT_CapEjecucion");

            entity.Property(e => e.CapEjeId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.CapEjeItmEstId).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.CapEjeItmTipDoc).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.CapEjeItmValId).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.CapEjeMtoCur).HasColumnType("money");
            entity.Property(e => e.CapEjeMtoDoc).HasColumnType("money");
            entity.Property(e => e.CapEjeMtoTra).HasColumnType("money");
            entity.Property(e => e.CapEjeMtoVia).HasColumnType("money");
            entity.Property(e => e.CapEjeObservacion)
                .HasMaxLength(255)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PCapCurCalId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCapCurCalId");
            entity.Property(e => e.PCapCurEntId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCapCurEntId");
            entity.Property(e => e.PCapCurPreId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCapCurPreId");
            entity.Property(e => e.PCapNotasId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCapNotasId");
            entity.Property(e => e.PCapPlanId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCapPlanId");
            entity.Property(e => e.PCapRelId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCapRelId");
            entity.Property(e => e.PCapTipEvalId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCapTipEvalId");

            entity.HasOne(d => d.CapEjeItmEst).WithMany(p => p.RhuTCapEjecucionCapEjeItmEsts)
                .HasForeignKey(d => d.CapEjeItmEstId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK07_RhuT_CapEjeEstados");

            entity.HasOne(d => d.CapEjeItmTipDocNavigation).WithMany(p => p.RhuTCapEjecucionCapEjeItmTipDocNavigations)
                .HasForeignKey(d => d.CapEjeItmTipDoc)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK06_RhuT_CapEjeTipDoctos");

            entity.HasOne(d => d.CapEjeItmVal).WithMany(p => p.RhuTCapEjecucionCapEjeItmVals)
                .HasForeignKey(d => d.CapEjeItmValId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK05_RhuT_CapEjeValorizacion");

            entity.HasOne(d => d.PCapCurCal).WithMany(p => p.RhuTCapEjecucions)
                .HasForeignKey(d => d.PCapCurCalId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK02_RhuT_CapCurCalendario");

            entity.HasOne(d => d.PCapCurEnt).WithMany(p => p.RhuTCapEjecucions)
                .HasForeignKey(d => d.PCapCurEntId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK01_RhuT_CapCurEntidad");

            entity.HasOne(d => d.PCapCurPre).WithMany(p => p.RhuTCapEjecucions)
                .HasForeignKey(d => d.PCapCurPreId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK04_RhuT_CapCurPrecios");

            entity.HasOne(d => d.PCapPlan).WithMany(p => p.RhuTCapEjecucions)
                .HasForeignKey(d => d.PCapPlanId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK03_RhuT_CapCurPlanes");
        });

        modelBuilder.Entity<RhuTCapEntidade>(entity =>
        {
            entity.HasKey(e => e.PEntId);

            entity.ToTable("RhuT_CapEntidades");

            entity.HasIndex(e => e.PEntId, "U1_RhuT_CapEntidades").IsUnique();

            entity.Property(e => e.PEntId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntId");
            entity.Property(e => e.CapNomCon)
                .HasMaxLength(100)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.CapTelCon)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PCapEstEntId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCapEstEntId");
            entity.Property(e => e.PCapTipEntId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCapTipEntId");

            entity.HasOne(d => d.PEnt).WithOne(p => p.RhuTCapEntidade)
                .HasForeignKey<RhuTCapEntidade>(d => d.PEntId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK01_RhuT_CapEntidades");
        });

        modelBuilder.Entity<RhuTCapFranquicia>(entity =>
        {
            entity.HasKey(e => e.CapFraId);

            entity.ToTable("RhuT_CapFranquicias");

            entity.HasIndex(e => new { e.PEmpId, e.PPerRemId }, "U1_RhuT_CapFranquicias").IsUnique();

            entity.Property(e => e.CapFraId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.CapFraMonCurAnu).HasColumnType("money");
            entity.Property(e => e.CapFraMonCurIng).HasColumnType("money");
            entity.Property(e => e.CapFraMonCurLiq).HasColumnType("money");
            entity.Property(e => e.CapFraMonCurPre).HasColumnType("money");
            entity.Property(e => e.CapFraMonTotFrn).HasColumnType("money");
            entity.Property(e => e.CapFraMonTotPry).HasColumnType("money");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PPerRemId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pPerRemId");
        });

        modelBuilder.Entity<RhuTCapMallaCur>(entity =>
        {
            entity.HasKey(e => e.CapMallaId);

            entity.ToTable("RhuT_CapMallaCur");

            entity.HasIndex(e => new { e.PEmpId, e.CgoCodCargo, e.PCapCurId, e.PItmParId }, "U1_RhuT_CapMallaCur").IsUnique();

            entity.Property(e => e.CapMallaId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PCapCurId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCapCurId");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PItmParId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pItmParId");

            entity.HasOne(d => d.PCapCur).WithMany(p => p.RhuTCapMallaCurs)
                .HasForeignKey(d => d.PCapCurId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK01_RhuT_CapMallaCur");
        });

        modelBuilder.Entity<RhuTCapMallaGen>(entity =>
        {
            entity.HasKey(e => e.CapMalGenId);

            entity.ToTable("RhuT_CapMallaGen");

            entity.HasIndex(e => new { e.EjeAno, e.PCtoId, e.PCapMallaId }, "U1_RhuT_CapMallaGen").IsUnique();

            entity.Property(e => e.CapMalGenId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PCapEjeNomId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCapEjeNomId");
            entity.Property(e => e.PCapMallaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCapMallaId");
            entity.Property(e => e.PCtoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtoId");

            entity.HasOne(d => d.PCapMalla).WithMany(p => p.RhuTCapMallaGens)
                .HasForeignKey(d => d.PCapMallaId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK01_RhuT_CapMalGen");
        });

        modelBuilder.Entity<RhuTCapParArea>(entity =>
        {
            entity.HasKey(e => e.CapAreaId).HasName("PK_RhuT_CapParArea");

            entity.ToTable("RhuT_CapParAreas");

            entity.Property(e => e.CapAreaId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.CapAreaDes)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
        });

        modelBuilder.Entity<RhuTCapParFranquicia>(entity =>
        {
            entity.HasKey(e => e.CapFraTramo);

            entity.ToTable("RhuT_CapParFranquicias");

            entity.Property(e => e.CapFraTramo).ValueGeneratedNever();
            entity.Property(e => e.CapFraUtmFin).HasColumnType("money");
            entity.Property(e => e.CapFraUtmIni).HasColumnType("money");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
        });

        modelBuilder.Entity<RhuTCapParHrsSence>(entity =>
        {
            entity.HasKey(e => e.CapParHrsId).HasName("PK_RhuT_CapParHrsSen");

            entity.ToTable("RhuT_CapParHrsSence");

            entity.HasIndex(e => e.CapParHrsFecIni, "U1_RhuT_CapParHrsSen").IsUnique();

            entity.Property(e => e.CapParHrsId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.CapParHrsFecIni).HasColumnType("datetime");
            entity.Property(e => e.CapParHrsValor).HasColumnType("money");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
        });

        modelBuilder.Entity<RhuTCapParNota>(entity =>
        {
            entity.HasKey(e => e.CapNotasId);

            entity.ToTable("RhuT_CapParNotas");

            entity.HasIndex(e => new { e.PCapTipEvalId, e.CapNotasCod }, "PK1_RhuT_CapParNotas").IsUnique();

            entity.Property(e => e.CapNotasId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.CapNotasCod)
                .HasMaxLength(4)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.CapNotasDes)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PCapTipEvalId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCapTipEvalId");

            entity.HasOne(d => d.PCapTipEval).WithMany(p => p.RhuTCapParNota)
                .HasForeignKey(d => d.PCapTipEvalId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK01_RhuT_CapParNotas");
        });

        modelBuilder.Entity<RhuTCapParTipEval>(entity =>
        {
            entity.HasKey(e => e.CapTipEvalId).HasName("PK_RhuT_CapTipEval");

            entity.ToTable("RhuT_CapParTipEval");

            entity.Property(e => e.CapTipEvalId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.CapTipEvalDes)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
        });

        modelBuilder.Entity<RhuTCapParTpCurso>(entity =>
        {
            entity.HasKey(e => e.CapTipCurId).HasName("PK_RhuT_CapTipCurso");

            entity.ToTable("RhuT_CapParTpCurso");

            entity.Property(e => e.CapTipCurId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.CapTipCurDes)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
        });

        modelBuilder.Entity<RhuTCapPlane>(entity =>
        {
            entity.HasKey(e => e.CapPlanId);

            entity.ToTable("RhuT_CapPlanes");

            entity.Property(e => e.CapPlanId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.CapPlanFecInicio).HasColumnType("datetime");
            entity.Property(e => e.CapPlanFecTermino).HasColumnType("datetime");
            entity.Property(e => e.CapPlanItmVal).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PCapCurEntId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCapCurEntId");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PItmParEstId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pItmParEstId");

            entity.HasOne(d => d.PCapCurEnt).WithMany(p => p.RhuTCapPlanes)
                .HasForeignKey(d => d.PCapCurEntId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK02_RhuT_CapPlanes");

            entity.HasOne(d => d.PItmParEst).WithMany(p => p.RhuTCapPlanes)
                .HasForeignKey(d => d.PItmParEstId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK01_RhuT_CapPlanes");
        });

        modelBuilder.Entity<RhuTCapPlanesDet>(entity =>
        {
            entity.HasKey(e => e.CapPlanDetId);

            entity.ToTable("RhuT_CapPlanesDet");

            entity.HasIndex(e => new { e.PCapPlanId, e.PCtoId }, "U1_RhuT_CapPlanesDet").IsUnique();

            entity.Property(e => e.CapPlanDetId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PCapEjeId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCapEjeId");
            entity.Property(e => e.PCapPlanId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCapPlanId");
            entity.Property(e => e.PCtoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtoId");

            entity.HasOne(d => d.PCapPlan).WithMany(p => p.RhuTCapPlanesDets)
                .HasForeignKey(d => d.PCapPlanId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK02_RhuT_CapPlanesDet");

            entity.HasOne(d => d.PCto).WithMany(p => p.RhuTCapPlanesDets)
                .HasForeignKey(d => d.PCtoId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK01_RhuT_CapPlanesDet");
        });

        modelBuilder.Entity<RhuTCapPostulante>(entity =>
        {
            entity.HasKey(e => e.CapPostId);

            entity.ToTable("RhuT_CapPostulantes");

            entity.Property(e => e.CapPostId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.CapPosFechaSol).HasColumnType("datetime");
            entity.Property(e => e.CapPosMotivo)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PCtoSecId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtoSecId");
        });

        modelBuilder.Entity<RhuTCapPostulantesDet>(entity =>
        {
            entity.HasKey(e => e.CapPosDetId).HasName("PK_RhuT_CapPostDet");

            entity.ToTable("RhuT_CapPostulantesDet");

            entity.Property(e => e.CapPosDetId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PCapCurId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCapCurId");
            entity.Property(e => e.PCapEjeDetId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCapEjeDetId");
            entity.Property(e => e.PCapPostId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCapPostId");
            entity.Property(e => e.PCtoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtoId");
            entity.Property(e => e.PItmParEstId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pItmParEstId");

            entity.HasOne(d => d.PCapCur).WithMany(p => p.RhuTCapPostulantesDets)
                .HasForeignKey(d => d.PCapCurId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK3_RhuT_CapPostDet");

            entity.HasOne(d => d.PCapPost).WithMany(p => p.RhuTCapPostulantesDets)
                .HasForeignKey(d => d.PCapPostId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK1_RhuT_CapPostDet");

            entity.HasOne(d => d.PCto).WithMany(p => p.RhuTCapPostulantesDets)
                .HasForeignKey(d => d.PCtoId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK2_RhuT_CapPostDet");

            entity.HasOne(d => d.PItmParEst).WithMany(p => p.RhuTCapPostulantesDets)
                .HasForeignKey(d => d.PItmParEstId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK4_RhuT_CapPostul");
        });

        modelBuilder.Entity<RhuTCapPresupuesto>(entity =>
        {
            entity.HasKey(e => e.CapPptoId).HasName("PK_RhuT_CapPpto");

            entity.ToTable("RhuT_CapPresupuesto");

            entity.HasIndex(e => new { e.PCapConfId, e.EjeAno, e.DivCodigo, e.PCreId, e.PCapAgrId }, "U1_RhuT_CapPpto").IsUnique();

            entity.Property(e => e.CapPptoId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.CapMtoPpto).HasColumnType("money");
            entity.Property(e => e.CapMtoUsado).HasColumnType("money");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PCapAgrId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCapAgrId");
            entity.Property(e => e.PCapConfId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCapConfId");
            entity.Property(e => e.PCreId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCreId");
            entity.Property(e => e.PMonedaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMonedaId");

            entity.HasOne(d => d.PCapConf).WithMany(p => p.RhuTCapPresupuestos)
                .HasForeignKey(d => d.PCapConfId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK01_RhuT_CapPresupuesto");
        });

        modelBuilder.Entity<RhuTCapRelatore>(entity =>
        {
            entity.HasKey(e => e.CapRelId).HasName("PK_RhuT_CapRelator");

            entity.ToTable("RhuT_CapRelatores");

            entity.HasIndex(e => e.EntRut3, "U1_RhuT_CapRelator").IsUnique();

            entity.Property(e => e.CapRelId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EntRazonSocial3)
                .HasMaxLength(120)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EntRut3)
                .HasMaxLength(12)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
        });

        modelBuilder.Entity<RhuTCapTematica>(entity =>
        {
            entity.HasKey(e => e.PEntId);

            entity.ToTable("RhuT_CapTematicas");

            entity.HasIndex(e => new { e.PEntId, e.PCapAreaId }, "U1_RhuT_CapTematicas").IsUnique();

            entity.Property(e => e.PEntId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntId");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PCapAreaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCapAreaId");

            entity.HasOne(d => d.PCapArea).WithMany(p => p.RhuTCapTematicas)
                .HasForeignKey(d => d.PCapAreaId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK01_RhuT_CapTemas");

            entity.HasOne(d => d.PEnt).WithOne(p => p.RhuTCapTematica)
                .HasForeignKey<RhuTCapTematica>(d => d.PEntId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK02_RhuT_CapTemas");
        });

        modelBuilder.Entity<RhuTCtoAfiliacionVol>(entity =>
        {
            entity.HasKey(e => e.CtoAfiVolId).HasName("PK_RhuT_CtoAfiVol");

            entity.ToTable("RhuT_CtoAfiliacionVol");

            entity.HasIndex(e => new { e.PCtoId, e.PEntId, e.CtoAfiVolFecInicio, e.PInsParAfiVolId }, "U1_RhuT_CtoAfiVol").IsUnique();

            entity.Property(e => e.CtoAfiVolId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.CtoAfiVolFecInicio).HasColumnType("datetime");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PCtoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtoId");
            entity.Property(e => e.PEntId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntId");
            entity.Property(e => e.PInsParAfiVolId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pInsParAfiVolId");
            entity.Property(e => e.PMonedaAfiVolId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMonedaAfiVolId");

            entity.HasOne(d => d.PCto).WithMany(p => p.RhuTCtoAfiliacionVols)
                .HasForeignKey(d => d.PCtoId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_RhuT_AfiVolCtos");

            entity.HasOne(d => d.PEnt).WithMany(p => p.RhuTCtoAfiliacionVols)
                .HasForeignKey(d => d.PEntId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_RhuT_AfiVolEntidad");

            entity.HasOne(d => d.PInsParAfiVol).WithMany(p => p.RhuTCtoAfiliacionVols)
                .HasForeignKey(d => d.PInsParAfiVolId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_RhuT_AfiVolInstitucion");

            entity.HasOne(d => d.PMonedaAfiVol).WithMany(p => p.RhuTCtoAfiliacionVols)
                .HasForeignKey(d => d.PMonedaAfiVolId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_RhuT_AfiVolMoneda");
        });

        modelBuilder.Entity<RhuTCtoAfiliacione>(entity =>
        {
            entity.HasKey(e => e.AfiCtoId);

            entity.ToTable("RhuT_CtoAfiliaciones");

            entity.Property(e => e.AfiCtoId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.AfiCtoFecVigDesde).HasColumnType("datetime");
            entity.Property(e => e.AfiCtoFecVigHasta).HasColumnType("datetime");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PCtoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtoId");
            entity.Property(e => e.PItmParId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pItmParId");

            entity.HasOne(d => d.PCto).WithMany(p => p.RhuTCtoAfiliaciones)
                .HasForeignKey(d => d.PCtoId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_RhuT_CtoAfiliaciones");

            entity.HasOne(d => d.PItmPar).WithMany(p => p.RhuTCtoAfiliaciones)
                .HasForeignKey(d => d.PItmParId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK1_RhuT_CtoAfiliaciones");
        });

        modelBuilder.Entity<RhuTCtoAnxContrato>(entity =>
        {
            entity.HasKey(e => e.AnxCtoId);

            entity.ToTable("RhuT_CtoAnxContratos");

            entity.HasIndex(e => new { e.PCtoId, e.AnxCtoPeriodoDesde, e.FecUltModifReg }, "RhuT_CtoAnxContratos_idx011");

            entity.HasIndex(e => new { e.AnxCtoPeriodoDesde, e.PCtoId, e.AnxCtoId }, "Rhut_CtoAnxContratos_idx010");

            entity.Property(e => e.AnxCtoId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.AnxCtoDicNumOrder)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.AnxCtoFecAntiguedad).HasColumnType("datetime");
            entity.Property(e => e.AnxCtoFecCompromiso).HasColumnType("datetime");
            entity.Property(e => e.AnxCtoFecFiniquito).HasColumnType("datetime");
            entity.Property(e => e.AnxCtoFecRenovacion).HasColumnType("datetime");
            entity.Property(e => e.AnxCtoFecVigencia).HasColumnType("datetime");
            entity.Property(e => e.AnxCtoNumero).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.AnxCtoSecuencia)
                .HasMaxLength(10)
                .IsUnicode(false);
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PCcafEntId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCcafEntId");
            entity.Property(e => e.PCreId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCreId");
            entity.Property(e => e.PCtoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtoId");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PFicPerId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pFicPerId");
            entity.Property(e => e.PItmCalJurAnxId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pItmCalJurAnxId");
            entity.Property(e => e.PItmCategoriaAnxId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pItmCategoriaAnxId");
            entity.Property(e => e.PItmEstadoAnxCtoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pItmEstadoAnxCtoId");
            entity.Property(e => e.PItmGruConAnxId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pItmGruConAnxId");
            entity.Property(e => e.PItmIntegroAnxId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pItmIntegroAnxId");
            entity.Property(e => e.PItmJornadaAnxId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pItmJornadaAnxId");
            entity.Property(e => e.PItmLugarPagoAnxId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pItmLugarPagoAnxId");
            entity.Property(e => e.PItmTpContratoAnxId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pItmTpContratoAnxId");
            entity.Property(e => e.PItmTpImptoAnxId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pItmTpImptoAnxId");
            entity.Property(e => e.PItmTpRtaAnxId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pItmTpRtaAnxId");
            entity.Property(e => e.PLugId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pLugId");
            entity.Property(e => e.PMutualEntId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMutualEntId");
            entity.Property(e => e.PMutualEntSucId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMutualEntSucId");
            entity.Property(e => e.PSdeId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pSDeId");

            entity.HasOne(d => d.PCre).WithMany(p => p.RhuTCtoAnxContratos)
                .HasForeignKey(d => d.PCreId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK09_RhuT_CtoAnxContrato");

            entity.HasOne(d => d.PCto).WithMany(p => p.RhuTCtoAnxContratos)
                .HasForeignKey(d => d.PCtoId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_RhuT_CtoAnxContratos");

            entity.HasOne(d => d.PEmp).WithMany(p => p.RhuTCtoAnxContratos)
                .HasForeignKey(d => d.PEmpId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK02_RhuT_CtoAnxContrato");

            entity.HasOne(d => d.PFicPer).WithMany(p => p.RhuTCtoAnxContratos)
                .HasForeignKey(d => d.PFicPerId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK01_RhuT_CtoAnxContrato");

            entity.HasOne(d => d.PItmCalJurAnx).WithMany(p => p.RhuTCtoAnxContratoPItmCalJurAnxes)
                .HasForeignKey(d => d.PItmCalJurAnxId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK07_RhuT_CtoAnxContrato");

            entity.HasOne(d => d.PItmCategoriaAnx).WithMany(p => p.RhuTCtoAnxContratoPItmCategoriaAnxes)
                .HasForeignKey(d => d.PItmCategoriaAnxId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK06_RhuT_CtoAnxContrato");

            entity.HasOne(d => d.PItmIntegroAnx).WithMany(p => p.RhuTCtoAnxContratoPItmIntegroAnxes)
                .HasForeignKey(d => d.PItmIntegroAnxId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK12_RhuT_CtoAnxContrato");

            entity.HasOne(d => d.PItmJornadaAnx).WithMany(p => p.RhuTCtoAnxContratoPItmJornadaAnxes)
                .HasForeignKey(d => d.PItmJornadaAnxId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK08_RhuT_CtoAnxContrato");

            entity.HasOne(d => d.PItmLugarPagoAnx).WithMany(p => p.RhuTCtoAnxContratoPItmLugarPagoAnxes)
                .HasForeignKey(d => d.PItmLugarPagoAnxId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK10_RhuT_CtoAnxContrato");

            entity.HasOne(d => d.PItmTpContratoAnx).WithMany(p => p.RhuTCtoAnxContratoPItmTpContratoAnxes)
                .HasForeignKey(d => d.PItmTpContratoAnxId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK03_RhuT_CtoAnxContrato");

            entity.HasOne(d => d.PItmTpImptoAnx).WithMany(p => p.RhuTCtoAnxContratoPItmTpImptoAnxes)
                .HasForeignKey(d => d.PItmTpImptoAnxId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK05_RhuT_CtoAnxContrato");

            entity.HasOne(d => d.PItmTpRtaAnx).WithMany(p => p.RhuTCtoAnxContratoPItmTpRtaAnxes)
                .HasForeignKey(d => d.PItmTpRtaAnxId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK04_RhuT_CtoAnxContrato");

            entity.HasOne(d => d.PLug).WithMany(p => p.RhuTCtoAnxContratos)
                .HasForeignKey(d => d.PLugId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK11_RhuT_CtoAnxContrato");
        });

        modelBuilder.Entity<RhuTCtoConfiguracion>(entity =>
        {
            entity.HasKey(e => e.CtoDefId);

            entity.ToTable("RhuT_CtoConfiguracion");

            entity.HasIndex(e => new { e.PEmpId, e.PFnqCauReaId }, "U1_RhuT_CtoConfiguracion").IsUnique();

            entity.Property(e => e.CtoDefId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PFnqCauReaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pFnqCauReaId");

            entity.HasOne(d => d.PEmp).WithMany(p => p.RhuTCtoConfiguracions)
                .HasForeignKey(d => d.PEmpId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK1_RhuT_CtoConfEmpresa");

            entity.HasOne(d => d.PFnqCauRea).WithMany(p => p.RhuTCtoConfiguracions)
                .HasForeignKey(d => d.PFnqCauReaId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK2_RhuT_CtoConfCausal");
        });

        modelBuilder.Entity<RhuTCtoContrato>(entity =>
        {
            entity.HasKey(e => e.CtoId);

            entity.ToTable("RhuT_CtoContratos", tb => tb.HasTrigger("RhuT_CtoContratos_Update"));

            entity.HasIndex(e => e.CtoId, "RhuT_CtoContratos_idx010");

            entity.HasIndex(e => new { e.PItmCtoEstado, e.PFnqSolDetId, e.CtoFecVigencia, e.PEmpId }, "RhuT_CtoContratos_idx011");

            entity.HasIndex(e => new { e.PItmCtoEstado, e.PEmpId, e.PFicPerId, e.DivCodigo, e.CgoCodCargo, e.PCreId, e.CtoFecVigencia, e.PItmCategoriaId, e.CtoId, e.CtoNumero }, "RhuT_CtoContratos_idx012");

            entity.HasIndex(e => new { e.PFicPerId, e.PEmpId, e.CtoFecVigencia, e.CtoNumero }, "U1_RhuT_CtoContratos").IsUnique();

            entity.Property(e => e.CtoId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.CtoFecAntiguedad).HasColumnType("datetime");
            entity.Property(e => e.CtoFecCompromiso).HasColumnType("datetime");
            entity.Property(e => e.CtoFecFiniquito).HasColumnType("datetime");
            entity.Property(e => e.CtoFecRenovacion).HasColumnType("datetime");
            entity.Property(e => e.CtoFecVigencia).HasColumnType("datetime");
            entity.Property(e => e.CtoNumero).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.CtoSecuencia)
                .HasMaxLength(10)
                .IsUnicode(false);
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PCcafEntId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCcafEntId");
            entity.Property(e => e.PCreId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCreId");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PFicPerId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pFicPerId");
            entity.Property(e => e.PFnqSolDetId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pFnqSolDetId");
            entity.Property(e => e.PItmCalJurId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pItmCalJurId");
            entity.Property(e => e.PItmCategoriaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pItmCategoriaId");
            entity.Property(e => e.PItmCtoEstado)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pItmCtoEstado");
            entity.Property(e => e.PItmGruConId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pItmGruConId");
            entity.Property(e => e.PItmIntegroId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pItmIntegroId");
            entity.Property(e => e.PItmJornadaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pItmJornadaId");
            entity.Property(e => e.PItmLugarPagoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pItmLugarPagoId");
            entity.Property(e => e.PItmTpContratoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pItmTpContratoId");
            entity.Property(e => e.PItmTpImptoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pItmTpImptoId");
            entity.Property(e => e.PItmTpRtaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pItmTpRtaId");
            entity.Property(e => e.PLugId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pLugId");
            entity.Property(e => e.PMutualEntId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMutualEntId");
            entity.Property(e => e.PMutualEntSucId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMutualEntSucId");
            entity.Property(e => e.PSdeId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pSDeId");

            entity.HasOne(d => d.PCre).WithMany(p => p.RhuTCtoContratos)
                .HasForeignKey(d => d.PCreId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK9_RhuT_CtoContrato");

            entity.HasOne(d => d.PEmp).WithMany(p => p.RhuTCtoContratos)
                .HasForeignKey(d => d.PEmpId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK2_RhuT_CtoContrato");

            entity.HasOne(d => d.PFicPer).WithMany(p => p.RhuTCtoContratos)
                .HasForeignKey(d => d.PFicPerId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_RhuT_CtoContrato");

            entity.HasOne(d => d.PItmCalJur).WithMany(p => p.RhuTCtoContratoPItmCalJurs)
                .HasForeignKey(d => d.PItmCalJurId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK7_RhuT_CtoContrato");

            entity.HasOne(d => d.PItmCategoria).WithMany(p => p.RhuTCtoContratoPItmCategoria)
                .HasForeignKey(d => d.PItmCategoriaId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK6_RhuT_CtoContrato");

            entity.HasOne(d => d.PItmIntegro).WithMany(p => p.RhuTCtoContratoPItmIntegros)
                .HasForeignKey(d => d.PItmIntegroId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK12_RhuT_CtoContrato");

            entity.HasOne(d => d.PItmJornada).WithMany(p => p.RhuTCtoContratoPItmJornada)
                .HasForeignKey(d => d.PItmJornadaId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK8_RhuT_CtoContrato");

            entity.HasOne(d => d.PItmLugarPago).WithMany(p => p.RhuTCtoContratoPItmLugarPagos)
                .HasForeignKey(d => d.PItmLugarPagoId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK10_RhuT_CtoContrato");

            entity.HasOne(d => d.PItmTpContrato).WithMany(p => p.RhuTCtoContratoPItmTpContratos)
                .HasForeignKey(d => d.PItmTpContratoId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK3_RhuT_CtoContrato");

            entity.HasOne(d => d.PItmTpImpto).WithMany(p => p.RhuTCtoContratoPItmTpImptos)
                .HasForeignKey(d => d.PItmTpImptoId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK5_RhuT_CtoContrato");

            entity.HasOne(d => d.PItmTpRta).WithMany(p => p.RhuTCtoContratoPItmTpRta)
                .HasForeignKey(d => d.PItmTpRtaId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK4_RhuT_CtoContrato");

            entity.HasOne(d => d.PLug).WithMany(p => p.RhuTCtoContratos)
                .HasForeignKey(d => d.PLugId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK11_RhuT_CtoContrato");
        });

        modelBuilder.Entity<RhuTCtoDatosCertif>(entity =>
        {
            entity.HasKey(e => e.DtoDatId);

            entity.ToTable("RhuT_CtoDatosCertif");

            entity.HasIndex(e => new { e.PDtoTipId, e.PDtoDicId, e.DtoDatFiltro, e.DtoDicUsoFiltro }, "U1_RhuT_CtoDatosCertif").IsUnique();

            entity.Property(e => e.DtoDatId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.DtoDatFiltro)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.DtoDicNomCol)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PDtoDicId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pDtoDicId");
            entity.Property(e => e.PDtoTipId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pDtoTipId");

            entity.HasOne(d => d.PDtoDic).WithMany(p => p.RhuTCtoDatosCertifs)
                .HasForeignKey(d => d.PDtoDicId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_RhuT_DatosDicc");

            entity.HasOne(d => d.PDtoTip).WithMany(p => p.RhuTCtoDatosCertifs)
                .HasForeignKey(d => d.PDtoTipId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_RhuT_DatosTipo");
        });

        modelBuilder.Entity<RhuTCtoDistribucion>(entity =>
        {
            entity.HasKey(e => e.DpaId);

            entity.ToTable("RhuT_CtoDistribucion");

            entity.HasIndex(e => e.PCtoId, "I1_RhuT_CtoDistribucion").HasFillFactor(90);

            entity.HasIndex(e => new { e.PCtoId, e.DpaFecInicio, e.PProcRemId }, "I2_RhuT_CtoDistribucion").HasFillFactor(90);

            entity.Property(e => e.DpaId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.DpaFecInicio)
                .HasColumnType("datetime")
                .HasColumnName("DPaFecInicio");
            entity.Property(e => e.DpaFecTermino)
                .HasColumnType("datetime")
                .HasColumnName("DPaFecTermino");
            entity.Property(e => e.DpaPorcentaje).HasColumnName("DPaPorcentaje");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PCtoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtoId");
            entity.Property(e => e.PEntId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntId");
            entity.Property(e => e.PEntSucId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntSucId");
            entity.Property(e => e.PProcRemId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pProcRemId");

            entity.HasOne(d => d.PCto).WithMany(p => p.RhuTCtoDistribucions)
                .HasForeignKey(d => d.PCtoId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_RhuT_CtoDistribucion");

            entity.HasOne(d => d.PEnt).WithMany(p => p.RhuTCtoDistribucions)
                .HasForeignKey(d => d.PEntId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK2_RhuT_CtoDistribucion");

            entity.HasOne(d => d.PEntSuc).WithMany(p => p.RhuTCtoDistribucions)
                .HasForeignKey(d => d.PEntSucId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK3_RhuT_CtoDistribucion");

            entity.HasOne(d => d.PProcRem).WithMany(p => p.RhuTCtoDistribucions)
                .HasForeignKey(d => d.PProcRemId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK1_RhuT_CtoDistribucion");
        });

        modelBuilder.Entity<RhuTCtoNominasCf>(entity =>
        {
            entity.HasKey(e => e.NomGfaId);

            entity.ToTable("RhuT_CtoNominasCF");

            entity.Property(e => e.NomGfaId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.NomGfaArchivo)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.NomGfaFecha).HasColumnType("datetime");
            entity.Property(e => e.NomGfaRuta)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PIcFseqId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pIcFSeqId");
            entity.Property(e => e.PInsParCcafId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pInsParCcafId");
            entity.Property(e => e.PItmNomGfaEstado)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pItmNomGfaEstado");

            entity.HasOne(d => d.PEmp).WithMany(p => p.RhuTCtoNominasCfs)
                .HasForeignKey(d => d.PEmpId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK1_RhuT_CtoNominasCF");

            entity.HasOne(d => d.PIcFseq).WithMany(p => p.RhuTCtoNominasCfs)
                .HasForeignKey(d => d.PIcFseqId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK4_RhuT_CtoNominasCF");

            entity.HasOne(d => d.PInsParCcaf).WithMany(p => p.RhuTCtoNominasCfs)
                .HasForeignKey(d => d.PInsParCcafId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK2_RhuT_CtoNominasCF");

            entity.HasOne(d => d.PItmNomGfaEstadoNavigation).WithMany(p => p.RhuTCtoNominasCfs)
                .HasForeignKey(d => d.PItmNomGfaEstado)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK3_RhuT_CtoNominasCF");
        });

        modelBuilder.Entity<RhuTCtoNominasCfdet>(entity =>
        {
            entity.HasKey(e => e.NomGfaDetId);

            entity.ToTable("RhuT_CtoNominasCFDet");

            entity.Property(e => e.NomGfaDetId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.NomGfaActividadLaboral)
                .HasMaxLength(255)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("NomGFaActividadLaboral");
            entity.Property(e => e.NomGfaFecEmision).HasColumnType("datetime");
            entity.Property(e => e.NomGfaFecInicio).HasColumnType("datetime");
            entity.Property(e => e.NomGfaFecNacimiento).HasColumnType("datetime");
            entity.Property(e => e.NomGfaFecTermino).HasColumnType("datetime");
            entity.Property(e => e.NomGfaFecVigencia).HasColumnType("datetime");
            entity.Property(e => e.PCtoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtoId");
            entity.Property(e => e.PFicPerId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pFicPerId");
            entity.Property(e => e.PGfaEmpAutEntId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pGFaEmpAutEntId");
            entity.Property(e => e.PGfaEntId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pGFaEntId");
            entity.Property(e => e.PItmNivEducId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pItmNivEducId");
            entity.Property(e => e.PItmNomGfaEstado)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pItmNomGfaEstado");
            entity.Property(e => e.PItmParentescoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pItmParentescoId");
            entity.Property(e => e.PItmSexoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pItmSexoId");
            entity.Property(e => e.PItmTipCargaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pItmTipCargaId");
            entity.Property(e => e.PNomGfaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pNomGfaId");

            entity.HasOne(d => d.PCto).WithMany(p => p.RhuTCtoNominasCfdets)
                .HasForeignKey(d => d.PCtoId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK02_RhuT_CtoNominasCFDet");

            entity.HasOne(d => d.PItmNomGfaEstadoNavigation).WithMany(p => p.RhuTCtoNominasCfdetPItmNomGfaEstadoNavigations)
                .HasForeignKey(d => d.PItmNomGfaEstado)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK06_RhuT_CtoNominasCFDet");

            entity.HasOne(d => d.PItmParentesco).WithMany(p => p.RhuTCtoNominasCfdetPItmParentescos)
                .HasForeignKey(d => d.PItmParentescoId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK04_RhuT_CtoNominasCFDet");

            entity.HasOne(d => d.PItmSexo).WithMany(p => p.RhuTCtoNominasCfdetPItmSexos)
                .HasForeignKey(d => d.PItmSexoId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK03_RhuT_CtoNominasCFDet");

            entity.HasOne(d => d.PItmTipCarga).WithMany(p => p.RhuTCtoNominasCfdetPItmTipCargas)
                .HasForeignKey(d => d.PItmTipCargaId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK05_RhuT_CtoNominasCFDet");

            entity.HasOne(d => d.PNomGfa).WithMany(p => p.RhuTCtoNominasCfdets)
                .HasForeignKey(d => d.PNomGfaId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK01_RhuT_CtoNominasCFDet");
        });

        modelBuilder.Entity<RhuTCtoObraFaena>(entity =>
        {
            entity.HasKey(e => e.CtoFaeId);

            entity.ToTable("RhuT_CtoObraFaena");

            entity.HasIndex(e => e.PCtoId, "I1_RhuT_CtoObraFaena").IsUnique();

            entity.Property(e => e.CtoFaeId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.CtoActividad)
                .HasMaxLength(2000)
                .IsUnicode(false);
            entity.Property(e => e.CtoLugAct)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PCtoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtoId");

            entity.HasOne(d => d.PCto).WithOne(p => p.RhuTCtoObraFaena)
                .HasForeignKey<RhuTCtoObraFaena>(d => d.PCtoId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_RhuT_CtoObraFaena");
        });

        modelBuilder.Entity<RhuTCtoReajuste>(entity =>
        {
            entity.HasKey(e => e.RteId);

            entity.ToTable("RhuT_CtoReajustes");

            entity.HasIndex(e => new { e.PEmpId, e.DivCodigo }, "I1_RhuT_CtoReajustes").HasFillFactor(90);

            entity.HasIndex(e => e.PCtoId, "I2_RhuT_CtoReajustes").HasFillFactor(90);

            entity.Property(e => e.RteId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PConcPerId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pConcPerId");
            entity.Property(e => e.PConcRemId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pConcRemId");
            entity.Property(e => e.PCtoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtoId");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PItmParDesId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pItmParDesId");
            entity.Property(e => e.PItmParHasId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pItmParHasId");
            entity.Property(e => e.PProcRemId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pProcRemId");
            entity.Property(e => e.PTabParId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTabParId");
            entity.Property(e => e.PTipCtoDesde)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTipCtoDesde");
            entity.Property(e => e.PTipCtoHasta)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTipCtoHasta");
            entity.Property(e => e.RteFecAntiguedadDes).HasColumnType("datetime");
            entity.Property(e => e.RteFecAntiguedadHas).HasColumnType("datetime");
            entity.Property(e => e.RteFecVigencia).HasColumnType("datetime");
            entity.Property(e => e.RteFecha).HasColumnType("datetime");
            entity.Property(e => e.RteObservacion)
                .HasMaxLength(150)
                .IsUnicode(false);
            entity.Property(e => e.RteValorMax).HasColumnType("money");
            entity.Property(e => e.RteValorMin).HasColumnType("money");

            entity.HasOne(d => d.PEmp).WithMany(p => p.RhuTCtoReajustes)
                .HasForeignKey(d => d.PEmpId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_RhuT_CtoReajustes");
        });

        modelBuilder.Entity<RhuTCtoReajustesDet>(entity =>
        {
            entity.HasKey(e => new { e.PRteId, e.PCtoId });

            entity.ToTable("RhuT_CtoReajustesDet");

            entity.HasIndex(e => e.PCtoId, "I1_RhuT_CtoReajustesDet").HasFillFactor(90);

            entity.Property(e => e.PRteId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pRteId");
            entity.Property(e => e.PCtoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtoId");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PPerRtaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pPerRtaId");
            entity.Property(e => e.PPerRtaNueId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pPerRtaNueId");
            entity.Property(e => e.RteDetValorAnt).HasColumnType("money");
            entity.Property(e => e.RteDetValorNue).HasColumnType("money");

            entity.HasOne(d => d.PCto).WithMany(p => p.RhuTCtoReajustesDets)
                .HasForeignKey(d => d.PCtoId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK1_RhuT_CtoReajustesDet");

            entity.HasOne(d => d.PRte).WithMany(p => p.RhuTCtoReajustesDets)
                .HasForeignKey(d => d.PRteId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_RhuT_CtoReajustesDet");
        });

        modelBuilder.Entity<RhuTCtoRenta>(entity =>
        {
            entity.HasKey(e => e.RtaId);

            entity.ToTable("RhuT_CtoRentas", tb => tb.HasTrigger("RhuT_CtoRentas_Delete"));

            entity.HasIndex(e => new { e.PCtoId, e.PConcRemId, e.RtaFecVigDesde }, "U1_RhuT_CtoRentas").IsUnique();

            entity.Property(e => e.RtaId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PConcRemId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pConcRemId");
            entity.Property(e => e.PCtoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtoId");
            entity.Property(e => e.RtaFecVigDesde).HasColumnType("datetime");
            entity.Property(e => e.RtaFecVigHasta).HasColumnType("datetime");
            entity.Property(e => e.RtaValAlfNum)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.RtaValBaseAlf)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.RtaValBaseNum).HasColumnType("money");
            entity.Property(e => e.RtaValFecha).HasColumnType("datetime");
            entity.Property(e => e.RtaValNumerico).HasColumnType("money");

            entity.HasOne(d => d.PConcRem).WithMany(p => p.RhuTCtoRenta)
                .HasForeignKey(d => d.PConcRemId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK1_RhuT_CtoRentas");

            entity.HasOne(d => d.PCto).WithMany(p => p.RhuTCtoRenta)
                .HasForeignKey(d => d.PCtoId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_RhuT_CtoRentas");
        });

        modelBuilder.Entity<RhuTCtoRetJudPago>(entity =>
        {
            entity.HasKey(e => e.RppId);

            entity.ToTable("RhuT_CtoRetJudPagos");

            entity.Property(e => e.RppId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.CpeFormula)
                .HasColumnType("text")
                .HasColumnName("CPeFormula");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PMdaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMdaId");
            entity.Property(e => e.PProcRemId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pProcRemId");
            entity.Property(e => e.PRetJudId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pRetJudId");
            entity.Property(e => e.RppMontoRetencion).HasColumnType("money");

            entity.HasOne(d => d.PMda).WithMany(p => p.RhuTCtoRetJudPagos)
                .HasForeignKey(d => d.PMdaId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK2_RhuT_CtoRetJudPagos");

            entity.HasOne(d => d.PProcRem).WithMany(p => p.RhuTCtoRetJudPagos)
                .HasForeignKey(d => d.PProcRemId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK1_RhuT_CtoRetJudPagos");

            entity.HasOne(d => d.PRetJud).WithMany(p => p.RhuTCtoRetJudPagos)
                .HasForeignKey(d => d.PRetJudId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_RhuT_CtoRetJudPagos");
        });

        modelBuilder.Entity<RhuTCtoRetJudiciale>(entity =>
        {
            entity.HasKey(e => e.RetJudId);

            entity.ToTable("RhuT_CtoRetJudiciales");

            entity.HasIndex(e => e.PCtoId, "I1_RhuT_CtoRetJudiciales").HasFillFactor(90);

            entity.Property(e => e.RetJudId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PCtoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtoId");
            entity.Property(e => e.PReceptorEntId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pReceptorEntId");
            entity.Property(e => e.PReceptorEntSucId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pReceptorEntSucId");
            entity.Property(e => e.PRetenedorEntId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pRetenedorEntId");
            entity.Property(e => e.RjuDescripcion)
                .HasMaxLength(255)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("RJuDescripcion");
            entity.Property(e => e.RjuEstado).HasColumnName("RJuEstado");
            entity.Property(e => e.RjuFecInicio)
                .HasColumnType("datetime")
                .HasColumnName("RJuFecInicio");
            entity.Property(e => e.RjuFecOficio)
                .HasColumnType("datetime")
                .HasColumnName("RJuFecOficio");
            entity.Property(e => e.RjuFecTermino)
                .HasColumnType("datetime")
                .HasColumnName("RJuFecTermino");
            entity.Property(e => e.RjuNumExpediente)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("RJuNumExpediente");
            entity.Property(e => e.RjuNumOficio)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("RJuNumOficio");

            entity.HasOne(d => d.PCto).WithMany(p => p.RhuTCtoRetJudiciales)
                .HasForeignKey(d => d.PCtoId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_RhuT_CtoRetJudiciales");

            entity.HasOne(d => d.PReceptorEnt).WithMany(p => p.RhuTCtoRetJudicialePReceptorEnts)
                .HasForeignKey(d => d.PReceptorEntId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK2_RhuT_CtoRetJudiciales");

            entity.HasOne(d => d.PReceptorEntSuc).WithMany(p => p.RhuTCtoRetJudiciales)
                .HasForeignKey(d => d.PReceptorEntSucId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK3_RhuT_CtoRetJudiciales");

            entity.HasOne(d => d.PRetenedorEnt).WithMany(p => p.RhuTCtoRetJudicialePRetenedorEnts)
                .HasForeignKey(d => d.PRetenedorEntId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK1_RhuT_CtoRetJudiciales");
        });

        modelBuilder.Entity<RhuTCtoSolActivar>(entity =>
        {
            entity.HasKey(e => e.CtoSolActId);

            entity.ToTable("RhuT_CtoSolActivar");

            entity.HasIndex(e => new { e.PCtoTerId, e.CtoSolFecha, e.CtoSolFolio }, "I1_RhuT_CtoSolActivar").IsUnique();

            entity.Property(e => e.CtoSolActId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.CtoSolFecCto).HasColumnType("datetime");
            entity.Property(e => e.CtoSolFecFnqDes).HasColumnType("datetime");
            entity.Property(e => e.CtoSolFecFnqHas).HasColumnType("datetime");
            entity.Property(e => e.CtoSolFecha).HasColumnType("datetime");
            entity.Property(e => e.CtoSolItmDes).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.CtoSolItmHas).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.CtoSolTipCtoDes).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.CtoSolTipCtoHas).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PCreId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCreId");
            entity.Property(e => e.PCtoTerId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtoTerId");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PItmSolActEstId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pItmSolActEstId");
            entity.Property(e => e.PTabParId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTabParId");

            entity.HasOne(d => d.PCtoTer).WithMany(p => p.RhuTCtoSolActivars)
                .HasForeignKey(d => d.PCtoTerId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_RhuT_CtoSolActivar");

            entity.HasOne(d => d.PEmp).WithMany(p => p.RhuTCtoSolActivars)
                .HasForeignKey(d => d.PEmpId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK1_RhuT_CtoSolActivar");
        });

        modelBuilder.Entity<RhuTCtoSolActivarDet>(entity =>
        {
            entity.HasKey(e => e.CtoSolActDetId);

            entity.ToTable("RhuT_CtoSolActivarDet");

            entity.HasIndex(e => e.PCtoOldId, "I1_RhuT_CtoSolActivarDet").IsUnique();

            entity.Property(e => e.CtoSolActDetId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PCtoNewId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCToNewId");
            entity.Property(e => e.PCtoOldId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtoOldId");
            entity.Property(e => e.PCtoSolActId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtoSolActId");

            entity.HasOne(d => d.PCtoSolAct).WithMany(p => p.RhuTCtoSolActivarDets)
                .HasForeignKey(d => d.PCtoSolActId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_RhuT_CtoSolActivarDet");
        });

        modelBuilder.Entity<RhuTCtoSolCambio>(entity =>
        {
            entity.HasKey(e => e.SlTctoId);

            entity.ToTable("RhuT_CtoSolCambios");

            entity.HasIndex(e => new { e.PFicPerId, e.PEmpId, e.SlTctoFecVigencia, e.SlTctoNumero }, "U1_RhuT_CtoSolCambios").IsUnique();

            entity.Property(e => e.SlTctoId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("SlTCtoId");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PCcafEntId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCcafEntId");
            entity.Property(e => e.PCreId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCreId");
            entity.Property(e => e.PCtoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtoId");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PFicPerId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pFicPerId");
            entity.Property(e => e.PItmCalJurId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pItmCalJurId");
            entity.Property(e => e.PItmCategoriaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pItmCategoriaId");
            entity.Property(e => e.PItmCtoEstado)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pItmCtoEstado");
            entity.Property(e => e.PItmGruConId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pItmGruConId");
            entity.Property(e => e.PItmIntegroId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pItmIntegroId");
            entity.Property(e => e.PItmJornadaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pItmJornadaId");
            entity.Property(e => e.PItmLugarPagoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pItmLugarPagoId");
            entity.Property(e => e.PItmTpContratoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pItmTpContratoId");
            entity.Property(e => e.PItmTpImptoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pItmTpImptoId");
            entity.Property(e => e.PItmTpRtaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pItmTpRtaId");
            entity.Property(e => e.PLugId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pLugId");
            entity.Property(e => e.PMutualEntId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMutualEntId");
            entity.Property(e => e.PMutualEntSucId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMutualEntSucId");
            entity.Property(e => e.PSdeId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pSDeId");
            entity.Property(e => e.SlTctoFecAntiguedad)
                .HasColumnType("datetime")
                .HasColumnName("SlTCtoFecAntiguedad");
            entity.Property(e => e.SlTctoFecCompromiso)
                .HasColumnType("datetime")
                .HasColumnName("SlTCtoFecCompromiso");
            entity.Property(e => e.SlTctoFecFiniquito)
                .HasColumnType("datetime")
                .HasColumnName("SlTCtoFecFiniquito");
            entity.Property(e => e.SlTctoFecRenovacion)
                .HasColumnType("datetime")
                .HasColumnName("SlTCtoFecRenovacion");
            entity.Property(e => e.SlTctoFecVigencia)
                .HasColumnType("datetime")
                .HasColumnName("SlTCtoFecVigencia");
            entity.Property(e => e.SlTctoIndMutual).HasColumnName("SlTCtoIndMutual");
            entity.Property(e => e.SlTctoIndSegCes).HasColumnName("SlTCtoIndSegCes");
            entity.Property(e => e.SlTctoIndSegCes11).HasColumnName("SlTCtoIndSegCes11");
            entity.Property(e => e.SlTctoJornada).HasColumnName("SlTCtoJornada");
            entity.Property(e => e.SlTctoNumero)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("SlTCtoNumero");
            entity.Property(e => e.SlTctoPeriodoDesde).HasColumnName("SlTCtoPeriodoDesde");

            entity.HasOne(d => d.PCre).WithMany(p => p.RhuTCtoSolCambios)
                .HasForeignKey(d => d.PCreId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK09_RhuT_CtoSolCambios");

            entity.HasOne(d => d.PCto).WithMany(p => p.RhuTCtoSolCambios)
                .HasForeignKey(d => d.PCtoId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK00_RhuT_CtoSOlCambios");

            entity.HasOne(d => d.PEmp).WithMany(p => p.RhuTCtoSolCambios)
                .HasForeignKey(d => d.PEmpId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK02_RhuT_CtoSolCambios");

            entity.HasOne(d => d.PFicPer).WithMany(p => p.RhuTCtoSolCambios)
                .HasForeignKey(d => d.PFicPerId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK01_RhuT_CtoSolCambios");

            entity.HasOne(d => d.PItmCalJur).WithMany(p => p.RhuTCtoSolCambioPItmCalJurs)
                .HasForeignKey(d => d.PItmCalJurId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK07_RhuT_CtoSolCambios");

            entity.HasOne(d => d.PItmCategoria).WithMany(p => p.RhuTCtoSolCambioPItmCategoria)
                .HasForeignKey(d => d.PItmCategoriaId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK06_RhuT_CtoSolCambios");

            entity.HasOne(d => d.PItmIntegro).WithMany(p => p.RhuTCtoSolCambioPItmIntegros)
                .HasForeignKey(d => d.PItmIntegroId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK12_RhuT_CtoSolCambios");

            entity.HasOne(d => d.PItmJornada).WithMany(p => p.RhuTCtoSolCambioPItmJornada)
                .HasForeignKey(d => d.PItmJornadaId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK08_RhuT_CtoSolCambios");

            entity.HasOne(d => d.PItmLugarPago).WithMany(p => p.RhuTCtoSolCambioPItmLugarPagos)
                .HasForeignKey(d => d.PItmLugarPagoId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK10_RhuT_CtoSolCambios");

            entity.HasOne(d => d.PItmTpContrato).WithMany(p => p.RhuTCtoSolCambioPItmTpContratos)
                .HasForeignKey(d => d.PItmTpContratoId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK03_RhuT_CtoSolCambios");

            entity.HasOne(d => d.PItmTpImpto).WithMany(p => p.RhuTCtoSolCambioPItmTpImptos)
                .HasForeignKey(d => d.PItmTpImptoId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK05_RhuT_CtoSolCambios");

            entity.HasOne(d => d.PItmTpRta).WithMany(p => p.RhuTCtoSolCambioPItmTpRta)
                .HasForeignKey(d => d.PItmTpRtaId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK04_RhuT_CtoSolCambios");

            entity.HasOne(d => d.PLug).WithMany(p => p.RhuTCtoSolCambios)
                .HasForeignKey(d => d.PLugId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK11_RhuT_CtoSolCambios");
        });

        modelBuilder.Entity<RhuTCtoSolicitude>(entity =>
        {
            entity.HasKey(e => e.CtoSolId);

            entity.ToTable("RhuT_CtoSolicitudes");

            entity.HasIndex(e => new { e.PCtoId, e.PItmParId, e.CtoSolFecInicio, e.CtoSolSecuencia }, "U1_RhuT_CtoSolicitudes").IsUnique();

            entity.Property(e => e.CtoSolId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.CtoSolFecInicio).HasColumnType("datetime");
            entity.Property(e => e.CtoSolFecTermino).HasColumnType("datetime");
            entity.Property(e => e.CtoSolFecha).HasColumnType("datetime");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PCtoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtoId");
            entity.Property(e => e.PItmCtoSolEstId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pItmCtoSolEstId");
            entity.Property(e => e.PItmParId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pItmParId");

            entity.HasOne(d => d.PCto).WithMany(p => p.RhuTCtoSolicitudes)
                .HasForeignKey(d => d.PCtoId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_RhuT_CtoSolicitud");

            entity.HasOne(d => d.PItmCtoSolEst).WithMany(p => p.RhuTCtoSolicitudePItmCtoSolEsts)
                .HasForeignKey(d => d.PItmCtoSolEstId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK2_RhuT_CtoSolicitud");

            entity.HasOne(d => d.PItmPar).WithMany(p => p.RhuTCtoSolicitudePItmPars)
                .HasForeignKey(d => d.PItmParId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK1_RhuT_CtoSolicitud");
        });

        modelBuilder.Entity<RhuTCtoSubJoven>(entity =>
        {
            entity.HasKey(e => new { e.PerId, e.PProcRemId, e.PCtoId });

            entity.ToTable("RhuT_CtoSubJoven");

            entity.Property(e => e.PProcRemId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pProcRemId");
            entity.Property(e => e.PCtoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtoId");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.NcnDvalNumerico).HasColumnName("NcnDValNumerico");
            entity.Property(e => e.PNomConcDetId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pNomConcDetId");
            entity.Property(e => e.PNomConcId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pNomConcId");
        });

        modelBuilder.Entity<RhuTCtoSubsidio>(entity =>
        {
            entity.HasKey(e => e.PConcRemId).HasName("PK_RhuT_CtoSubidio");

            entity.ToTable("RhuT_CtoSubsidio");

            entity.Property(e => e.PConcRemId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pConcRemId");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");

            entity.HasOne(d => d.PConcRem).WithOne(p => p.RhuTCtoSubsidio)
                .HasForeignKey<RhuTCtoSubsidio>(d => d.PConcRemId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_RhuT_CtoSubsidio");
        });

        modelBuilder.Entity<RhuTCtoTipoCertif>(entity =>
        {
            entity.HasKey(e => e.DtoTipId);

            entity.ToTable("RhuT_CtoTipoCertif");

            entity.HasIndex(e => new { e.PEmpId, e.DtoTipCodigo }, "U1_RhuT_CtoTipoCertif").IsUnique();

            entity.Property(e => e.DtoTipId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.DtoTipDescrip)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.DtoTipPath)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
        });

        modelBuilder.Entity<RhuTCtoTmpNomina>(entity =>
        {
            entity.HasKey(e => e.NomGfaTmpId);

            entity.ToTable("RhuT_CtoTmpNominas");

            entity.Property(e => e.NomGfaTmpId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.NomTmpObservacion)
                .HasMaxLength(255)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PNomGfaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pNomGfaId");

            entity.HasOne(d => d.PNomGfa).WithMany(p => p.RhuTCtoTmpNominas)
                .HasForeignKey(d => d.PNomGfaId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_RhuT_CtoTmoNominas");
        });

        modelBuilder.Entity<RhuTCtoTmpTaud>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("RhuT_CtoTmpTAud");

            entity.Property(e => e.SadCampo)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.SadFecha).HasColumnType("datetime");
            entity.Property(e => e.SadIdTabla).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.SadUsuario)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.SadValorAntiguo)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.SadValorNuevo)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<RhuTCtoTmpTseleccion>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("RhuT_CtoTmpTSeleccion");

            entity.Property(e => e.FldUserCode)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("fld_UserCode");
            entity.Property(e => e.PCtoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtoId");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
        });

        modelBuilder.Entity<RhuTDrtConfiguracion>(entity =>
        {
            entity.HasKey(e => e.DrtCfgId);

            entity.ToTable("RhuT_DRtConfiguracion");

            entity.HasIndex(e => new { e.PEmpId, e.DrtColDeclItmId, e.DrtConcRemId }, "U1_RhuT_DRtConfiguracion").IsUnique();

            entity.Property(e => e.DrtCfgId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("DRtCfgId");
            entity.Property(e => e.DrtColDeclItmId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("DRtColDeclItmId");
            entity.Property(e => e.DrtConcRemId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("DRtConcRemId");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
        });

        modelBuilder.Entity<RhuTDrtDeclaracion>(entity =>
        {
            entity.HasKey(e => e.DrtDclId);

            entity.ToTable("RhuT_DRtDeclaracion");

            entity.HasIndex(e => new { e.PEmpId, e.EjeAno }, "U1_RhuT_DRtDeclaracion").HasFillFactor(90);

            entity.Property(e => e.DrtDclId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("DRtDclId");
            entity.Property(e => e.DrtCertificadoIni)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("DRtCertificadoIni");
            entity.Property(e => e.DrtEstado)
                .HasMaxLength(8)
                .IsUnicode(false)
                .HasColumnName("DRtEstado");
            entity.Property(e => e.DrtFolio)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("DRtFolio");
            entity.Property(e => e.DrtFolioAnt)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("DRtFolioAnt");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
        });

        modelBuilder.Entity<RhuTDrtDiccDeclaracion>(entity =>
        {
            entity.HasKey(e => e.DrtDicId);

            entity.ToTable("RhuT_DRtDiccDeclaracion");

            entity.Property(e => e.DrtDicId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("DRtDicId");
            entity.Property(e => e.DrtDicCampoDescr)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("DRtDicCampoDescr");
            entity.Property(e => e.DrtDicCampoNom)
                .HasMaxLength(32)
                .IsUnicode(false)
                .HasColumnName("DRtDicCampoNom");
            entity.Property(e => e.DrtDicIndTipCampo).HasColumnName("DRtDicIndTipCampo");
            entity.Property(e => e.DrtDicTblAlias)
                .HasMaxLength(4)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("DRtDicTblAlias");
            entity.Property(e => e.DrtDicTblSql)
                .HasColumnType("text")
                .HasColumnName("DRtDicTblSQL");
            entity.Property(e => e.DrtDicTipDato)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("DRtDicTipDato");
            entity.Property(e => e.DrtDicUso)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("DRtDicUso");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
        });

        modelBuilder.Entity<RhuTDrtFactoresAct>(entity =>
        {
            entity.HasKey(e => e.DrtFacId);

            entity.ToTable("RhuT_DRtFactoresAct");

            entity.HasIndex(e => new { e.EjeAno, e.PerMes }, "U1_RhuT_DRtFactoresAct").IsUnique();

            entity.Property(e => e.DrtFacId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("DRtFacId");
            entity.Property(e => e.DrtFactorAct).HasColumnName("DRtFactorAct");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
        });

        modelBuilder.Entity<RhuTDrtFormatoDecl>(entity =>
        {
            entity.HasKey(e => e.DrtFrmId);

            entity.ToTable("RhuT_DRtFormatoDecl");

            entity.HasIndex(e => e.DrtFrmOrden, "I1_RhuT_DRtFormatoDecl").IsUnique();

            entity.Property(e => e.DrtFrmId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("DRtFrmId");
            entity.Property(e => e.DrtFrmDecDato).HasColumnName("DRtFrmDecDato");
            entity.Property(e => e.DrtFrmLenDato).HasColumnName("DRtFrmLenDato");
            entity.Property(e => e.DrtFrmOrden).HasColumnName("DRtFrmOrden");
            entity.Property(e => e.DrtFrmTipDato)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("DRtFrmTipDato");
            entity.Property(e => e.DrtFrmValDefAlf)
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasColumnName("DRtFrmValDefAlf");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PDrtDicId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pDRtDicId");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");

            entity.HasOne(d => d.PDrtDic).WithMany(p => p.RhuTDrtFormatoDecls)
                .HasForeignKey(d => d.PDrtDicId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK1_RhuT_DRtFormatoDecl");

            entity.HasOne(d => d.PEmp).WithMany(p => p.RhuTDrtFormatoDecls)
                .HasForeignKey(d => d.PEmpId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK2_RhuT_DRtFormatoDecl");
        });

        modelBuilder.Entity<RhuTDrtFormatoDeclOld>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("RhuT_DrtFormatoDecl_old");

            entity.Property(e => e.DrtFrmDecDato).HasColumnName("DRtFrmDecDato");
            entity.Property(e => e.DrtFrmId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("DRtFrmId");
            entity.Property(e => e.DrtFrmLenDato).HasColumnName("DRtFrmLenDato");
            entity.Property(e => e.DrtFrmOrden).HasColumnName("DRtFrmOrden");
            entity.Property(e => e.DrtFrmTipDato)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("DRtFrmTipDato");
            entity.Property(e => e.DrtFrmValDefAlf)
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasColumnName("DRtFrmValDefAlf");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PDrtDicId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pDRtDicId");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
        });

        modelBuilder.Entity<RhuTDrtResumenAnual>(entity =>
        {
            entity.HasKey(e => e.DrtRanId);

            entity.ToTable("RhuT_DRtResumenAnual");

            entity.HasIndex(e => new { e.PDrtDclId, e.PFicPerId }, "RhuT_DRtResumenAnual_idx03");

            entity.HasIndex(e => new { e.PDrtDclId, e.PFicPerId }, "U1_RhuT_DRtResumenAnual").IsUnique();

            entity.Property(e => e.DrtRanId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("DRtRAnId");
            entity.Property(e => e.DrtCertificado)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("DRtCertificado");
            entity.Property(e => e.DrtDesctosPrev).HasColumnName("DRtDesctosPrev");
            entity.Property(e => e.DrtDesctosPrevAct).HasColumnName("DRtDesctosPrevAct");
            entity.Property(e => e.DrtImptoRet).HasColumnName("DRtImptoRet");
            entity.Property(e => e.DrtImptoRetAct).HasColumnName("DRtImptoRetAct");
            entity.Property(e => e.DrtImptoRetEje).HasColumnName("DRtImptoRetEje");
            entity.Property(e => e.DrtImptoRetEjeSgt).HasColumnName("DRtImptoRetEjeSgt");
            entity.Property(e => e.DrtIndAbr).HasColumnName("DRtIndAbr");
            entity.Property(e => e.DrtIndAgo).HasColumnName("DRtIndAgo");
            entity.Property(e => e.DrtIndDic).HasColumnName("DRtIndDic");
            entity.Property(e => e.DrtIndEne).HasColumnName("DRtIndEne");
            entity.Property(e => e.DrtIndFeb).HasColumnName("DRtIndFeb");
            entity.Property(e => e.DrtIndJul).HasColumnName("DRtIndJul");
            entity.Property(e => e.DrtIndJun).HasColumnName("DRtIndJun");
            entity.Property(e => e.DrtIndMar).HasColumnName("DRtIndMar");
            entity.Property(e => e.DrtIndMay).HasColumnName("DRtIndMay");
            entity.Property(e => e.DrtIndNov).HasColumnName("DRtIndNov");
            entity.Property(e => e.DrtIndOct).HasColumnName("DRtIndOct");
            entity.Property(e => e.DrtIndSep).HasColumnName("DRtIndSep");
            entity.Property(e => e.DrtMayorRetSol).HasColumnName("DRtMayorRetSol");
            entity.Property(e => e.DrtMayorRetSolAct).HasColumnName("DRtMayorRetSolAct");
            entity.Property(e => e.DrtRebZonaExtr).HasColumnName("DRtRebZonaExtr");
            entity.Property(e => e.DrtRebZonaExtrAct).HasColumnName("DRtRebZonaExtrAct");
            entity.Property(e => e.DrtRemunImpon).HasColumnName("DRtRemunImpon");
            entity.Property(e => e.DrtRemunImponAct).HasColumnName("DRtRemunImponAct");
            entity.Property(e => e.DrtRentaExenta).HasColumnName("DRtRentaExenta");
            entity.Property(e => e.DrtRentaExentaAct).HasColumnName("DRtRentaExentaAct");
            entity.Property(e => e.DrtRentaNeta).HasColumnName("DRtRentaNeta");
            entity.Property(e => e.DrtRentaNetaAct).HasColumnName("DRtRentaNetaAct");
            entity.Property(e => e.DrtRentaNoGrava).HasColumnName("DRtRentaNoGrava");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PDrtDclId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pDRtDclId");
            entity.Property(e => e.PFicPerId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pFicPerId");

            entity.HasOne(d => d.PDrtDcl).WithMany(p => p.RhuTDrtResumenAnuals)
                .HasForeignKey(d => d.PDrtDclId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK1_RhuT_DRtResumenAnual");
        });

        modelBuilder.Entity<RhuTDrtResumenMen>(entity =>
        {
            entity.HasKey(e => e.DrtRmnId);

            entity.ToTable("RhuT_DRtResumenMens");

            entity.HasIndex(e => new { e.PDrtDclId, e.PFicPerId }, "RhuT_DRtResumenMens_idx03");

            entity.HasIndex(e => new { e.PDrtDclId, e.PerMes, e.PFicPerId, e.DrtRmnId }, "RhuT_DRtResumenMens_idx04");

            entity.HasIndex(e => new { e.PDrtDclId, e.PFicPerId, e.PerMes }, "U1_RhuT_DRtResumenMens").IsUnique();

            entity.Property(e => e.DrtRmnId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("DRtRMnId");
            entity.Property(e => e.DrtDesctosPrev).HasColumnName("DRtDesctosPrev");
            entity.Property(e => e.DrtDesctosPrevAct).HasColumnName("DRtDesctosPrevAct");
            entity.Property(e => e.DrtImptoRet).HasColumnName("DRtImptoRet");
            entity.Property(e => e.DrtImptoRetAct).HasColumnName("DRtImptoRetAct");
            entity.Property(e => e.DrtImptoRetEje).HasColumnName("DRtImptoRetEje");
            entity.Property(e => e.DrtImptoRetEjeSgt).HasColumnName("DRtImptoRetEjeSgt");
            entity.Property(e => e.DrtMayorRetSol).HasColumnName("DRtMayorRetSol");
            entity.Property(e => e.DrtMayorRetSolAct).HasColumnName("DRtMayorRetSolAct");
            entity.Property(e => e.DrtRebZonaExtr).HasColumnName("DRtRebZonaExtr");
            entity.Property(e => e.DrtRebZonaExtrAct).HasColumnName("DRtRebZonaExtrAct");
            entity.Property(e => e.DrtRemunImpon).HasColumnName("DRtRemunImpon");
            entity.Property(e => e.DrtRemunImponAct).HasColumnName("DRtRemunImponAct");
            entity.Property(e => e.DrtRentaExenta).HasColumnName("DRtRentaExenta");
            entity.Property(e => e.DrtRentaExentaAct).HasColumnName("DRtRentaExentaAct");
            entity.Property(e => e.DrtRentaNeta).HasColumnName("DRtRentaNeta");
            entity.Property(e => e.DrtRentaNetaAct).HasColumnName("DRtRentaNetaAct");
            entity.Property(e => e.DrtRentaNoGrava).HasColumnName("DRtRentaNoGrava");
            entity.Property(e => e.DrtTipoJornada)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("DRtTipoJornada");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PDrtDclId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pDRtDclId");
            entity.Property(e => e.PFicPerId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pFicPerId");

            entity.HasOne(d => d.PDrtDcl).WithMany(p => p.RhuTDrtResumenMen)
                .HasForeignKey(d => d.PDrtDclId)
                .HasConstraintName("FK1_RhuT_DRtResumenMens");
        });

        modelBuilder.Entity<RhuTDrtSolicitudCertif>(entity =>
        {
            entity.HasKey(e => e.PFicPerId).HasName("PK_DRtSolicitudCertif");

            entity.ToTable("RhuT_DRtSolicitudCertif");

            entity.Property(e => e.PFicPerId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pFicPerId");
        });

        modelBuilder.Entity<RhuTEpeEntidad>(entity =>
        {
            entity.HasKey(e => e.PEntId);

            entity.ToTable("RhuT_EpeEntidad");

            entity.Property(e => e.PEntId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntId");
            entity.Property(e => e.EpefechaUltConsulta)
                .HasColumnType("datetime")
                .HasColumnName("EPEFechaUltConsulta");
            entity.Property(e => e.Epepassword)
                .HasMaxLength(15)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("EPEPassword");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");

            entity.HasOne(d => d.PEnt).WithOne(p => p.RhuTEpeEntidad)
                .HasForeignKey<RhuTEpeEntidad>(d => d.PEntId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_RhuT_EpeEntidad");
        });

        modelBuilder.Entity<RhuTEpeEntidadAut>(entity =>
        {
            entity.HasKey(e => e.PEntId);

            entity.ToTable("RhuT_EpeEntidadAut");

            entity.Property(e => e.PEntId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntId");
            entity.Property(e => e.EpeCertif)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
        });

        modelBuilder.Entity<RhuTEpeParametro>(entity =>
        {
            entity.HasKey(e => e.EpeParamId);

            entity.ToTable("RhuT_EpeParametros");

            entity.Property(e => e.EpeParamId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EpeMailFlegal).HasColumnName("EpeMailFLegal");
            entity.Property(e => e.EpeMailRrHh)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
        });

        modelBuilder.Entity<RhuTEpeProceso>(entity =>
        {
            entity.HasKey(e => new { e.PEmpId, e.PProcRemId });

            entity.ToTable("RhuT_EpeProcesos");

            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PProcRemId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pProcRemId");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PrRindActTot).HasColumnName("PrRIndActTot");
        });

        modelBuilder.Entity<RhuTEpeSolCertif>(entity =>
        {
            entity.HasKey(e => e.EpeSolCerId).HasName("PK_RhuT_EpeCertif");

            entity.ToTable("RhuT_EpeSolCertif");

            entity.HasIndex(e => new { e.PEpeSolId, e.PEpeIdentId }, "U1_RhuT_EpeCertif").IsUnique();

            entity.Property(e => e.EpeSolCerId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EpeMotivo)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PEpeIdentId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEpeIdentId");
            entity.Property(e => e.PEpeSolId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEpeSolId");

            entity.HasOne(d => d.PEpeSol).WithMany(p => p.RhuTEpeSolCertifs)
                .HasForeignKey(d => d.PEpeSolId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_RhuT_EpeSolCertif");
        });

        modelBuilder.Entity<RhuTEpeSolPermiso>(entity =>
        {
            entity.HasKey(e => e.EpeSolPerId).HasName("PK_RhuT_EpePermisos");

            entity.ToTable("RhuT_EpeSolPermisos");

            entity.HasIndex(e => new { e.PEpeSolId, e.PEpeIdentId }, "U1_RhuT_EpePermisos").IsUnique();

            entity.Property(e => e.EpeSolPerId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EpeFecInicio).HasColumnType("datetime");
            entity.Property(e => e.EpeFecTermino).HasColumnType("datetime");
            entity.Property(e => e.EpeHraInicio).HasColumnType("datetime");
            entity.Property(e => e.EpeHraTermino).HasColumnType("datetime");
            entity.Property(e => e.EpeMotivo)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PEpeIdentId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEpeIdentId");
            entity.Property(e => e.PEpeSolId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEpeSolId");

            entity.HasOne(d => d.PEpeSol).WithMany(p => p.RhuTEpeSolPermisos)
                .HasForeignKey(d => d.PEpeSolId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_RhuT_EpeSolPermisos");
        });

        modelBuilder.Entity<RhuTEpeSolPersonal>(entity =>
        {
            entity.HasKey(e => e.EpeSolFicId).HasName("PK_RhuT_EpePersonal");

            entity.ToTable("RhuT_EpeSolPersonal");

            entity.HasIndex(e => new { e.PEpeSolId, e.EpeTipoCambio }, "U1_RhuT_EpePersonal").IsUnique();

            entity.Property(e => e.EpeSolFicId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EpeCanton)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EpeCelular)
                .HasMaxLength(15)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EpeCmuCodigo).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EpeDirDireccion)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EpeDirFax)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EpeDirFono)
                .HasMaxLength(40)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EpeEmail)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("EpeEMail");
            entity.Property(e => e.EpeFecNacimiento).HasColumnType("datetime");
            entity.Property(e => e.EpeMotivo)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.EpeSucCodCtaCteBco)
                .HasMaxLength(15)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PEpeItmProfId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEpeItmProfId");
            entity.Property(e => e.PEpeSolId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEpeSolId");
            entity.Property(e => e.PFormaPagoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pFormaPagoId");
            entity.Property(e => e.PItmEpeNacionId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pItmEpeNacionId");

            entity.HasOne(d => d.PEpeItmProf).WithMany(p => p.RhuTEpeSolPersonals)
                .HasForeignKey(d => d.PEpeItmProfId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_RhuT_EpeSolProfes");

            entity.HasOne(d => d.PEpeSol).WithMany(p => p.RhuTEpeSolPersonals)
                .HasForeignKey(d => d.PEpeSolId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_RhuT_EpeSolPerson");
        });

        modelBuilder.Entity<RhuTEpeSolicitude>(entity =>
        {
            entity.HasKey(e => e.EpeSolId).HasName("PK_RhuT_EpeSolicitud");

            entity.ToTable("RhuT_EpeSolicitudes");

            entity.Property(e => e.EpeSolId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EpeFechaSol).HasColumnType("datetime");
            entity.Property(e => e.EpeGlosaRechazo)
                .HasMaxLength(255)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EpeIdent01).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EpeIdent02).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EpeIdent03).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PCtoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtoId");
            entity.Property(e => e.PItmParEstId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pItmParEstId");
            entity.Property(e => e.PItmParId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pItmParId");

            entity.HasOne(d => d.PCto).WithMany(p => p.RhuTEpeSolicitudes)
                .HasForeignKey(d => d.PCtoId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_RhuT_EpeSolCto");

            entity.HasOne(d => d.PItmParEst).WithMany(p => p.RhuTEpeSolicitudePItmParEsts)
                .HasForeignKey(d => d.PItmParEstId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_RhuT_EpeEstado");

            entity.HasOne(d => d.PItmPar).WithMany(p => p.RhuTEpeSolicitudePItmPars)
                .HasForeignKey(d => d.PItmParId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_RhuT_EpeTipSol");
        });

        modelBuilder.Entity<RhuTEvaAnotacione>(entity =>
        {
            entity.HasKey(e => e.IdAnotacion).HasName("I1_RhuT_EvaAnotaciones");

            entity.ToTable("RhuT_EvaAnotaciones");

            entity.Property(e => e.IdAnotacion)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("Id_Anotacion");
            entity.Property(e => e.Anotacion).HasColumnType("text");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.FechaAnotacion)
                .HasColumnType("datetime")
                .HasColumnName("Fecha_Anotacion");
            entity.Property(e => e.FechaFirma).HasColumnType("datetime");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.IndFirma)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Ind_Firma");
            entity.Property(e => e.NotaNumerica).HasColumnName("Nota_Numerica");
            entity.Property(e => e.OrigenAnotacion)
                .HasMaxLength(4)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PCtoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtoId");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PFicPerId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pFicPerId");
            entity.Property(e => e.PFicPerIdEvaluador)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pFicPerIdEvaluador");
            entity.Property(e => e.PFicPerIdSupervisor)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pFicPerIdSupervisor");
            entity.Property(e => e.PItmEstAnot)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pItmEstAnot");
            entity.Property(e => e.PidEjecucion)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("PId_Ejecucion");
            entity.Property(e => e.PidNota)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("PId_Nota");
            entity.Property(e => e.TipoAnotacion)
                .HasMaxLength(4)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Tipo_Anotacion");
            entity.Property(e => e.TipoCalificacion)
                .HasMaxLength(4)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Tipo_Calificacion");

            entity.HasOne(d => d.TipoAnotacionNavigation).WithMany(p => p.RhuTEvaAnotaciones)
                .HasForeignKey(d => d.TipoAnotacion)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_RhuT_EvaAnotaiones");
        });

        modelBuilder.Entity<RhuTEvaCalendario>(entity =>
        {
            entity.HasKey(e => new { e.PEmpId, e.EjeAno, e.SeqProceso });

            entity.ToTable("RhuT_EvaCalendario");

            entity.HasIndex(e => e.IdCalendario, "I1_RhuT_EvaCalendario").IsUnique();

            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.SeqProceso).HasColumnName("Seq_Proceso");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.Fecha1erRecon)
                .HasColumnType("datetime")
                .HasColumnName("Fecha_1er_Recon");
            entity.Property(e => e.FechaCierreApelacion)
                .HasColumnType("datetime")
                .HasColumnName("Fecha_Cierre_Apelacion");
            entity.Property(e => e.FechaCierreEval)
                .HasColumnType("datetime")
                .HasColumnName("Fecha_Cierre_Eval");
            entity.Property(e => e.FechaEstado).HasColumnType("datetime");
            entity.Property(e => e.FechaInicioApelacion)
                .HasColumnType("datetime")
                .HasColumnName("Fecha_Inicio_Apelacion");
            entity.Property(e => e.FechaInicioEval)
                .HasColumnType("datetime")
                .HasColumnName("Fecha_Inicio_Eval");
            entity.Property(e => e.FechaInicioPlan)
                .HasColumnType("datetime")
                .HasColumnName("Fecha_Inicio_Plan");
            entity.Property(e => e.FechaUltRecon)
                .HasColumnType("datetime")
                .HasColumnName("Fecha_Ult_Recon");
            entity.Property(e => e.GlosaCalendario)
                .HasMaxLength(90)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Glosa_Calendario");
            entity.Property(e => e.IdCalendario)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("Id_Calendario");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PItmEstCal)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pItmEstCal");
        });

        modelBuilder.Entity<RhuTEvaCalendarioCategorium>(entity =>
        {
            entity.HasKey(e => e.IdCalendarioCategoria);

            entity.ToTable("RhuT_EvaCalendarioCategoria");

            entity.HasIndex(e => new { e.TipoCategoria, e.PidCalendario }, "I1_RhuT_EvaCalendarioCategoria").IsUnique();

            entity.Property(e => e.IdCalendarioCategoria)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("Id_Calendario_Categoria");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.FechaEstado).HasColumnType("datetime");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PItmEstCal)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pItmEstCal");
            entity.Property(e => e.PidCalendario)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("PId_Calendario");
            entity.Property(e => e.TipoCategoria)
                .HasMaxLength(4)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Tipo_Categoria");

            entity.HasOne(d => d.PidCalendarioNavigation).WithMany(p => p.RhuTEvaCalendarioCategoria)
                .HasPrincipalKey(p => p.IdCalendario)
                .HasForeignKey(d => d.PidCalendario)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_RhuT_EvaCalendarioCategoria");
        });

        modelBuilder.Entity<RhuTEvaCategoriaCargo>(entity =>
        {
            entity.HasKey(e => e.IdCategoriaCargo);

            entity.ToTable("RhuT_EvaCategoriaCargo");

            entity.Property(e => e.IdCategoriaCargo)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("Id_Categoria_Cargo");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.TipoCategoria)
                .HasMaxLength(4)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Tipo_Categoria");
            entity.Property(e => e.TipoEvaluador)
                .HasMaxLength(4)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Tipo_Evaluador");
        });

        modelBuilder.Entity<RhuTEvaCategoriaFormulario>(entity =>
        {
            entity.HasKey(e => e.IdCategoriaFormulario);

            entity.ToTable("RhuT_EvaCategoriaFormulario");

            entity.Property(e => e.IdCategoriaFormulario)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("Id_Categoria_Formulario");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.FecVigencia).HasColumnType("datetime");
            entity.Property(e => e.FechaObsolecencia).HasColumnType("datetime");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PItmEstCat)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pItmEstCat");
            entity.Property(e => e.PidFormulario)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("PId_Formulario");
            entity.Property(e => e.TipoCategoria)
                .HasMaxLength(4)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Tipo_Categoria");

            entity.HasOne(d => d.PidFormularioNavigation).WithMany(p => p.RhuTEvaCategoriaFormularios)
                .HasForeignKey(d => d.PidFormulario)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_RhuT_EvaCategoriaFormulario");
        });

        modelBuilder.Entity<RhuTEvaEjecucion>(entity =>
        {
            entity.HasKey(e => e.IdEjecucion);

            entity.ToTable("RhuT_EvaEjecucion");

            entity.HasIndex(e => new { e.PFicPerId, e.PCtoId, e.TipoProcesoEvaluacion, e.PidCalendario, e.IdEjecucion }, "I1_RhuT_EvaEjecucion").HasFillFactor(90);

            entity.HasIndex(e => new { e.PFicPerId, e.IdEjecucion }, "I2_RhuT_EvaEjecucion").HasFillFactor(90);

            entity.Property(e => e.IdEjecucion)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("Id_Ejecucion");
            entity.Property(e => e.CompromisoEvaluacion)
                .HasColumnType("text")
                .HasColumnName("Compromiso_Evaluacion");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.FechaEvaluacion).HasColumnType("datetime");
            entity.Property(e => e.FechaFirma).HasColumnType("datetime");
            entity.Property(e => e.FechaFirmaApelacion).HasColumnType("datetime");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.IndApelacion)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Ind_Apelacion");
            entity.Property(e => e.IndFirma)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Ind_Firma");
            entity.Property(e => e.ObservacionEvaluacion)
                .HasColumnType("text")
                .HasColumnName("Observacion_Evaluacion");
            entity.Property(e => e.PCtoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtoId");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PFicPerId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pFicPerId");
            entity.Property(e => e.PFicPerIdEvaluador)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pFicPerIdEvaluador");
            entity.Property(e => e.PFicPerIdSupervisor)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pFicPerIdSupervisor");
            entity.Property(e => e.PItmEstEva)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pItmEstEva");
            entity.Property(e => e.PidCalendario)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("PId_Calendario");
            entity.Property(e => e.PidFormulario)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("PId_Formulario");
            entity.Property(e => e.SeqProceso).HasColumnName("Seq_Proceso");
            entity.Property(e => e.TipoCategoria)
                .HasMaxLength(4)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Tipo_Categoria");
            entity.Property(e => e.TipoProcesoEvaluacion)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Tipo_Proceso_Evaluacion");
            entity.Property(e => e.TotalNotasFactores)
                .HasColumnType("money")
                .HasColumnName("Total_Notas_Factores");
            entity.Property(e => e.TotalNotasFactoresApe)
                .HasColumnType("money")
                .HasColumnName("Total_Notas_Factores_Ape");
        });

        modelBuilder.Entity<RhuTEvaEjecucionFactor>(entity =>
        {
            entity.HasKey(e => e.IdEjecucionFactor);

            entity.ToTable("RhuT_EvaEjecucionFactor");

            entity.HasIndex(e => new { e.PidEjecucion, e.PidFactor }, "I1_RhuT_EvaEjecucionFactor").IsUnique();

            entity.Property(e => e.IdEjecucionFactor)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("Id_Ejecucion_Factor");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PesoFactorSform).HasColumnName("Peso_Factor_SForm");
            entity.Property(e => e.PidEjecucion)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("PId_Ejecucion");
            entity.Property(e => e.PidFactor)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("PId_Factor");
            entity.Property(e => e.TotalNotasItems).HasColumnName("Total_Notas_Items");
            entity.Property(e => e.TotalNotasItemsApe).HasColumnName("Total_Notas_Items_Ape");
            entity.Property(e => e.ValorPorcNota).HasColumnName("Valor_Porc_Nota");
            entity.Property(e => e.ValorPorcNotaApe).HasColumnName("Valor_Porc_Nota_Ape");

            entity.HasOne(d => d.PidEjecucionNavigation).WithMany(p => p.RhuTEvaEjecucionFactors)
                .HasForeignKey(d => d.PidEjecucion)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_RhuT_EvaEjecucionFactor");
        });

        modelBuilder.Entity<RhuTEvaEjecucionItem>(entity =>
        {
            entity.HasKey(e => e.IdEjecucionItem);

            entity.ToTable("RhuT_EvaEjecucionItem");

            entity.HasIndex(e => new { e.PidEjecucion, e.PidItem }, "I1_RhuT_EvaEjecucionItem").IsUnique();

            entity.Property(e => e.IdEjecucionItem)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("Id_Ejecucion_Item");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.NotaNumerica).HasColumnName("Nota_Numerica");
            entity.Property(e => e.NotaNumericaApe).HasColumnName("Nota_Numerica_Ape");
            entity.Property(e => e.PesoItemSfactor).HasColumnName("Peso_Item_SFactor");
            entity.Property(e => e.PidEjecucion)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("PId_Ejecucion");
            entity.Property(e => e.PidFactor)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("PId_Factor");
            entity.Property(e => e.PidItem)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("PId_Item");
            entity.Property(e => e.PidNota)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("PId_Nota");
            entity.Property(e => e.PidNotaApe)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("PId_Nota_Ape");
            entity.Property(e => e.TipoCalificacion)
                .HasMaxLength(4)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Tipo_Calificacion");
            entity.Property(e => e.TipoCalificacionApe)
                .HasMaxLength(4)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Tipo_Calificacion_Ape");
            entity.Property(e => e.ValorPorcNota).HasColumnName("Valor_Porc_Nota");
            entity.Property(e => e.ValorPorcNotaApe).HasColumnName("Valor_Porc_Nota_Ape");

            entity.HasOne(d => d.PidEjecucionNavigation).WithMany(p => p.RhuTEvaEjecucionItems)
                .HasForeignKey(d => d.PidEjecucion)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_RhuT_EvaEjecucionItem");
        });

        modelBuilder.Entity<RhuTEvaEvaluador>(entity =>
        {
            entity.HasKey(e => e.PFicPerId);

            entity.ToTable("RhuT_EvaEvaluador");

            entity.Property(e => e.PFicPerId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pFicPerId");
            entity.Property(e => e.IndSupervisor)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Ind_Supervisor");

            entity.HasOne(d => d.PFicPer).WithOne(p => p.RhuTEvaEvaluador)
                .HasForeignKey<RhuTEvaEvaluador>(d => d.PFicPerId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_RhuT_EvaEvaluador");
        });

        modelBuilder.Entity<RhuTEvaFactor>(entity =>
        {
            entity.HasKey(e => e.IdFactor);

            entity.ToTable("RhuT_EvaFactor");

            entity.HasIndex(e => e.CodFactor, "I1_RhuT_EvaFactor").IsUnique();

            entity.Property(e => e.IdFactor)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("Id_Factor");
            entity.Property(e => e.CodFactor)
                .HasMaxLength(10)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Cod_Factor");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.GlosaFactor)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Glosa_Factor");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PesoPorcentualRef).HasColumnName("Peso_Porcentual_Ref");
        });

        modelBuilder.Entity<RhuTEvaFormulario>(entity =>
        {
            entity.HasKey(e => e.IdFormulario);

            entity.ToTable("RhuT_EvaFormulario");

            entity.HasIndex(e => e.CodFormulario, "I1_RhuT_EvaFormulario").IsUnique();

            entity.Property(e => e.IdFormulario)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("Id_Formulario");
            entity.Property(e => e.CodFormulario)
                .HasMaxLength(10)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Cod_Formulario");
            entity.Property(e => e.Descripcion)
                .HasMaxLength(50)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecObsolecencia)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Obsolecencia");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.FecVigencia)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Vigencia");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdProcesoNegocio)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Proceso_Negocio");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.InstruccionEvaluacion)
                .HasColumnType("text")
                .HasColumnName("Instruccion_Evaluacion");
            entity.Property(e => e.ObjetivoEvaluacion)
                .HasColumnType("text")
                .HasColumnName("Objetivo_Evaluacion");
            entity.Property(e => e.PItmEstForm)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pItmEstForm");
            entity.Property(e => e.TipoCalificacion)
                .HasMaxLength(4)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Tipo_Calificacion");
        });

        modelBuilder.Entity<RhuTEvaFormularioFactor>(entity =>
        {
            entity.HasKey(e => e.IdFormularioFactor);

            entity.ToTable("RhuT_EvaFormularioFactor");

            entity.HasIndex(e => new { e.PidFormulario, e.PidFactor }, "I1_RhuT_EvaFormularioFactor").IsUnique();

            entity.Property(e => e.IdFormularioFactor)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("Id_Formulario_Factor");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PesoPorcentual).HasColumnName("Peso_Porcentual");
            entity.Property(e => e.PidFactor)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("PId_Factor");
            entity.Property(e => e.PidFormulario)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("PId_Formulario");

            entity.HasOne(d => d.PidFactorNavigation).WithMany(p => p.RhuTEvaFormularioFactors)
                .HasForeignKey(d => d.PidFactor)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK2_RhuT_EvaFormularioFactor");

            entity.HasOne(d => d.PidFormularioNavigation).WithMany(p => p.RhuTEvaFormularioFactors)
                .HasForeignKey(d => d.PidFormulario)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK1_RhuT_EvaFormularioFactor");
        });

        modelBuilder.Entity<RhuTEvaFormularioItem>(entity =>
        {
            entity.HasKey(e => e.IdFormularioItem);

            entity.ToTable("RhuT_EvaFormularioItem");

            entity.HasIndex(e => new { e.PidFormulario, e.PidItem }, "I1_RhuT_EvaFormularioItem").IsUnique();

            entity.Property(e => e.IdFormularioItem)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("Id_Formulario_Item");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PesoPorcentual).HasColumnName("Peso_Porcentual");
            entity.Property(e => e.PidFactor)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("PId_Factor");
            entity.Property(e => e.PidFormulario)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("PId_Formulario");
            entity.Property(e => e.PidItem)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("PId_Item");

            entity.HasOne(d => d.PidFormularioNavigation).WithMany(p => p.RhuTEvaFormularioItems)
                .HasForeignKey(d => d.PidFormulario)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK1_RhuT_EvaFormularioItem");

            entity.HasOne(d => d.PidItemNavigation).WithMany(p => p.RhuTEvaFormularioItems)
                .HasForeignKey(d => d.PidItem)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK2_RhuT_EvaFormularioItem");
        });

        modelBuilder.Entity<RhuTEvaItemEvaluacion>(entity =>
        {
            entity.HasKey(e => e.IdItem);

            entity.ToTable("RhuT_EvaItemEvaluacion");

            entity.HasIndex(e => e.CodItem, "I1_RhuT_EvaItemEvaluacion").IsUnique();

            entity.HasIndex(e => new { e.PidFactor, e.CodItem }, "I2_RhuT_EvaItemEvaluacion").IsUnique();

            entity.Property(e => e.IdItem)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("Id_Item");
            entity.Property(e => e.CodItem)
                .HasMaxLength(10)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Cod_Item");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.GlosaItem)
                .HasMaxLength(90)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Glosa_Item");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.InstruccionEvaluacion)
                .HasColumnType("text")
                .HasColumnName("Instruccion_Evaluacion");
            entity.Property(e => e.ObjetivoEvaluacion)
                .HasColumnType("text")
                .HasColumnName("Objetivo_Evaluacion");
            entity.Property(e => e.PesoPorcentualRef).HasColumnName("Peso_Porcentual_Ref");
            entity.Property(e => e.PidFactor)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("PId_Factor");
            entity.Property(e => e.TipoCalificacion)
                .HasMaxLength(4)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Tipo_Calificacion");
        });

        modelBuilder.Entity<RhuTEvaNotum>(entity =>
        {
            entity.HasKey(e => e.IdNota);

            entity.ToTable("RhuT_EvaNota");

            entity.HasIndex(e => e.CodNota, "I1_RhuT_EvaNota").IsUnique();

            entity.Property(e => e.IdNota)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("Id_Nota");
            entity.Property(e => e.CodNota)
                .HasMaxLength(4)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Cod_Nota");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.GlosaNota)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Glosa_Nota");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PesoPorcentual).HasColumnName("Peso_Porcentual");
            entity.Property(e => e.TipoCalificacion)
                .HasMaxLength(4)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Tipo_Calificacion");
        });

        modelBuilder.Entity<RhuTEvaParCategoriaCargo>(entity =>
        {
            entity.HasKey(e => new { e.PEmpId, e.TipoCategoria });

            entity.ToTable("RhuT_EvaParCategoriaCargo");

            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.TipoCategoria)
                .HasMaxLength(4)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Tipo_Categoria");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.GlosaCategoria)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Glosa_Categoria");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
        });

        modelBuilder.Entity<RhuTEvaParOrigenAnotacion>(entity =>
        {
            entity.HasKey(e => e.OrigenAnotacion);

            entity.ToTable("RhuT_EvaParOrigenAnotacion");

            entity.Property(e => e.OrigenAnotacion)
                .HasMaxLength(4)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.GlosaOrigenAnotacion)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Glosa_OrigenAnotacion");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
        });

        modelBuilder.Entity<RhuTEvaParProcesoNegocio>(entity =>
        {
            entity.HasKey(e => e.IdProcesoNegocio);

            entity.ToTable("RhuT_EvaParProcesoNegocio");

            entity.Property(e => e.IdProcesoNegocio)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Proceso_Negocio");
        });

        modelBuilder.Entity<RhuTEvaParTipoAnotacion>(entity =>
        {
            entity.HasKey(e => e.TipoAnotacion);

            entity.ToTable("RhuT_EvaParTipoAnotacion");

            entity.Property(e => e.TipoAnotacion)
                .HasMaxLength(4)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Tipo_Anotacion");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.GlosaTipoAnotacion)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Glosa_TipoAnotacion");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
        });

        modelBuilder.Entity<RhuTEvaParTipoCalificacion>(entity =>
        {
            entity.HasKey(e => e.TipoCalificacion);

            entity.ToTable("RhuT_EvaParTipoCalificacion");

            entity.Property(e => e.TipoCalificacion)
                .HasMaxLength(4)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Tipo_Calificacion");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.GlosaCalificacion)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Glosa_Calificacion");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.MaxValorNota).HasColumnName("Max_Valor_Nota");
            entity.Property(e => e.TipoValorNota)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Tipo_Valor_Nota");
        });

        modelBuilder.Entity<RhuTExcEmpresa>(entity =>
        {
            entity.HasKey(e => e.ExcEsaId).HasName("RhuI_ExcEmpresa01");

            entity.ToTable("RhuT_ExcEmpresa");

            entity.HasIndex(e => new { e.PTexId, e.PEmpId }, "RhuI_ExcEmpresa02").IsUnique();

            entity.Property(e => e.ExcEsaId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PConcRemId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pConcRemId");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PItmTraExcId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pItmTraExcId");
            entity.Property(e => e.PTexId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTexId");

            entity.HasOne(d => d.PConcRem).WithMany(p => p.RhuTExcEmpresas)
                .HasForeignKey(d => d.PConcRemId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_RhuT_ExcEmpresa04");

            entity.HasOne(d => d.PEmp).WithMany(p => p.RhuTExcEmpresas)
                .HasForeignKey(d => d.PEmpId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_RhuT_ExcEmpresa02");

            entity.HasOne(d => d.PItmTraExc).WithMany(p => p.RhuTExcEmpresas)
                .HasForeignKey(d => d.PItmTraExcId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_RhuT_ExcEmpresa03");

            entity.HasOne(d => d.PTex).WithMany(p => p.RhuTExcEmpresas)
                .HasForeignKey(d => d.PTexId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_RhuT_ExcEmpresa01");
        });

        modelBuilder.Entity<RhuTExcFechasEve>(entity =>
        {
            entity.HasKey(e => e.FecEveId).HasName("RhuI_ExcFechasEve01");

            entity.ToTable("RhuT_ExcFechasEve");

            entity.Property(e => e.FecEveId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecEveInicio).HasColumnType("datetime");
            entity.Property(e => e.FecEveTermino).HasColumnType("datetime");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PItmEveAsiId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pItmEveAsiId");
            entity.Property(e => e.PPerRemId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pPerRemId");

            entity.HasOne(d => d.PItmEveAsi).WithMany(p => p.RhuTExcFechasEves)
                .HasForeignKey(d => d.PItmEveAsiId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_RhuT_ExcFechasEve01");

            entity.HasOne(d => d.PPerRem).WithMany(p => p.RhuTExcFechasEves)
                .HasForeignKey(d => d.PPerRemId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_RhuT_ExcFechasEve02");
        });

        modelBuilder.Entity<RhuTExcPago>(entity =>
        {
            entity.HasKey(e => e.ExcPagId).HasName("RhuI_ExcPago");

            entity.ToTable("RhuT_ExcPago");

            entity.Property(e => e.ExcPagId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PExcId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pExcId");
            entity.Property(e => e.PItmEstExcPagId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pItmEstExcPagId");
            entity.Property(e => e.PPerId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pPerId");
            entity.Property(e => e.PTpaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTpaId");

            entity.HasOne(d => d.PExc).WithMany(p => p.RhuTExcPagos)
                .HasForeignKey(d => d.PExcId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_RhuT_ExcPago01");

            entity.HasOne(d => d.PItmEstExcPag).WithMany(p => p.RhuTExcPagos)
                .HasForeignKey(d => d.PItmEstExcPagId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_RhuT_ExcPago03");

            entity.HasOne(d => d.PTpa).WithMany(p => p.RhuTExcPagos)
                .HasForeignKey(d => d.PTpaId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_RhuT_ExcPago02");
        });

        modelBuilder.Entity<RhuTExcTipExc>(entity =>
        {
            entity.HasKey(e => e.TexId).HasName("RhuI_ExcTipExc01");

            entity.ToTable("RhuT_ExcTipExc");

            entity.HasIndex(e => new { e.PItmEveAsiId, e.TexCod }, "RhuI_ExcTipExc02").IsUnique();

            entity.Property(e => e.TexId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PItmEveAsiId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pItmEveAsiId");
            entity.Property(e => e.TexGlosa)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();

            entity.HasOne(d => d.PItmEveAsi).WithMany(p => p.RhuTExcTipExcs)
                .HasForeignKey(d => d.PItmEveAsiId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_RhuT_ExcTipExc");
        });

        modelBuilder.Entity<RhuTExcTipPago>(entity =>
        {
            entity.HasKey(e => e.TpaId).HasName("RhuI_ExcTipPagos01");

            entity.ToTable("RhuT_ExcTipPagos");

            entity.Property(e => e.TpaId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PConcRemId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pConcRemId");
            entity.Property(e => e.PExcEsaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pExcEsaId");
            entity.Property(e => e.TpaGlosa)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();

            entity.HasOne(d => d.PConcRem).WithMany(p => p.RhuTExcTipPagos)
                .HasForeignKey(d => d.PConcRemId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_RhuT_ExcTipPagos02");

            entity.HasOne(d => d.PExcEsa).WithMany(p => p.RhuTExcTipPagos)
                .HasForeignKey(d => d.PExcEsaId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_RhuT_ExcTipPagos01");
        });

        modelBuilder.Entity<RhuTExcepcione>(entity =>
        {
            entity.HasKey(e => e.ExcId).HasName("RhuI_Excepciones01");

            entity.ToTable("RhuT_Excepciones");

            entity.Property(e => e.ExcId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.ExcFecIngReg).HasColumnType("datetime");
            entity.Property(e => e.ExcFecInicio).HasColumnType("datetime");
            entity.Property(e => e.ExcFecTermino).HasColumnType("datetime");
            entity.Property(e => e.ExcHraInicio).HasColumnType("datetime");
            entity.Property(e => e.ExcHraTermino).HasColumnType("datetime");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PCtoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtoId");
            entity.Property(e => e.PExcEsaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pExcEsaId");
            entity.Property(e => e.PFecEveId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pFecEveId");
            entity.Property(e => e.PItmEstExcDiaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pItmEstExcDiaId");
            entity.Property(e => e.POrigenId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pOrigenId");
        });

        modelBuilder.Entity<RhuTFaltaAbono>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("RhuT_FaltaAbono");

            entity.Property(e => e.Descripcion)
                .HasMaxLength(50)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PFlegBitId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pFLegBitId");
            entity.Property(e => e.Rut)
                .HasMaxLength(12)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<RhuTFicAntAcademico>(entity =>
        {
            entity.HasKey(e => e.AntAdedId);

            entity.ToTable("RhuT_FicAntAcademicos");

            entity.HasIndex(e => e.PFicPerId, "I1_RhuT_FicAntAcademicos").HasFillFactor(90);

            entity.Property(e => e.AntAdedId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.AdeCodCursoHom)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.AdeFecInicio).HasColumnType("datetime");
            entity.Property(e => e.AdeFecTermino).HasColumnType("datetime");
            entity.Property(e => e.AdeTexto)
                .HasMaxLength(255)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PFicPerId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pFicPerId");
            entity.Property(e => e.PItmCarreraId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pItmCarreraId");
            entity.Property(e => e.PItmInstEducId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pItmInstEducId");
            entity.Property(e => e.PItmNivEducId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pItmNivEducId");
            entity.Property(e => e.PItmTituloId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pItmTituloId");

            entity.HasOne(d => d.PFicPer).WithMany(p => p.RhuTFicAntAcademicos)
                .HasForeignKey(d => d.PFicPerId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_RhuT_FicAntAcademicos");

            entity.HasOne(d => d.PItmCarrera).WithMany(p => p.RhuTFicAntAcademicoPItmCarreras)
                .HasForeignKey(d => d.PItmCarreraId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK1_RhuT_FicAntAcademicos");

            entity.HasOne(d => d.PItmInstEduc).WithMany(p => p.RhuTFicAntAcademicoPItmInstEducs)
                .HasForeignKey(d => d.PItmInstEducId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK4_RhuT_FicAntAcademicos");

            entity.HasOne(d => d.PItmNivEduc).WithMany(p => p.RhuTFicAntAcademicoPItmNivEducs)
                .HasForeignKey(d => d.PItmNivEducId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK2_RhuT_FicAntAcademicos");

            entity.HasOne(d => d.PItmTitulo).WithMany(p => p.RhuTFicAntAcademicoPItmTitulos)
                .HasForeignKey(d => d.PItmTituloId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK3_RhuT_FicAntAcademicos");
        });

        modelBuilder.Entity<RhuTFicAntActExtra>(entity =>
        {
            entity.HasKey(e => e.AntExtId);

            entity.ToTable("RhuT_FicAntActExtras");

            entity.HasIndex(e => e.PFicPerId, "I1_RhuT_FicAntActExtras").HasFillFactor(90);

            entity.Property(e => e.AntExtId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.ExtDescripcion)
                .HasMaxLength(200)
                .IsUnicode(false);
            entity.Property(e => e.ExtFecInicio).HasColumnType("datetime");
            entity.Property(e => e.ExtLugar)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PFicPerId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pFicPerId");

            entity.HasOne(d => d.PFicPer).WithMany(p => p.RhuTFicAntActExtras)
                .HasForeignKey(d => d.PFicPerId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_RhuT_FicAntActExtras");
        });

        modelBuilder.Entity<RhuTFicAntAfp>(entity =>
        {
            entity.HasKey(e => e.AntAfpId);

            entity.ToTable("RhuT_FicAntAfp");

            entity.HasIndex(e => new { e.PFicPerId, e.AfpFecVigencia }, "U1_RhuT_FicAntAfp").IsUnique();

            entity.Property(e => e.AntAfpId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.AfpAhorro).HasColumnType("money");
            entity.Property(e => e.AfpDepConvenido).HasColumnType("money");
            entity.Property(e => e.AfpFecContratoFun).HasColumnType("datetime");
            entity.Property(e => e.AfpFecPrimeraAfi).HasColumnType("datetime");
            entity.Property(e => e.AfpFecRecepcion).HasColumnType("datetime");
            entity.Property(e => e.AfpFecVigencia).HasColumnType("datetime");
            entity.Property(e => e.AfpFun)
                .HasMaxLength(15)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.AfpRegTributario).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.AfpVoluntario).HasColumnType("money");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PAfcEntId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pAfcEntId");
            entity.Property(e => e.PFicPerId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pFicPerId");
            entity.Property(e => e.PInsParAfpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pInsParAfpId");
            entity.Property(e => e.PMonedaAhoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMonedaAhoId");
            entity.Property(e => e.PMonedaDepConId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMonedaDepConId");
            entity.Property(e => e.PMonedaVolId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMonedaVolId");

            entity.HasOne(d => d.PFicPer).WithMany(p => p.RhuTFicAntAfps)
                .HasForeignKey(d => d.PFicPerId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_RhuT_FicAntAfp");
        });

        modelBuilder.Entity<RhuTFicAntApv>(entity =>
        {
            entity.HasKey(e => e.AntApvId);

            entity.ToTable("RhuT_FicAntApv");

            entity.HasIndex(e => e.PFicPerId, "I1_RhuT_FicAntApv").HasFillFactor(90);

            entity.Property(e => e.AntApvId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.ApvFecDescuento).HasColumnType("datetime");
            entity.Property(e => e.ApvFecSuscripcion).HasColumnType("datetime");
            entity.Property(e => e.ApvFecTermino).HasColumnType("datetime");
            entity.Property(e => e.ApvFecVigencia).HasColumnType("datetime");
            entity.Property(e => e.ApvNumPoliza)
                .HasMaxLength(15)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.ApvRegTributario).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.ApvValor).HasColumnType("money");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PFicPerId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pFicPerId");
            entity.Property(e => e.PInstApvId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pInstApvId");
            entity.Property(e => e.PItmEstApvId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pItmEstApvId");
            entity.Property(e => e.PItmFpagoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pItmFPagoId");
            entity.Property(e => e.PItmOrigenAhId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pItmOrigenAhId");
            entity.Property(e => e.PMonedaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMonedaId");

            entity.HasOne(d => d.PFicPer).WithMany(p => p.RhuTFicAntApvs)
                .HasForeignKey(d => d.PFicPerId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_RhuT_FicAntApv");

            entity.HasOne(d => d.PItmEstApv).WithMany(p => p.RhuTFicAntApvPItmEstApvs)
                .HasForeignKey(d => d.PItmEstApvId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK1_RhuT_FicAntApv");

            entity.HasOne(d => d.PItmFpago).WithMany(p => p.RhuTFicAntApvPItmFpagos)
                .HasForeignKey(d => d.PItmFpagoId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK3_RhuT_FicAntApv");

            entity.HasOne(d => d.PItmOrigenAh).WithMany(p => p.RhuTFicAntApvPItmOrigenAhs)
                .HasForeignKey(d => d.PItmOrigenAhId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK2_RhuT_FicAntApv");
        });

        modelBuilder.Entity<RhuTFicAntComplementario>(entity =>
        {
            entity.HasKey(e => e.AntPleId);

            entity.ToTable("RhuT_FicAntComplementarios");

            entity.HasIndex(e => e.PFicPerId, "I1_RhuT_FicAntComplementarios").HasFillFactor(90);

            entity.Property(e => e.AntPleId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PFicPerId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pFicPerId");
            entity.Property(e => e.PItmViviendaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pItmViviendaId");
            entity.Property(e => e.PleCanton)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PleObservacion)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();

            entity.HasOne(d => d.PFicPer).WithMany(p => p.RhuTFicAntComplementarios)
                .HasForeignKey(d => d.PFicPerId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_RhuT_FicAntComplementarios");

            entity.HasOne(d => d.PItmVivienda).WithMany(p => p.RhuTFicAntComplementarios)
                .HasForeignKey(d => d.PItmViviendaId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK1_RhuT_FicAntComplementarios");
        });

        modelBuilder.Entity<RhuTFicAntEmergencium>(entity =>
        {
            entity.HasKey(e => e.AntEmgId);

            entity.ToTable("RhuT_FicAntEmergencia");

            entity.HasIndex(e => e.PFicPerId, "I1_RhuT_FicAntEmergencia").IsUnique();

            entity.Property(e => e.AntEmgId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EmgDescripcion)
                .HasMaxLength(200)
                .IsUnicode(false);
            entity.Property(e => e.EmgEntDirDireccion1)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EmgEntDirDireccion2)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EmgEntDirFono1)
                .HasMaxLength(15)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EmgEntDirFono2)
                .HasMaxLength(15)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EmgEntRazonSocial1)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EmgEntRazonSocial2)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PFicPerId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pFicPerId");
            entity.Property(e => e.PItmGruSanId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pItmGruSanId");

            entity.HasOne(d => d.PFicPer).WithOne(p => p.RhuTFicAntEmergencium)
                .HasForeignKey<RhuTFicAntEmergencium>(d => d.PFicPerId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_RhuT_FicAntEmergencia");

            entity.HasOne(d => d.PItmGruSan).WithMany(p => p.RhuTFicAntEmergencia)
                .HasForeignKey(d => d.PItmGruSanId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK1_RhuT_FicAntEmergencia");
        });

        modelBuilder.Entity<RhuTFicAntGrupoFamiliar>(entity =>
        {
            entity.HasKey(e => e.AntGruFamId);

            entity.ToTable("RhuT_FicAntGrupoFamiliar");

            entity.HasIndex(e => e.PFicPerId, "I1_RhuT_FicAntGrupoFamiliar");

            entity.HasIndex(e => new { e.PFicPerId, e.GfaFecInicio, e.GfaFecTermino, e.AntGruFamId }, "RhuT_FicAntGrupoFamiliar_idx010");

            entity.Property(e => e.AntGruFamId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.GfaActividadLaboral)
                .HasMaxLength(255)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("GFaActividadLaboral");
            entity.Property(e => e.GfaEstado).HasColumnName("GFaEstado");
            entity.Property(e => e.GfaFecEmision)
                .HasColumnType("datetime")
                .HasColumnName("GFaFecEmision");
            entity.Property(e => e.GfaFecInicio)
                .HasColumnType("datetime")
                .HasColumnName("GFaFecInicio");
            entity.Property(e => e.GfaFecNacimiento)
                .HasColumnType("datetime")
                .HasColumnName("GFaFecNacimiento");
            entity.Property(e => e.GfaFecTermino)
                .HasColumnType("datetime")
                .HasColumnName("GFaFecTermino");
            entity.Property(e => e.GfaFecVigencia)
                .HasColumnType("datetime")
                .HasColumnName("GFaFecVigencia");
            entity.Property(e => e.GfaNroResolucion).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PFicPerId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pFicPerId");
            entity.Property(e => e.PGfaEmpAutEntId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pGFaEmpAutEntId");
            entity.Property(e => e.PGfaEntId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pGFaEntId");
            entity.Property(e => e.PItmNivEducId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pItmNivEducId");
            entity.Property(e => e.PItmParentescoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pItmParentescoId");
            entity.Property(e => e.PItmSexoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pItmSexoId");
            entity.Property(e => e.PItmTipCargaAdiId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pItmTipCargaAdiId");
            entity.Property(e => e.PItmTipCargaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pItmTipCargaId");
            entity.Property(e => e.PNomGfaDetId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pNomGfaDetId");

            entity.HasOne(d => d.PFicPer).WithMany(p => p.RhuTFicAntGrupoFamiliars)
                .HasForeignKey(d => d.PFicPerId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_RhuT_FicAntGrupoFamiliar");

            entity.HasOne(d => d.PItmNivEduc).WithMany(p => p.RhuTFicAntGrupoFamiliarPItmNivEducs)
                .HasForeignKey(d => d.PItmNivEducId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK3_RhuT_FicAntGrupoFamiliar");

            entity.HasOne(d => d.PItmParentesco).WithMany(p => p.RhuTFicAntGrupoFamiliarPItmParentescos)
                .HasForeignKey(d => d.PItmParentescoId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK1_RhuT_FicAntGrupoFamiliar");

            entity.HasOne(d => d.PItmSexo).WithMany(p => p.RhuTFicAntGrupoFamiliarPItmSexos)
                .HasForeignKey(d => d.PItmSexoId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK2_RhuT_FicAntGrupoFamiliar");

            entity.HasOne(d => d.PItmTipCargaAdi).WithMany(p => p.RhuTFicAntGrupoFamiliarPItmTipCargaAdis)
                .HasForeignKey(d => d.PItmTipCargaAdiId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK5_RhuT_FicAntGrupoFamiliar");

            entity.HasOne(d => d.PItmTipCarga).WithMany(p => p.RhuTFicAntGrupoFamiliarPItmTipCargas)
                .HasForeignKey(d => d.PItmTipCargaId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK4_RhuT_FicAntGrupoFamiliar");
        });

        modelBuilder.Entity<RhuTFicAntGrupoFamiliarOld>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("RhuT_FicAntGrupoFamiliar_old");

            entity.Property(e => e.AntGruFamId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.GfaActividadLaboral)
                .HasMaxLength(255)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("GFaActividadLaboral");
            entity.Property(e => e.GfaEstado).HasColumnName("GFaEstado");
            entity.Property(e => e.GfaFecEmision)
                .HasColumnType("datetime")
                .HasColumnName("GFaFecEmision");
            entity.Property(e => e.GfaFecInicio)
                .HasColumnType("datetime")
                .HasColumnName("GFaFecInicio");
            entity.Property(e => e.GfaFecNacimiento)
                .HasColumnType("datetime")
                .HasColumnName("GFaFecNacimiento");
            entity.Property(e => e.GfaFecTermino)
                .HasColumnType("datetime")
                .HasColumnName("GFaFecTermino");
            entity.Property(e => e.GfaFecVigencia)
                .HasColumnType("datetime")
                .HasColumnName("GFaFecVigencia");
            entity.Property(e => e.GfaNroResolucion).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PFicPerId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pFicPerId");
            entity.Property(e => e.PGfaEmpAutEntId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pGFaEmpAutEntId");
            entity.Property(e => e.PGfaEntId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pGFaEntId");
            entity.Property(e => e.PItmNivEducId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pItmNivEducId");
            entity.Property(e => e.PItmParentescoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pItmParentescoId");
            entity.Property(e => e.PItmSexoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pItmSexoId");
            entity.Property(e => e.PItmTipCargaAdiId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pItmTipCargaAdiId");
            entity.Property(e => e.PItmTipCargaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pItmTipCargaId");
            entity.Property(e => e.PNomGfaDetId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pNomGfaDetId");
        });

        modelBuilder.Entity<RhuTFicAntIdioma>(entity =>
        {
            entity.HasKey(e => e.AntIdiomaId);

            entity.ToTable("RhuT_FicAntIdiomas");

            entity.HasIndex(e => e.PFicPerId, "I1_RhuT_FicAntIdiomas").HasFillFactor(90);

            entity.Property(e => e.AntIdiomaId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PFicPerId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pFicPerId");
            entity.Property(e => e.PItmIdiEscId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pItmIdiEscId");
            entity.Property(e => e.PItmIdiHabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pItmIdiHabId");
            entity.Property(e => e.PItmIdiLecId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pItmIdiLecId");
            entity.Property(e => e.PItmIdiomaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pItmIdiomaId");

            entity.HasOne(d => d.PFicPer).WithMany(p => p.RhuTFicAntIdiomas)
                .HasForeignKey(d => d.PFicPerId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_RhuT_FicAntIdiomas");

            entity.HasOne(d => d.PItmIdiEsc).WithMany(p => p.RhuTFicAntIdiomaPItmIdiEscs)
                .HasForeignKey(d => d.PItmIdiEscId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK2_RhuT_FicAntIdiomas");

            entity.HasOne(d => d.PItmIdiHab).WithMany(p => p.RhuTFicAntIdiomaPItmIdiHabs)
                .HasForeignKey(d => d.PItmIdiHabId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK3_RhuT_FicAntIdiomas");

            entity.HasOne(d => d.PItmIdiLec).WithMany(p => p.RhuTFicAntIdiomaPItmIdiLecs)
                .HasForeignKey(d => d.PItmIdiLecId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK4_RhuT_FicAntIdiomas");

            entity.HasOne(d => d.PItmIdioma).WithMany(p => p.RhuTFicAntIdiomaPItmIdiomas)
                .HasForeignKey(d => d.PItmIdiomaId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK1_RhuT_FicAntIdiomas");
        });

        modelBuilder.Entity<RhuTFicAntImponible>(entity =>
        {
            entity.HasKey(e => e.AntImpId);

            entity.ToTable("RhuT_FicAntImponible");

            entity.HasIndex(e => e.PFicPerId, "I1_RhuT_FicAntImponible").HasFillFactor(90);

            entity.Property(e => e.AntImpId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.IinfEntRazonSocial)
                .HasMaxLength(120)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("IInfEntRazonSocial");
            entity.Property(e => e.IinfEntRut)
                .HasMaxLength(12)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("IInfEntRut");
            entity.Property(e => e.IinfFecVigencia)
                .HasColumnType("datetime")
                .HasColumnName("IInfFecVigencia");
            entity.Property(e => e.IinfObservacion)
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasColumnName("IInfObservacion");
            entity.Property(e => e.IinfValor)
                .HasColumnType("money")
                .HasColumnName("IInfValor");
            entity.Property(e => e.PFicPerId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pFicPerId");
            entity.Property(e => e.PItmTpInfId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pItmTpInfId");
            entity.Property(e => e.PMonedaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMonedaId");

            entity.HasOne(d => d.PFicPer).WithMany(p => p.RhuTFicAntImponibles)
                .HasForeignKey(d => d.PFicPerId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_RhuT_FicAntImponible");

            entity.HasOne(d => d.PItmTpInf).WithMany(p => p.RhuTFicAntImponibles)
                .HasForeignKey(d => d.PItmTpInfId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK1_RhuT_FicAntImponible");

            entity.HasOne(d => d.PMoneda).WithMany(p => p.RhuTFicAntImponibles)
                .HasForeignKey(d => d.PMonedaId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK2_RhuT_FicAntImponible");
        });

        modelBuilder.Entity<RhuTFicAntLaborale>(entity =>
        {
            entity.HasKey(e => e.AntLabId);

            entity.ToTable("RhuT_FicAntLaborales");

            entity.HasIndex(e => e.PFicPerId, "I1_RhuT_FicAntLaborales").HasFillFactor(90);

            entity.Property(e => e.AntLabId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.LabEntDirDireccion)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.LabEntDirFono)
                .HasMaxLength(15)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.LabEntRazonSocial)
                .HasMaxLength(120)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.LabFecInicio).HasColumnType("datetime");
            entity.Property(e => e.LabFecTermino).HasColumnType("datetime");
            entity.Property(e => e.LabRefCargo1)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.LabRefCargo2)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.LabRefCargo3)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.LabReferencia1)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.LabReferencia2)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.LabReferencia3)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PCausalLegId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCausalLegId");
            entity.Property(e => e.PFicPerId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pFicPerId");

            entity.HasOne(d => d.CgoCodCargoNavigation).WithMany(p => p.RhuTFicAntLaborales)
                .HasForeignKey(d => d.CgoCodCargo)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK1_RhuT_FicAntLaborales");

            entity.HasOne(d => d.PFicPer).WithMany(p => p.RhuTFicAntLaborales)
                .HasForeignKey(d => d.PFicPerId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_RhuT_FicAntLaborales");
        });

        modelBuilder.Entity<RhuTFicAntMedico>(entity =>
        {
            entity.HasKey(e => e.AntMedId);

            entity.ToTable("RhuT_FicAntMedicos");

            entity.HasIndex(e => e.PFicPerId, "I1_RhuT_FicAntMedicos").HasFillFactor(90);

            entity.Property(e => e.AntMedId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.MedCodEnf)
                .HasMaxLength(8)
                .IsUnicode(false);
            entity.Property(e => e.MedDescripcion)
                .HasMaxLength(200)
                .IsUnicode(false);
            entity.Property(e => e.MedFecAlta).HasColumnType("datetime");
            entity.Property(e => e.MedFecInicio).HasColumnType("datetime");
            entity.Property(e => e.MedObservacion)
                .HasMaxLength(200)
                .IsUnicode(false);
            entity.Property(e => e.PFicPerId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pFicPerId");

            entity.HasOne(d => d.PFicPer).WithMany(p => p.RhuTFicAntMedicos)
                .HasForeignKey(d => d.PFicPerId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_RhuT_FicActMedicos");
        });

        modelBuilder.Entity<RhuTFicAntPrevisionale>(entity =>
        {
            entity.HasKey(e => e.AntPrevId);

            entity.ToTable("RhuT_FicAntPrevisionales");

            entity.HasIndex(e => new { e.PFicPerId, e.PreFecVigencia }, "U1_RhuT_FicAntPrevisionales").IsUnique();

            entity.Property(e => e.AntPrevId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PAntAfpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pAntAfpId");
            entity.Property(e => e.PAntSaludId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pAntSaludId");
            entity.Property(e => e.PFicPerId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pFicPerId");
            entity.Property(e => e.PInsParId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pInsParId");
            entity.Property(e => e.PTramoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTramoId");
            entity.Property(e => e.PreFecRecMeses).HasColumnType("datetime");
            entity.Property(e => e.PreFecVigencia).HasColumnType("datetime");
            entity.Property(e => e.PreIndCotizacion).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.PreIndPrevisional)
                .HasMaxLength(8)
                .IsUnicode(false);
            entity.Property(e => e.PreItmParPensionId).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.TraCodTramo)
                .HasMaxLength(8)
                .IsUnicode(false);

            entity.HasOne(d => d.PFicPer).WithMany(p => p.RhuTFicAntPrevisionales)
                .HasForeignKey(d => d.PFicPerId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_RhuT_FicAntPrevisionales");
        });

        modelBuilder.Entity<RhuTFicAntSalud>(entity =>
        {
            entity.HasKey(e => e.AntSaludId);

            entity.ToTable("RhuT_FicAntSalud");

            entity.HasIndex(e => new { e.PFicPerId, e.SalFecVigencia }, "U1_RhuT_FicAntSalud").IsUnique();

            entity.Property(e => e.AntSaludId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PFicPerId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pFicPerId");
            entity.Property(e => e.PInsParSaludId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pInsParSaludId");
            entity.Property(e => e.PMonedaAugeId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMonedaAugeId");
            entity.Property(e => e.PMonedaL18566id)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMonedaL18566Id");
            entity.Property(e => e.PMonedaPlanId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMonedaPlanId");
            entity.Property(e => e.SalFecBeneficio).HasColumnType("datetime");
            entity.Property(e => e.SalFecContratoFun).HasColumnType("datetime");
            entity.Property(e => e.SalFecPrimeraAfi).HasColumnType("datetime");
            entity.Property(e => e.SalFecRecepcion).HasColumnType("datetime");
            entity.Property(e => e.SalFecVigencia).HasColumnType("datetime");
            entity.Property(e => e.SalFun)
                .HasMaxLength(15)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.SalPlan).HasColumnType("money");
            entity.Property(e => e.SalValorL18566).HasColumnType("money");

            entity.HasOne(d => d.PFicPer).WithMany(p => p.RhuTFicAntSaluds)
                .HasForeignKey(d => d.PFicPerId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_RhuT_FicAntSalud");
        });

        modelBuilder.Entity<RhuTFicCertificacione>(entity =>
        {
            entity.HasKey(e => e.AntCertId);

            entity.ToTable("RhuT_FicCertificaciones");

            entity.HasIndex(e => new { e.PFicPerId, e.PItmParId, e.CertFecVigIni }, "I1_RhuT_FicCertificaciones").IsUnique();

            entity.Property(e => e.AntCertId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.CertFecVigFin).HasColumnType("datetime");
            entity.Property(e => e.CertFecVigIni).HasColumnType("datetime");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PFicPerId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pFicPerId");
            entity.Property(e => e.PItmParId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pItmParId");

            entity.HasOne(d => d.PFicPer).WithMany(p => p.RhuTFicCertificaciones)
                .HasForeignKey(d => d.PFicPerId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK2_RhuT_FicCertificaciones");

            entity.HasOne(d => d.PItmPar).WithMany(p => p.RhuTFicCertificaciones)
                .HasForeignKey(d => d.PItmParId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK1_RhuT_FicCertificaciones");
        });

        modelBuilder.Entity<RhuTFicDctosFi>(entity =>
        {
            entity.HasKey(e => e.DctoFisId);

            entity.ToTable("RhuT_FicDctosFis");

            entity.Property(e => e.DctoFisId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.DctoFisArchivo)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.DctoFisDescripcion)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.DctoFisFecIni).HasColumnType("datetime");
            entity.Property(e => e.DctoFisFecTer).HasColumnType("datetime");
            entity.Property(e => e.DctoFisRuta)
                .HasMaxLength(120)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PFicPerId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pFicPerId");
            entity.Property(e => e.PItmDocEstadoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pItmDocEstadoId");
            entity.Property(e => e.PItmParId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pItmParId");

            entity.HasOne(d => d.PFicPer).WithMany(p => p.RhuTFicDctosFis)
                .HasForeignKey(d => d.PFicPerId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_RhuT_FicDctosFis");

            entity.HasOne(d => d.PItmDocEstado).WithMany(p => p.RhuTFicDctosFis)
                .HasForeignKey(d => d.PItmDocEstadoId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK1_RhuT_FicDctosFis");
        });

        modelBuilder.Entity<RhuTFicPersona>(entity =>
        {
            entity.HasKey(e => e.FicPerId).HasName("PK_RhuT_FicPerPersonas");

            entity.ToTable("RhuT_FicPersonas");

            entity.HasIndex(e => e.PEntId, "I1_RhuT_FicPerPersonas").IsUnique();

            entity.HasIndex(e => new { e.FicPerId, e.PEntId, e.PItmSexoId, e.PItmEstCivilId, e.PItmProfesionId, e.PItmNacionalidadId, e.PItmFicEstadoId, e.PEntSucId, e.FicIdent1, e.FicIdent2, e.FicIdent3, e.FicFecNacimiento }, "RhuT_FicPersonas_idx010");

            entity.Property(e => e.FicPerId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.FicCelular)
                .HasMaxLength(15)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.FicCmuCodigo).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.FicEntRazonSocial)
                .HasMaxLength(120)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.FicFecNacimiento).HasColumnType("datetime");
            entity.Property(e => e.FicIdent1)
                .HasMaxLength(15)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.FicIdent2)
                .HasMaxLength(15)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.FicIdent3)
                .HasMaxLength(15)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.FiceMail)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PEntDirId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntDirId");
            entity.Property(e => e.PEntId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntId");
            entity.Property(e => e.PEntSucId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntSucId");
            entity.Property(e => e.PItmDisponId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pItmDisponId");
            entity.Property(e => e.PItmEstCivilId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pItmEstCivilId");
            entity.Property(e => e.PItmFicEstadoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pItmFicEstadoId");
            entity.Property(e => e.PItmNacionalidadId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pItmNacionalidadId");
            entity.Property(e => e.PItmNivLabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pItmNivLabId");
            entity.Property(e => e.PItmOrigenCurId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pItmOrigenCurId");
            entity.Property(e => e.PItmProfesionId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pItmProfesionId");
            entity.Property(e => e.PItmSexoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pItmSexoId");

            entity.HasOne(d => d.PEnt).WithOne(p => p.RhuTFicPersona)
                .HasForeignKey<RhuTFicPersona>(d => d.PEntId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_RhuT_FicPerPersonas");

            entity.HasOne(d => d.PItmEstCivil).WithMany(p => p.RhuTFicPersonaPItmEstCivils)
                .HasForeignKey(d => d.PItmEstCivilId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK2_RhuT_FicPersonas");

            entity.HasOne(d => d.PItmFicEstado).WithMany(p => p.RhuTFicPersonaPItmFicEstados)
                .HasForeignKey(d => d.PItmFicEstadoId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK4_RhuT_FicPersonas");

            entity.HasOne(d => d.PItmNacionalidad).WithMany(p => p.RhuTFicPersonaPItmNacionalidads)
                .HasForeignKey(d => d.PItmNacionalidadId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK3_RhuT_FicPersonas");

            entity.HasOne(d => d.PItmSexo).WithMany(p => p.RhuTFicPersonaPItmSexos)
                .HasForeignKey(d => d.PItmSexoId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK1_RhuT_FicPersonas");
        });

        modelBuilder.Entity<RhuTFicTmpTtrab>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("RhuT_FicTmpTTrab");

            entity.Property(e => e.CodOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.CreNombre)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.DivGlosa)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EntRazonSocial)
                .HasMaxLength(120)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EntRut)
                .HasMaxLength(12)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.LugDescripcion)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.NombreTrabajador)
                .HasMaxLength(120)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PCtoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtoId");
            entity.Property(e => e.PFicPerId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pFicPerId");
        });

        modelBuilder.Entity<RhuTFlegBitacora>(entity =>
        {
            entity.HasKey(e => e.FlegBitId);

            entity.ToTable("RhuT_FLegBitacora");

            entity.HasIndex(e => new { e.PEmpId, e.FlegBitFecDesde, e.FlegSecuencia }, "I1_RhuT_FLegBitacora").IsUnique();

            entity.Property(e => e.FlegBitId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("FLegBitId");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.FlegBitEstado)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("FLegBitEstado");
            entity.Property(e => e.FlegBitFecDesde)
                .HasColumnType("datetime")
                .HasColumnName("FLegBitFecDesde");
            entity.Property(e => e.FlegBitFecHasta).HasColumnType("datetime");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");

            entity.HasOne(d => d.PEmp).WithMany(p => p.RhuTFlegBitacoras)
                .HasForeignKey(d => d.PEmpId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_RhuT_BitEmpresa");
        });

        modelBuilder.Entity<RhuTFlegCtrlBono>(entity =>
        {
            entity.HasKey(e => e.FlegMbonId).HasName("PK_RhuT_FLegctrlBonos");

            entity.ToTable("RhuT_FlegCtrlBonos");

            entity.HasIndex(e => new { e.PEmpId, e.EjeAno, e.PFlegMcaId, e.PNomConcDetId }, "I1_RhuT_FLegCtrlBonos").IsUnique();

            entity.Property(e => e.FlegMbonId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("FLegMBonId");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.FlegMboDias).HasColumnName("FLegMBoDias");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PFlegMcaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pFLegMCaId");
            entity.Property(e => e.PNomConcDetId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pNomConcDetId");
        });

        modelBuilder.Entity<RhuTFlegDatosAdic>(entity =>
        {
            entity.HasKey(e => e.FlegDatId);

            entity.ToTable("RhuT_FLegDatosAdic");

            entity.HasIndex(e => new { e.PCtoId, e.FlegDatFecInicio }, "I1_RhuT_FLegDatosAdic").IsUnique();

            entity.Property(e => e.FlegDatId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("FLegDatId");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.FlegDatDiasPactados).HasColumnName("FLegDatDiasPactados");
            entity.Property(e => e.FlegDatFecBase)
                .HasColumnType("datetime")
                .HasColumnName("FLegDatFecBase");
            entity.Property(e => e.FlegDatFecInicio)
                .HasColumnType("datetime")
                .HasColumnName("FLegDatFecInicio");
            entity.Property(e => e.FlegDatFecProgresivo)
                .HasColumnType("datetime")
                .HasColumnName("FLegDatFecProgresivo");
            entity.Property(e => e.FlegDatFecTermino)
                .HasColumnType("datetime")
                .HasColumnName("FLegDatFecTermino");
            entity.Property(e => e.FlegDatMesProgresivo).HasColumnName("FLegDatMesProgresivo");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PCtoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtoId");

            entity.HasOne(d => d.PCto).WithMany(p => p.RhuTFlegDatosAdics)
                .HasForeignKey(d => d.PCtoId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_RhuT_AdicContratos");
        });

        modelBuilder.Entity<RhuTFlegDefGral>(entity =>
        {
            entity.HasKey(e => e.FlegDefId);

            entity.ToTable("RhuT_FLegDefGral");

            entity.HasIndex(e => e.PEmpId, "I1_RhuT_FLegDefGral").IsUnique();

            entity.Property(e => e.FlegDefId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("FLegDefId");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.FlegDefCorteFin).HasColumnName("FLegDEfCorteFin");
            entity.Property(e => e.FlegDefCorteIni).HasColumnName("FLegDefCorteIni");
            entity.Property(e => e.FlegDefDiasBase).HasColumnName("FLegDefDiasBase");
            entity.Property(e => e.FlegDefFecAbono)
                .HasColumnType("datetime")
                .HasColumnName("FLegDefFecAbono");
            entity.Property(e => e.FlegDefInd).HasColumnName("FLegDefInd");
            entity.Property(e => e.FlegDefIndRecep).HasColumnName("FLegDefIndRecep");
            entity.Property(e => e.FlegDiasBaseBon).HasColumnName("FLegDiasBaseBon");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PConcRemBv)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pConcRemBV");
            entity.Property(e => e.PConcRemFl)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pConcRemFL");
            entity.Property(e => e.PConcRemId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pConcRemId");
            entity.Property(e => e.PConcRemPr)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pConcRemPR");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");

            entity.HasOne(d => d.PConcRemFlNavigation).WithMany(p => p.RhuTFlegDefGralPConcRemFlNavigations)
                .HasForeignKey(d => d.PConcRemFl)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_RhuT_DefGral02");

            entity.HasOne(d => d.PConcRem).WithMany(p => p.RhuTFlegDefGralPConcRems)
                .HasForeignKey(d => d.PConcRemId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_RhuT_DefGral01");

            entity.HasOne(d => d.PConcRemPrNavigation).WithMany(p => p.RhuTFlegDefGralPConcRemPrNavigations)
                .HasForeignKey(d => d.PConcRemPr)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_RhuT_DefGral03");
        });

        modelBuilder.Entity<RhuTFlegFerRegional>(entity =>
        {
            entity.HasKey(e => e.FlegFerRegId);

            entity.ToTable("RhuT_FLegFerRegional");

            entity.HasIndex(e => new { e.PFlegFerId, e.PLugId }, "I1_RhuT_FLegFerRegional").IsUnique();

            entity.Property(e => e.FlegFerRegId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("FLegFerRegId");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PFlegFerId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pFLegFerId");
            entity.Property(e => e.PLugId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pLugId");

            entity.HasOne(d => d.PLug).WithMany(p => p.RhuTFlegFerRegionals)
                .HasForeignKey(d => d.PLugId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_RhuT_FLegFerRegional");
        });

        modelBuilder.Entity<RhuTFlegFeriado>(entity =>
        {
            entity.HasKey(e => e.FlegFerId).HasName("PK_RhuT_FLegFeraidos");

            entity.ToTable("RhuT_FLegFeriados");

            entity.HasIndex(e => e.FlegFerFecha, "I1_RhuT_FLegFeriados").IsUnique();

            entity.Property(e => e.FlegFerId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("FLegFerId");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.FlegFerFecha)
                .HasColumnType("datetime")
                .HasColumnName("FLegFerFecha");
            entity.Property(e => e.FlegFerTipo).HasColumnName("FLegFerTipo");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
        });

        modelBuilder.Entity<RhuTFlegMovAbono>(entity =>
        {
            entity.HasKey(e => e.FlegMabId);

            entity.ToTable("RhuT_FLegMovAbonos");

            entity.HasIndex(e => new { e.PCtoId, e.FlegMabPerInicio, e.FlegMabPerTermino }, "I1_RhuT_FLegMovAbonos").IsUnique();

            entity.Property(e => e.FlegMabId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("FLegMabId");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.FlegMabDiasAdi).HasColumnName("FLegMabDiasAdi");
            entity.Property(e => e.FlegMabDiasDer).HasColumnName("FLegMabDiasDer");
            entity.Property(e => e.FlegMabDiasPro).HasColumnName("FLegMabDiasPro");
            entity.Property(e => e.FlegMabDiasSal).HasColumnName("FLegMabDiasSal");
            entity.Property(e => e.FlegMabEstado)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("FLegMabEstado");
            entity.Property(e => e.FlegMabPerInicio)
                .HasColumnType("datetime")
                .HasColumnName("FLegMabPerInicio");
            entity.Property(e => e.FlegMabPerTermino)
                .HasColumnType("datetime")
                .HasColumnName("FLegMabPerTermino");
            entity.Property(e => e.FlegMprDias).HasColumnName("FLegMPrDias");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PCtoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtoId");
            entity.Property(e => e.PFlegBitId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pFLegBitId");
            entity.Property(e => e.PFlegDatId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pFLegDatId");
            entity.Property(e => e.PFlegMprId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pFLegMPrId");

            entity.HasOne(d => d.PCto).WithMany(p => p.RhuTFlegMovAbonos)
                .HasForeignKey(d => d.PCtoId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_RhuT_AboContratos");

            entity.HasOne(d => d.PFlegBit).WithMany(p => p.RhuTFlegMovAbonos)
                .HasForeignKey(d => d.PFlegBitId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_RhuT_AboBitacora");
        });

        modelBuilder.Entity<RhuTFlegMovCarAnu>(entity =>
        {
            entity.HasKey(e => e.FlegManId).HasName("PK_RhuT_FLegMAnCargos");

            entity.ToTable("RhuT_FLegMovCarAnu");

            entity.Property(e => e.FlegManId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("FLegMAnId");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.FlegManCertificado).HasColumnName("FLegMAnCertificado");
            entity.Property(e => e.FlegManDias).HasColumnName("FLegMAnDias");
            entity.Property(e => e.FlegManFecInicio)
                .HasColumnType("datetime")
                .HasColumnName("FLegMAnFecInicio");
            entity.Property(e => e.FlegManFecTermino)
                .HasColumnType("datetime")
                .HasColumnName("FLegMAnFecTermino");
            entity.Property(e => e.FlegManMotivo)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("FLegMAnMotivo");
            entity.Property(e => e.FlegManTipo)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("FLegMAnTipo");
            entity.Property(e => e.FlegMcaJornada).HasColumnName("FlegMCaJornada");
            entity.Property(e => e.FlegMcaTpDias).HasColumnName("FLegMCaTpDias");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PCtoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtoId");

            entity.HasOne(d => d.FlegManTipoNavigation).WithMany(p => p.RhuTFlegMovCarAnus)
                .HasForeignKey(d => d.FlegManTipo)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_RhuT_CanTipos");

            entity.HasOne(d => d.PCto).WithMany(p => p.RhuTFlegMovCarAnus)
                .HasForeignKey(d => d.PCtoId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_RhuT_CAnContratos");
        });

        modelBuilder.Entity<RhuTFlegMovCargo>(entity =>
        {
            entity.HasKey(e => e.FlegMcaId);

            entity.ToTable("RhuT_FLegMovCargos");

            entity.HasIndex(e => new { e.PCtoId, e.FlegMcaFecInicio }, "I1_RhuT_FLegMovCargos").IsUnique();

            entity.Property(e => e.FlegMcaId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("FLegMCaId");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.FlegMcaCertificado).HasColumnName("FLegMCaCertificado");
            entity.Property(e => e.FlegMcaDias).HasColumnName("FLegMCaDias");
            entity.Property(e => e.FlegMcaEstado)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("FLegMCaEstado");
            entity.Property(e => e.FlegMcaFecInicio)
                .HasColumnType("datetime")
                .HasColumnName("FLegMCaFecInicio");
            entity.Property(e => e.FlegMcaFecTermino)
                .HasColumnType("datetime")
                .HasColumnName("FLegMCaFecTermino");
            entity.Property(e => e.FlegMcaIndRecep).HasColumnName("FLegMCaIndRecep");
            entity.Property(e => e.FlegMcaJornada).HasColumnName("FlegMCaJornada");
            entity.Property(e => e.FlegMcaMotivo)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("FLegMCaMotivo");
            entity.Property(e => e.FlegMcaTipo)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("FLegMCaTipo");
            entity.Property(e => e.FlegMcaTpDias).HasColumnName("FLegMCaTpDias");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PCtoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtoId");

            entity.HasOne(d => d.FlegMcaEstadoNavigation).WithMany(p => p.RhuTFlegMovCargoFlegMcaEstadoNavigations)
                .HasForeignKey(d => d.FlegMcaEstado)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_RhuT_CarEstados");

            entity.HasOne(d => d.FlegMcaTipoNavigation).WithMany(p => p.RhuTFlegMovCargoFlegMcaTipoNavigations)
                .HasForeignKey(d => d.FlegMcaTipo)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_RhuT_CarTipos");

            entity.HasOne(d => d.PCto).WithMany(p => p.RhuTFlegMovCargos)
                .HasForeignKey(d => d.PCtoId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_RhuT_CarContratos");
        });

        modelBuilder.Entity<RhuTFlegMovPeriodo>(entity =>
        {
            entity.HasKey(e => new { e.PFlegMabId, e.PFlegMcaId });

            entity.ToTable("RhuT_FLegMovPeriodos");

            entity.Property(e => e.PFlegMabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pFLegMabId");
            entity.Property(e => e.PFlegMcaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pFLegMCaId");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.FlegMpeDias).HasColumnName("FLegMPeDias");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");

            entity.HasOne(d => d.PFlegMab).WithMany(p => p.RhuTFlegMovPeriodos)
                .HasForeignKey(d => d.PFlegMabId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_RhuT_PerAbonos");

            entity.HasOne(d => d.PFlegMca).WithMany(p => p.RhuTFlegMovPeriodos)
                .HasForeignKey(d => d.PFlegMcaId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_RhuT_PerCargos");
        });

        modelBuilder.Entity<RhuTFlegMovProgresivo>(entity =>
        {
            entity.HasKey(e => new { e.PFlegMabId, e.PFlegMprId });

            entity.ToTable("RhuT_FLegMovProgresivos");

            entity.Property(e => e.PFlegMabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pFLegMabId");
            entity.Property(e => e.PFlegMprId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pFLegMPrId");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.FlegMprDias).HasColumnName("FLegMPrDias");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");

            entity.HasOne(d => d.PFlegMab).WithMany(p => p.RhuTFlegMovProgresivos)
                .HasForeignKey(d => d.PFlegMabId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_RhuT_ProAbonos");

            entity.HasOne(d => d.PFlegMpr).WithMany(p => p.RhuTFlegMovProgresivos)
                .HasForeignKey(d => d.PFlegMprId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_RhuT_ProMovtos");
        });

        modelBuilder.Entity<RhuTFlegProgresivo>(entity =>
        {
            entity.HasKey(e => e.FlegMprId);

            entity.ToTable("RhuT_FLegProgresivos");

            entity.Property(e => e.FlegMprId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("FLegMPrId");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.FlegMcaEstado)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("FLegMCaEstado");
            entity.Property(e => e.FlegMprDias).HasColumnName("FLegMPrDias");
            entity.Property(e => e.FlegMprFecSolicitud)
                .HasColumnType("datetime")
                .HasColumnName("FLegMPrFecSolicitud");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PCtoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtoId");
            entity.Property(e => e.PNomConcId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pNomConcId");
        });

        modelBuilder.Entity<RhuTFlegSaldo>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("RhuT_FLegSaldos");

            entity.HasIndex(e => new { e.PEmpId, e.PFicPerId, e.PCtoId }, "I1_RhuT_FLegSaldos").IsUnique();

            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.FlegIniArchivo)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("FLegIniArchivo");
            entity.Property(e => e.FlegIniEstId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("FLegIniEstId");
            entity.Property(e => e.FlegIniFecha)
                .HasColumnType("datetime")
                .HasColumnName("FLegIniFecha");
            entity.Property(e => e.FlegIniRuta)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("FLegIniRuta");
            entity.Property(e => e.FlegIniSaldo).HasColumnName("FLegIniSaldo");
            entity.Property(e => e.FlegProgresivos).HasColumnName("FLegProgresivos");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PCtoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtoId");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PFicPerId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pFicPerId");
        });

        modelBuilder.Entity<RhuTFlegSaldosErr>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("RhuT_FLegSaldosErr");

            entity.Property(e => e.Descripcion)
                .HasMaxLength(50)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EntRut)
                .HasMaxLength(12)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.FlegIniArchivo)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("FLegIniArchivo");
            entity.Property(e => e.FlegIniFecha)
                .HasColumnType("datetime")
                .HasColumnName("FLegIniFecha");
            entity.Property(e => e.FlegIniRuta)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("FLegIniRuta");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
        });

        modelBuilder.Entity<RhuTFlegSeguimiento>(entity =>
        {
            entity.HasKey(e => e.FlegSegId);

            entity.ToTable("RhuT_FLegSeguimiento");

            entity.Property(e => e.FlegSegId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("FLegSegId");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.FlegMabDiasAdi).HasColumnName("FLegMabDiasAdi");
            entity.Property(e => e.FlegMabDiasDer).HasColumnName("FLegMabDiasDer");
            entity.Property(e => e.FlegMabDiasPro).HasColumnName("FLegMabDiasPro");
            entity.Property(e => e.FlegMabDiasSal).HasColumnName("FLegMabDiasSal");
            entity.Property(e => e.FlegMprDias).HasColumnName("FLegMPrDias");
            entity.Property(e => e.FlegSegAccion)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("FLegSegAccion");
            entity.Property(e => e.FlegSegDescripcion)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("FLegSegDescripcion");
            entity.Property(e => e.FlegSegFecha)
                .HasColumnType("datetime")
                .HasColumnName("FLegSegFecha");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PCtoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtoId");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PFlegMabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pFLegMabId");
        });

        modelBuilder.Entity<RhuTFlegTabAbono>(entity =>
        {
            entity.HasKey(e => e.FlegAboId);

            entity.ToTable("RhuT_FLegTabAbonos");

            entity.HasIndex(e => new { e.PEmpId, e.FlegAboNumAgno }, "I1_RhuT_FLegTabAbonos").IsUnique();

            entity.Property(e => e.FlegAboId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("FLegAboId");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.FlegAboNumAgno).HasColumnName("FLegAboNumAgno");
            entity.Property(e => e.FlegAboNumDia).HasColumnName("FLegAboNumDia");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
        });

        modelBuilder.Entity<RhuTFlegTmpTcertif>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("RhuT_FLegTmpTCertif");

            entity.Property(e => e.CtoOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PFlegMcaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pFLegMCaId");
        });

        modelBuilder.Entity<RhuTFnqBasesDet>(entity =>
        {
            entity.HasKey(e => e.FnqBasDetId);

            entity.ToTable("RhuT_FnqBasesDet");

            entity.HasIndex(e => new { e.PFnqBasId, e.PVariRemId, e.PConcRemId }, "I1_RhuT_FnqBasesDet").IsUnique();

            entity.Property(e => e.FnqBasDetId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PConcRemId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pConcRemId");
            entity.Property(e => e.PFnqBasId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pFnqBasId");
            entity.Property(e => e.PVariRemId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pVariRemId");

            entity.HasOne(d => d.PFnqBas).WithMany(p => p.RhuTFnqBasesDets)
                .HasForeignKey(d => d.PFnqBasId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_RhuT_BasesDet");
        });

        modelBuilder.Entity<RhuTFnqBasis>(entity =>
        {
            entity.HasKey(e => e.FnqBasId);

            entity.ToTable("RhuT_FnqBases");

            entity.HasIndex(e => new { e.PEmpId, e.FnqBasFecInicio }, "I1_RhuT_FnqBases").IsUnique();

            entity.Property(e => e.FnqBasId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.FnqBasFecInicio).HasColumnType("datetime");
            entity.Property(e => e.FnqBasFecTermino).HasColumnType("datetime");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PAntgRemId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pAntgRemId");
            entity.Property(e => e.PAuNoJusRemId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pAuNoJusRemId");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PProcRemId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pProcRemId");
            entity.Property(e => e.PSvacRemId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pSvacRemId");
        });

        modelBuilder.Entity<RhuTFnqCalculo>(entity =>
        {
            entity.HasKey(e => e.FnqCalcId);

            entity.ToTable("RhuT_FnqCalculos");

            entity.HasIndex(e => new { e.PFnqSolDetId, e.PVariRemId }, "I1_RhuT_FnqCalculos").IsUnique();

            entity.Property(e => e.FnqCalcId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PFnqSolDetId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pFnqSolDetId");
            entity.Property(e => e.PItmParId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pItmParId");
            entity.Property(e => e.PLiqId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pLiqId");
            entity.Property(e => e.PVariRemId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pVariRemId");

            entity.HasOne(d => d.PFnqSolDet).WithMany(p => p.RhuTFnqCalculos)
                .HasForeignKey(d => d.PFnqSolDetId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_RhuT_CalcSolicitud");

            entity.HasOne(d => d.PItmPar).WithMany(p => p.RhuTFnqCalculos)
                .HasForeignKey(d => d.PItmParId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_RhuT_CalcOrigenDato");
        });

        modelBuilder.Entity<RhuTFnqCalculosDet>(entity =>
        {
            entity.HasKey(e => e.FnqCalDetId);

            entity.ToTable("RhuT_FnqCalculosDet");

            entity.Property(e => e.FnqCalDetId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.FnqCalcDetGlo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PFnqBasDetId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pFnqBasDetId");
            entity.Property(e => e.PFnqCalcId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pFnqCalcId");

            entity.HasOne(d => d.PFnqCalc).WithMany(p => p.RhuTFnqCalculosDets)
                .HasForeignKey(d => d.PFnqCalcId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_RhuT_CalcDetalles");
        });

        modelBuilder.Entity<RhuTFnqCausalReal>(entity =>
        {
            entity.HasKey(e => e.FnqCauReaId);

            entity.ToTable("RhuT_FnqCausalReal");

            entity.HasIndex(e => e.FnqCauReaCodigo, "I1_RhuT_FnqCausalReal").IsUnique();

            entity.Property(e => e.FnqCauReaId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.FnqCauReaGlosa)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
        });

        modelBuilder.Entity<RhuTFnqCausale>(entity =>
        {
            entity.HasKey(e => e.FnqCauId);

            entity.ToTable("RhuT_FnqCausales");

            entity.HasIndex(e => new { e.FnqCauArticulo, e.FnqCauNumero, e.FnqCauLetra }, "I1_RhuT_FnqCausales").IsUnique();

            entity.Property(e => e.FnqCauId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.FnqCauGlosaArt)
                .HasMaxLength(60)
                .IsUnicode(false);
            entity.Property(e => e.FnqCauGlosaLet)
                .HasMaxLength(150)
                .IsUnicode(false);
            entity.Property(e => e.FnqCauGlosaNro)
                .HasMaxLength(150)
                .IsUnicode(false);
            entity.Property(e => e.FnqCauIndConv)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.FnqCauIndLeg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.FnqCauIndVol)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.FnqCauLetra)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
        });

        modelBuilder.Entity<RhuTFnqSolicitud>(entity =>
        {
            entity.HasKey(e => e.FnqSolId);

            entity.ToTable("RhuT_FnqSolicitud");

            entity.HasIndex(e => new { e.PEmpId, e.PCtoTerId, e.FnqSolFecha, e.FnqSolFolio }, "I1_RhuT_FnqSolicitud").IsUnique();

            entity.Property(e => e.FnqSolId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.FnqCreDesId).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.FnqCreHasId).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.FnqCtoDesId).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.FnqCtoHasId).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.FnqFecRenDes).HasColumnType("datetime");
            entity.Property(e => e.FnqFecRenHas).HasColumnType("datetime");
            entity.Property(e => e.FnqFecVigDes).HasColumnType("datetime");
            entity.Property(e => e.FnqFecVigHas).HasColumnType("datetime");
            entity.Property(e => e.FnqItmParDesId).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.FnqItmParHasId).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.FnqSolCabFecAviso).HasColumnType("datetime");
            entity.Property(e => e.FnqSolCabFecFiniquito).HasColumnType("datetime");
            entity.Property(e => e.FnqSolCabFecPago).HasColumnType("datetime");
            entity.Property(e => e.FnqSolFecha).HasColumnType("datetime");
            entity.Property(e => e.FnqTabParId).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.FnqpEmpId).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PCabFnqCauId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCabFnqCauId");
            entity.Property(e => e.PCabFnqCauReaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCabFnqCauReaId");
            entity.Property(e => e.PCtoTerId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtoTerId");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PEsoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEsoId");
            entity.Property(e => e.PItmFnqSolEstId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pItmFnqSolEstId");

            entity.HasOne(d => d.PCtoTer).WithMany(p => p.RhuTFnqSolicituds)
                .HasForeignKey(d => d.PCtoTerId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_RhuT_SolContratos");

            entity.HasOne(d => d.PEmp).WithMany(p => p.RhuTFnqSolicituds)
                .HasForeignKey(d => d.PEmpId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_RhuT_SolEmpresa");
        });

        modelBuilder.Entity<RhuTFnqSolicitudDet>(entity =>
        {
            entity.HasKey(e => e.FnqSolDetId);

            entity.ToTable("RhuT_FnqSolicitudDet");

            entity.HasIndex(e => new { e.PFnqSolId, e.PCtoId }, "I1_RhuT_FnqSolicitudDet").IsUnique();

            entity.HasIndex(e => new { e.PCtoId, e.FnqSolDetFecFiniquito }, "I2_RhuT_FnqSolicitudDet").IsUnique();

            entity.HasIndex(e => new { e.PCtoId, e.PItmFnqSolEstDetId, e.FnqSolDetFecFiniquito, e.FnqSolDetId }, "RhuT_FnqSolicitudDet_idx010");

            entity.Property(e => e.FnqSolDetId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.FnqSolDetFecAviso).HasColumnType("datetime");
            entity.Property(e => e.FnqSolDetFecFiniquito).HasColumnType("datetime");
            entity.Property(e => e.FnqSolDetFecPago).HasColumnType("datetime");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PCtoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtoId");
            entity.Property(e => e.PFnqCauId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pFnqCauId");
            entity.Property(e => e.PFnqCauReaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pFnqCauReaId");
            entity.Property(e => e.PFnqSolId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pFnqSolId");
            entity.Property(e => e.PItmFnqSolEstDetId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pItmFnqSolEstDetId");

            entity.HasOne(d => d.PCto).WithMany(p => p.RhuTFnqSolicitudDets)
                .HasForeignKey(d => d.PCtoId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_RhuT_SolDetContratos");

            entity.HasOne(d => d.PFnqCau).WithMany(p => p.RhuTFnqSolicitudDets)
                .HasForeignKey(d => d.PFnqCauId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_RhuT_SolDetCauLegal");

            entity.HasOne(d => d.PFnqCauRea).WithMany(p => p.RhuTFnqSolicitudDets)
                .HasForeignKey(d => d.PFnqCauReaId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_RhuT_SolDetCauReal");

            entity.HasOne(d => d.PFnqSol).WithMany(p => p.RhuTFnqSolicitudDets)
                .HasForeignKey(d => d.PFnqSolId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_RhuT_SolDetSolicitudes");

            entity.HasOne(d => d.PItmFnqSolEstDet).WithMany(p => p.RhuTFnqSolicitudDets)
                .HasForeignKey(d => d.PItmFnqSolEstDetId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_RhuT_SolDetEstado");
        });

        modelBuilder.Entity<RhuTLicAccidente>(entity =>
        {
            entity.HasKey(e => e.AccId).HasName("RhuI_LicAccidentes01");

            entity.ToTable("RhuT_LicAccidentes");

            entity.Property(e => e.AccId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.AccAgenteDesc)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.AccFecha).HasColumnType("datetime");
            entity.Property(e => e.AccHora).HasColumnType("datetime");
            entity.Property(e => e.AccIncapDesc)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.AccNroAccidente)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.AccTipoDesc)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PCtoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtoId");
            entity.Property(e => e.PFicPerId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pFicPerId");
            entity.Property(e => e.PItmAgeAccId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pItmAgeAccId");
            entity.Property(e => e.PItmIncAccId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pItmIncAccId");
            entity.Property(e => e.PItmTipAccId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pItmTipAccId");

            entity.HasOne(d => d.PCto).WithMany(p => p.RhuTLicAccidentes)
                .HasForeignKey(d => d.PCtoId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_RhuT_LicAccidentes02");

            entity.HasOne(d => d.PFicPer).WithMany(p => p.RhuTLicAccidentes)
                .HasForeignKey(d => d.PFicPerId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_RhuT_LicAccidentes01");

            entity.HasOne(d => d.PItmAgeAcc).WithMany(p => p.RhuTLicAccidentePItmAgeAccs)
                .HasForeignKey(d => d.PItmAgeAccId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_RhuT_LicAccidentes05");

            entity.HasOne(d => d.PItmIncAcc).WithMany(p => p.RhuTLicAccidentePItmIncAccs)
                .HasForeignKey(d => d.PItmIncAccId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_RhuT_LicAccidentes04");

            entity.HasOne(d => d.PItmTipAcc).WithMany(p => p.RhuTLicAccidentePItmTipAccs)
                .HasForeignKey(d => d.PItmTipAccId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_RhuT_LicAccidentes03");
        });

        modelBuilder.Entity<RhuTLicDetSubsidio>(entity =>
        {
            entity.HasKey(e => e.DsuId).HasName("RhuI_LicDetSubsidio01");

            entity.ToTable("RhuT_LicDetSubsidio");

            entity.Property(e => e.DsuId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.DsuBbruta).HasColumnName("DsuBBruta");
            entity.Property(e => e.DsuBdesa).HasColumnName("DsuBDesa");
            entity.Property(e => e.DsuBimpo).HasColumnName("DsuBImpo");
            entity.Property(e => e.DsuBliquida).HasColumnName("DsuBLiquida");
            entity.Property(e => e.DsuBtrib).HasColumnName("DsuBTrib");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PLicId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pLicId");
            entity.Property(e => e.PPerRemId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pPerRemId");

            entity.HasOne(d => d.PLic).WithMany(p => p.RhuTLicDetSubsidios)
                .HasForeignKey(d => d.PLicId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_RhuT_LicDetSubsidio01");

            entity.HasOne(d => d.PPerRem).WithMany(p => p.RhuTLicDetSubsidios)
                .HasForeignKey(d => d.PPerRemId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_RhuT_LicDetSubsidio02");
        });

        modelBuilder.Entity<RhuTLicMedica>(entity =>
        {
            entity.HasKey(e => e.LicId).HasName("RhuI_LicMedicas01");

            entity.ToTable("RhuT_LicMedicas");

            entity.Property(e => e.LicId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.LicDireccion)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.LicFecAccidente).HasColumnType("datetime");
            entity.Property(e => e.LicFecConcepcion).HasColumnType("datetime");
            entity.Property(e => e.LicFecDespacho).HasColumnType("datetime");
            entity.Property(e => e.LicFecEmision).HasColumnType("datetime");
            entity.Property(e => e.LicFecInicio).HasColumnType("datetime");
            entity.Property(e => e.LicFecNacHijo).HasColumnType("datetime");
            entity.Property(e => e.LicFecRecepcion).HasColumnType("datetime");
            entity.Property(e => e.LicFecRechaDis).HasColumnType("datetime");
            entity.Property(e => e.LicFecRegistro).HasColumnType("datetime");
            entity.Property(e => e.LicFecTermino).HasColumnType("datetime");
            entity.Property(e => e.LicFono)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.LicHoraAccidente).HasColumnType("datetime");
            entity.Property(e => e.LicIdProrroga).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.LicMotivo)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.LicNroLicencia)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PAccId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pAccId");
            entity.Property(e => e.PAntGruFamId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pAntGruFamId");
            entity.Property(e => e.PCtoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtoId");
            entity.Property(e => e.PFicPerId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pFicPerId");
            entity.Property(e => e.PInstTramId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pInstTramId");
            entity.Property(e => e.PItmEstLicId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pItmEstLicId");
            entity.Property(e => e.PItmLugRepId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pItmLugRepId");
            entity.Property(e => e.PItmTipLicId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pItmTipLicId");
            entity.Property(e => e.PItmTipRepId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pItmTipRepId");
            entity.Property(e => e.PItmTraRepId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pItmTraRepId");
            entity.Property(e => e.PMedId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMedId");
            entity.Property(e => e.PTexId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTexId");

            entity.HasOne(d => d.PAcc).WithMany(p => p.RhuTLicMedicas)
                .HasForeignKey(d => d.PAccId)
                .HasConstraintName("FK_RhuT_LicMedicas03");

            entity.HasOne(d => d.PAntGruFam).WithMany(p => p.RhuTLicMedicas)
                .HasForeignKey(d => d.PAntGruFamId)
                .HasConstraintName("FK_RhuT_LicMedicas07");

            entity.HasOne(d => d.PCto).WithMany(p => p.RhuTLicMedicas)
                .HasForeignKey(d => d.PCtoId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_RhuT_LicMedicas02");

            entity.HasOne(d => d.PFicPer).WithMany(p => p.RhuTLicMedicas)
                .HasForeignKey(d => d.PFicPerId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_RhuT_LicMedicas01");

            entity.HasOne(d => d.PInstTram).WithMany(p => p.RhuTLicMedicas)
                .HasForeignKey(d => d.PInstTramId)
                .HasConstraintName("FK_RhuT_LicMedicas11");

            entity.HasOne(d => d.PItmEstLic).WithMany(p => p.RhuTLicMedicaPItmEstLics)
                .HasForeignKey(d => d.PItmEstLicId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_RhuT_LicMedicas12");

            entity.HasOne(d => d.PItmLugRep).WithMany(p => p.RhuTLicMedicaPItmLugReps)
                .HasForeignKey(d => d.PItmLugRepId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_RhuT_LicMedicas10");

            entity.HasOne(d => d.PItmTipLic).WithMany(p => p.RhuTLicMedicaPItmTipLics)
                .HasForeignKey(d => d.PItmTipLicId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_RhuT_LicMedicas06");

            entity.HasOne(d => d.PItmTipRep).WithMany(p => p.RhuTLicMedicaPItmTipReps)
                .HasForeignKey(d => d.PItmTipRepId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_RhuT_LicMedicas08");

            entity.HasOne(d => d.PItmTraRep).WithMany(p => p.RhuTLicMedicaPItmTraReps)
                .HasForeignKey(d => d.PItmTraRepId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_RhuT_LicMedicas09");

            entity.HasOne(d => d.PMed).WithMany(p => p.RhuTLicMedicas)
                .HasForeignKey(d => d.PMedId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_RhuT_LicMedicas04");

            entity.HasOne(d => d.PTex).WithMany(p => p.RhuTLicMedicas)
                .HasForeignKey(d => d.PTexId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_RhuT_LicMedicas05");
        });

        modelBuilder.Entity<RhuTLicMedico>(entity =>
        {
            entity.HasKey(e => e.MedId).HasName("RhuI_LicMedicos01");

            entity.ToTable("RhuT_LicMedicos");

            entity.Property(e => e.MedId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.MedDireccion)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.MedEmail)
                .HasMaxLength(40)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.MedFono)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.MedNombre)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.MedRut)
                .HasMaxLength(12)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PItmEspMedId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pItmEspMedId");
            entity.Property(e => e.PItmProMedId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pItmProMedId");

            entity.HasOne(d => d.PItmEspMed).WithMany(p => p.RhuTLicMedicoPItmEspMeds)
                .HasForeignKey(d => d.PItmEspMedId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_RhuT_LicMedicos02");

            entity.HasOne(d => d.PItmProMed).WithMany(p => p.RhuTLicMedicoPItmProMeds)
                .HasForeignKey(d => d.PItmProMedId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_RhuT_LicMedicos01");
        });

        modelBuilder.Entity<RhuTLicRmedica>(entity =>
        {
            entity.HasKey(e => e.LicRid).HasName("RhuI_LicRMedicas01");

            entity.ToTable("RhuT_LicRMedicas");

            entity.Property(e => e.LicRid)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("LicRId");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.LicRdias).HasColumnName("LicRDias");
            entity.Property(e => e.LicRdiasSubsidio).HasColumnName("LicRDiasSubsidio");
            entity.Property(e => e.LicRdireccion)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("LicRDireccion");
            entity.Property(e => e.LicRfecAccidente)
                .HasColumnType("datetime")
                .HasColumnName("LicRFecAccidente");
            entity.Property(e => e.LicRfecConcepcion)
                .HasColumnType("datetime")
                .HasColumnName("LicRFecConcepcion");
            entity.Property(e => e.LicRfecDespacho)
                .HasColumnType("datetime")
                .HasColumnName("LicRFecDespacho");
            entity.Property(e => e.LicRfecEmision)
                .HasColumnType("datetime")
                .HasColumnName("LicRFecEmision");
            entity.Property(e => e.LicRfecInicio)
                .HasColumnType("datetime")
                .HasColumnName("LicRFecInicio");
            entity.Property(e => e.LicRfecNacHijo)
                .HasColumnType("datetime")
                .HasColumnName("LicRFecNacHijo");
            entity.Property(e => e.LicRfecRecepcion)
                .HasColumnType("datetime")
                .HasColumnName("LicRFecRecepcion");
            entity.Property(e => e.LicRfecRechaDis)
                .HasColumnType("datetime")
                .HasColumnName("LicRFecRechaDis");
            entity.Property(e => e.LicRfecRegistro)
                .HasColumnType("datetime")
                .HasColumnName("LicRFecRegistro");
            entity.Property(e => e.LicRfecTermino)
                .HasColumnType("datetime")
                .HasColumnName("LicRFecTermino");
            entity.Property(e => e.LicRfono)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("LicRFono");
            entity.Property(e => e.LicRhoraAccidente)
                .HasColumnType("datetime")
                .HasColumnName("LicRHoraAccidente");
            entity.Property(e => e.LicRidProrroga)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("LicRIdProrroga");
            entity.Property(e => e.LicRindEnviado).HasColumnName("LicRIndEnviado");
            entity.Property(e => e.LicRindRecupLab).HasColumnName("LicRIndRecupLab");
            entity.Property(e => e.LicRindTramInv).HasColumnName("LicRIndTramInv");
            entity.Property(e => e.LicRmontoDiasSub).HasColumnName("LicRMontoDiasSub");
            entity.Property(e => e.LicRmotivo)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("LicRMotivo");
            entity.Property(e => e.LicRnroLicencia)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("LicRNroLicencia");
            entity.Property(e => e.LicRprorroga).HasColumnName("LicRProrroga");
            entity.Property(e => e.LicRtotalSubsidio).HasColumnName("LicRTotalSubsidio");
            entity.Property(e => e.LicRtrayAccidente).HasColumnName("LicRTrayAccidente");
            entity.Property(e => e.PAccId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pAccId");
            entity.Property(e => e.PAntGruFamId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pAntGruFamId");
            entity.Property(e => e.PCtoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtoId");
            entity.Property(e => e.PFicPerId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pFicPerId");
            entity.Property(e => e.PInstTramId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pInstTramId");
            entity.Property(e => e.PItmEstLicId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pItmEstLicId");
            entity.Property(e => e.PItmLugRepId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pItmLugRepId");
            entity.Property(e => e.PItmTipLicId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pItmTipLicId");
            entity.Property(e => e.PItmTipRepId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pItmTipRepId");
            entity.Property(e => e.PItmTraRepId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pItmTraRepId");
            entity.Property(e => e.PLicId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pLicId");
            entity.Property(e => e.PMedId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMedId");
            entity.Property(e => e.PTexId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTexId");

            entity.HasOne(d => d.PAcc).WithMany(p => p.RhuTLicRmedicas)
                .HasForeignKey(d => d.PAccId)
                .HasConstraintName("FK_RhuT_LicRMedicas03");

            entity.HasOne(d => d.PAntGruFam).WithMany(p => p.RhuTLicRmedicas)
                .HasForeignKey(d => d.PAntGruFamId)
                .HasConstraintName("FK_RhuT_LicRMedicas07");

            entity.HasOne(d => d.PCto).WithMany(p => p.RhuTLicRmedicas)
                .HasForeignKey(d => d.PCtoId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_RhuT_LicRMedicas02");

            entity.HasOne(d => d.PFicPer).WithMany(p => p.RhuTLicRmedicas)
                .HasForeignKey(d => d.PFicPerId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_RhuT_LicRMedicas01");

            entity.HasOne(d => d.PInstTram).WithMany(p => p.RhuTLicRmedicas)
                .HasForeignKey(d => d.PInstTramId)
                .HasConstraintName("FK_RhuT_LicRMedicas11");

            entity.HasOne(d => d.PItmEstLic).WithMany(p => p.RhuTLicRmedicaPItmEstLics)
                .HasForeignKey(d => d.PItmEstLicId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_RhuT_LicRMedicas12");

            entity.HasOne(d => d.PItmLugRep).WithMany(p => p.RhuTLicRmedicaPItmLugReps)
                .HasForeignKey(d => d.PItmLugRepId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_RhuT_LicRMedicas10");

            entity.HasOne(d => d.PItmTipRep).WithMany(p => p.RhuTLicRmedicaPItmTipReps)
                .HasForeignKey(d => d.PItmTipRepId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_RhuT_LicRMedicas08");

            entity.HasOne(d => d.PItmTraRep).WithMany(p => p.RhuTLicRmedicaPItmTraReps)
                .HasForeignKey(d => d.PItmTraRepId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_RhuT_LicRMedicas09");

            entity.HasOne(d => d.PMed).WithMany(p => p.RhuTLicRmedicas)
                .HasForeignKey(d => d.PMedId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_RhuT_LicRMedicas04");

            entity.HasOne(d => d.PTex).WithMany(p => p.RhuTLicRmedicas)
                .HasForeignKey(d => d.PTexId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_RhuT_LicRMedicas05");
        });

        modelBuilder.Entity<RhuTMigConceptoFormula>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("RhuT_MigConceptoFormula");

            entity.Property(e => e.PConcRemId).HasColumnName("pConcRemId");
        });

        modelBuilder.Entity<RhuTMigLiquidacion>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("RhuT_MigLiquidacion");

            entity.Property(e => e.RutTrabajador)
                .HasMaxLength(12)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<RhuTParAuditorium>(entity =>
        {
            entity.HasKey(e => e.SadId).HasName("PK_RhuT_SysAuditoria");

            entity.ToTable("RhuT_ParAuditoria");

            entity.Property(e => e.SadId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.SadCampo)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.SadFecha).HasColumnType("datetime");
            entity.Property(e => e.SadIdTabla).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.SadOperacion)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.SadTabla)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.SadUsuario)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.SadValorAntiguo)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.SadValorNuevo)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<RhuTParCargo>(entity =>
        {
            entity.HasKey(e => e.CgoCodCargo);

            entity.ToTable("RhuT_ParCargos");

            entity.Property(e => e.CgoCodCargo).ValueGeneratedNever();
            entity.Property(e => e.CgoDescripcion).HasColumnType("text");
            entity.Property(e => e.CgoNombre)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.CgoRequisitos).HasColumnType("text");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PItmAespId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pItmAEspId");
            entity.Property(e => e.PItmNcarrId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pItmNCarrId");
        });

        modelBuilder.Entity<RhuTParDicColumna>(entity =>
        {
            entity.HasKey(e => e.DicId);

            entity.ToTable("RhuT_ParDicColumnas");

            entity.HasIndex(e => new { e.PDitId, e.DicNombreFisico }, "I1_RhuT_ParDicColumnas").IsUnique();

            entity.Property(e => e.DicId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.DicAnxNombreFisico)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.DicColumna)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.DicNombreFisico)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.DicNombreLogico)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PDitId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pDitId");

            entity.HasOne(d => d.PDit).WithMany(p => p.RhuTParDicColumnas)
                .HasForeignKey(d => d.PDitId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_RhuT_ParDicColumnas");
        });

        modelBuilder.Entity<RhuTParDicTabla>(entity =>
        {
            entity.HasKey(e => e.DitId);

            entity.ToTable("RhuT_ParDicTablas");

            entity.HasIndex(e => e.DitSecuencia, "I1_RhuT_ParDicTablas").IsUnique();

            entity.Property(e => e.DitId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.DitNombreFisico)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.DitNombreLogico)
                .HasMaxLength(60)
                .IsUnicode(false);
        });

        modelBuilder.Entity<RhuTParDiccionario>(entity =>
        {
            entity.HasKey(e => e.DtoDicId);

            entity.ToTable("RhuT_ParDiccionario");

            entity.Property(e => e.DtoDicId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.DtoDicAtribOri)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.DtoDicAtribTrad)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.DtoDicDesTrad)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.DtoDicJoinTrad)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.DtoDicNomCol)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.DtoDicTabOri)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.DtoDicTabTrad)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.DtoDicValTrad)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PDtoDicTipColId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pDtoDicTipColId");
            entity.Property(e => e.PDtoDicTipFiltroId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pDtoDicTipFiltroId");

            entity.HasOne(d => d.PDtoDicTipCol).WithMany(p => p.RhuTParDiccionarioPDtoDicTipCols)
                .HasForeignKey(d => d.PDtoDicTipColId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_RhuT_ParDicTipCol");

            entity.HasOne(d => d.PDtoDicTipFiltro).WithMany(p => p.RhuTParDiccionarioPDtoDicTipFiltros)
                .HasForeignKey(d => d.PDtoDicTipFiltroId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_RhuT_ParDicTipFil");
        });

        modelBuilder.Entity<RhuTParDireccione>(entity =>
        {
            entity.HasKey(e => new { e.PEmpId, e.ParModulo, e.ParTema }).HasName("PK_RhuT_ParDireccion");

            entity.ToTable("RhuT_ParDirecciones");

            entity.HasIndex(e => e.ParDirId, "U1_RhuT_ParDireccion").IsUnique();

            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.ParModulo)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.ParTema)
                .HasMaxLength(40)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.ParDirId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.ParDireccion)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<RhuTParEmpresa>(entity =>
        {
            entity.HasKey(e => e.PEmpId);

            entity.ToTable("RhuT_ParEmpresas");

            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PEmpOrganigrama)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmp_Organigrama");
            entity.Property(e => e.PEmpPais)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmp_Pais");
            entity.Property(e => e.PEmpRutaAnexoCartOfer)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("pEmpRutaAnexoCartOfer");
            entity.Property(e => e.PEmpRutaCartaOferta)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("pEmpRutaCartaOferta");
            entity.Property(e => e.PEmpRutaCv)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("pEmpRutaCV");
            entity.Property(e => e.PMonedaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMonedaId");
            entity.Property(e => e.PemEtiqueta1)
                .HasMaxLength(15)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PemEtiqueta2)
                .HasMaxLength(15)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PemEtiqueta3)
                .HasMaxLength(15)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PemGlosaLiq)
                .HasMaxLength(400)
                .IsUnicode(false)
                .HasColumnName("pem_Glosa_Liq");
            entity.Property(e => e.PemTipoImpresora)
                .HasMaxLength(80)
                .IsUnicode(false)
                .IsFixedLength();

            entity.HasOne(d => d.PEmp).WithOne(p => p.RhuTParEmpresa)
                .HasForeignKey<RhuTParEmpresa>(d => d.PEmpId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_RhuT_ParEmpresas");
        });

        modelBuilder.Entity<RhuTParEstrOrganica>(entity =>
        {
            entity.HasKey(e => e.EsoId);

            entity.ToTable("RhuT_ParEstrOrganica");

            entity.Property(e => e.EsoId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EsoDesUnidad)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EsoEstrNiveles)
                .HasMaxLength(21)
                .IsUnicode(false);
            entity.Property(e => e.EsoRespUnidId).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PCreId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCreId");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");

            entity.HasOne(d => d.PCre).WithMany(p => p.RhuTParEstrOrganicas)
                .HasForeignKey(d => d.PCreId)
                .HasConstraintName("FK_RhuT_ParEstrOrganica2");

            entity.HasOne(d => d.PEmp).WithMany(p => p.RhuTParEstrOrganicas)
                .HasForeignKey(d => d.PEmpId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_RhuT_ParEstrOrganica");
        });

        modelBuilder.Entity<RhuTParImpuesto>(entity =>
        {
            entity.HasKey(e => e.ImpId);

            entity.ToTable("RhuT_ParImpuestos");

            entity.Property(e => e.ImpId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.ImpDesdeUtm).HasColumnName("ImpDesdeUTM");
            entity.Property(e => e.ImpFecVigenciaTramo).HasColumnType("datetime");
            entity.Property(e => e.ImpRebajaUtm).HasColumnName("ImpRebajaUTM");
            entity.Property(e => e.ImpTasa).HasColumnType("money");
            entity.Property(e => e.ImpTopeUtm).HasColumnName("ImpTopeUTM");
        });

        modelBuilder.Entity<RhuTParInstitucione>(entity =>
        {
            entity.HasKey(e => e.InsParId).HasName("PK_RhuT_ParInstitucion");

            entity.ToTable("RhuT_ParInstituciones");

            entity.Property(e => e.InsParId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.InsGlosa)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.InsIndFonasa)
                .HasMaxLength(8)
                .IsUnicode(false)
                .HasColumnName("InsIndFONASA");
            entity.Property(e => e.InsIndInp)
                .HasMaxLength(8)
                .IsUnicode(false)
                .HasColumnName("InsIndINP");
            entity.Property(e => e.InsTipo)
                .HasMaxLength(8)
                .IsUnicode(false);
            entity.Property(e => e.PEntId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntId");

            entity.HasOne(d => d.PEnt).WithMany(p => p.RhuTParInstituciones)
                .HasForeignKey(d => d.PEntId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_RhuT_ParInstituciones");
        });

        modelBuilder.Entity<RhuTParInterfaz>(entity =>
        {
            entity.HasKey(e => e.IcFseqId);

            entity.ToTable("RhuT_ParInterfaz");

            entity.Property(e => e.IcFseqId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("IcFSeqId");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IcFextension).HasColumnName("IcFExtension");
            entity.Property(e => e.IcFnomFormato)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("IcFNomFormato");
            entity.Property(e => e.IcFtipoInterfaz).HasColumnName("IcFTipoInterfaz");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
        });

        modelBuilder.Entity<RhuTParInterfazDet>(entity =>
        {
            entity.HasKey(e => e.IcFcolSeqId);

            entity.ToTable("RhuT_ParInterfazDet");

            entity.HasIndex(e => new { e.PIcFseqId, e.PDicId }, "I1_RhuT_ParInterfazDet").IsUnique();

            entity.Property(e => e.IcFcolSeqId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("IcFColSeqId");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IcFcolDecimal).HasColumnName("IcFColDecimal");
            entity.Property(e => e.IcFcolFormFecha)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("IcFColFormFecha");
            entity.Property(e => e.IcFcolLargo).HasColumnName("IcFColLargo");
            entity.Property(e => e.IcFcolOrden).HasColumnName("IcFColOrden");
            entity.Property(e => e.IcFcolPosFin).HasColumnName("IcFColPosFin");
            entity.Property(e => e.IcFcolPosIni).HasColumnName("IcFColPosIni");
            entity.Property(e => e.IcFcolTipoCol).HasColumnName("IcFColTipoCol");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PDicId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pDicId");
            entity.Property(e => e.PIcFseqId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pIcFSeqId");
            entity.Property(e => e.PTabParId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTabParId");

            entity.HasOne(d => d.PDic).WithMany(p => p.RhuTParInterfazDets)
                .HasForeignKey(d => d.PDicId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK1_RhuT_ParInterfazDet");

            entity.HasOne(d => d.PIcFseq).WithMany(p => p.RhuTParInterfazDets)
                .HasForeignKey(d => d.PIcFseqId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_RhuT_ParInterfazDet");

            entity.HasOne(d => d.PTabPar).WithMany(p => p.RhuTParInterfazDets)
                .HasForeignKey(d => d.PTabParId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK2_RhuT_ParInterfazDet");
        });

        modelBuilder.Entity<RhuTParItem>(entity =>
        {
            entity.HasKey(e => e.ItmParId);

            entity.ToTable("RhuT_ParItems");

            entity.HasIndex(e => new { e.PTabParId, e.ItmCodigo }, "RhuI_ParItems_idx03");

            entity.HasIndex(e => new { e.ItmCodigo, e.PTabParId }, "RhuT_ParItems_idx010");

            entity.HasIndex(e => new { e.ItmCodigoStr, e.ItmParId }, "RhuT_ParItems_idx011");

            entity.HasIndex(e => new { e.ItmParId, e.ItmDescripcion }, "RhuT_ParItems_idx012");

            entity.HasIndex(e => new { e.ItmParId, e.ItmCodigo }, "RhuT_ParItems_ind04");

            entity.Property(e => e.ItmParId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.ItmCodHomologacion)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.ItmCodigoStr)
                .HasMaxLength(8)
                .IsUnicode(false);
            entity.Property(e => e.ItmDescripcion)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.ItmEstado)
                .HasMaxLength(8)
                .IsUnicode(false);
            entity.Property(e => e.PTabParId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTabParId");

            entity.HasOne(d => d.PTabPar).WithMany(p => p.RhuTParItems)
                .HasForeignKey(d => d.PTabParId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_RhuT_ParItems");
        });

        modelBuilder.Entity<RhuTParLugarTrabajo>(entity =>
        {
            entity.HasKey(e => e.LugId);

            entity.ToTable("RhuT_ParLugarTrabajo");

            entity.Property(e => e.LugId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.LugDescripcion)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<RhuTParMoneda>(entity =>
        {
            entity.HasKey(e => e.MdaId);

            entity.ToTable("RhuT_ParMonedas");

            entity.Property(e => e.MdaId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.MdaGlosa)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.MdaIndUf).HasColumnName("MdaIndUF");
            entity.Property(e => e.MdaIndUtm).HasColumnName("MdaIndUTM");
            entity.Property(e => e.MdaSimbolo)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PConcRemId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pConcRemId");
            entity.Property(e => e.PMonedaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMonedaId");
        });

        modelBuilder.Entity<RhuTParOrganigrama>(entity =>
        {
            entity.HasKey(e => e.ParOrgId);

            entity.ToTable("RhuT_ParOrganigrama");

            entity.HasIndex(e => new { e.ParOrgCod, e.ParOrgId }, "I1_RhuT_ParOrganigrama").IsUnique();

            entity.HasIndex(e => new { e.PEntId, e.PParOrgSupId }, "I2_RhuT_ParOrganigrama").IsUnique();

            entity.Property(e => e.ParOrgId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.CgoCodCargo).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.CgoDescripcion).HasColumnType("text");
            entity.Property(e => e.PEntId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntId");
            entity.Property(e => e.PItmParUniNegId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pItmParUniNegId");
            entity.Property(e => e.PParOrgSupId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pParOrgSupId");
            entity.Property(e => e.ParOrgDescripcion)
                .HasMaxLength(60)
                .IsUnicode(false);
            entity.Property(e => e.ParOrgImagen)
                .HasMaxLength(60)
                .IsUnicode(false);
        });

        modelBuilder.Entity<RhuTParReajusteTab>(entity =>
        {
            entity.HasKey(e => e.ParReaId).HasName("PK_RhuT_ReajusteTab");

            entity.ToTable("RhuT_ParReajusteTab");

            entity.Property(e => e.ParReaId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.ItmEstado)
                .HasMaxLength(8)
                .IsUnicode(false);
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PTabParId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTabParId");
            entity.Property(e => e.ParReaDesde).HasColumnType("money");
            entity.Property(e => e.ParReaFecha).HasColumnType("datetime");
            entity.Property(e => e.ParReaHasta).HasColumnType("money");
            entity.Property(e => e.ParReaObserv)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.ParReaValor01).HasColumnType("money");
            entity.Property(e => e.ParReaValor02).HasColumnType("money");
            entity.Property(e => e.ParReaValor03).HasColumnType("money");
            entity.Property(e => e.ParReaValor04).HasColumnType("money");
            entity.Property(e => e.ParReaValor05).HasColumnType("money");
            entity.Property(e => e.ParReaValor06).HasColumnType("money");
            entity.Property(e => e.ParReaValor07).HasColumnType("money");
            entity.Property(e => e.ParReaValor08).HasColumnType("money");
            entity.Property(e => e.ParReaValor09).HasColumnType("money");
            entity.Property(e => e.ParReaValor10).HasColumnType("money");
        });

        modelBuilder.Entity<RhuTParReajusteTabDet>(entity =>
        {
            entity.HasKey(e => e.ParReaDetId).HasName("PK_RhuT_ReajusteTabDet");

            entity.ToTable("RhuT_ParReajusteTabDet");

            entity.Property(e => e.ParReaDetId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.ItmEstado)
                .HasMaxLength(8)
                .IsUnicode(false);
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PItmParId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pItmParId");
            entity.Property(e => e.PParReaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pParReaId");
            entity.Property(e => e.PTabParId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTabParId");
            entity.Property(e => e.ParReaValor01).HasColumnType("money");
            entity.Property(e => e.ParReaValor02).HasColumnType("money");
            entity.Property(e => e.ParReaValor03).HasColumnType("money");
            entity.Property(e => e.ParReaValor04).HasColumnType("money");
            entity.Property(e => e.ParReaValor05).HasColumnType("money");
            entity.Property(e => e.ParReaValor06).HasColumnType("money");
            entity.Property(e => e.ParReaValor07).HasColumnType("money");
            entity.Property(e => e.ParReaValor08).HasColumnType("money");
            entity.Property(e => e.ParReaValor09).HasColumnType("money");
            entity.Property(e => e.ParReaValor10).HasColumnType("money");
            entity.Property(e => e.VitValPar1).HasColumnType("money");
            entity.Property(e => e.VitValPar10).HasColumnType("money");
            entity.Property(e => e.VitValPar2).HasColumnType("money");
            entity.Property(e => e.VitValPar3).HasColumnType("money");
            entity.Property(e => e.VitValPar4).HasColumnType("money");
            entity.Property(e => e.VitValPar5).HasColumnType("money");
            entity.Property(e => e.VitValPar6).HasColumnType("money");
            entity.Property(e => e.VitValPar7).HasColumnType("money");
            entity.Property(e => e.VitValPar8).HasColumnType("money");
            entity.Property(e => e.VitValPar9).HasColumnType("money");

            entity.HasOne(d => d.PParRea).WithMany(p => p.RhuTParReajusteTabDets)
                .HasForeignKey(d => d.PParReaId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_RhuT_Detalle");
        });

        modelBuilder.Entity<RhuTParTabla>(entity =>
        {
            entity.HasKey(e => e.TabParId).HasName("PK_RhuT_ParTables");

            entity.ToTable("RhuT_ParTablas");

            entity.HasIndex(e => new { e.PEmpId, e.DivCodigo, e.TabCodigo }, "U1_RhuT_ParTables").IsUnique();

            entity.Property(e => e.TabParId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.TabCodigo)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.TabDescripcion)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.TabLabelValor1)
                .HasMaxLength(15)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.TabLabelValor10)
                .HasMaxLength(15)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.TabLabelValor2)
                .HasMaxLength(15)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.TabLabelValor3)
                .HasMaxLength(15)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.TabLabelValor4)
                .HasMaxLength(15)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.TabLabelValor5)
                .HasMaxLength(15)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.TabLabelValor6)
                .HasMaxLength(15)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.TabLabelValor7)
                .HasMaxLength(15)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.TabLabelValor8)
                .HasMaxLength(15)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.TabLabelValor9)
                .HasMaxLength(15)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<RhuTParTramoAsigFam>(entity =>
        {
            entity.HasKey(e => e.TramoId);

            entity.ToTable("RhuT_ParTramoAsigFam");

            entity.Property(e => e.TramoId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.TraCodTramo)
                .HasMaxLength(8)
                .IsUnicode(false);
            entity.Property(e => e.TraDesdePesos).HasColumnType("money");
            entity.Property(e => e.TraFecVigencia).HasColumnType("datetime");
            entity.Property(e => e.TraTopePesos).HasColumnType("money");
            entity.Property(e => e.TraValorInvalidapesos).HasColumnType("money");
            entity.Property(e => e.TraValorSimplePesos).HasColumnType("money");
        });

        modelBuilder.Entity<RhuTParUsuariosEnt>(entity =>
        {
            entity.HasKey(e => e.UenId);

            entity.ToTable("RhuT_ParUsuariosEnt");

            entity.Property(e => e.UenId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuario)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PEntId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntId");
            entity.Property(e => e.UenAccesoCategoria).HasColumnType("numeric(9, 0)");
        });

        modelBuilder.Entity<RhuTParUsuariosOrg>(entity =>
        {
            entity.HasKey(e => e.UorId);

            entity.ToTable("RhuT_ParUsuariosOrg");

            entity.Property(e => e.UorId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuario)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PEsoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEsoId");
            entity.Property(e => e.PItmCategoriaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pItmCategoriaId");

            entity.HasOne(d => d.PEso).WithMany(p => p.RhuTParUsuariosOrgs)
                .HasForeignKey(d => d.PEsoId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_RhuT_ParUsuariosOrg");

            entity.HasOne(d => d.PItmCategoria).WithMany(p => p.RhuTParUsuariosOrgs)
                .HasForeignKey(d => d.PItmCategoriaId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_RhuT_ParCategoria");
        });

        modelBuilder.Entity<RhuTParVigDatosLeg>(entity =>
        {
            entity.HasKey(e => e.LegId);

            entity.ToTable("RhuT_ParVigDatosLeg");

            entity.HasIndex(e => new { e.LegMutualId, e.LegId }, "RhuT_ParVigDatosLeg_idx02");

            entity.HasIndex(e => new { e.PEmpId, e.LegFecVigencia, e.LegMutualId, e.LegId }, "RhuT_ParVigDatosLeg_idx03");

            entity.HasIndex(e => new { e.LegCajaCompid, e.LegId }, "RhuT_ParVigDatosLeg_idx04");

            entity.Property(e => e.LegId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.LegCajaCompid).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.LegFecVigencia).HasColumnType("datetime");
            entity.Property(e => e.LegMutualId).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");

            entity.HasOne(d => d.LegCajaComp).WithMany(p => p.RhuTParVigDatosLegLegCajaComps)
                .HasForeignKey(d => d.LegCajaCompid)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_RhuT_ParVigDatosLeg03");

            entity.HasOne(d => d.LegMutual).WithMany(p => p.RhuTParVigDatosLegLegMutuals)
                .HasForeignKey(d => d.LegMutualId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_RhuT_ParVigDatosLeg02");

            entity.HasOne(d => d.PEmp).WithMany(p => p.RhuTParVigDatosLegs)
                .HasForeignKey(d => d.PEmpId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_RhuT_ParVigDatosLeg01");
        });

        modelBuilder.Entity<RhuTParVigInstituc>(entity =>
        {
            entity.HasKey(e => e.VinId);

            entity.ToTable("RhuT_ParVigInstituc");

            entity.HasIndex(e => new { e.PInsParId, e.VinFecVigencia }, "PK_RhuT_ParVigInstituc02").IsUnique();

            entity.Property(e => e.VinId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PInsParId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pInsParId");
            entity.Property(e => e.VinCodExCajaCja).HasColumnName("VinCodExCajaCJA");
            entity.Property(e => e.VinCodRegimenAntCja).HasColumnName("VinCodRegimenAntCJA");
            entity.Property(e => e.VinComisionFijaAfp)
                .HasColumnType("money")
                .HasColumnName("VinComisionFijaAFP");
            entity.Property(e => e.VinComisionMayorAfp).HasColumnName("VinComisionMayorAFP");
            entity.Property(e => e.VinComisionSegAfp).HasColumnName("VinComisionSegAFP");
            entity.Property(e => e.VinComisionSegSis).HasColumnName("VinComisionSegSIS");
            entity.Property(e => e.VinFecVigencia).HasColumnType("datetime");
            entity.Property(e => e.VinTasaImposicionCja).HasColumnName("VinTasaImposicionCJA");

            entity.HasOne(d => d.PInsPar).WithMany(p => p.RhuTParVigInstitucs)
                .HasForeignKey(d => d.PInsParId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_RhuT_ParVigInstituc");
        });

        modelBuilder.Entity<RhuTParVigItem>(entity =>
        {
            entity.HasKey(e => e.VitId);

            entity.ToTable("RhuT_ParVigItems");

            entity.HasIndex(e => new { e.PItmParId, e.VitFecVigencia }, "PK_RhuT_ParVigItems02").IsUnique();

            entity.Property(e => e.VitId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PItmParId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pItmParId");
            entity.Property(e => e.VitFecVigencia).HasColumnType("datetime");
            entity.Property(e => e.VitValPar1).HasColumnType("money");
            entity.Property(e => e.VitValPar10).HasColumnType("money");
            entity.Property(e => e.VitValPar2).HasColumnType("money");
            entity.Property(e => e.VitValPar3).HasColumnType("money");
            entity.Property(e => e.VitValPar4).HasColumnType("money");
            entity.Property(e => e.VitValPar5).HasColumnType("money");
            entity.Property(e => e.VitValPar6).HasColumnType("money");
            entity.Property(e => e.VitValPar7).HasColumnType("money");
            entity.Property(e => e.VitValPar8).HasColumnType("money");
            entity.Property(e => e.VitValPar9).HasColumnType("money");

            entity.HasOne(d => d.PItmPar).WithMany(p => p.RhuTParVigItems)
                .HasForeignKey(d => d.PItmParId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_RhuT_ParVigItems");
        });

        modelBuilder.Entity<RhuTPerRsolicitud>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("RhuT_PerRSolicitud");

            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PCtoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtoId");
            entity.Property(e => e.PFicPerId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pFicPerId");
            entity.Property(e => e.PItmEstSpeId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pItmEstSpeId");
            entity.Property(e => e.PSpeId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pSpeId");
            entity.Property(e => e.PTexId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTexId");
            entity.Property(e => e.SpeRdias).HasColumnName("SpeRDias");
            entity.Property(e => e.SpeRfecInicio)
                .HasColumnType("datetime")
                .HasColumnName("SpeRFecInicio");
            entity.Property(e => e.SpeRfecResol)
                .HasColumnType("datetime")
                .HasColumnName("SpeRFecResol");
            entity.Property(e => e.SpeRfecSolic)
                .HasColumnType("datetime")
                .HasColumnName("SpeRFecSolic");
            entity.Property(e => e.SpeRfecTermino)
                .HasColumnType("datetime")
                .HasColumnName("SpeRFecTermino");
            entity.Property(e => e.SpeRhoras).HasColumnName("SpeRHoras");
            entity.Property(e => e.SpeRhraInicio)
                .HasColumnType("datetime")
                .HasColumnName("SpeRHraInicio");
            entity.Property(e => e.SpeRhraTermino)
                .HasColumnType("datetime")
                .HasColumnName("SpeRHraTermino");
            entity.Property(e => e.SpeRobsResol)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("SpeRObsResol");
            entity.Property(e => e.SpeRobsSolic)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("SpeRObsSolic");

            entity.HasOne(d => d.PCto).WithMany()
                .HasForeignKey(d => d.PCtoId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_RhuT_PerRSolicitud02");

            entity.HasOne(d => d.PFicPer).WithMany()
                .HasForeignKey(d => d.PFicPerId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_RhuT_PerRSolicitud01");

            entity.HasOne(d => d.PItmEstSpe).WithMany()
                .HasForeignKey(d => d.PItmEstSpeId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_RhuT_PerRSolicitud04");

            entity.HasOne(d => d.PTex).WithMany()
                .HasForeignKey(d => d.PTexId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_RhuT_PerRSolicitud03");
        });

        modelBuilder.Entity<RhuTPerSolicitud>(entity =>
        {
            entity.HasKey(e => e.SpeId).HasName("RhuT_PerSolicitud01");

            entity.ToTable("RhuT_PerSolicitud");

            entity.Property(e => e.SpeId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PCtoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtoId");
            entity.Property(e => e.PFicPerId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pFicPerId");
            entity.Property(e => e.PItmEstSpeId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pItmEstSpeId");
            entity.Property(e => e.PTexId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTexId");
            entity.Property(e => e.SpeFecInicio).HasColumnType("datetime");
            entity.Property(e => e.SpeFecResol).HasColumnType("datetime");
            entity.Property(e => e.SpeFecSolic).HasColumnType("datetime");
            entity.Property(e => e.SpeFecTermino).HasColumnType("datetime");
            entity.Property(e => e.SpeHraInicio).HasColumnType("datetime");
            entity.Property(e => e.SpeHraTermino).HasColumnType("datetime");
            entity.Property(e => e.SpeObsResol)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.SpeObsSolic)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();

            entity.HasOne(d => d.PCto).WithMany(p => p.RhuTPerSolicituds)
                .HasForeignKey(d => d.PCtoId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_RhuT_PerSolicitud02");

            entity.HasOne(d => d.PFicPer).WithMany(p => p.RhuTPerSolicituds)
                .HasForeignKey(d => d.PFicPerId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_RhuT_PerSolicitud01");

            entity.HasOne(d => d.PItmEstSpe).WithMany(p => p.RhuTPerSolicituds)
                .HasForeignKey(d => d.PItmEstSpeId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_RhuT_PerSolicitud04");

            entity.HasOne(d => d.PTex).WithMany(p => p.RhuTPerSolicituds)
                .HasForeignKey(d => d.PTexId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_RhuT_PerSolicitud03");
        });

        modelBuilder.Entity<RhuTPerVacGanada>(entity =>
        {
            entity.HasKey(e => e.VgaId).HasName("RhuT_PerVacGanadas01");

            entity.ToTable("RhuT_PerVacGanadas");

            entity.Property(e => e.VgaId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PCtoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtoId");
            entity.Property(e => e.PFicPerId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pFicPerId");
            entity.Property(e => e.PItmTipAbonoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pItmTipAbonoId");
            entity.Property(e => e.PItmTipVacId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pItmTipVacId");
            entity.Property(e => e.VgaFecAbono).HasColumnType("datetime");

            entity.HasOne(d => d.PCto).WithMany(p => p.RhuTPerVacGanada)
                .HasForeignKey(d => d.PCtoId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_RhuT_PerVacGanadas02");

            entity.HasOne(d => d.PFicPer).WithMany(p => p.RhuTPerVacGanada)
                .HasForeignKey(d => d.PFicPerId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_RhuT_PerVacGanadas01");
        });

        modelBuilder.Entity<RhuTRemAfdecJuradaDet>(entity =>
        {
            entity.HasKey(e => e.AfdecJurDetId);

            entity.ToTable("RhuT_RemAFDecJuradaDet");

            entity.Property(e => e.AfdecJurDetId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("AFDecJurDetId");
            entity.Property(e => e.AfdecJurInstitucion)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("AFDecJurInstitucion");
            entity.Property(e => e.AfdecJurMonto).HasColumnName("AFDecJurMonto");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PAfdecJurId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pAFDecJurId");

            entity.HasOne(d => d.PAfdecJur).WithMany(p => p.RhuTRemAfdecJuradaDets)
                .HasForeignKey(d => d.PAfdecJurId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK1_RhuT_RemAFDecJuradaDet");
        });

        modelBuilder.Entity<RhuTRemAfdecJuradum>(entity =>
        {
            entity.HasKey(e => e.AfdecJurId);

            entity.ToTable("RhuT_RemAFDecJurada");

            entity.Property(e => e.AfdecJurId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("AFDecJurId");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PFicPerId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pFicPerId");
        });

        modelBuilder.Entity<RhuTRemAftramoCalculado>(entity =>
        {
            entity.HasKey(e => e.AftramoId);

            entity.ToTable("RhuT_RemAFTramoCalculado");

            entity.HasIndex(e => new { e.PFicPerId, e.PEmpId, e.EjeAno }, "U1_RhuT_RemAFTramoCalculado").IsUnique();

            entity.Property(e => e.AftramoId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("AFTramoId");
            entity.Property(e => e.AftramoEst)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("AFTramoEst");
            entity.Property(e => e.AftramoTipCto).HasColumnName("AFTramoTipCto");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.LqTtimponibleProm).HasColumnName("LqTTImponibleProm");
            entity.Property(e => e.PAntPrevId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pAntPrevId");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PFicPerId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pFicPerId");
            entity.Property(e => e.PTramoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTramoId");
            entity.Property(e => e.PTramoIdNew)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTramoIdNew");
        });

        modelBuilder.Entity<RhuTRemAftramoCalculadoDet>(entity =>
        {
            entity.HasKey(e => e.AftramoDetId);

            entity.ToTable("RhuT_RemAFTramoCalculadoDet");

            entity.HasIndex(e => new { e.PAftramoId, e.PerMes }, "U1_RhuT_RemAFTramoCalculadoDet").IsUnique();

            entity.Property(e => e.AftramoDetId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("AFTramoDetId");
            entity.Property(e => e.AfdecJurMonto).HasColumnName("AFDecJurMonto");
            entity.Property(e => e.AfttramoDias).HasColumnName("AFTTramoDias");
            entity.Property(e => e.AfttramoImponMes).HasColumnName("AFTTramoImponMes");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PAftramoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pAFTramoId");

            entity.HasOne(d => d.PAftramo).WithMany(p => p.RhuTRemAftramoCalculadoDets)
                .HasForeignKey(d => d.PAftramoId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_RhuT_RemAFTramoCalculadoDet");
        });

        modelBuilder.Entity<RhuTRemAuditoriaDet>(entity =>
        {
            entity.HasKey(e => new { e.PRemAudId, e.PFicPerId, e.PCtoId });

            entity.ToTable("RhuT_RemAuditoriaDet");

            entity.Property(e => e.PRemAudId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pRemAudId");
            entity.Property(e => e.PFicPerId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pFicPerId");
            entity.Property(e => e.PCtoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtoId");
            entity.Property(e => e.PRemAudCalId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pRemAudCalId");
        });

        modelBuilder.Entity<RhuTRemAuditorium>(entity =>
        {
            entity.HasKey(e => e.RemAudId).HasName("PK_RhuT_RemAudiroria");

            entity.ToTable("RhuT_RemAuditoria");

            entity.HasIndex(e => new { e.PEmpId, e.PProcRemPerId, e.RemAudProceso, e.RemAudUsuProceso, e.RemAudFecProceso }, "I1_RhuT_RemAuditoria").IsUnique();

            entity.Property(e => e.RemAudId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PProcRemPerId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pProcRemPerId");
            entity.Property(e => e.PRemAudId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pRemAudId");
            entity.Property(e => e.PRemAudRevId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pRemAudRevId");
            entity.Property(e => e.RemAudFecProceso).HasColumnType("datetime");
            entity.Property(e => e.RemAudFecVb)
                .HasColumnType("datetime")
                .HasColumnName("RemAudFecVB");
            entity.Property(e => e.RemAudProceso)
                .HasMaxLength(2)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.RemAudTipoProceso)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.RemAudUsuProceso)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.RemAudUsuVb)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("RemAudUsuVB");
        });

        modelBuilder.Entity<RhuTRemColumnasInf>(entity =>
        {
            entity.HasKey(e => e.ClmInfId);

            entity.ToTable("RhuT_RemColumnasInf");

            entity.Property(e => e.ClmInfId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.ClmIcodigo)
                .HasMaxLength(32)
                .IsUnicode(false)
                .HasColumnName("ClmICodigo");
            entity.Property(e => e.ClmIdescripcion)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("ClmIDescripcion");
            entity.Property(e => e.ClmIindAccesorio).HasColumnName("ClmIIndAccesorio");
            entity.Property(e => e.ClmIorden).HasColumnName("ClmIOrden");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
        });

        modelBuilder.Entity<RhuTRemConcepto>(entity =>
        {
            entity.HasKey(e => e.ConcRemId);

            entity.ToTable("RhuT_RemConceptos");

            entity.HasIndex(e => e.CnRtipoFormula, "I1_RhuT_RemConceptos").HasFillFactor(90);

            entity.HasIndex(e => new { e.ConcRemId, e.CnRtipo, e.CnRcodigo }, "RhuT_RemConceptos_idx010");

            entity.HasIndex(e => new { e.PEmpId, e.CnRcodigo }, "U1_RhuT_RemConceptos").IsUnique();

            entity.Property(e => e.ConcRemId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.CnRactDatoAtrMid)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("CnRActDatoAtrMId");
            entity.Property(e => e.CnRactDatoTbMid)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("CnRActDatoTbMId");
            entity.Property(e => e.CnRcodigo)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("CnRCodigo");
            entity.Property(e => e.CnRdescripcion)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("CnRDescripcion");
            entity.Property(e => e.CnRindCalculoDif).HasColumnName("CnRIndCalculoDif");
            entity.Property(e => e.CnRindCorrUtmacc).HasColumnName("CnRIndCorrUTMAcc");
            entity.Property(e => e.CnRindReliquidacion).HasColumnName("CnRIndReliquidacion");
            entity.Property(e => e.CnRnivActualizacion).HasColumnName("CnRNivActualizacion");
            entity.Property(e => e.CnRtipo)
                .HasMaxLength(8)
                .IsUnicode(false)
                .HasColumnName("CnRTipo");
            entity.Property(e => e.CnRtipoDato).HasColumnName("CnRTipoDato");
            entity.Property(e => e.CnRtipoFormula)
                .HasMaxLength(8)
                .IsUnicode(false)
                .HasColumnName("CnRTipoFormula");
            entity.Property(e => e.CnRtipoVariable)
                .HasMaxLength(8)
                .IsUnicode(false)
                .HasColumnName("CnRTipoVariable");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");

            entity.HasOne(d => d.CnRactDatoAtrM).WithMany(p => p.RhuTRemConceptos)
                .HasForeignKey(d => d.CnRactDatoAtrMid)
                .HasConstraintName("FK2_RhuT_RemConceptos");
        });

        modelBuilder.Entity<RhuTRemConceptosCont>(entity =>
        {
            entity.HasKey(e => e.ContConcId).HasName("Pk_RhuT_RemConceptosCont");

            entity.ToTable("RhuT_RemConceptosCont");

            entity.HasIndex(e => new { e.PCtaId, e.ContConcId }, "RhuT_RemConceptosCont_idx03");

            entity.HasIndex(e => new { e.PConcRemId, e.PItmGruConId, e.PPerRemIdIni }, "U1_RhuT_RemConceptosCont").IsUnique();

            entity.Property(e => e.ContConcId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PCdiId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCdiId");
            entity.Property(e => e.PCdiIdAporte)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCdiIdAporte");
            entity.Property(e => e.PCfiId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCfiId");
            entity.Property(e => e.PCfiIdAporte)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCfiIdAporte");
            entity.Property(e => e.PConcRemId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pConcRemId");
            entity.Property(e => e.PConceptoCcpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pConceptoCcpId");
            entity.Property(e => e.PConceptoCcpIdAporte)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pConceptoCcpIdAporte");
            entity.Property(e => e.PCtaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtaId");
            entity.Property(e => e.PCtaIdAporte)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtaIdAporte");
            entity.Property(e => e.PEntIdTer)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntIdTer");
            entity.Property(e => e.PEntIdTerAporte)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntIdTerAporte");
            entity.Property(e => e.PItmGruConId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pItmGruConId");
            entity.Property(e => e.PItmTipEntOri)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pItmTipEntOri");
            entity.Property(e => e.PItmTipEntOriAporte)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pItmTipEntOriAporte");
            entity.Property(e => e.PLineaProdId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pLineaProdId");
            entity.Property(e => e.PLineaProdIdAporte)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pLineaProdIdAporte");
            entity.Property(e => e.PPerRemIdIni)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pPerRemIdIni");
            entity.Property(e => e.PPerRemIdTer)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pPerRemIdTer");
            entity.Property(e => e.PTprId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTprId");
            entity.Property(e => e.PTprIdAporte)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTprIdAporte");
            entity.Property(e => e.PryNumero)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PryNumeroAporte)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.TipoImputacion)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength();

            entity.HasOne(d => d.PConcRem).WithMany(p => p.RhuTRemConceptosConts)
                .HasForeignKey(d => d.PConcRemId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK1_RhuT_RemConceptosCont");
        });

        modelBuilder.Entity<RhuTRemConceptosItm>(entity =>
        {
            entity.HasKey(e => e.ConcItmId);

            entity.ToTable("RhuT_RemConceptosItm");

            entity.HasIndex(e => new { e.PConcPerId, e.PConcRemId }, "U1_RhuT_RemConceptosItm").IsUnique();

            entity.Property(e => e.ConcItmId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PConcPerId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pConcPerId");
            entity.Property(e => e.PConcRemId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pConcRemId");
        });

        modelBuilder.Entity<RhuTRemConceptosMe>(entity =>
        {
            entity.HasKey(e => e.ConcMesId);

            entity.ToTable("RhuT_RemConceptosMes");

            entity.HasIndex(e => new { e.PConcRemId, e.CnMfecVigencia }, "U1_RhuT_RemConceptosMes").IsUnique();

            entity.Property(e => e.ConcMesId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.CnMfecIniAsistencia)
                .HasColumnType("datetime")
                .HasColumnName("CnMFecIniAsistencia");
            entity.Property(e => e.CnMfecTerAsistencia)
                .HasColumnType("datetime")
                .HasColumnName("CnMFecTerAsistencia");
            entity.Property(e => e.CnMfecVigencia)
                .HasColumnType("datetime")
                .HasColumnName("CnMFecVigencia");
            entity.Property(e => e.CnMfecha)
                .HasColumnType("datetime")
                .HasColumnName("CnMFecha");
            entity.Property(e => e.CnMhora).HasColumnName("CnMHora");
            entity.Property(e => e.CnMstring)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("CnMString");
            entity.Property(e => e.CnMvalor).HasColumnName("CnMValor");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PConcRemId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pConcRemId");

            entity.HasOne(d => d.PConcRem).WithMany(p => p.RhuTRemConceptosMes)
                .HasForeignKey(d => d.PConcRemId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK1_RhuT_RemConceptosMes");
        });

        modelBuilder.Entity<RhuTRemConceptosPer>(entity =>
        {
            entity.HasKey(e => e.ConcPerId);

            entity.ToTable("RhuT_RemConceptosPer");

            entity.HasIndex(e => new { e.CpeRefAplicTbMid, e.PConcRemId, e.CpeFecIniVigencia, e.ConcPerId }, "RhuT_RemConceptosPer_idx010");

            entity.HasIndex(e => new { e.PConcRemId, e.CpeIndUsoPermte, e.CpeFecTerVigencia, e.CpeFecIniVigencia }, "RhuT_RemConceptosPer_idx011");

            entity.HasIndex(e => new { e.PConcRemId, e.CpeIndUsoMovtoMes, e.CpeFecTerVigencia, e.CpeFecIniVigencia }, "RhuT_RemConceptosPer_idx012");

            entity.HasIndex(e => new { e.PConcRemId, e.CpeFecIniVigencia }, "U1_RhuT_RemConceptosPer").IsUnique();

            entity.Property(e => e.ConcPerId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.CnRtipoAplicabilidad)
                .HasMaxLength(8)
                .IsUnicode(false)
                .HasColumnName("CnRTipoAplicabilidad");
            entity.Property(e => e.CpeBaseImprConcId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("CPeBaseImprConcId");
            entity.Property(e => e.CpeEstado).HasColumnName("CPeEstado");
            entity.Property(e => e.CpeFecIniVigencia)
                .HasColumnType("datetime")
                .HasColumnName("CPeFecIniVigencia");
            entity.Property(e => e.CpeFecTerVigencia)
                .HasColumnType("datetime")
                .HasColumnName("CPeFecTerVigencia");
            entity.Property(e => e.CpeFormula)
                .HasColumnType("text")
                .HasColumnName("CPeFormula");
            entity.Property(e => e.CpeGlosa)
                .HasColumnType("text")
                .HasColumnName("CPeGlosa");
            entity.Property(e => e.CpeHabLiquidoRec).HasColumnName("CPeHabLiquidoRec");
            entity.Property(e => e.CpeHabLiquidoUso).HasColumnName("CPeHabLiquidoUso");
            entity.Property(e => e.CpeIndCentralizacion).HasColumnName("CPeIndCentralizacion");
            entity.Property(e => e.CpeIndGrabacion).HasColumnName("CPeIndGrabacion");
            entity.Property(e => e.CpeIndHabLiquido).HasColumnName("CPeIndHabLiquido");
            entity.Property(e => e.CpeIndUsoMovtoMes).HasColumnName("CPeIndUsoMovtoMes");
            entity.Property(e => e.CpeIndUsoPermte).HasColumnName("CPeIndUsoPermte");
            entity.Property(e => e.CpeOriDatoAtrMid)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("CPeOriDatoAtrMId");
            entity.Property(e => e.CpeRefAplicTbMid)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("CPeRefAplicTbMId");
            entity.Property(e => e.CpeReliqDesdePerId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("CPeReliqDesdePerId");
            entity.Property(e => e.CpeReliqHastaPerId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("CPeReliqHastaPerId");
            entity.Property(e => e.CpeTipoAjuste).HasColumnName("CPeTipoAjuste");
            entity.Property(e => e.CpeTopeConcRemId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("CPeTopeConcRemId");
            entity.Property(e => e.CpeTopeTipo)
                .HasMaxLength(8)
                .IsUnicode(false)
                .HasColumnName("CPeTopeTipo");
            entity.Property(e => e.CpeTopeValor).HasColumnName("CPeTopeValor");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PConcRemId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pConcRemId");

            entity.HasOne(d => d.CpeOriDatoAtrM).WithMany(p => p.RhuTRemConceptosPers)
                .HasForeignKey(d => d.CpeOriDatoAtrMid)
                .HasConstraintName("FK2_RhuT_RemConceptosPer");

            entity.HasOne(d => d.CpeRefAplicTbM).WithMany(p => p.RhuTRemConceptosPers)
                .HasForeignKey(d => d.CpeRefAplicTbMid)
                .HasConstraintName("FK3_RhuT_RemConceptosPer");

            entity.HasOne(d => d.PConcRem).WithMany(p => p.RhuTRemConceptosPers)
                .HasForeignKey(d => d.PConcRemId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK1_RhuT_RemConceptosPer");
        });

        modelBuilder.Entity<RhuTRemConceptosTot>(entity =>
        {
            entity.HasKey(e => e.ConcTotId);

            entity.ToTable("RhuT_RemConceptosTot");

            entity.HasIndex(e => new { e.PConcPerId, e.PConcRemId }, "I1_RHRemT_ConceptosTot").IsUnique();

            entity.Property(e => e.ConcTotId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.CttIndAfecPerDev).HasColumnName("CTtIndAfecPerDev");
            entity.Property(e => e.CttIndAfecPerLiq).HasColumnName("CTtIndAfecPerLiq");
            entity.Property(e => e.CttTipoOperacion)
                .HasMaxLength(8)
                .IsUnicode(false)
                .HasColumnName("CTtTipoOperacion");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PConcPerId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pConcPerId");
            entity.Property(e => e.PConcRemId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pConcRemId");

            entity.HasOne(d => d.PConcPer).WithMany(p => p.RhuTRemConceptosTots)
                .HasForeignKey(d => d.PConcPerId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK1_RhuT_RemConceptosTot");

            entity.HasOne(d => d.PConcRem).WithMany(p => p.RhuTRemConceptosTots)
                .HasForeignKey(d => d.PConcRemId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK2_RhuT_RemConceptosTot");
        });

        modelBuilder.Entity<RhuTRemDetalleEmi>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("RhuT_RemDetalleEmi");

            entity.HasIndex(e => new { e.PCabEmiId, e.PMovCceId }, "RhuT_RemDetalleEmi_idx01");

            entity.Property(e => e.PCabEmiId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCabEmiId");
            entity.Property(e => e.PMovCceId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMovCceId");
        });

        modelBuilder.Entity<RhuTRemDistribPago>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("RhuT_RemDistribPagos");

            entity.Property(e => e.PLiqId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pLiqId");
            entity.Property(e => e.PMovCceId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMovCceId");
        });

        modelBuilder.Entity<RhuTRemDistribucion>(entity =>
        {
            entity.HasKey(e => e.DccId).HasName("PK_RhuT_Distribucion");

            entity.ToTable("RhuT_RemDistribucion");

            entity.HasIndex(e => new { e.PEmpId, e.DivCodigo, e.PPerId, e.PCtoId }, "I1_RhuT_Distribucion");

            entity.Property(e => e.DccId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.PCreId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCreId");
            entity.Property(e => e.PCtoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtoId");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PPerId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pPerId");
            entity.Property(e => e.PTprId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTprId");
            entity.Property(e => e.PorcentajeDist).HasColumnType("money");
            entity.Property(e => e.PryNumero)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<RhuTRemEmpresaCont>(entity =>
        {
            entity.HasKey(e => e.ContEmpId).HasName("Pk_RhuT_RemEmpresaCont");

            entity.ToTable("RhuT_RemEmpresaCont");

            entity.Property(e => e.ContEmpId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
        });

        modelBuilder.Entity<RhuTRemFormNominaPago>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("RhuT_RemFormNominaPago");

            entity.Property(e => e.FormNomPagoDes)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<RhuTRemHstAntecedente>(entity =>
        {
            entity.HasKey(e => e.HstLiqId);

            entity.ToTable("RhuT_RemHstAntecedentes");

            entity.HasIndex(e => new { e.PEmpId, e.DivCodigo, e.PCtoId, e.PProcRemPerId, e.PLiqId, e.HstLiqId }, "I1_RhuT_RemHstAntecedentes").IsUnique();

            entity.HasIndex(e => new { e.PCtoId, e.PProcRemPerId, e.LiqSecRecalculo }, "I2_RhuT_RemHstAntecedentes").IsUnique();

            entity.HasIndex(e => e.PRemAudId, "I3_RhuT_RemHstAntecedentes");

            entity.Property(e => e.HstLiqId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.LiqFecCalculo).HasColumnType("datetime");
            entity.Property(e => e.LiqFecPago).HasColumnType("datetime");
            entity.Property(e => e.LiqFecUf)
                .HasColumnType("datetime")
                .HasColumnName("LiqFecUF");
            entity.Property(e => e.LiqFecUtm)
                .HasColumnType("datetime")
                .HasColumnName("LiqFecUTM");
            entity.Property(e => e.LiqRecalculoLiqId).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.LiqTipoCalculo)
                .HasMaxLength(8)
                .IsUnicode(false);
            entity.Property(e => e.LqTestadoCentraliz)
                .HasMaxLength(8)
                .IsUnicode(false)
                .HasColumnName("LqTEstadoCentraliz");
            entity.Property(e => e.LqTestadoPago)
                .HasMaxLength(8)
                .IsUnicode(false)
                .HasColumnName("LqTEstadoPago");
            entity.Property(e => e.PAntAfpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pAntAfpId");
            entity.Property(e => e.PAntPrevId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pAntPrevId");
            entity.Property(e => e.PAntSaludId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pAntSaludId");
            entity.Property(e => e.PCreId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCreId");
            entity.Property(e => e.PCtoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtoId");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PFicPerId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pFicPerId");
            entity.Property(e => e.PLiqId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pLiqId");
            entity.Property(e => e.PProcRemPerId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pProcRemPerId");
            entity.Property(e => e.PRemAudId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pRemAudId");
        });

        modelBuilder.Entity<RhuTRemHstDato>(entity =>
        {
            entity.HasKey(e => e.PLiqDatId);

            entity.ToTable("RhuT_RemHstDatos");

            entity.HasIndex(e => new { e.LqTperIdDev, e.LqDorigenMov, e.LqDrefOrigenId }, "I1_RhuT_RemHstDatos");

            entity.HasIndex(e => e.PConcRemId, "I2_RhuT_RemHstDatos");

            entity.HasIndex(e => new { e.PLiqId, e.PLiqDatId }, "RhuT_RemHstDatos_idx010");

            entity.Property(e => e.PLiqDatId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pLiqDatId");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.LqDestadoPago)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("LqDEstadoPago");
            entity.Property(e => e.LqDorigenMov)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("LqDOrigenMov");
            entity.Property(e => e.LqDrefOrigenId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("LqDRefOrigenId");
            entity.Property(e => e.LqDrefPago)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("LqDRefPago");
            entity.Property(e => e.LqDsecCalculo).HasColumnName("LqDSecCalculo");
            entity.Property(e => e.LqDvalBaseAlf)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("LqDValBaseAlf");
            entity.Property(e => e.LqDvalBaseFec)
                .HasColumnType("datetime")
                .HasColumnName("LqDValBaseFec");
            entity.Property(e => e.LqDvalBaseNum).HasColumnName("LqDValBaseNum");
            entity.Property(e => e.LqDvalor).HasColumnName("LqDValor");
            entity.Property(e => e.LqDvalorDeflac).HasColumnName("LqDValorDeflac");
            entity.Property(e => e.LqDvalorSinTope).HasColumnName("LqDValorSinTope");
            entity.Property(e => e.LqTperId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("LqTPerId");
            entity.Property(e => e.LqTperIdDev)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("LqTPerIdDev");
            entity.Property(e => e.PConcRemId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pConcRemId");
            entity.Property(e => e.PLiqId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pLiqId");
        });

        modelBuilder.Entity<RhuTRemHstDetalle>(entity =>
        {
            entity.HasKey(e => e.PliqDetId);

            entity.ToTable("RhuT_RemHstDetalles");

            entity.HasIndex(e => new { e.LqTperIdDev, e.LqDorigenMov, e.LqDrefOrigenId }, "I1_RhuT_RemHstDetalles");

            entity.HasIndex(e => e.PConcRemId, "I2_RhuT_RemHstDetalles");

            entity.HasIndex(e => new { e.PLiqId, e.PliqDetId }, "RhuT_RemHstDetalles_idx010");

            entity.Property(e => e.PliqDetId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pliqDetId");
            entity.Property(e => e.CnTorigenMov)
                .HasMaxLength(10)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("CnTOrigenMov");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.LqDbaseRecibo)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("LqDBaseRecibo");
            entity.Property(e => e.LqDestadoPago)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("LqDEstadoPago");
            entity.Property(e => e.LqDorigenMov)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("LqDOrigenMov");
            entity.Property(e => e.LqDrefOrigenId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("LqDRefOrigenId");
            entity.Property(e => e.LqDrefPago)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("LqDRefPago");
            entity.Property(e => e.LqDsecCalculo).HasColumnName("LqDSecCalculo");
            entity.Property(e => e.LqDvalBaseAlf)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("LqDValBaseAlf");
            entity.Property(e => e.LqDvalBaseFec)
                .HasColumnType("datetime")
                .HasColumnName("LqDValBaseFec");
            entity.Property(e => e.LqDvalBaseNum).HasColumnName("LqDValBaseNum");
            entity.Property(e => e.LqDvalor).HasColumnName("LqDValor");
            entity.Property(e => e.LqDvalorDeflac).HasColumnName("LqDValorDeflac");
            entity.Property(e => e.LqDvalorSinTope).HasColumnName("LqDValorSinTope");
            entity.Property(e => e.LqTperId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("LqTPerId");
            entity.Property(e => e.LqTperIdDev)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("LqTPerIdDev");
            entity.Property(e => e.PConcRemId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pConcRemId");
            entity.Property(e => e.PLiqId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pLiqId");
        });

        modelBuilder.Entity<RhuTRemHstDiferencia>(entity =>
        {
            entity.HasKey(e => e.LiqDifId).HasName("Pk_RemHstDiferencias");

            entity.ToTable("RhuT_RemHstDiferencias");

            entity.HasIndex(e => new { e.PEmpId, e.PLiqId, e.PCtoId, e.PProcRemPerId }, "I1_RemHstDiferencias").IsUnique();

            entity.Property(e => e.LiqDifId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.LqTmontoLiquidoAnt).HasColumnName("LqTMontoLiquidoAnt");
            entity.Property(e => e.LqTmontoLiquidoDif).HasColumnName("LqTMontoLiquidoDif");
            entity.Property(e => e.PCtoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtoId");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PLiqId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pLiqId");
            entity.Property(e => e.PProcRemPerId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pProcRemPerId");
        });

        modelBuilder.Entity<RhuTRemHstTotale>(entity =>
        {
            entity.HasKey(e => e.PLiqTotId).HasName("PK_RhuT_RemHsTTotales");

            entity.ToTable("RhuT_RemHstTotales");

            entity.HasIndex(e => e.PLiqId, "I1_RhuT_RemHstTotales").IsUnique();

            entity.Property(e => e.PLiqTotId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pLiqTotId");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.LqTalcanceLiquido).HasColumnName("LqTAlcanceLiquido");
            entity.Property(e => e.LqTdiasLicencia).HasColumnName("LqTDiasLicencia");
            entity.Property(e => e.LqTdiasPago).HasColumnName("LqTDiasPago");
            entity.Property(e => e.LqTmontoLiquido).HasColumnName("LqTMontoLiquido");
            entity.Property(e => e.LqTmontoSobregiro).HasColumnName("LqTMontoSobregiro");
            entity.Property(e => e.LqTotrosDesctos).HasColumnName("LqTOtrosDesctos");
            entity.Property(e => e.LqTperId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("LqTPerId");
            entity.Property(e => e.LqTrefCentraliz)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("LqTRefCentraliz");
            entity.Property(e => e.LqTrefPagoLiq)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("LqTRefPagoLiq");
            entity.Property(e => e.LqTtafectoImpto).HasColumnName("LqTTAfectoImpto");
            entity.Property(e => e.LqTtafectoImptoAcc).HasColumnName("LqTTAfectoImptoAcc");
            entity.Property(e => e.LqTtdepConvInf).HasColumnName("LqTTDepConvInf");
            entity.Property(e => e.LqTtdescLegales).HasColumnName("LqTTDescLegales");
            entity.Property(e => e.LqTtdescuentos).HasColumnName("LqTTDescuentos");
            entity.Property(e => e.LqTthabInemb).HasColumnName("LqTTHabInemb");
            entity.Property(e => e.LqTthaberes).HasColumnName("LqTTHaberes");
            entity.Property(e => e.LqTthaberesAcc).HasColumnName("LqTTHaberesAcc");
            entity.Property(e => e.LqTtimponInf).HasColumnName("LqTTImponInf");
            entity.Property(e => e.LqTtimponTope).HasColumnName("LqTTImponTope");
            entity.Property(e => e.LqTtimponTopeAcc).HasColumnName("LqTTImponTopeAcc");
            entity.Property(e => e.LqTtimponTopeMut).HasColumnName("LqTTImponTopeMut");
            entity.Property(e => e.LqTtimponTopeSal).HasColumnName("LqTTImponTopeSal");
            entity.Property(e => e.LqTtimponTopeSalAcc).HasColumnName("LqTTImponTopeSalAcc");
            entity.Property(e => e.LqTtimponTopeSegC).HasColumnName("LqTTImponTopeSegC");
            entity.Property(e => e.LqTtimponible).HasColumnName("LqTTImponible");
            entity.Property(e => e.LqTtimponibleAcc).HasColumnName("LqTTImponibleAcc");
            entity.Property(e => e.LqTtimpuestos).HasColumnName("LqTTImpuestos");
            entity.Property(e => e.LqTtimpuestosAcc).HasColumnName("LqTTImpuestosAcc");
            entity.Property(e => e.LqTtnoImponible).HasColumnName("LqTTNoImponible");
            entity.Property(e => e.LqTtnoImponibleAcc).HasColumnName("LqTTNoImponibleAcc");
            entity.Property(e => e.LqTtnoTributable).HasColumnName("LqTTNoTributable");
            entity.Property(e => e.LqTtprevPension).HasColumnName("LqTTPrevPension");
            entity.Property(e => e.LqTtprevPensionAcc).HasColumnName("LqTTPrevPensionAcc");
            entity.Property(e => e.LqTtprevSalud).HasColumnName("LqTTPrevSalud");
            entity.Property(e => e.LqTtprevSaludAcc).HasColumnName("LqTTPrevSaludAcc");
            entity.Property(e => e.LqTtprevSegCes).HasColumnName("LqTTPrevSegCes");
            entity.Property(e => e.LqTtprevSegCesAcc).HasColumnName("LqTTPrevSegCesAcc");
            entity.Property(e => e.LqTttributable).HasColumnName("LqTTTributable");
            entity.Property(e => e.LqTttributableAcc).HasColumnName("LqTTTributableAcc");
            entity.Property(e => e.PFicPerId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pFicPerId");
            entity.Property(e => e.PLiqId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pLiqId");
        });

        modelBuilder.Entity<RhuTRemInecolConc>(entity =>
        {
            entity.HasKey(e => e.InecclId);

            entity.ToTable("RhuT_RemINEColConc");

            entity.Property(e => e.InecclId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("INECClId");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PConcRemId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pConcRemId");
            entity.Property(e => e.PItmInecolId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pItmINEColId");
        });

        modelBuilder.Entity<RhuTRemInfColConc>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("RhuT_RemInfColConc");

            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.InfCclId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("InfCClId");
            entity.Property(e => e.PClmInfId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pClmInfId");
            entity.Property(e => e.PConcRemId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pConcRemId");

            entity.HasOne(d => d.PClmInf).WithMany()
                .HasForeignKey(d => d.PClmInfId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK1_RhuT_RemInfColConc");

            entity.HasOne(d => d.PConcRem).WithMany()
                .HasForeignKey(d => d.PConcRemId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK2_RhuT_RemInfColConc");
        });

        modelBuilder.Entity<RhuTRemInfGastColConc>(entity =>
        {
            entity.HasKey(e => e.GtsCclId);

            entity.ToTable("RhuT_RemInfGastColConc");

            entity.Property(e => e.GtsCclId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("GtsCClId");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PConcRemId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pConcRemId");
            entity.Property(e => e.PItmGstColId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pItmGstColId");
        });

        modelBuilder.Entity<RhuTRemInforme>(entity =>
        {
            entity.HasKey(e => e.InfRemId);

            entity.ToTable("RhuT_RemInformes");

            entity.Property(e => e.InfRemId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.InfRcodigo)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("InfRCodigo");
            entity.Property(e => e.InfRdescripcion)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("InfRDescripcion");
            entity.Property(e => e.InfRtipo)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("InfRTipo");
        });

        modelBuilder.Entity<RhuTRemInformesCol>(entity =>
        {
            entity.HasKey(e => e.InfColId).HasName("PK_RhuT_RemInformesConc");

            entity.ToTable("RhuT_RemInformesCol");

            entity.Property(e => e.InfColId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.InfCfecIniVigencia)
                .HasColumnType("datetime")
                .HasColumnName("InfCFecIniVigencia");
            entity.Property(e => e.InfCfecTerVigencia)
                .HasColumnType("datetime")
                .HasColumnName("InfCFecTerVigencia");
            entity.Property(e => e.InfCsecColumna).HasColumnName("InfCSecColumna");
            entity.Property(e => e.InfCtituloCol)
                .HasMaxLength(15)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("InfCTituloCol");
            entity.Property(e => e.PClmInfId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pClmInfId");
            entity.Property(e => e.PInfRemId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pInfRemId");

            entity.HasOne(d => d.PClmInf).WithMany(p => p.RhuTRemInformesCols)
                .HasForeignKey(d => d.PClmInfId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK2_RhuT_RemInformesCol");

            entity.HasOne(d => d.PInfRem).WithMany(p => p.RhuTRemInformesCols)
                .HasForeignKey(d => d.PInfRemId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK1_RhuT_RemInformesCol");
        });

        modelBuilder.Entity<RhuTRemInformesTit>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("RhuT_RemInformesTit");

            entity.Property(e => e.InfCtituloCol)
                .HasMaxLength(15)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("InfCTituloCol");
            entity.Property(e => e.PClmInfId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pClmInfId");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
        });

        modelBuilder.Entity<RhuTRemLiqAccesorio>(entity =>
        {
            entity.HasKey(e => e.LiqAccId);

            entity.ToTable("RhuT_RemLiqAccesorios");

            entity.HasIndex(e => new { e.PLiqId, e.LiqAccId }, "RhuT_RemLiqAccesorios_idx010");

            entity.Property(e => e.LiqAccId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.LqTperId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("LqTPerId");
            entity.Property(e => e.LqTperIdDev)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("LqTPerIdDev");
            entity.Property(e => e.LqTtafectoImpto).HasColumnName("LqTTAfectoImpto");
            entity.Property(e => e.LqTtdepConvInf).HasColumnName("LqTTDepConvInf");
            entity.Property(e => e.LqTtdescLegales).HasColumnName("LqTTDescLegales");
            entity.Property(e => e.LqTthabInemb).HasColumnName("LqTTHabInemb");
            entity.Property(e => e.LqTthaberes).HasColumnName("LqTTHaberes");
            entity.Property(e => e.LqTtimponInf).HasColumnName("LqTTImponInf");
            entity.Property(e => e.LqTtimponTope).HasColumnName("LqTTImponTope");
            entity.Property(e => e.LqTtimponTopeMut).HasColumnName("LqTTImponTopeMut");
            entity.Property(e => e.LqTtimponTopeSal).HasColumnName("LqTTImponTopeSal");
            entity.Property(e => e.LqTtimponTopeSegC).HasColumnName("LqTTImponTopeSegC");
            entity.Property(e => e.LqTtimponible).HasColumnName("LqTTImponible");
            entity.Property(e => e.LqTtimpuestos).HasColumnName("LqTTImpuestos");
            entity.Property(e => e.LqTtnoImponible).HasColumnName("LqTTNoImponible");
            entity.Property(e => e.LqTtnoTributable).HasColumnName("LqTTNoTributable");
            entity.Property(e => e.LqTtprevPension).HasColumnName("LqTTPrevPension");
            entity.Property(e => e.LqTtprevSalud).HasColumnName("LqTTPrevSalud");
            entity.Property(e => e.LqTtprevSegCes).HasColumnName("LqTTPrevSegCes");
            entity.Property(e => e.LqTttributable).HasColumnName("LqTTTributable");
            entity.Property(e => e.PLiqId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pLiqId");

            entity.HasOne(d => d.PLiq).WithMany(p => p.RhuTRemLiqAccesorios)
                .HasForeignKey(d => d.PLiqId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK1_RhuT_RemLiqAccesorios");
        });

        modelBuilder.Entity<RhuTRemLiqAntecedente>(entity =>
        {
            entity.HasKey(e => e.LiqId);

            entity.ToTable("RhuT_RemLiqAntecedentes");

            entity.HasIndex(e => new { e.PEmpId, e.DivCodigo, e.PCtoId, e.PProcRemPerId, e.LiqId }, "I1_RHRemT_LiqAntecedentes").IsUnique();

            entity.HasIndex(e => new { e.PCtoId, e.PProcRemPerId, e.LiqSecRecalculo }, "I2_RHRemT_LiqAntecedentes").IsUnique();

            entity.HasIndex(e => e.PRemAudId, "I3_RHRemT_LiqAntecedentes").HasFillFactor(90);

            entity.HasIndex(e => new { e.LqTestadoPago, e.LqTestadoCentraliz, e.LiqId }, "RhuT_RemLiqAntecedentes_idx011");

            entity.HasIndex(e => new { e.PCtoId, e.PEmpId, e.LiqId, e.PProcRemPerId }, "RhuT_RemLiqAntecedentes_idx012");

            entity.HasIndex(e => new { e.PFicPerId, e.PEmpId, e.LiqId }, "RhuT_RemLiqAntecedentes_idx05");

            entity.HasIndex(e => new { e.LiqId, e.PProcRemPerId, e.PEmpId, e.PCreId, e.DivCodigo, e.PAntPrevId, e.PAntAfpId, e.PAntSaludId, e.PCtoId }, "RhuT_RemLiqAntecedentes_idx070");

            entity.HasIndex(e => new { e.PEmpId, e.LqTestadoCentraliz, e.LiqId, e.PProcRemPerId, e.PFicPerId, e.PCtoId }, "RhuT_RemLiqAntecedentes_idx10");

            entity.Property(e => e.LiqId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.LiqFecCalculo).HasColumnType("datetime");
            entity.Property(e => e.LiqFecPago).HasColumnType("datetime");
            entity.Property(e => e.LiqFecUf)
                .HasColumnType("datetime")
                .HasColumnName("LiqFecUF");
            entity.Property(e => e.LiqFecUtm)
                .HasColumnType("datetime")
                .HasColumnName("LiqFecUTM");
            entity.Property(e => e.LiqRecalculoLiqId).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.LiqTipoCalculo)
                .HasMaxLength(8)
                .IsUnicode(false);
            entity.Property(e => e.LqTestadoCentraliz)
                .HasMaxLength(8)
                .IsUnicode(false)
                .HasColumnName("LqTEstadoCentraliz");
            entity.Property(e => e.LqTestadoPago)
                .HasMaxLength(8)
                .IsUnicode(false)
                .HasColumnName("LqTEstadoPago");
            entity.Property(e => e.PAntAfpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pAntAfpId");
            entity.Property(e => e.PAntPrevId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pAntPrevId");
            entity.Property(e => e.PAntSaludId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pAntSaludId");
            entity.Property(e => e.PCreId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCreId");
            entity.Property(e => e.PCtoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtoId");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PFicPerId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pFicPerId");
            entity.Property(e => e.PProcRemPerId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pProcRemPerId");
            entity.Property(e => e.PRemAudId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pRemAudId");

            entity.HasOne(d => d.PCto).WithMany(p => p.RhuTRemLiqAntecedentes)
                .HasForeignKey(d => d.PCtoId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK1_RhuT_RemLiqAntecedentes");
        });

        modelBuilder.Entity<RhuTRemLiqDato>(entity =>
        {
            entity.HasKey(e => e.LiqDatId);

            entity.ToTable("RhuT_RemLiqDatos");

            entity.HasIndex(e => new { e.LqTperIdDev, e.LqDorigenMov, e.LqDrefOrigenId }, "I1_RhuT_RemLiqDatos").HasFillFactor(90);

            entity.HasIndex(e => e.PConcRemId, "I2_RhuT_RemLiqDatos").HasFillFactor(90);

            entity.HasIndex(e => new { e.PLiqId, e.LiqDatId }, "RhuT_RemLiqDatos_idx010");

            entity.HasIndex(e => new { e.LqDorigenMov, e.LqDrefOrigenId, e.LqTperIdDev, e.LqDvalor }, "RhuT_RemLiqDatos_idx011");

            entity.HasIndex(e => new { e.LqTperId, e.PLiqId, e.PConcRemId, e.LqDvalor }, "RhuT_RemLiqDatos_idx012");

            entity.HasIndex(e => new { e.PConcRemId, e.LqTperId, e.PLiqId, e.LqDvalor }, "RhuT_RemLiqDatos_idx013");

            entity.Property(e => e.LiqDatId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.LqDestadoPago)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("LqDEstadoPago");
            entity.Property(e => e.LqDorigenMov)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("LqDOrigenMov");
            entity.Property(e => e.LqDrefOrigenId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("LqDRefOrigenId");
            entity.Property(e => e.LqDrefPago)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("LqDRefPago");
            entity.Property(e => e.LqDsecCalculo).HasColumnName("LqDSecCalculo");
            entity.Property(e => e.LqDvalBaseAlf)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("LqDValBaseAlf");
            entity.Property(e => e.LqDvalBaseFec)
                .HasColumnType("datetime")
                .HasColumnName("LqDValBaseFec");
            entity.Property(e => e.LqDvalBaseNum).HasColumnName("LqDValBaseNum");
            entity.Property(e => e.LqDvalor).HasColumnName("LqDValor");
            entity.Property(e => e.LqDvalorDeflac).HasColumnName("LqDValorDeflac");
            entity.Property(e => e.LqDvalorSinTope).HasColumnName("LqDValorSinTope");
            entity.Property(e => e.LqTperId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("LqTPerId");
            entity.Property(e => e.LqTperIdDev)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("LqTPerIdDev");
            entity.Property(e => e.PConcRemId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pConcRemId");
            entity.Property(e => e.PLiqId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pLiqId");

            entity.HasOne(d => d.PLiq).WithMany(p => p.RhuTRemLiqDatos)
                .HasForeignKey(d => d.PLiqId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK1_RhuT_RemLiqDatos");
        });

        modelBuilder.Entity<RhuTRemLiqDetalle>(entity =>
        {
            entity.HasKey(e => e.LiqDetId);

            entity.ToTable("RhuT_RemLiqDetalles");

            entity.HasIndex(e => new { e.LqTperIdDev, e.LqDorigenMov, e.LqDrefOrigenId }, "I1_RhuT_RemLiqDetalles").HasFillFactor(90);

            entity.HasIndex(e => e.PConcRemId, "I2_RhuT_RemLiqDetalles").HasFillFactor(90);

            entity.HasIndex(e => new { e.LqDrefOrigenId, e.LqTperIdDev, e.LqDorigenMov, e.LqDvalor }, "RhuT_RemLiqDatos_idx012");

            entity.HasIndex(e => new { e.PLiqId, e.LiqDetId }, "RhuT_RemLiqDetalles_idx010");

            entity.HasIndex(e => new { e.LqTperIdDev, e.LqTperId, e.LiqDetId, e.PLiqId }, "Rhut_RemLiqdetalles_idx10");

            entity.Property(e => e.LiqDetId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.CnTorigenMov)
                .HasMaxLength(10)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("CnTOrigenMov");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.LqDbaseRecibo)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("LqDBaseRecibo");
            entity.Property(e => e.LqDestadoPago)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("LqDEstadoPago");
            entity.Property(e => e.LqDorigenMov)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("LqDOrigenMov");
            entity.Property(e => e.LqDrefOrigenId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("LqDRefOrigenId");
            entity.Property(e => e.LqDrefPago)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("LqDRefPago");
            entity.Property(e => e.LqDsecCalculo).HasColumnName("LqDSecCalculo");
            entity.Property(e => e.LqDvalBaseAlf)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("LqDValBaseAlf");
            entity.Property(e => e.LqDvalBaseFec)
                .HasColumnType("datetime")
                .HasColumnName("LqDValBaseFec");
            entity.Property(e => e.LqDvalBaseNum).HasColumnName("LqDValBaseNum");
            entity.Property(e => e.LqDvalor).HasColumnName("LqDValor");
            entity.Property(e => e.LqDvalorDeflac).HasColumnName("LqDValorDeflac");
            entity.Property(e => e.LqDvalorSinTope).HasColumnName("LqDValorSinTope");
            entity.Property(e => e.LqTperId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("LqTPerId");
            entity.Property(e => e.LqTperIdDev)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("LqTPerIdDev");
            entity.Property(e => e.PConcRemId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pConcRemId");
            entity.Property(e => e.PLiqId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pLiqId");

            entity.HasOne(d => d.PConcRem).WithMany(p => p.RhuTRemLiqDetalles)
                .HasForeignKey(d => d.PConcRemId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK2_RhuT_RemLiqDetalles");

            entity.HasOne(d => d.PLiq).WithMany(p => p.RhuTRemLiqDetalles)
                .HasForeignKey(d => d.PLiqId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK1_RhuT_RemLiqDetalles");
        });

        modelBuilder.Entity<RhuTRemLiqTotale>(entity =>
        {
            entity.HasKey(e => e.LiqTotId);

            entity.ToTable("RhuT_RemLiqTotales");

            entity.HasIndex(e => e.PLiqId, "I1_RHRemT_LiqTotales").IsUnique();

            entity.HasIndex(e => new { e.PLiqId, e.LiqTotId }, "RhuT_RemLiqTotales_idx012");

            entity.HasIndex(e => new { e.PLiqId, e.LqTperId, e.LqTdiasLicencia, e.LqTtimponTopeSegC }, "RhuT_RemLiqTotales_idx014");

            entity.HasIndex(e => new { e.PLiqId, e.LqTperId, e.LqTdiasLicencia }, "RhuT_RemLiqTotales_idx015");

            entity.HasIndex(e => new { e.PFicPerId, e.LqTperId, e.LiqTotId, e.PLiqId }, "RhuT_RemLiqTotales_idx03");

            entity.HasIndex(e => new { e.LqTperId, e.PLiqId, e.LqTtimponible, e.LiqTotId }, "RhuT_RemLiqTotales_idx10");

            entity.HasIndex(e => new { e.PLiqId, e.LqTperId }, "Rhut_RemLiqTotales_Indx011");

            entity.Property(e => e.LiqTotId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.LqTalcanceLiquido).HasColumnName("LqTAlcanceLiquido");
            entity.Property(e => e.LqTdiasLicencia).HasColumnName("LqTDiasLicencia");
            entity.Property(e => e.LqTdiasPago).HasColumnName("LqTDiasPago");
            entity.Property(e => e.LqTmontoLiquido).HasColumnName("LqTMontoLiquido");
            entity.Property(e => e.LqTmontoSobregiro).HasColumnName("LqTMontoSobregiro");
            entity.Property(e => e.LqTotrosDesctos).HasColumnName("LqTOtrosDesctos");
            entity.Property(e => e.LqTperId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("LqTPerId");
            entity.Property(e => e.LqTrefCentraliz)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("LqTRefCentraliz");
            entity.Property(e => e.LqTrefPagoLiq)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("LqTRefPagoLiq");
            entity.Property(e => e.LqTtafectoImpto).HasColumnName("LqTTAfectoImpto");
            entity.Property(e => e.LqTtafectoImptoAcc).HasColumnName("LqTTAfectoImptoAcc");
            entity.Property(e => e.LqTtdepConvInf).HasColumnName("LqTTDepConvInf");
            entity.Property(e => e.LqTtdescLegales).HasColumnName("LqTTDescLegales");
            entity.Property(e => e.LqTtdescuentos).HasColumnName("LqTTDescuentos");
            entity.Property(e => e.LqTthabInemb).HasColumnName("LqTTHabInemb");
            entity.Property(e => e.LqTthaberes).HasColumnName("LqTTHaberes");
            entity.Property(e => e.LqTthaberesAcc).HasColumnName("LqTTHaberesAcc");
            entity.Property(e => e.LqTtimponInf).HasColumnName("LqTTImponInf");
            entity.Property(e => e.LqTtimponTope).HasColumnName("LqTTImponTope");
            entity.Property(e => e.LqTtimponTopeAcc).HasColumnName("LqTTImponTopeAcc");
            entity.Property(e => e.LqTtimponTopeMut).HasColumnName("LqTTImponTopeMut");
            entity.Property(e => e.LqTtimponTopeSal).HasColumnName("LqTTImponTopeSal");
            entity.Property(e => e.LqTtimponTopeSalAcc).HasColumnName("LqTTImponTopeSalAcc");
            entity.Property(e => e.LqTtimponTopeSegC).HasColumnName("LqTTImponTopeSegC");
            entity.Property(e => e.LqTtimponible).HasColumnName("LqTTImponible");
            entity.Property(e => e.LqTtimponibleAcc).HasColumnName("LqTTImponibleAcc");
            entity.Property(e => e.LqTtimpuestos).HasColumnName("LqTTImpuestos");
            entity.Property(e => e.LqTtimpuestosAcc).HasColumnName("LqTTImpuestosAcc");
            entity.Property(e => e.LqTtnoImponible).HasColumnName("LqTTNoImponible");
            entity.Property(e => e.LqTtnoImponibleAcc).HasColumnName("LqTTNoImponibleAcc");
            entity.Property(e => e.LqTtnoTributable).HasColumnName("LqTTNoTributable");
            entity.Property(e => e.LqTtprevPension).HasColumnName("LqTTPrevPension");
            entity.Property(e => e.LqTtprevPensionAcc).HasColumnName("LqTTPrevPensionAcc");
            entity.Property(e => e.LqTtprevSalud).HasColumnName("LqTTPrevSalud");
            entity.Property(e => e.LqTtprevSaludAcc).HasColumnName("LqTTPrevSaludAcc");
            entity.Property(e => e.LqTtprevSegCes).HasColumnName("LqTTPrevSegCes");
            entity.Property(e => e.LqTtprevSegCesAcc).HasColumnName("LqTTPrevSegCesAcc");
            entity.Property(e => e.LqTttributable).HasColumnName("LqTTTributable");
            entity.Property(e => e.LqTttributableAcc).HasColumnName("LqTTTributableAcc");
            entity.Property(e => e.PFicPerId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pFicPerId");
            entity.Property(e => e.PLiqId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pLiqId");

            entity.HasOne(d => d.PLiq).WithOne(p => p.RhuTRemLiqTotale)
                .HasForeignKey<RhuTRemLiqTotale>(d => d.PLiqId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK1_RhuT_RemLiqTotales");
        });

        modelBuilder.Entity<RhuTRemLiqTotalesPer>(entity =>
        {
            entity.HasKey(e => e.LiqPerId);

            entity.ToTable("RhuT_RemLiqTotalesPer");

            entity.HasIndex(e => new { e.PEmpId, e.PFicPerId, e.LqTperId }, "I1_RhuT_RemLiqTotalesPer").IsUnique();

            entity.HasIndex(e => new { e.PFicPerId, e.PEmpId, e.LiqPerId }, "RhuT_RemLiqTotalesPer_idx010");

            entity.Property(e => e.LiqPerId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.LqTdiasLicencia).HasColumnName("LqTDiasLicencia");
            entity.Property(e => e.LqTdiasPago).HasColumnName("LqTDiasPago");
            entity.Property(e => e.LqTperId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("LqTPerId");
            entity.Property(e => e.LqTtafectoImpto).HasColumnName("LqTTAfectoImpto");
            entity.Property(e => e.LqTtdepConvInf).HasColumnName("LqTTDepConvInf");
            entity.Property(e => e.LqTtdescLegales).HasColumnName("LqTTDescLegales");
            entity.Property(e => e.LqTthabInemb).HasColumnName("LqTTHabInemb");
            entity.Property(e => e.LqTthaberes).HasColumnName("LqTTHaberes");
            entity.Property(e => e.LqTtimponInf).HasColumnName("LqTTImponInf");
            entity.Property(e => e.LqTtimponTope).HasColumnName("LqTTImponTope");
            entity.Property(e => e.LqTtimponTopeSal).HasColumnName("LqTTImponTopeSal");
            entity.Property(e => e.LqTtimponTopeSegC).HasColumnName("LqTTImponTopeSegC");
            entity.Property(e => e.LqTtimponible).HasColumnName("LqTTImponible");
            entity.Property(e => e.LqTtimpuestos).HasColumnName("LqTTImpuestos");
            entity.Property(e => e.LqTtnoImponible).HasColumnName("LqTTNoImponible");
            entity.Property(e => e.LqTtnoTributable).HasColumnName("LqTTNoTributable");
            entity.Property(e => e.LqTtprevPension).HasColumnName("LqTTPrevPension");
            entity.Property(e => e.LqTtprevSalud).HasColumnName("LqTTPrevSalud");
            entity.Property(e => e.LqTtprevSegCes).HasColumnName("LqTTPrevSegCes");
            entity.Property(e => e.LqTttributable).HasColumnName("LqTTTributable");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PFicPerId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pFicPerId");

            entity.HasOne(d => d.PFicPer).WithMany(p => p.RhuTRemLiqTotalesPers)
                .HasForeignKey(d => d.PFicPerId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK1_RhuT_RemLiqTotalesPer");
        });

        modelBuilder.Entity<RhuTRemNominasConc>(entity =>
        {
            entity.HasKey(e => e.NomConcId);

            entity.ToTable("RhuT_RemNominasConc");

            entity.HasIndex(e => new { e.PProcRemPerId, e.NcnEstadoReg, e.NomConcId }, "RhuT_RemNominasConc_idx02");

            entity.Property(e => e.NomConcId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.NcnCodOrigen)
                .HasMaxLength(8)
                .IsUnicode(false);
            entity.Property(e => e.NcnEstadoReg)
                .HasMaxLength(8)
                .IsUnicode(false);
            entity.Property(e => e.NcnFecRecep).HasColumnType("datetime");
            entity.Property(e => e.NcnNombre)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.NcnUsuOrigen)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PProcRemPerId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pProcRemPerId");

            entity.HasOne(d => d.PProcRemPer).WithMany(p => p.RhuTRemNominasConcs)
                .HasForeignKey(d => d.PProcRemPerId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK1_RhuT_RemNominasConc");
        });

        modelBuilder.Entity<RhuTRemNominasConcDet>(entity =>
        {
            entity.HasKey(e => e.NomConcDetId);

            entity.ToTable("RhuT_RemNominasConcDet");

            entity.HasIndex(e => new { e.PCtoId, e.NcnDmdaId, e.PNomConcId, e.NomConcDetId, e.PConcRemId, e.NcnDindValorInf, e.NcnDvalFecha, e.NcnDvalHora, e.NcnDperIdIniDev, e.NcnDperIdTerDev, e.NcnDvalNumerico, e.NcnDvalAlfNum, e.NcnDvalBaseNum, e.NcnDvalBaseAlf }, "RhuT_RemNominasConcDet_idx010");

            entity.HasIndex(e => new { e.NcnDrefOrigen, e.NomConcDetId }, "RhuT_RemNominasConcDet_idx05");

            entity.Property(e => e.NomConcDetId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.NcnDesaDia31).HasColumnName("NcnDEsaDia31");
            entity.Property(e => e.NcnDesaDiaVig).HasColumnName("NcnDEsaDiaVig");
            entity.Property(e => e.NcnDesaTipVig).HasColumnName("NcnDEsaTipVig");
            entity.Property(e => e.NcnDestadoProc)
                .HasMaxLength(8)
                .IsUnicode(false)
                .HasColumnName("NcnDEstadoProc");
            entity.Property(e => e.NcnDindValorInf).HasColumnName("NcnDIndValorInf");
            entity.Property(e => e.NcnDmdaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("NcnDMdaId");
            entity.Property(e => e.NcnDpCreId).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.NcnDperIdIniDev).HasColumnName("NcnDPerIdIniDev");
            entity.Property(e => e.NcnDperIdTerDev).HasColumnName("NcnDPerIdTerDev");
            entity.Property(e => e.NcnDpryId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("NcnDPryId");
            entity.Property(e => e.NcnDrefOrigen)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("NcnDRefOrigen");
            entity.Property(e => e.NcnDtprId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("NcnDTPrId");
            entity.Property(e => e.NcnDvalAlfNum)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("NcnDValAlfNum");
            entity.Property(e => e.NcnDvalBaseAlf)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("NcnDValBaseAlf");
            entity.Property(e => e.NcnDvalBaseNum)
                .HasColumnType("numeric(25, 18)")
                .HasColumnName("NcnDValBaseNum");
            entity.Property(e => e.NcnDvalFecha)
                .HasColumnType("datetime")
                .HasColumnName("NcnDValFecha");
            entity.Property(e => e.NcnDvalHora).HasColumnName("NcnDValHora");
            entity.Property(e => e.NcnDvalNumerico).HasColumnName("NcnDValNumerico");
            entity.Property(e => e.PConcRemId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pConcRemId");
            entity.Property(e => e.PCtoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtoId");
            entity.Property(e => e.PNomConcId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pNomConcId");

            entity.HasOne(d => d.PConcRem).WithMany(p => p.RhuTRemNominasConcDets)
                .HasForeignKey(d => d.PConcRemId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK2_RhuT_RemNominasConcDet");

            entity.HasOne(d => d.PCto).WithMany(p => p.RhuTRemNominasConcDets)
                .HasForeignKey(d => d.PCtoId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK3_RhuT_RemNominasConcDet");

            entity.HasOne(d => d.PNomConc).WithMany(p => p.RhuTRemNominasConcDets)
                .HasForeignKey(d => d.PNomConcId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK1_RhuT_RemNominasConcDet");
        });

        modelBuilder.Entity<RhuTRemNominasCtaCte>(entity =>
        {
            entity.HasKey(e => e.PMovCceId).HasName("RhuT_RemNominasCtaCte_I01");

            entity.ToTable("RhuT_RemNominasCtaCte");

            entity.Property(e => e.PMovCceId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMovCceId");
            entity.Property(e => e.PNomConcId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pNomConcId");
        });

        modelBuilder.Entity<RhuTRemPagosEspeciale>(entity =>
        {
            entity.HasKey(e => e.PLiqId).HasName("RhuI_RemPagosEspeciales");

            entity.ToTable("RhuT_RemPagosEspeciales");

            entity.HasIndex(e => e.PCabOpeId, "RhuI_CabeceraPagEsp");

            entity.Property(e => e.PLiqId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pLiqId");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.LqTrefPagoLiq)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("LqTRefPagoLiq");
            entity.Property(e => e.PCabOpeId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCabOpeId");
        });

        modelBuilder.Entity<RhuTRemParamCalculo>(entity =>
        {
            entity.HasKey(e => e.RemParCalId);

            entity.ToTable("RhuT_RemParamCalculo");

            entity.HasIndex(e => new { e.PRemAudId, e.PConcRemId }, "I1_RhuT_RemParCalculo").HasFillFactor(90);

            entity.Property(e => e.RemParCalId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.CnMfecVigencia)
                .HasColumnType("datetime")
                .HasColumnName("CnMFecVigencia");
            entity.Property(e => e.CnTvalorAlNum)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("CnTValorAlNum");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PConcRemId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pConcRemId");
            entity.Property(e => e.PRemAudId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pRemAudId");
        });

        modelBuilder.Entity<RhuTRemPeriodo>(entity =>
        {
            entity.HasKey(e => e.PerRemId);

            entity.ToTable("RhuT_RemPeriodos");

            entity.HasIndex(e => new { e.PEmpId, e.PerId, e.PerRemId }, "RhuI_RemPeriodos_idx03");

            entity.Property(e => e.PerRemId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PrmEstado).HasColumnName("PRmEstado");
            entity.Property(e => e.PrmFecApertura)
                .HasColumnType("datetime")
                .HasColumnName("PRmFecApertura");
            entity.Property(e => e.PrmFecBloqueo)
                .HasColumnType("datetime")
                .HasColumnName("PRmFecBloqueo");
            entity.Property(e => e.PrmFecCierre)
                .HasColumnType("datetime")
                .HasColumnName("PRmFecCierre");

            entity.HasOne(d => d.GlbTPeriodo).WithMany(p => p.RhuTRemPeriodos)
                .HasForeignKey(d => new { d.PEmpId, d.PerId, d.EjeAno })
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK1_RhuT_RemPeriodos");
        });

        modelBuilder.Entity<RhuTRemPermanente>(entity =>
        {
            entity.HasKey(e => e.ConcPermId);

            entity.ToTable("RhuT_RemPermanentes");

            entity.HasIndex(e => new { e.PProcRemId, e.PrmFecIniVigencia, e.ConcPermId }, "RhuT_RemPermanentes_idx02");

            entity.Property(e => e.ConcPermId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PConcRemId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pConcRemId");
            entity.Property(e => e.PCtoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtoId");
            entity.Property(e => e.PFicPerId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pFicPerId");
            entity.Property(e => e.PProcRemId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pProcRemId");
            entity.Property(e => e.PrmFecIniVigencia).HasColumnType("datetime");
            entity.Property(e => e.PrmFecTerVigencia).HasColumnType("datetime");
            entity.Property(e => e.PrmFechaDoc).HasColumnType("datetime");
            entity.Property(e => e.PrmMdaId).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.PrmNumDocto)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PrmPryId).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.PrmTipoDocId).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.PrmTprId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("PrmTPrId");
            entity.Property(e => e.PrmValAlfNum)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.PrmValBaseAlf)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PrmValFecha).HasColumnType("datetime");
            entity.Property(e => e.PrmValNumerico).HasColumnType("money");
            entity.Property(e => e.PrmpCreId).HasColumnType("numeric(9, 0)");

            entity.HasOne(d => d.PConcRem).WithMany(p => p.RhuTRemPermanentes)
                .HasForeignKey(d => d.PConcRemId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK2_RhuT_RemPermanentes");

            entity.HasOne(d => d.PCto).WithMany(p => p.RhuTRemPermanentes)
                .HasForeignKey(d => d.PCtoId)
                .HasConstraintName("FK1_RhuT_RemPermanentes");
        });

        modelBuilder.Entity<RhuTRemProcCentraliza>(entity =>
        {
            entity.HasKey(e => e.ProcCenId).HasName("Pk_RhuT_RemProcCentraliza");

            entity.ToTable("RhuT_RemProcCentraliza");

            entity.Property(e => e.ProcCenId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PCabOpeId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCabOpeId");
            entity.Property(e => e.PCabOpeIdReversa)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCabOpeIdReversa");
            entity.Property(e => e.PProcRemPerId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pProcRemPerId");
        });

        modelBuilder.Entity<RhuTRemProcCentralizaCuota>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("RhuT_RemProcCentralizaCuotas");

            entity.Property(e => e.PMovCceId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMovCceId");
            entity.Property(e => e.PProcCenId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pProcCenId");
        });

        modelBuilder.Entity<RhuTRemProcCentralizaDet>(entity =>
        {
            entity.HasKey(e => e.CenDetId);

            entity.ToTable("RhuT_RemProcCentralizaDet");

            entity.HasIndex(e => e.PProcCenId, "I1_RhuT_RemProcCentralizaDet").HasFillFactor(90);

            entity.HasIndex(e => e.PLiqId, "I2_RhuT_RemProcCentralizaDet").HasFillFactor(90);

            entity.Property(e => e.CenDetId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.DocCceNumero)
                .HasMaxLength(25)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EntId2).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EntRut)
                .HasMaxLength(12)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PCdiId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCdiId");
            entity.Property(e => e.PCdiIdAporte)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCdiIdAporte");
            entity.Property(e => e.PCfiId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCfiId");
            entity.Property(e => e.PCfiIdAporte)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCfiIdAporte");
            entity.Property(e => e.PConcRemId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pConcRemId");
            entity.Property(e => e.PConceptoCcpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pConceptoCcpId");
            entity.Property(e => e.PConceptoCcpIdAporte)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pConceptoCcpIdAporte");
            entity.Property(e => e.PCreId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCreId");
            entity.Property(e => e.PCtaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtaId");
            entity.Property(e => e.PCtaIdAporte)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtaIdAporte");
            entity.Property(e => e.PCtoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtoId");
            entity.Property(e => e.PDocCceId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pDocCceId");
            entity.Property(e => e.PEntId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntId");
            entity.Property(e => e.PLineaProdId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pLineaProdId");
            entity.Property(e => e.PLineaProdIdAporte)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pLineaProdIdAporte");
            entity.Property(e => e.PLiqId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pLiqId");
            entity.Property(e => e.PLiqTotId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pLiqTotId");
            entity.Property(e => e.PMonedaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMonedaId");
            entity.Property(e => e.PMovCceId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMovCceId");
            entity.Property(e => e.PMovCceIdAp)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMovCceIdAp");
            entity.Property(e => e.PProcCenId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pProcCenId");
            entity.Property(e => e.PTprId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTprId");
            entity.Property(e => e.PTprIdAporte)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTprIdAporte");
            entity.Property(e => e.PliqDetId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pliqDetId");
            entity.Property(e => e.PryNumero)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PryNumeroAporte)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.Rut)
                .HasMaxLength(12)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.TipoImputacion)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.TipoOrigen).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.TipoOrigenAporte).HasColumnType("numeric(9, 0)");

            entity.HasOne(d => d.PProcCen).WithMany(p => p.RhuTRemProcCentralizaDets)
                .HasForeignKey(d => d.PProcCenId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK1_RhuT_RemProcCentralizaDet");
        });

        modelBuilder.Entity<RhuTRemProcPagSinMtoLiq>(entity =>
        {
            entity.HasKey(e => new { e.PProcRemPerId, e.ProcPagSec, e.PLiqId }).HasName("RhuI_RemProcPagSinMtoLiq");

            entity.ToTable("RhuT_RemProcPagSinMtoLiq");

            entity.Property(e => e.PProcRemPerId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pProcRemPerId");
            entity.Property(e => e.PLiqId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pLiqId");
        });

        modelBuilder.Entity<RhuTRemProcPago>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("RhuT_RemProcPagos");

            entity.Property(e => e.PCabEmiId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCabEmiId");
            entity.Property(e => e.PFormaPagoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pFormaPagoId");
            entity.Property(e => e.PProcRemPerId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pProcRemPerId");
            entity.Property(e => e.ProcPagId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
        });

        modelBuilder.Entity<RhuTRemProceso>(entity =>
        {
            entity.HasKey(e => e.ProcRemId);

            entity.ToTable("RhuT_RemProcesos");

            entity.HasIndex(e => new { e.PEmpId, e.PrRcodigo }, "U1_RhuT_RemProcesos").IsUnique();

            entity.Property(e => e.ProcRemId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PItmTipProcRem)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pItmTipProcRem");
            entity.Property(e => e.PrRcodigo)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("PrRCodigo");
            entity.Property(e => e.PrRdescripcion)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("PrRDescripcion");
            entity.Property(e => e.PrRindActTot).HasColumnName("PrRIndActTot");

            entity.HasOne(d => d.PEmp).WithMany(p => p.RhuTRemProcesos)
                .HasForeignKey(d => d.PEmpId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK1_RhuT_RemProcesos");
        });

        modelBuilder.Entity<RhuTRemProcesoConc>(entity =>
        {
            entity.HasKey(e => e.ProcConcId);

            entity.ToTable("RhuT_RemProcesoConcs");

            entity.HasIndex(e => new { e.PProcRemId, e.PConcRemId, e.CprPrioridadCalc, e.CprFecTerVigencia, e.CprFecIniVigencia }, "RhuT_RemProcesoConcs_idx010");

            entity.HasIndex(e => new { e.PConcRemId, e.ProcConcId }, "RhuT_RemProcesoConcs_idx04");

            entity.HasIndex(e => new { e.PProcRemId, e.PConcRemId, e.CprFecIniVigencia }, "U1_RHRemT_ProcesoConcs").IsUnique();

            entity.Property(e => e.ProcConcId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.CprFecIniVigencia)
                .HasColumnType("datetime")
                .HasColumnName("CPrFecIniVigencia");
            entity.Property(e => e.CprFecTerVigencia)
                .HasColumnType("datetime")
                .HasColumnName("CPrFecTerVigencia");
            entity.Property(e => e.CprPrioridadCalc).HasColumnName("CPrPrioridadCalc");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PConcRemId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pConcRemId");
            entity.Property(e => e.PProcRemId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pProcRemId");

            entity.HasOne(d => d.PConcRem).WithMany(p => p.RhuTRemProcesoConcs)
                .HasForeignKey(d => d.PConcRemId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK2_RhuT_RemProcesoConcs");

            entity.HasOne(d => d.PProcRem).WithMany(p => p.RhuTRemProcesoConcs)
                .HasForeignKey(d => d.PProcRemId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK1_RhuT_RemProcesoConcs");
        });

        modelBuilder.Entity<RhuTRemProcesosCont>(entity =>
        {
            entity.HasKey(e => e.ContProcId);

            entity.ToTable("RhuT_RemProcesosCont");

            entity.HasIndex(e => new { e.PConcRemIdMlqd, e.ContProcId }, "RhuT_RemProcesosCont_idx03");

            entity.HasIndex(e => new { e.PProcRemId, e.PPerRemIdIni }, "U1_RhuT_RemProcesosCont").IsUnique();

            entity.Property(e => e.ContProcId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PConcRemIdMlqd)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pConcRemIdMLqd");
            entity.Property(e => e.PConcRemIdRju)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pConcRemIdRju");
            entity.Property(e => e.PConceptoCcpIdLqd)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pConceptoCcpIdLqd");
            entity.Property(e => e.PConceptoCcpIdLqdEsp)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pConceptoCcpIdLqdEsp");
            entity.Property(e => e.PConceptoCcpIdRju)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pConceptoCcpIdRju");
            entity.Property(e => e.PPerRemIdIni)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pPerRemIdIni");
            entity.Property(e => e.PPerRemIdTer)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pPerRemIdTer");
            entity.Property(e => e.PProcRemId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pProcRemId");
            entity.Property(e => e.PTipoOpeId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTipoOpeId");
            entity.Property(e => e.PTipoOpeIdPago)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTipoOpeIdPago");

            entity.HasOne(d => d.PProcRem).WithMany(p => p.RhuTRemProcesosConts)
                .HasForeignKey(d => d.PProcRemId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK1_RhuT_RemProcesosCont");
        });

        modelBuilder.Entity<RhuTRemProcesosPer>(entity =>
        {
            entity.HasKey(e => e.ProcRemPerId);

            entity.ToTable("RhuT_RemProcesosPer");

            entity.HasIndex(e => new { e.PProcRemId, e.PPerRemId }, "I1_RhuT_RemProcesosPer").IsUnique();

            entity.HasIndex(e => new { e.ProcRemPerId, e.PProcRemId }, "RhuT_RemProcesosPer_idx010");

            entity.Property(e => e.ProcRemPerId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.CpeReliqDesdePerId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("CPeReliqDesdePerId");
            entity.Property(e => e.CpeReliqHastaPerId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("CPeReliqHastaPerId");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PPerRemId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pPerRemId");
            entity.Property(e => e.PProcRemId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pProcRemId");
            entity.Property(e => e.PrpfecFinCalc)
                .HasColumnType("datetime")
                .HasColumnName("PRPFecFinCalc");
            entity.Property(e => e.PrpfecFinPag)
                .HasColumnType("datetime")
                .HasColumnName("PRPFecFinPag");

            entity.HasOne(d => d.PPerRem).WithMany(p => p.RhuTRemProcesosPers)
                .HasForeignKey(d => d.PPerRemId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK1_RhuT_RemProcesosPer");

            entity.HasOne(d => d.PProcRem).WithMany(p => p.RhuTRemProcesosPers)
                .HasForeignKey(d => d.PProcRemId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK2_RhuT_RemProcesosPer");
        });

        modelBuilder.Entity<RhuTRemTblAtribModelo>(entity =>
        {
            entity.HasKey(e => e.RemAtrMid);

            entity.ToTable("RhuT_RemTblAtribModelo");

            entity.HasIndex(e => new { e.PRemTbMid, e.AtrMnombre }, "U1_RhuT_RemTblAtribModelo").IsUnique();

            entity.Property(e => e.RemAtrMid)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("RemAtrMId");
            entity.Property(e => e.AtrMdescripcion)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("AtrMDescripcion");
            entity.Property(e => e.AtrMforeingKey)
                .HasMaxLength(32)
                .IsUnicode(false)
                .HasColumnName("AtrMForeingKey");
            entity.Property(e => e.AtrMindTraduccion).HasColumnName("AtrMIndTraduccion");
            entity.Property(e => e.AtrMkeyTraduccion)
                .HasMaxLength(32)
                .IsUnicode(false)
                .HasColumnName("AtrMKeyTraduccion");
            entity.Property(e => e.AtrMnombre)
                .HasMaxLength(32)
                .IsUnicode(false)
                .HasColumnName("AtrMNombre");
            entity.Property(e => e.AtrMnombreAcc)
                .HasMaxLength(32)
                .IsUnicode(false)
                .HasColumnName("AtrMNombreAcc");
            entity.Property(e => e.AtrMnombreHst)
                .HasMaxLength(32)
                .IsUnicode(false)
                .HasColumnName("AtrMNombreHst");
            entity.Property(e => e.AtrMorigenCantDec).HasColumnName("AtrMOrigenCantDec");
            entity.Property(e => e.AtrMorigenLargo).HasColumnName("AtrMOrigenLargo");
            entity.Property(e => e.AtrMorigenTipo).HasColumnName("AtrMOrigenTipo");
            entity.Property(e => e.AtrMtblTraduccion)
                .HasMaxLength(32)
                .IsUnicode(false)
                .HasColumnName("AtrMTblTraduccion");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PRemTbMid)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pRemTbMId");

            entity.HasOne(d => d.PRemTbM).WithMany(p => p.RhuTRemTblAtribModelos)
                .HasForeignKey(d => d.PRemTbMid)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK1_RhuT_RemTblAtribModelo");
        });

        modelBuilder.Entity<RhuTRemTblModelo>(entity =>
        {
            entity.HasKey(e => e.RemTbMid);

            entity.ToTable("RhuT_RemTblModelo");

            entity.HasIndex(e => new { e.TbMnombre, e.CnRtipoVariable }, "I1_RhuT_RemTblModelo").IsUnique();

            entity.Property(e => e.RemTbMid)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("RemTbMId");
            entity.Property(e => e.CnRtipoVariable)
                .HasMaxLength(8)
                .IsUnicode(false)
                .HasColumnName("CnRTipoVariable");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.TbMdescripcion)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("TbMDescripcion");
            entity.Property(e => e.TbMindUsoDestino).HasColumnName("TbMIndUsoDestino");
            entity.Property(e => e.TbMindUsoOrigen).HasColumnName("TbMIndUsoOrigen");
            entity.Property(e => e.TbMnombre)
                .HasMaxLength(32)
                .IsUnicode(false)
                .HasColumnName("TbMNombre");
            entity.Property(e => e.TbMtipoUso).HasColumnName("TbMTipoUso");
        });

        modelBuilder.Entity<RhuTResumenCalculo>(entity =>
        {
            entity.HasKey(e => e.ResCalId).HasName("PK_RhuT_ResCalculos");

            entity.ToTable("RhuT_ResumenCalculos");

            entity.Property(e => e.ResCalId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PConcRemId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pConcRemId");
            entity.Property(e => e.PCtoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtoId");
            entity.Property(e => e.PItmParId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pItmParId");
            entity.Property(e => e.PLiqId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pLiqId");
            entity.Property(e => e.PResIdentity)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pResIdentity");
            entity.Property(e => e.ResCalFecPago).HasColumnType("datetime");

            entity.HasOne(d => d.PCto).WithMany(p => p.RhuTResumenCalculos)
                .HasForeignKey(d => d.PCtoId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_RhuT_ResCalContratos");

            entity.HasOne(d => d.PItmPar).WithMany(p => p.RhuTResumenCalculos)
                .HasForeignKey(d => d.PItmParId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_RhuT_ResCalItems");
        });

        modelBuilder.Entity<RhuTSelActividad>(entity =>
        {
            entity.HasKey(e => e.IdActividad);

            entity.ToTable("RhuT_SelActividad");

            entity.HasIndex(e => new { e.PIdActividadInicial, e.PidOrdenProceso }, "I1_RhuT_SelActividad").IsUnique();

            entity.Property(e => e.IdActividad)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("Id_Actividad");
            entity.Property(e => e.CodEstadoActividad)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Cod_EstadoActividad");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstado)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.IndicadorEstado)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PIdActividadInicial)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pId_Actividad_Inicial");
            entity.Property(e => e.PidOrdenProceso)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("PId_Orden_Proceso");

            entity.HasOne(d => d.PIdActividadInicialNavigation).WithMany(p => p.RhuTSelActividads)
                .HasForeignKey(d => d.PIdActividadInicial)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK2_RhuT_SelActividad");

            entity.HasOne(d => d.PidOrdenProcesoNavigation).WithMany(p => p.RhuTSelActividads)
                .HasForeignKey(d => d.PidOrdenProceso)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK1_RhuT_SelActividad");
        });

        modelBuilder.Entity<RhuTSelCargoPostulante>(entity =>
        {
            entity.HasKey(e => e.IdCargoPostulante);

            entity.ToTable("RhuT_SelCargoPostulante");

            entity.HasIndex(e => e.PidPostulante, "I1_RhuT_SelCargoPostulante").HasFillFactor(90);

            entity.Property(e => e.IdCargoPostulante)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("Id_Cargo_Postulante");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecPostulacion)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Postulacion");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.MontoRentaPostulacion).HasColumnName("Monto_Renta_Postulacion");
            entity.Property(e => e.PItmExperienciaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pItmExperienciaId");
            entity.Property(e => e.PidPostulante)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("PId_Postulante");

            entity.HasOne(d => d.CgoCodCargoNavigation).WithMany(p => p.RhuTSelCargoPostulantes)
                .HasForeignKey(d => d.CgoCodCargo)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK2_RhuT_SelCargoPostulante");

            entity.HasOne(d => d.PidPostulanteNavigation).WithMany(p => p.RhuTSelCargoPostulantes)
                .HasForeignKey(d => d.PidPostulante)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK1_RhuT_SelCargoPostulante");
        });

        modelBuilder.Entity<RhuTSelConfiguracion>(entity =>
        {
            entity.HasKey(e => e.IdSelConfiguracion);

            entity.ToTable("RhuT_SelConfiguracion");

            entity.Property(e => e.IdSelConfiguracion)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("Id_SelConfiguracion");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.SelConDiasMaxDot).HasColumnName("SelCon_DiasMax_Dot");
            entity.Property(e => e.SelConMaxRegistros).HasColumnName("SelCon_MaxRegistros");
            entity.Property(e => e.SelConMotivoDot).HasColumnName("SelCon_Motivo_Dot");
        });

        modelBuilder.Entity<RhuTSelConocimiento>(entity =>
        {
            entity.HasKey(e => new { e.PFicPerId, e.PItmConocimientoId }).HasName("I1_RhuT_SelConocimiento");

            entity.ToTable("RhuT_SelConocimiento");

            entity.HasIndex(e => e.IdConocimiento, "PK_RhuT_SelConocimiento").IsUnique();

            entity.Property(e => e.PFicPerId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pFicPerId");
            entity.Property(e => e.PItmConocimientoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pItmConocimientoId");
            entity.Property(e => e.CncObservacion)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdConocimiento)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("Id_Conocimiento");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
        });

        modelBuilder.Entity<RhuTSelControlTemp>(entity =>
        {
            entity.HasKey(e => e.IdControl);

            entity.ToTable("RhuT_SelControlTemp");

            entity.HasIndex(e => e.PidOrdenProceso, "I1_RhuT_SelControlTemp").HasFillFactor(90);

            entity.HasIndex(e => new { e.SelOwner, e.IdFuncionalidad }, "I2_RhuT_SelControlTemp").HasFillFactor(90);

            entity.Property(e => e.IdControl)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("Id_Control");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.IdFuncionalidad)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcionalidad");
            entity.Property(e => e.PidOrdenProceso)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("PId_Orden_Proceso");
            entity.Property(e => e.SelOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<RhuTSelDocumentoCargo>(entity =>
        {
            entity.HasKey(e => e.IdDocumento);

            entity.ToTable("RhuT_SelDocumentoCargo");

            entity.HasIndex(e => new { e.CgoCodCargo, e.PEmpId }, "I1_RhuT_SelDocumentoCargo").HasFillFactor(90);

            entity.Property(e => e.IdDocumento)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("Id_Documento");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.IndObligatorio)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Ind_Obligatorio");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PItmDocSelId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pItmDocSelId");

            entity.HasOne(d => d.CgoCodCargoNavigation).WithMany(p => p.RhuTSelDocumentoCargos)
                .HasForeignKey(d => d.CgoCodCargo)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK1_RhuT_SelDocumentoCargo");
        });

        modelBuilder.Entity<RhuTSelDocumentoPersona>(entity =>
        {
            entity.HasKey(e => e.IdDocumentoPersona).HasName("PK_RhuT_SelDocPersona");

            entity.ToTable("RhuT_SelDocumentoPersona");

            entity.HasIndex(e => e.PFicPerId, "I1_RhuT_SelDocPersona").HasFillFactor(90);

            entity.Property(e => e.IdDocumentoPersona)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("Id_Documento_Persona");
            entity.Property(e => e.CodEstadoDctoPersona)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Cod_EstadoDctoPersona");
            entity.Property(e => e.DocumentoFisico)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("Documento_Fisico");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEmision)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Emision");
            entity.Property(e => e.FecEstado)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.GlosaObservacion)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("Glosa_Observacion");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PFicPerId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pFicPerId");
            entity.Property(e => e.PItmDocSelId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pItmDocSelId");
            entity.Property(e => e.PidNotificacion)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("PId_Notificacion");
            entity.Property(e => e.PidSolicitudDetalle)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("PId_Solicitud_Detalle");
        });

        modelBuilder.Entity<RhuTSelDotacion>(entity =>
        {
            entity.HasKey(e => e.IdDotacion);

            entity.ToTable("RhuT_SelDotacion");

            entity.HasIndex(e => new { e.PEmpId, e.DivCodigo, e.PCreId, e.CgoCodCargo, e.FecVigencia }, "I1_RhuT_SelDotacion").IsUnique();

            entity.Property(e => e.IdDotacion)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("Id_Dotacion");
            entity.Property(e => e.CantDotacionPres).HasColumnName("Cant_Dotacion_Pres");
            entity.Property(e => e.CantDotacionReal).HasColumnName("Cant_Dotacion_Real");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.FecVigencia)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Vigencia");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PCreId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCreId");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
        });

        modelBuilder.Entity<RhuTSelDotacionSolicitud>(entity =>
        {
            entity.HasKey(e => new { e.PidDotacion, e.PidSolicitud });

            entity.ToTable("RhuT_SelDotacionSolicitud");

            entity.Property(e => e.PidDotacion)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("PId_Dotacion");
            entity.Property(e => e.PidSolicitud)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("PId_Solicitud");
            entity.Property(e => e.FecSolicitud)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Solicitud");
        });

        modelBuilder.Entity<RhuTSelEvaluaPostulante>(entity =>
        {
            entity.HasKey(e => e.IdEtapaEvaluacion);

            entity.ToTable("RhuT_SelEvaluaPostulante");

            entity.HasIndex(e => new { e.PidPostulante, e.PidOrdenProceso }, "I1_RhuT_SelEvaluaPostulante").HasFillFactor(90);

            entity.Property(e => e.IdEtapaEvaluacion)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("Id_Etapa_Evaluacion");
            entity.Property(e => e.CodEstadoEvaluacion)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Cod_EstadoEvaluacion");
            entity.Property(e => e.CodNota)
                .HasMaxLength(4)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Cod_Nota");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstado)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecEstimadaTermino)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estimada_Termino");
            entity.Property(e => e.FecEvaluacion)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Evaluacion");
            entity.Property(e => e.FecEvaluacionReal)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Evaluacion_Real");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.HoraEvaluacion).HasColumnName("Hora_Evaluacion");
            entity.Property(e => e.HoraEvaluacionReal).HasColumnName("Hora_Evaluacion_Real");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionalidad)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcionalidad");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.IndAsistencia)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Ind_Asistencia");
            entity.Property(e => e.IndCitacion)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Ind_Citacion");
            entity.Property(e => e.IndFormulario)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Ind_Formulario");
            entity.Property(e => e.IndNotificacion)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Ind_Notificacion");
            entity.Property(e => e.IndObligatorio)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Ind_Obligatorio");
            entity.Property(e => e.IndResultado)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Ind_Resultado");
            entity.Property(e => e.PCoordinadorSelId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCoordinadorSelId");
            entity.Property(e => e.PCoordinadorSelRealId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCoordinadorSelRealId");
            entity.Property(e => e.PItmLugarEvaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pItmLugarEvaId");
            entity.Property(e => e.PItmLugarEvaRealId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pItmLugarEvaRealId");
            entity.Property(e => e.PidEjecucion)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("PId_Ejecucion");
            entity.Property(e => e.PidEvaluacion)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("PId_Evaluacion");
            entity.Property(e => e.PidOrdenProceso)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("PId_Orden_Proceso");
            entity.Property(e => e.PidPostulante)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("PId_Postulante");
            entity.Property(e => e.PorCalificacion).HasColumnName("Por_Calificacion");
            entity.Property(e => e.TipoCalificacion)
                .HasMaxLength(4)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Tipo_Calificacion");

            entity.HasOne(d => d.PidEvaluacionNavigation).WithMany(p => p.RhuTSelEvaluaPostulantes)
                .HasForeignKey(d => d.PidEvaluacion)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK2_RhuT_SelEvaluapostulante");

            entity.HasOne(d => d.PidPostulanteNavigation).WithMany(p => p.RhuTSelEvaluaPostulantes)
                .HasForeignKey(d => d.PidPostulante)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK1_RhuT_SelEvaluapostulante");
        });

        modelBuilder.Entity<RhuTSelEvaluacion>(entity =>
        {
            entity.HasKey(e => e.IdEvaluacion);

            entity.ToTable("RhuT_SelEvaluacion");

            entity.HasIndex(e => new { e.CgoCodCargo, e.PEmpId, e.TipoEstado, e.IndFormulario }, "I1_RhuT_SelEvaluacion").HasFillFactor(90);

            entity.HasIndex(e => e.PItmEvaluacion, "I2_RhuT_SelEvaluacion").HasFillFactor(90);

            entity.Property(e => e.IdEvaluacion)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("Id_Evaluacion");
            entity.Property(e => e.CantDiasMaximo).HasColumnName("Cant_Dias_Maximo");
            entity.Property(e => e.CodFormulario)
                .HasMaxLength(10)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Cod_Formulario");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.IndFormulario)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Ind_Formulario");
            entity.Property(e => e.IndProgramacionMasiva)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Ind_Programacion_Masiva");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PItmEvaluacion)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pItmEvaluacion");
            entity.Property(e => e.PorCalificacionMax).HasColumnName("Por_Calificacion_Max");
            entity.Property(e => e.PorCalificacionMin).HasColumnName("Por_Calificacion_Min");
            entity.Property(e => e.TipoEstado)
                .HasMaxLength(4)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Tipo_Estado");

            entity.HasOne(d => d.CgoCodCargoNavigation).WithMany(p => p.RhuTSelEvaluacions)
                .HasForeignKey(d => d.CgoCodCargo)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK1_RhuT_SelEvaluacion");
        });

        modelBuilder.Entity<RhuTSelHisPostulante>(entity =>
        {
            entity.HasKey(e => e.IdPostulanteHistorico);

            entity.ToTable("RhuT_SelHisPostulante");

            entity.HasIndex(e => e.PidPostulante, "I1_RhuT_SelHisPostulante").HasFillFactor(90);

            entity.Property(e => e.IdPostulanteHistorico)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("Id_Postulante_Historico");
            entity.Property(e => e.CodEstadoPostulante)
                .HasMaxLength(2)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Cod_EstadoPostulante");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PidCargoPostulante)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("PId_Cargo_Postulante");
            entity.Property(e => e.PidOrdenProceso)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("PId_Orden_Proceso");
            entity.Property(e => e.PidOrdenProcesoEval)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("PId_Orden_Proceso_Eval");
            entity.Property(e => e.PidPostulante)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("PId_Postulante");
            entity.Property(e => e.PorRanking).HasColumnName("Por_Ranking");

            entity.HasOne(d => d.PidPostulanteNavigation).WithMany(p => p.RhuTSelHisPostulantes)
                .HasForeignKey(d => d.PidPostulante)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK1_RhuT_SelHisPostulante");
        });

        modelBuilder.Entity<RhuTSelNotificacion>(entity =>
        {
            entity.HasKey(e => e.IdNotificacion);

            entity.ToTable("RhuT_SelNotificacion");

            entity.HasIndex(e => new { e.PidPostulante, e.PidOrdenProceso }, "I1_RhuT_SelNotificacion").HasFillFactor(90);

            entity.HasIndex(e => new { e.PidPostulante, e.PidEtapaEvaluacion, e.TipoNotificacion }, "I2_RhuT_SelNotificacion").HasFillFactor(90);

            entity.Property(e => e.IdNotificacion)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("Id_Notificacion");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecNotificacion)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Notificacion");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.GlosaAviso)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Glosa_Aviso");
            entity.Property(e => e.GlosaObservacion)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("Glosa_Observacion");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.IndContinuidad)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Ind_Continuidad");
            entity.Property(e => e.PMedioAvisoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMedioAvisoId");
            entity.Property(e => e.PidEtapaEvaluacion)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("PId_Etapa_Evaluacion");
            entity.Property(e => e.PidOrdenProceso)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("PId_Orden_Proceso");
            entity.Property(e => e.PidPostulante)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("PId_Postulante");
            entity.Property(e => e.TipoNotificacion)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Tipo_Notificacion");

            entity.HasOne(d => d.PidPostulanteNavigation).WithMany(p => p.RhuTSelNotificacions)
                .HasForeignKey(d => d.PidPostulante)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK1_RhuT_SelNotificacion");
        });

        modelBuilder.Entity<RhuTSelNotificacionAux>(entity =>
        {
            entity.HasKey(e => new { e.SelOwner, e.PidPostulante });

            entity.ToTable("RhuT_SelNotificacionAux");

            entity.Property(e => e.SelOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PidPostulante)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("PId_Postulante");
            entity.Property(e => e.GlosaObservacion)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("Glosa_Observacion");
        });

        modelBuilder.Entity<RhuTSelNotificacionTemp>(entity =>
        {
            entity.HasKey(e => e.IdNotificacion).HasName("PK_RhuT_SelNotifTemp");

            entity.ToTable("RhuT_SelNotificacionTemp");

            entity.HasIndex(e => new { e.IdUsuario, e.IdFuncionalidad, e.PidPostulante }, "I1_RhuT_SelNotifTemp").IsUnique();

            entity.Property(e => e.IdNotificacion)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("Id_Notificacion");
            entity.Property(e => e.IdFuncionalidad)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcionalidad");
            entity.Property(e => e.IdUsuario)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario");
            entity.Property(e => e.PidPostulante)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("PId_Postulante");
        });

        modelBuilder.Entity<RhuTSelObservacion>(entity =>
        {
            entity.HasKey(e => e.IdObservacion);

            entity.ToTable("RhuT_SelObservacion");

            entity.HasIndex(e => new { e.PidSolicitud, e.PidSolicitudDetalle, e.PidOrdenProceso }, "I1_RhuT_SelObservacion").HasFillFactor(90);

            entity.HasIndex(e => new { e.PidPostulante, e.PidEvaluacion, e.PidOrdenProceso }, "I2_RhuT_SelObservacion").HasFillFactor(90);

            entity.Property(e => e.IdObservacion)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("Id_Observacion");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecObservacion)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Observacion");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.GlosaObservacion)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("Glosa_Observacion");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionalidad)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcionalidad");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PidEvaluacion)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("PId_Evaluacion");
            entity.Property(e => e.PidOrdenProceso)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("PId_Orden_Proceso");
            entity.Property(e => e.PidPostulante)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("PId_Postulante");
            entity.Property(e => e.PidSolicitud)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("PId_Solicitud");
            entity.Property(e => e.PidSolicitudDetalle)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("PId_Solicitud_Detalle");
            entity.Property(e => e.TipoObservacion)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Tipo_Observacion");

            entity.HasOne(d => d.PidSolicitudNavigation).WithMany(p => p.RhuTSelObservacions)
                .HasForeignKey(d => d.PidSolicitud)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK1_RhuT_SelObservacion");
        });

        modelBuilder.Entity<RhuTSelOrdenProceso>(entity =>
        {
            entity.HasKey(e => e.IdOrdenProceso);

            entity.ToTable("RhuT_SelOrdenProceso");

            entity.Property(e => e.IdOrdenProceso)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("Id_Orden_Proceso");
            entity.Property(e => e.CantVacantesAsig).HasColumnName("Cant_Vacantes_Asig");
            entity.Property(e => e.CantVacantesSol).HasColumnName("Cant_Vacantes_Sol");
            entity.Property(e => e.CodEstadoOrdProceso)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Cod_EstadoOrdProceso");
            entity.Property(e => e.DescripcionOrdProceso)
                .HasMaxLength(50)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Descripcion_Ord_Proceso");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstado)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecOrdProceso)
                .HasColumnType("datetime")
                .HasColumnName("Fec_OrdProceso");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.SelOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.TipoProceso)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Tipo_Proceso");

            entity.HasOne(d => d.CgoCodCargoNavigation).WithMany(p => p.RhuTSelOrdenProcesos)
                .HasForeignKey(d => d.CgoCodCargo)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK1_RhuT_SelOrdenProceso");
        });

        modelBuilder.Entity<RhuTSelParActividad>(entity =>
        {
            entity.HasKey(e => e.CodActividad);

            entity.ToTable("RhuT_SelParActividad");

            entity.Property(e => e.CodActividad)
                .ValueGeneratedNever()
                .HasColumnName("Cod_Actividad");
            entity.Property(e => e.DescActividad)
                .HasMaxLength(50)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.TipoActividad)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Tipo_Actividad");
        });

        modelBuilder.Entity<RhuTSelParActividadInicial>(entity =>
        {
            entity.HasKey(e => e.IdActividadInicial);

            entity.ToTable("RhuT_SelParActividadInicial");

            entity.HasIndex(e => new { e.IdFuncionalidad, e.CodActividad }, "I1_RhuT_SelParActividadInicial").IsUnique();

            entity.Property(e => e.IdActividadInicial)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("Id_Actividad_Inicial");
            entity.Property(e => e.CodActividad).HasColumnName("Cod_Actividad");
            entity.Property(e => e.CodActividadPadre).HasColumnName("Cod_ActividadPadre");
            entity.Property(e => e.CodActividadPrevia).HasColumnName("Cod_ActividadPrevia");
            entity.Property(e => e.CodEstadoIniActividad)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Cod_EstadoIniActividad");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionalidad)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcionalidad");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.IndModificaPendiente)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Ind_Modifica_Pendiente");
            entity.Property(e => e.NumNivel).HasColumnName("Num_Nivel");
            entity.Property(e => e.NumPrioridad).HasColumnName("Num_Prioridad");
            entity.Property(e => e.UserControl)
                .HasMaxLength(50)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("User_Control");

            entity.HasOne(d => d.CodActividadNavigation).WithMany(p => p.RhuTSelParActividadInicials)
                .HasForeignKey(d => d.CodActividad)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK1_RhuT_SelParActividadInicial");
        });

        modelBuilder.Entity<RhuTSelParCoordinador>(entity =>
        {
            entity.HasKey(e => e.CoordinadorSelId);

            entity.ToTable("RhuT_SelParCoordinador");

            entity.HasIndex(e => new { e.PEmpId, e.PFicPerId, e.CoordinadorSelFecVig }, "I1_RhuT_SelParCoordinador").IsUnique();

            entity.Property(e => e.CoordinadorSelId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.CoordinadorSelFecVig).HasColumnType("datetime");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.IndSicologo)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Ind_Sicologo");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PFicPerId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pFicPerId");
        });

        modelBuilder.Entity<RhuTSelParEstado>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("RhuT_SelParEstado");

            entity.HasIndex(e => e.TipoEstado, "I1_RhuT_SelParEstado").HasFillFactor(90);

            entity.HasIndex(e => new { e.CodEstado, e.TipoEstado }, "PK_RhuT_SelParEstado").IsUnique();

            entity.Property(e => e.CodEstado)
                .HasMaxLength(4)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Cod_Estado");
            entity.Property(e => e.DescripcionEstado)
                .HasMaxLength(50)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Descripcion_Estado");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.IndSeleccion)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Ind_Seleccion");
            entity.Property(e => e.TipoEstado)
                .HasMaxLength(4)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Tipo_Estado");
        });

        modelBuilder.Entity<RhuTSelParFunEstado>(entity =>
        {
            entity.HasKey(e => new { e.IdFuncionalidad, e.CodEstado });

            entity.ToTable("RhuT_SelParFunEstado");

            entity.HasIndex(e => e.IdFuncionalidad, "I1_RhuT_SelParFunEstado").HasFillFactor(90);

            entity.Property(e => e.IdFuncionalidad)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcionalidad");
            entity.Property(e => e.CodEstado)
                .HasMaxLength(4)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Cod_Estado");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.TipoEstado)
                .HasMaxLength(4)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Tipo_Estado");
        });

        modelBuilder.Entity<RhuTSelParRequisito>(entity =>
        {
            entity.HasKey(e => e.CodRequisito).HasName("PK_SelParRequisito");

            entity.ToTable("RhuT_SelParRequisito");

            entity.Property(e => e.CodRequisito)
                .ValueGeneratedNever()
                .HasColumnName("Cod_Requisito");
            entity.Property(e => e.CodCondicionInicial).HasColumnName("Cod_Condicion_Inicial");
            entity.Property(e => e.DescripcionRequisito)
                .HasMaxLength(50)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Descripcion_Requisito");
            entity.Property(e => e.DescripcionTraduccion)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Descripcion_Traduccion");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.IndCalculo)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Ind_Calculo");
            entity.Property(e => e.IndEdad)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Ind_Edad");
            entity.Property(e => e.IndRango)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Ind_Rango");
            entity.Property(e => e.NomAtributoRequisito)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Nom_Atributo_Requisito");
            entity.Property(e => e.NomAtributoRequisito2)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Nom_Atributo_Requisito2");
            entity.Property(e => e.NomAtributoTraduccion)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Nom_Atributo_Traduccion");
            entity.Property(e => e.NomParametroTraduccion)
                .HasMaxLength(100)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Nom_Parametro_Traduccion");
            entity.Property(e => e.NomTablaRequisito)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Nom_Tabla_Requisito");
            entity.Property(e => e.NomTablaRequisito2)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Nom_Tabla_Requisito2");
            entity.Property(e => e.TipoDato)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Tipo_Dato");
        });

        modelBuilder.Entity<RhuTSelPerfil>(entity =>
        {
            entity.HasKey(e => e.IdPerfil).HasName("PK_RhuT_CtoPerfil");

            entity.ToTable("RhuT_SelPerfil");

            entity.HasIndex(e => new { e.CgoCodCargo, e.PEmpId }, "I1_RhuT_CtoPerfil").HasFillFactor(90);

            entity.Property(e => e.IdPerfil)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("Id_Perfil");
            entity.Property(e => e.CodRequisito).HasColumnName("Cod_Requisito");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PItmCodCondicion)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pItmCodCondicion");

            entity.HasOne(d => d.CgoCodCargoNavigation).WithMany(p => p.RhuTSelPerfils)
                .HasForeignKey(d => d.CgoCodCargo)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK1_RhuT_SelPerfil");
        });

        modelBuilder.Entity<RhuTSelPerfilTemp>(entity =>
        {
            entity.HasKey(e => e.IdPerfilTemp);

            entity.ToTable("RhuT_SelPerfilTemp");

            entity.HasIndex(e => new { e.SelOwner, e.PidOrdenProceso }, "I1_RhuT_SelPerfilTemp").HasFillFactor(90);

            entity.Property(e => e.IdPerfilTemp)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("Id_Perfil_Temp");
            entity.Property(e => e.CodRequisito).HasColumnName("Cod_Requisito");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.IndSeleccion)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Ind_Seleccion");
            entity.Property(e => e.NumPrioridad).HasColumnName("Num_Prioridad");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PItmCodCondicion)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pItmCodCondicion");
            entity.Property(e => e.PidOrdenProceso)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("PId_Orden_Proceso");
            entity.Property(e => e.SelOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<RhuTSelPostulante>(entity =>
        {
            entity.HasKey(e => e.IdPostulante);

            entity.ToTable("RhuT_SelPostulante");

            entity.HasIndex(e => e.PFicPerId, "I1_RhuT_SelPostulante").HasFillFactor(90);

            entity.HasIndex(e => e.PidOrdenProceso, "I2_RhuT_SelPostulante").HasFillFactor(90);

            entity.Property(e => e.IdPostulante)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("Id_Postulante");
            entity.Property(e => e.CodEstadoPostulante)
                .HasMaxLength(2)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Cod_EstadoPostulante");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstado)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.GlosaObservacion)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("Glosa_Observacion");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.IndSeleccion)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Ind_Seleccion");
            entity.Property(e => e.PFicPerId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pFicPerId");
            entity.Property(e => e.PidCargoPostulante)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("PId_Cargo_Postulante");
            entity.Property(e => e.PidOrdenProceso)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("PId_Orden_Proceso");
            entity.Property(e => e.PidOrdenProcesoEval)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("PId_Orden_Proceso_Eval");
            entity.Property(e => e.PidSolicitudDetalle)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("PId_Solicitud_Detalle");
            entity.Property(e => e.PorRanking).HasColumnName("Por_Ranking");
            entity.Property(e => e.TipoFuenteReclutamiento)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength();

            entity.HasOne(d => d.PFicPer).WithMany(p => p.RhuTSelPostulantes)
                .HasForeignKey(d => d.PFicPerId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK2_RhuT_SelPostulante");
        });

        modelBuilder.Entity<RhuTSelPostulanteTemp>(entity =>
        {
            entity.HasKey(e => e.IdPostulanteTemp);

            entity.ToTable("RhuT_SelPostulanteTemp");

            entity.HasIndex(e => new { e.SelOwner, e.PidOrdenProceso, e.PFicPerId }, "I1_RhuT_SelPostulanteTemp").HasFillFactor(90);

            entity.Property(e => e.IdPostulanteTemp)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("Id_Postulante_Temp");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.NumCorrelativo).HasColumnName("Num_Correlativo");
            entity.Property(e => e.PFicPerId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pFicPerId");
            entity.Property(e => e.PItmEstadoPostula)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pItmEstadoPostula");
            entity.Property(e => e.PerfilAprobado)
                .HasMaxLength(250)
                .IsUnicode(false);
            entity.Property(e => e.PidOrdenProceso)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("PId_Orden_Proceso");
            entity.Property(e => e.PidPostulante)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("PId_Postulante");
            entity.Property(e => e.SelOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();

            entity.HasOne(d => d.PidOrdenProcesoNavigation).WithMany(p => p.RhuTSelPostulanteTemps)
                .HasForeignKey(d => d.PidOrdenProceso)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK1_RhuT_SelPostulanteTemp");
        });

        modelBuilder.Entity<RhuTSelRefPostulante>(entity =>
        {
            entity.HasKey(e => e.IdReferenciaPostulante);

            entity.ToTable("RhuT_SelRefPostulante");

            entity.HasIndex(e => new { e.PidPostulante, e.PAntLabId, e.SelRefPostulante }, "I1_RhuT_SelRefPostulante").IsUnique();

            entity.Property(e => e.IdReferenciaPostulante)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("Id_Referencia_Postulante");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecReferencia)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Referencia");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.GlosaObservacion)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("Glosa_Observacion");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PAntLabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pAntLabId");
            entity.Property(e => e.PidPostulante)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("PId_Postulante");
            entity.Property(e => e.SelRefPostulante)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();

            entity.HasOne(d => d.PAntLab).WithMany(p => p.RhuTSelRefPostulantes)
                .HasForeignKey(d => d.PAntLabId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK2_RhuT_SelRefPostulante");

            entity.HasOne(d => d.PidPostulanteNavigation).WithMany(p => p.RhuTSelRefPostulantes)
                .HasForeignKey(d => d.PidPostulante)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK1_RhuT_SelRefPostulante");
        });

        modelBuilder.Entity<RhuTSelSolicitud>(entity =>
        {
            entity.HasKey(e => e.SctId).HasName("PK_SelSolicitud");

            entity.ToTable("RhuT_SelSolicitud");

            entity.Property(e => e.SctId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PCreId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCreId");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PFicPerCoordId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pFicPerCoordId");
            entity.Property(e => e.PFicPerSolicId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pFicPerSolicId");
            entity.Property(e => e.PItmEstadoSolId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pItmEstadoSolId");
            entity.Property(e => e.PItmTpMotivoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pItmTpMotivoId");
            entity.Property(e => e.PItmTpSolicId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pItmTpSolicId");
            entity.Property(e => e.SctFecEstTermino).HasColumnType("datetime");
            entity.Property(e => e.SctFecEstado).HasColumnType("datetime");
            entity.Property(e => e.SctFecSolicitud).HasColumnType("datetime");
            entity.Property(e => e.SctFecTermino).HasColumnType("datetime");
            entity.Property(e => e.SctObservacion)
                .HasMaxLength(255)
                .IsUnicode(false)
                .IsFixedLength();

            entity.HasOne(d => d.PEmp).WithMany(p => p.RhuTSelSolicituds)
                .HasForeignKey(d => d.PEmpId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK2_RhuT_SelSolicitud");

            entity.HasOne(d => d.PFicPerCoord).WithMany(p => p.RhuTSelSolicitudPFicPerCoords)
                .HasForeignKey(d => d.PFicPerCoordId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_RhuT_SelSolicitud");

            entity.HasOne(d => d.PFicPerSolic).WithMany(p => p.RhuTSelSolicitudPFicPerSolics)
                .HasForeignKey(d => d.PFicPerSolicId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK1_RhuT_SelSolicitud");

            entity.HasOne(d => d.PItmEstadoSol).WithMany(p => p.RhuTSelSolicitudPItmEstadoSols)
                .HasForeignKey(d => d.PItmEstadoSolId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK5_RhuT_SelSolicitud");

            entity.HasOne(d => d.PItmTpMotivo).WithMany(p => p.RhuTSelSolicitudPItmTpMotivos)
                .HasForeignKey(d => d.PItmTpMotivoId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK4_RhuT_SelSolicitud");

            entity.HasOne(d => d.PItmTpSolic).WithMany(p => p.RhuTSelSolicitudPItmTpSolics)
                .HasForeignKey(d => d.PItmTpSolicId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK3_RhuT_SelSolicitud");
        });

        modelBuilder.Entity<RhuTSelSolicitudDet>(entity =>
        {
            entity.HasKey(e => e.SdeId).HasName("PK_SelSolicitudDet");

            entity.ToTable("RhuT_SelSolicitudDet");

            entity.Property(e => e.SdeId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("SDeId");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.POrdenProcesoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pOrdenProcesoId");
            entity.Property(e => e.PSctId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pSctId");
            entity.Property(e => e.SdeEstado)
                .HasMaxLength(8)
                .IsUnicode(false)
                .HasColumnName("SDeEstado");
            entity.Property(e => e.SdeFecEstado)
                .HasColumnType("datetime")
                .HasColumnName("SDeFecEstado");
            entity.Property(e => e.SdeNumVacAut).HasColumnName("SDeNumVacAut");
            entity.Property(e => e.SdeNumVacCon).HasColumnName("SDeNumVacCon");
            entity.Property(e => e.SdeNumVacReal).HasColumnName("SDeNumVacReal");
            entity.Property(e => e.SdeNumVacSol).HasColumnName("SDeNumVacSol");
            entity.Property(e => e.SdeObservacion)
                .HasMaxLength(255)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("SDeObservacion");

            entity.HasOne(d => d.PSct).WithMany(p => p.RhuTSelSolicitudDets)
                .HasForeignKey(d => d.PSctId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_RhuT_SelSolicitudDet");
        });

        modelBuilder.Entity<RhuTSelTsolicitud>(entity =>
        {
            entity.HasKey(e => e.IdSolicitud);

            entity.ToTable("RhuT_SelTSolicitud");

            entity.Property(e => e.IdSolicitud)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("Id_Solicitud");
            entity.Property(e => e.CodEstadoSsolicitud)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Cod_EstadoSSolicitud");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstado)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecEstimadaTermino)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estimada_Termino");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecSolicitud)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Solicitud");
            entity.Property(e => e.FecTermino)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Termino");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PCoordinadorSelId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCoordinadorSelId");
            entity.Property(e => e.PCreId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCreId");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PFicPerId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pFicPerId");
            entity.Property(e => e.PItmMotSolId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pItmMotSolId");
            entity.Property(e => e.SelOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.TipoSolicitud)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Tipo_Solicitud");
        });

        modelBuilder.Entity<RhuTSelTsolicitudDet>(entity =>
        {
            entity.HasKey(e => e.IdSolicitudDetalle);

            entity.ToTable("RhuT_SelTSolicitudDet");

            entity.Property(e => e.IdSolicitudDetalle)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("Id_Solicitud_Detalle");
            entity.Property(e => e.CantVacantesAut).HasColumnName("Cant_Vacantes_Aut");
            entity.Property(e => e.CantVacantesCon).HasColumnName("Cant_Vacantes_Con");
            entity.Property(e => e.CantVacantesReal).HasColumnName("Cant_Vacantes_Real");
            entity.Property(e => e.CantVacantesSol).HasColumnName("Cant_Vacantes_Sol");
            entity.Property(e => e.CodEstadoSsolicitudDet)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Cod_EstadoSSolicitudDet");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstado)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.GlosaObservacion)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("Glosa_Observacion");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PidOrdenProceso)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("PId_Orden_Proceso");
            entity.Property(e => e.PidSolicitud)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("PId_Solicitud");

            entity.HasOne(d => d.PidSolicitudNavigation).WithMany(p => p.RhuTSelTsolicitudDets)
                .HasForeignKey(d => d.PidSolicitud)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK1_RhuT_SelTSolicitudDet");
        });

        modelBuilder.Entity<RhuTTablaDato>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("RhuT_TablaDatos");

            entity.Property(e => e.AfpAhorro).HasColumnType("money");
            entity.Property(e => e.AfpFecContratoFun).HasColumnType("datetime");
            entity.Property(e => e.AfpFecPrimeraAfi).HasColumnType("datetime");
            entity.Property(e => e.AfpFecRecepcion).HasColumnType("datetime");
            entity.Property(e => e.AfpFun)
                .HasMaxLength(15)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.AfpVoluntario).HasColumnType("money");
            entity.Property(e => e.ApellidoMaterno)
                .HasMaxLength(15)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.ApellidoPaterno)
                .HasMaxLength(15)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.BitFicArchivo)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.Cargo)
                .HasMaxLength(50)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.Celular)
                .HasMaxLength(15)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.CodCtaCteBco)
                .HasMaxLength(15)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.CtoFecRenovacion).HasColumnType("datetime");
            entity.Property(e => e.Direccion)
                .HasMaxLength(100)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.Email)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("EMail");
            entity.Property(e => e.Fax)
                .HasMaxLength(15)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.FechaContrato).HasColumnType("datetime");
            entity.Property(e => e.FechaNacimiento).HasColumnType("datetime");
            entity.Property(e => e.FicEntRazonSocial)
                .HasMaxLength(120)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.FormaPago).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.IdFuncionUlt)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult");
            entity.Property(e => e.Nombres)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PMutualEntSucId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMutualEntSucId");
            entity.Property(e => e.PreIndPrevisional)
                .HasMaxLength(8)
                .IsUnicode(false);
            entity.Property(e => e.Rut)
                .HasMaxLength(12)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.RutAfc)
                .HasMaxLength(12)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.RutAfp)
                .HasMaxLength(12)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.RutIsa)
                .HasMaxLength(12)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.RutMutual)
                .HasMaxLength(12)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.SalFecContratoFun).HasColumnType("datetime");
            entity.Property(e => e.SalFecPrimeraAfi).HasColumnType("datetime");
            entity.Property(e => e.SalFecRecepcion).HasColumnType("datetime");
            entity.Property(e => e.SalFun)
                .HasMaxLength(15)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.SalPlan).HasColumnType("money");
            entity.Property(e => e.Sexo)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.Telefono)
                .HasMaxLength(15)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.TraCodTramo)
                .HasMaxLength(8)
                .IsUnicode(false);
        });

        modelBuilder.Entity<RhuTTablaDatosAfi>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("RhuT_TablaDatosAfi");

            entity.Property(e => e.AfiCtoFecVigDesde).HasColumnType("datetime");
            entity.Property(e => e.BitFicArchivo)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.CtoNumero).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EntRut)
                .HasMaxLength(12)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.FldUserCode)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("fld_UserCode");
            entity.Property(e => e.IdFuncionUlt)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.TabCodigo)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<RhuTTablaDatosAusen>(entity =>
        {
            entity.HasKey(e => new { e.BitFicLinea, e.BitFicArchivo }).HasName("Key_RhuT_TablaDatosAusen");

            entity.ToTable("RhuT_TablaDatosAusen");

            entity.Property(e => e.BitFicArchivo)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EntRut)
                .HasMaxLength(12)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.IdFuncionalidad)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcionalidad");
            entity.Property(e => e.IdUsuario)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.Permiso).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.SpeFecInicio).HasColumnType("datetime");
            entity.Property(e => e.SpeFecSolic).HasColumnType("datetime");
            entity.Property(e => e.SpeFecTermino).HasColumnType("datetime");
            entity.Property(e => e.SpeHraInicio).HasColumnType("datetime");
            entity.Property(e => e.SpeHraTermino).HasColumnType("datetime");
            entity.Property(e => e.SpeObsSolic)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<RhuTTablaDatosLicen>(entity =>
        {
            entity.HasKey(e => new { e.BitFicLinea, e.BitFicArchivo }).HasName("Key_RhuT_TablaDatosLicen");

            entity.ToTable("RhuT_TablaDatosLicen");

            entity.Property(e => e.BitFicArchivo)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.AccFecha).HasColumnType("datetime");
            entity.Property(e => e.AccNroAccidente)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EntRut)
                .HasMaxLength(12)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.IdFuncionalidad)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcionalidad");
            entity.Property(e => e.IdUsuario)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario");
            entity.Property(e => e.LicDireccion)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.LicFecEmision).HasColumnType("datetime");
            entity.Property(e => e.LicFecInicio).HasColumnType("datetime");
            entity.Property(e => e.LicFecTermino).HasColumnType("datetime");
            entity.Property(e => e.LicFono)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.LicNroLicenProrroga)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.LicNroLicencia)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.LugarReposo).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.MedRut)
                .HasMaxLength(12)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.RutFamiliar)
                .HasMaxLength(12)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.TipoLicencia).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.TipoReposo).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.TramoReposo).HasColumnType("numeric(9, 0)");
        });

        modelBuilder.Entity<RhuTTablaDatosPerman>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("RhuT_TablaDatosPerman");

            entity.Property(e => e.BitFicArchivo)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.CodProceso)
                .HasMaxLength(10)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.ConceptoImpGlosa)
                .HasMaxLength(50)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EntRut)
                .HasMaxLength(12)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PrmFecIniVigencia).HasColumnType("datetime");
            entity.Property(e => e.PrmFecTerVigencia).HasColumnType("datetime");
            entity.Property(e => e.PrmFechaDoc).HasColumnType("datetime");
            entity.Property(e => e.PrmMdaId).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.PrmNumDocto)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PrmTipoDocId).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.PrmTprId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("PrmTPrId");
            entity.Property(e => e.PrmValAlfNum)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.PrmValBaseAlf)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PrmValNumerico).HasColumnType("money");
            entity.Property(e => e.PryNumero)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<RhuTTablaDatosRen>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("RhuT_TablaDatosRen");

            entity.Property(e => e.BitFicArchivo)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.CnRcodigo)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("CnRCodigo");
            entity.Property(e => e.CtoNumero).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EntRut)
                .HasMaxLength(12)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.FldUserCode)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("fld_UserCode");
            entity.Property(e => e.IdFuncionUlt)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.RtaFecVigDesde).HasColumnType("datetime");
            entity.Property(e => e.RtaFecVigHasta).HasColumnType("datetime");
            entity.Property(e => e.RtaValBaseNum).HasColumnType("money");
            entity.Property(e => e.RtaValNumerico).HasColumnType("money");
        });

        modelBuilder.Entity<RhuTTmpFlegAbono>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("RhuT_TmpFLegAbonos");

            entity.Property(e => e.CodOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.FlegMabDiasAdi).HasColumnName("FLegMabDiasAdi");
            entity.Property(e => e.FlegMabDiasDer).HasColumnName("FLegMabDiasDer");
            entity.Property(e => e.FlegMabDiasPro).HasColumnName("FLegMabDiasPro");
            entity.Property(e => e.FlegMabDiasSal).HasColumnName("FLegMabDiasSal");
            entity.Property(e => e.FlegMabPerInicio)
                .HasColumnType("datetime")
                .HasColumnName("FLegMabPerInicio");
            entity.Property(e => e.FlegMabPerTermino)
                .HasColumnType("datetime")
                .HasColumnName("FLegMabPerTermino");
            entity.Property(e => e.PCtoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtoId");
        });

        modelBuilder.Entity<RhutTmpestructura>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("RHUT_TMPESTRUCTURA");

            entity.Property(e => e.PCreId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCreId");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
        });

        modelBuilder.Entity<RneAgrupacion>(entity =>
        {
            entity.HasKey(e => e.Numagp).HasName("RNE_AGRUPACION_CP");

            entity.ToTable("RNE_AGRUPACION");

            entity.Property(e => e.Numagp).HasColumnName("numagp");
            entity.Property(e => e.Estreg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS")
                .HasColumnName("estreg");
            entity.Property(e => e.Fecact)
                .HasMaxLength(14)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS")
                .HasColumnName("fecact");
            entity.Property(e => e.Indblo)
                .HasMaxLength(1)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS")
                .HasColumnName("indblo");
            entity.Property(e => e.Nomagp)
                .HasMaxLength(50)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS")
                .HasColumnName("nomagp");
            entity.Property(e => e.Usuact).HasColumnName("usuact");
        });

        modelBuilder.Entity<RneAgrupacionUsuario>(entity =>
        {
            entity.HasKey(e => new { e.Numusu, e.Numagp }).HasName("RNE_AGRUPACION_USUARIO_CP");

            entity.ToTable("RNE_AGRUPACION_USUARIO");

            entity.Property(e => e.Numusu).HasColumnName("NUMUSU");
            entity.Property(e => e.Numagp).HasColumnName("NUMAGP");
            entity.Property(e => e.Estreg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS")
                .HasColumnName("ESTREG");
            entity.Property(e => e.Fecact)
                .HasMaxLength(14)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS")
                .HasColumnName("FECACT");
            entity.Property(e => e.Usuact).HasColumnName("USUACT");
        });

        modelBuilder.Entity<RneAuditorium>(entity =>
        {
            entity.HasKey(e => new { e.Numrep, e.Numaud }).HasName("RNE_AUDITORIA_CP");

            entity.ToTable("RNE_AUDITORIA");

            entity.Property(e => e.Numrep).HasColumnName("NUMREP");
            entity.Property(e => e.Numaud)
                .ValueGeneratedOnAdd()
                .HasColumnName("NUMAUD");
            entity.Property(e => e.Baseje).HasColumnName("BASEJE");
            entity.Property(e => e.Corenv)
                .HasMaxLength(50)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS")
                .HasColumnName("CORENV");
            entity.Property(e => e.Estreg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS")
                .HasColumnName("ESTREG");
            entity.Property(e => e.Fecact)
                .HasMaxLength(14)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS")
                .HasColumnName("FECACT");
            entity.Property(e => e.Fecaud)
                .HasMaxLength(14)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS")
                .HasColumnName("FECAUD");
            entity.Property(e => e.Ipaddr)
                .HasMaxLength(20)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS")
                .HasColumnName("IPADDR");
            entity.Property(e => e.Numpro).HasColumnName("NUMPRO");
            entity.Property(e => e.Numusu).HasColumnName("NUMUSU");
            entity.Property(e => e.Sensql)
                .UseCollation("Modern_Spanish_CI_AS")
                .HasColumnType("text")
                .HasColumnName("SENSQL");
            entity.Property(e => e.Tipaud)
                .HasMaxLength(1)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS")
                .HasColumnName("TIPAUD");
            entity.Property(e => e.Usuact).HasColumnName("USUACT");
        });

        modelBuilder.Entity<RneBase>(entity =>
        {
            entity.HasKey(e => e.Numbas).HasName("RNE_BASE_CP");

            entity.ToTable("RNE_BASE");

            entity.Property(e => e.Numbas).HasColumnName("NUMBAS");
            entity.Property(e => e.Constr)
                .HasMaxLength(2000)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS")
                .HasColumnName("CONSTR");
            entity.Property(e => e.Cosmax).HasColumnName("COSMAX");
            entity.Property(e => e.Desbas)
                .HasMaxLength(50)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS")
                .HasColumnName("DESBAS");
            entity.Property(e => e.Estreg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS")
                .HasColumnName("ESTREG");
            entity.Property(e => e.Fecact)
                .HasMaxLength(14)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS")
                .HasColumnName("FECACT");
            entity.Property(e => e.Indblo)
                .HasMaxLength(1)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS")
                .HasColumnName("INDBLO");
            entity.Property(e => e.Indcos)
                .HasMaxLength(1)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS")
                .HasColumnName("INDCOS");
            entity.Property(e => e.Indpro)
                .HasMaxLength(1)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS")
                .HasColumnName("INDPRO");
            entity.Property(e => e.Muepla)
                .HasMaxLength(1)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS")
                .HasColumnName("MUEPLA");
            entity.Property(e => e.Nombas)
                .HasMaxLength(50)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS")
                .HasColumnName("NOMBAS");
            entity.Property(e => e.Tipbas)
                .HasMaxLength(1)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS")
                .HasColumnName("TIPBAS");
            entity.Property(e => e.Usapla)
                .HasMaxLength(1)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS")
                .HasColumnName("USAPLA");
            entity.Property(e => e.Usuact).HasColumnName("USUACT");
        });

        modelBuilder.Entity<RneBaseHorario>(entity =>
        {
            entity.HasKey(e => new { e.Numhor, e.Numbas });

            entity.ToTable("RNE_BASE_HORARIO");

            entity.Property(e => e.Numhor)
                .ValueGeneratedOnAdd()
                .HasColumnName("NUMHOR");
            entity.Property(e => e.Numbas).HasColumnName("NUMBAS");
            entity.Property(e => e.Coshor).HasColumnName("COSHOR");
            entity.Property(e => e.Deshor)
                .HasMaxLength(50)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS")
                .HasColumnName("DESHOR");
            entity.Property(e => e.Estreg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS")
                .HasColumnName("ESTREG");
            entity.Property(e => e.Fecact)
                .HasMaxLength(14)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS")
                .HasColumnName("FECACT");
            entity.Property(e => e.Fecini)
                .HasMaxLength(8)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS")
                .HasColumnName("FECINI");
            entity.Property(e => e.Fecter)
                .HasMaxLength(8)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS")
                .HasColumnName("FECTER");
            entity.Property(e => e.Horini)
                .HasMaxLength(6)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS")
                .HasColumnName("HORINI");
            entity.Property(e => e.Horter)
                .HasMaxLength(6)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS")
                .HasColumnName("HORTER");
            entity.Property(e => e.Indblo)
                .HasMaxLength(1)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS")
                .HasColumnName("INDBLO");
            entity.Property(e => e.Usuact).HasColumnName("USUACT");
        });

        modelBuilder.Entity<RneBaseReporte>(entity =>
        {
            entity.HasKey(e => new { e.Numrep, e.Numbas });

            entity.ToTable("RNE_BASE_REPORTE");

            entity.Property(e => e.Numrep).HasColumnName("NUMREP");
            entity.Property(e => e.Numbas).HasColumnName("NUMBAS");
            entity.Property(e => e.Estreg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS")
                .HasColumnName("ESTREG");
            entity.Property(e => e.Fecact)
                .HasMaxLength(14)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS")
                .HasColumnName("FECACT");
            entity.Property(e => e.Usuact).HasColumnName("USUACT");
        });

        modelBuilder.Entity<RneColumna>(entity =>
        {
            entity.HasKey(e => new { e.Numcol, e.Numrep }).HasName("RNE_COLUMNA_CP");

            entity.ToTable("RNE_COLUMNA");

            entity.Property(e => e.Numcol)
                .ValueGeneratedOnAdd()
                .HasColumnName("NUMCOL");
            entity.Property(e => e.Numrep).HasColumnName("NUMREP");
            entity.Property(e => e.Alicol)
                .HasMaxLength(1)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS")
                .HasColumnName("ALICOL");
            entity.Property(e => e.Alitit)
                .HasMaxLength(1)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS")
                .HasColumnName("ALITIT");
            entity.Property(e => e.Colvis)
                .HasMaxLength(1)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS")
                .HasColumnName("COLVIS");
            entity.Property(e => e.Descol)
                .HasMaxLength(50)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS")
                .HasColumnName("DESCOL");
            entity.Property(e => e.Estreg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS")
                .HasColumnName("ESTREG");
            entity.Property(e => e.Fecact)
                .HasMaxLength(14)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS")
                .HasColumnName("FECACT");
            entity.Property(e => e.Fmtcol)
                .HasMaxLength(1)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS")
                .HasColumnName("FMTCOL");
            entity.Property(e => e.Indtot)
                .HasMaxLength(1)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS")
                .HasColumnName("INDTOT");
            entity.Property(e => e.Lencol).HasColumnName("LENCOL");
            entity.Property(e => e.Nomcol)
                .HasMaxLength(2000)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS")
                .HasColumnName("NOMCOL");
            entity.Property(e => e.Numtab).HasColumnName("NUMTAB");
            entity.Property(e => e.Ordcol).HasColumnName("ORDCOL");
            entity.Property(e => e.Perfil)
                .HasMaxLength(1)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS")
                .HasColumnName("PERFIL");
            entity.Property(e => e.Sensql)
                .HasMaxLength(2000)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS")
                .HasColumnName("SENSQL");
            entity.Property(e => e.Tipcol)
                .HasMaxLength(1)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS")
                .HasColumnName("TIPCOL");
            entity.Property(e => e.Tipdat)
                .HasMaxLength(1)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS")
                .HasColumnName("TIPDAT");
            entity.Property(e => e.Usuact).HasColumnName("USUACT");
        });

        modelBuilder.Entity<RneColumnaUsuario>(entity =>
        {
            entity.HasKey(e => new { e.Numrep, e.Numcus }).HasName("RNE_COLUMNA_USUARIO_CP");

            entity.ToTable("RNE_COLUMNA_USUARIO");

            entity.Property(e => e.Numrep).HasColumnName("NUMREP");
            entity.Property(e => e.Numcus)
                .ValueGeneratedOnAdd()
                .HasColumnName("NUMCUS");
            entity.Property(e => e.Alicol)
                .HasMaxLength(1)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS")
                .HasColumnName("ALICOL");
            entity.Property(e => e.Alitit)
                .HasMaxLength(1)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS")
                .HasColumnName("ALITIT");
            entity.Property(e => e.Descol)
                .HasMaxLength(50)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS")
                .HasColumnName("DESCOL");
            entity.Property(e => e.Estreg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS")
                .HasColumnName("ESTREG");
            entity.Property(e => e.Fecact)
                .HasMaxLength(14)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS")
                .HasColumnName("FECACT");
            entity.Property(e => e.Fmtcol)
                .HasMaxLength(1)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS")
                .HasColumnName("FMTCOL");
            entity.Property(e => e.Indtot)
                .HasMaxLength(1)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS")
                .HasColumnName("INDTOT");
            entity.Property(e => e.Lencol).HasColumnName("LENCOL");
            entity.Property(e => e.Numcol).HasColumnName("NUMCOL");
            entity.Property(e => e.Ordcol).HasColumnName("ORDCOL");
            entity.Property(e => e.Sensql)
                .HasMaxLength(2000)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS")
                .HasColumnName("SENSQL");
            entity.Property(e => e.Tipcol)
                .HasMaxLength(1)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS")
                .HasColumnName("TIPCOL");
            entity.Property(e => e.Usuact).HasColumnName("USUACT");
        });

        modelBuilder.Entity<RneConfiguracion>(entity =>
        {
            entity.HasKey(e => e.Numcnf).HasName("RNE_CONFIGURACION_CP");

            entity.ToTable("RNE_CONFIGURACION");

            entity.Property(e => e.Numcnf)
                .ValueGeneratedNever()
                .HasColumnName("NUMCNF");
            entity.Property(e => e.Basaut).HasColumnName("BASAUT");
            entity.Property(e => e.Corele)
                .HasMaxLength(50)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS")
                .HasColumnName("CORELE");
            entity.Property(e => e.Ctacor)
                .HasMaxLength(50)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS")
                .HasColumnName("CTACOR");
            entity.Property(e => e.Estreg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS")
                .HasColumnName("ESTREG");
            entity.Property(e => e.Fecact)
                .HasMaxLength(14)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS")
                .HasColumnName("FECACT");
            entity.Property(e => e.Maxrae).HasColumnName("MAXRAE");
            entity.Property(e => e.Maxrag).HasColumnName("MAXRAG");
            entity.Property(e => e.Maxreg).HasColumnName("MAXREG");
            entity.Property(e => e.Pascor)
                .HasMaxLength(50)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS")
                .HasColumnName("PASCOR");
            entity.Property(e => e.Regpag).HasColumnName("REGPAG");
            entity.Property(e => e.Repmin).HasColumnName("REPMIN");
            entity.Property(e => e.Sercor)
                .HasMaxLength(50)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS")
                .HasColumnName("SERCOR");
            entity.Property(e => e.Sisaut)
                .HasMaxLength(1)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS")
                .HasColumnName("SISAUT");
            entity.Property(e => e.Tamcom).HasColumnName("TAMCOM");
            entity.Property(e => e.Tipdur)
                .HasMaxLength(1)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS")
                .HasColumnName("TIPDUR");
            entity.Property(e => e.Usacor)
                .HasMaxLength(1)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS")
                .HasColumnName("USACOR");
            entity.Property(e => e.Usuact).HasColumnName("USUACT");
            entity.Property(e => e.Verdba).HasColumnName("VERDBA");
        });

        modelBuilder.Entity<RneConsultum>(entity =>
        {
            entity.HasKey(e => new { e.Numrep, e.Numcon }).HasName("RNE_CONSULTA_CP");

            entity.ToTable("RNE_CONSULTA");

            entity.Property(e => e.Numrep).HasColumnName("NUMREP");
            entity.Property(e => e.Numcon)
                .ValueGeneratedOnAdd()
                .HasColumnName("NUMCON");
            entity.Property(e => e.Estreg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS")
                .HasColumnName("ESTREG");
            entity.Property(e => e.Fecact)
                .HasMaxLength(14)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS")
                .HasColumnName("FECACT");
            entity.Property(e => e.Nomcon)
                .HasMaxLength(50)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS")
                .HasColumnName("NOMCON");
            entity.Property(e => e.Sensql)
                .UseCollation("Modern_Spanish_CI_AS")
                .HasColumnType("text")
                .HasColumnName("SENSQL");
            entity.Property(e => e.Usuact).HasColumnName("USUACT");
        });

        modelBuilder.Entity<RneFiltro>(entity =>
        {
            entity.HasKey(e => new { e.Numfil, e.Numrep }).HasName("RNE_FILTRO_CP");

            entity.ToTable("RNE_FILTRO");

            entity.Property(e => e.Numfil)
                .ValueGeneratedOnAdd()
                .HasColumnName("NUMFIL");
            entity.Property(e => e.Numrep).HasColumnName("NUMREP");
            entity.Property(e => e.Estreg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS")
                .HasColumnName("ESTREG");
            entity.Property(e => e.Fecact)
                .HasMaxLength(14)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS")
                .HasColumnName("FECACT");
            entity.Property(e => e.Filneg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS")
                .HasColumnName("FILNEG");
            entity.Property(e => e.Filobl)
                .HasMaxLength(1)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS")
                .HasColumnName("FILOBL");
            entity.Property(e => e.Filvis)
                .HasMaxLength(1)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS")
                .HasColumnName("FILVIS");
            entity.Property(e => e.Idefil)
                .HasMaxLength(20)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS")
                .HasColumnName("IDEFIL");
            entity.Property(e => e.Indfmt)
                .HasMaxLength(1)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS")
                .HasColumnName("INDFMT");
            entity.Property(e => e.Indhor)
                .HasMaxLength(1)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS")
                .HasColumnName("INDHOR");
            entity.Property(e => e.Indseg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS")
                .HasColumnName("INDSEG");
            entity.Property(e => e.Nompar)
                .HasMaxLength(20)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS")
                .HasColumnName("NOMPAR");
            entity.Property(e => e.Numcol).HasColumnName("NUMCOL");
            entity.Property(e => e.Ordfil).HasColumnName("ORDFIL");
            entity.Property(e => e.Tdapar)
                .HasMaxLength(1)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS")
                .HasColumnName("TDAPAR");
            entity.Property(e => e.Tipcon)
                .HasMaxLength(1)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS")
                .HasColumnName("TIPCON");
            entity.Property(e => e.Tipfil)
                .HasMaxLength(1)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS")
                .HasColumnName("TIPFIL");
            entity.Property(e => e.Usuact).HasColumnName("USUACT");
        });

        modelBuilder.Entity<RneFiltroProgramacion>(entity =>
        {
            entity.HasKey(e => new { e.Numfil, e.Numrep, e.Numpro }).HasName("RNE_FILTRO_PROGRAMCION_CP");

            entity.ToTable("RNE_FILTRO_PROGRAMACION");

            entity.Property(e => e.Numfil).HasColumnName("NUMFIL");
            entity.Property(e => e.Numrep).HasColumnName("NUMREP");
            entity.Property(e => e.Numpro).HasColumnName("NUMPRO");
            entity.Property(e => e.Estreg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS")
                .HasColumnName("ESTREG");
            entity.Property(e => e.Fecact)
                .HasMaxLength(14)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS")
                .HasColumnName("FECACT");
            entity.Property(e => e.Usuact).HasColumnName("USUACT");
        });

        modelBuilder.Entity<RneFtp>(entity =>
        {
            entity.HasKey(e => e.Numftp).HasName("RNE_FTP_CP");

            entity.ToTable("RNE_FTP");

            entity.Property(e => e.Numftp).HasColumnName("NUMFTP");
            entity.Property(e => e.Cmdini)
                .HasMaxLength(100)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS")
                .HasColumnName("CMDINI");
            entity.Property(e => e.Desftp)
                .HasMaxLength(50)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS")
                .HasColumnName("DESFTP");
            entity.Property(e => e.Dirftp)
                .HasMaxLength(100)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS")
                .HasColumnName("DIRFTP");
            entity.Property(e => e.Estreg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS")
                .HasColumnName("ESTREG");
            entity.Property(e => e.Fecact)
                .HasMaxLength(14)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS")
                .HasColumnName("FECACT");
            entity.Property(e => e.Indblo)
                .HasMaxLength(1)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS")
                .HasColumnName("INDBLO");
            entity.Property(e => e.Indini)
                .HasMaxLength(1)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS")
                .HasColumnName("INDINI");
            entity.Property(e => e.Indtra)
                .HasMaxLength(1)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS")
                .HasColumnName("INDTRA");
            entity.Property(e => e.Numpue).HasColumnName("NUMPUE");
            entity.Property(e => e.Passwo)
                .HasMaxLength(50)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS")
                .HasColumnName("PASSWO");
            entity.Property(e => e.Userna)
                .HasMaxLength(50)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS")
                .HasColumnName("USERNA");
            entity.Property(e => e.Usuact).HasColumnName("USUACT");
        });

        modelBuilder.Entity<RneFtpUsuario>(entity =>
        {
            entity.HasKey(e => new { e.Numusu, e.Numftp }).HasName("RNE_FTP_USUARIO_CP");

            entity.ToTable("RNE_FTP_USUARIO");

            entity.Property(e => e.Numusu).HasColumnName("NUMUSU");
            entity.Property(e => e.Numftp).HasColumnName("NUMFTP");
            entity.Property(e => e.Estreg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS")
                .HasColumnName("ESTREG");
            entity.Property(e => e.Fecact)
                .HasMaxLength(14)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS")
                .HasColumnName("FECACT");
            entity.Property(e => e.Usuact).HasColumnName("USUACT");
        });

        modelBuilder.Entity<RneGrupo>(entity =>
        {
            entity.HasKey(e => new { e.Numrep, e.Numcol }).HasName("RNE_GRUPO_CP");

            entity.ToTable("RNE_GRUPO");

            entity.Property(e => e.Numrep).HasColumnName("NUMREP");
            entity.Property(e => e.Numcol).HasColumnName("NUMCOL");
            entity.Property(e => e.Estreg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS")
                .HasColumnName("ESTREG");
            entity.Property(e => e.Fecact)
                .HasMaxLength(14)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS")
                .HasColumnName("FECACT");
            entity.Property(e => e.Ordgru).HasColumnName("ORDGRU");
            entity.Property(e => e.Usuact).HasColumnName("USUACT");
        });

        modelBuilder.Entity<RneOrden>(entity =>
        {
            entity.HasKey(e => new { e.Numrep, e.Numcol }).HasName("RNE_ORDEN_CP");

            entity.ToTable("RNE_ORDEN");

            entity.Property(e => e.Numrep).HasColumnName("NUMREP");
            entity.Property(e => e.Numcol).HasColumnName("NUMCOL");
            entity.Property(e => e.Estreg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS")
                .HasColumnName("ESTREG");
            entity.Property(e => e.Fecact)
                .HasMaxLength(14)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS")
                .HasColumnName("FECACT");
            entity.Property(e => e.Ordcol).HasColumnName("ORDCOL");
            entity.Property(e => e.Tipord)
                .HasMaxLength(1)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS")
                .HasColumnName("TIPORD");
            entity.Property(e => e.Usuact).HasColumnName("USUACT");
        });

        modelBuilder.Entity<RnePagina>(entity =>
        {
            entity.HasKey(e => e.Numpag).HasName("RNE_PAGINA_CP");

            entity.ToTable("RNE_PAGINA");

            entity.Property(e => e.Numpag).HasColumnName("NUMPAG");
            entity.Property(e => e.Despag)
                .HasMaxLength(50)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS")
                .HasColumnName("DESPAG");
            entity.Property(e => e.Dirurl)
                .HasMaxLength(100)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS")
                .HasColumnName("DIRURL");
            entity.Property(e => e.Estreg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS")
                .HasColumnName("ESTREG");
            entity.Property(e => e.Fecact)
                .HasMaxLength(14)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS")
                .HasColumnName("FECACT");
            entity.Property(e => e.Usuact).HasColumnName("USUACT");
        });

        modelBuilder.Entity<RnePerfil>(entity =>
        {
            entity.HasKey(e => e.Numpfi).HasName("RNE_PERFIL_CP");

            entity.ToTable("RNE_PERFIL");

            entity.Property(e => e.Numpfi).HasColumnName("NUMPFI");
            entity.Property(e => e.Despfi)
                .HasMaxLength(50)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS")
                .HasColumnName("DESPFI");
            entity.Property(e => e.Estreg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS")
                .HasColumnName("ESTREG");
            entity.Property(e => e.Fecact)
                .HasMaxLength(14)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS")
                .HasColumnName("FECACT");
            entity.Property(e => e.Indblo)
                .HasMaxLength(1)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS")
                .HasColumnName("INDBLO");
            entity.Property(e => e.Usuact).HasColumnName("USUACT");
        });

        modelBuilder.Entity<RnePerfilPagina>(entity =>
        {
            entity.HasKey(e => new { e.Numpag, e.Numpfi }).HasName("RNE_PERFIL_PAGINA_CP");

            entity.ToTable("RNE_PERFIL_PAGINA");

            entity.Property(e => e.Numpag).HasColumnName("NUMPAG");
            entity.Property(e => e.Numpfi).HasColumnName("NUMPFI");
            entity.Property(e => e.Estreg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS")
                .HasColumnName("ESTREG");
            entity.Property(e => e.Fecact)
                .HasMaxLength(14)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS")
                .HasColumnName("FECACT");
            entity.Property(e => e.Usuact).HasColumnName("USUACT");
        });

        modelBuilder.Entity<RneProgramacion>(entity =>
        {
            entity.HasKey(e => new { e.Numpro, e.Numrep }).HasName("RNE_PROGRAMACION_CP");

            entity.ToTable("RNE_PROGRAMACION");

            entity.Property(e => e.Numpro)
                .ValueGeneratedOnAdd()
                .HasColumnName("NUMPRO");
            entity.Property(e => e.Numrep).HasColumnName("NUMREP");
            entity.Property(e => e.Baseje).HasColumnName("BASEJE");
            entity.Property(e => e.Coravi)
                .HasMaxLength(50)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS")
                .HasColumnName("CORAVI");
            entity.Property(e => e.Corenv)
                .HasMaxLength(50)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS")
                .HasColumnName("CORENV");
            entity.Property(e => e.Estpro)
                .HasMaxLength(1)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS")
                .HasColumnName("ESTPRO");
            entity.Property(e => e.Estreg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS")
                .HasColumnName("ESTREG");
            entity.Property(e => e.Fecact)
                .HasMaxLength(14)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS")
                .HasColumnName("FECACT");
            entity.Property(e => e.Feceli)
                .HasMaxLength(14)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS")
                .HasColumnName("FECELI");
            entity.Property(e => e.Fecini)
                .HasMaxLength(14)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS")
                .HasColumnName("FECINI");
            entity.Property(e => e.Fecpro)
                .HasMaxLength(14)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS")
                .HasColumnName("FECPRO");
            entity.Property(e => e.Fecter)
                .HasMaxLength(14)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS")
                .HasColumnName("FECTER");
            entity.Property(e => e.Indavi)
                .HasMaxLength(1)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS")
                .HasColumnName("INDAVI");
            entity.Property(e => e.Indcom)
                .HasMaxLength(1)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS")
                .HasColumnName("INDCOM");
            entity.Property(e => e.Indeli)
                .HasMaxLength(1)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS")
                .HasColumnName("INDELI");
            entity.Property(e => e.Indenv)
                .HasMaxLength(1)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS")
                .HasColumnName("INDENV");
            entity.Property(e => e.Indftp)
                .HasMaxLength(1)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS")
                .HasColumnName("INDFTP");
            entity.Property(e => e.Indicr)
                .HasMaxLength(1)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS")
                .HasColumnName("INDICR");
            entity.Property(e => e.Indtra)
                .HasMaxLength(1)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS")
                .HasColumnName("INDTRA");
            entity.Property(e => e.Ipaddr)
                .HasMaxLength(20)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS")
                .HasColumnName("IPADDR");
            entity.Property(e => e.Lengua)
                .HasMaxLength(2)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS")
                .HasColumnName("LENGUA");
            entity.Property(e => e.Maxreg).HasColumnName("MAXREG");
            entity.Property(e => e.Minrep).HasColumnName("MINREP");
            entity.Property(e => e.Msgpro)
                .HasMaxLength(250)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS")
                .HasColumnName("MSGPRO");
            entity.Property(e => e.Nomtra)
                .HasMaxLength(30)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS")
                .HasColumnName("NOMTRA");
            entity.Property(e => e.Numftp).HasColumnName("NUMFTP");
            entity.Property(e => e.Numrpt).HasColumnName("NUMRPT");
            entity.Property(e => e.Numusu).HasColumnName("NUMUSU");
            entity.Property(e => e.Regfil).HasColumnName("REGFIL");
            entity.Property(e => e.Sepcol)
                .HasMaxLength(10)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS")
                .HasColumnName("SEPCOL");
            entity.Property(e => e.Serpro)
                .HasMaxLength(30)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS")
                .HasColumnName("SERPRO");
            entity.Property(e => e.Tamfil).HasColumnName("TAMFIL");
            entity.Property(e => e.Tiepro).HasColumnName("TIEPRO");
            entity.Property(e => e.Tipdur)
                .HasMaxLength(1)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS")
                .HasColumnName("TIPDUR");
            entity.Property(e => e.Tipfil)
                .HasMaxLength(1)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS")
                .HasColumnName("TIPFIL");
            entity.Property(e => e.Tipnom)
                .HasMaxLength(1)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS")
                .HasColumnName("TIPNOM");
            entity.Property(e => e.Tiprep)
                .HasMaxLength(1)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS")
                .HasColumnName("TIPREP");
            entity.Property(e => e.Tipsep)
                .HasMaxLength(1)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS")
                .HasColumnName("TIPSEP");
            entity.Property(e => e.Usuact).HasColumnName("USUACT");
        });

        modelBuilder.Entity<RneRelacion>(entity =>
        {
            entity.HasKey(e => e.Numrel).HasName("RNE_RELACION_CP");

            entity.ToTable("RNE_RELACION");

            entity.Property(e => e.Numrel).HasColumnName("NUMREL");
            entity.Property(e => e.Estreg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS")
                .HasColumnName("ESTREG");
            entity.Property(e => e.Fecact)
                .HasMaxLength(14)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS")
                .HasColumnName("FECACT");
            entity.Property(e => e.Indblo)
                .HasMaxLength(1)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS")
                .HasColumnName("INDBLO");
            entity.Property(e => e.Nomrel)
                .HasMaxLength(50)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS")
                .HasColumnName("NOMREL");
            entity.Property(e => e.Numbas).HasColumnName("NUMBAS");
            entity.Property(e => e.Usuact).HasColumnName("USUACT");
        });

        modelBuilder.Entity<RneRelacionTabla>(entity =>
        {
            entity.HasKey(e => new { e.Numrel, e.Nomtab }).HasName("RNE_RELACION_TABLA_CP");

            entity.ToTable("RNE_RELACION_TABLA");

            entity.Property(e => e.Numrel).HasColumnName("NUMREL");
            entity.Property(e => e.Nomtab)
                .HasMaxLength(50)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS")
                .HasColumnName("NOMTAB");
            entity.Property(e => e.Estreg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS")
                .HasColumnName("ESTREG");
            entity.Property(e => e.Fecact)
                .HasMaxLength(14)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS")
                .HasColumnName("FECACT");
            entity.Property(e => e.Indblo)
                .HasMaxLength(1)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS")
                .HasColumnName("INDBLO");
            entity.Property(e => e.Oridat)
                .HasMaxLength(1)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS")
                .HasColumnName("ORIDAT");
            entity.Property(e => e.Usuact).HasColumnName("USUACT");
        });

        modelBuilder.Entity<RneRelacionUsuario>(entity =>
        {
            entity.HasKey(e => new { e.Numusu, e.Numrel }).HasName("RNE_RELACION_USUARIO_CP");

            entity.ToTable("RNE_RELACION_USUARIO");

            entity.Property(e => e.Numusu).HasColumnName("NUMUSU");
            entity.Property(e => e.Numrel).HasColumnName("NUMREL");
            entity.Property(e => e.Estreg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS")
                .HasColumnName("ESTREG");
            entity.Property(e => e.Fecact)
                .HasMaxLength(14)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS")
                .HasColumnName("FECACT");
            entity.Property(e => e.Usuact).HasColumnName("USUACT");
        });

        modelBuilder.Entity<RneReporte>(entity =>
        {
            entity.HasKey(e => e.Numrep).HasName("RNE_REPORTE_CP");

            entity.ToTable("RNE_REPORTE");

            entity.Property(e => e.Numrep).HasColumnName("NUMREP");
            entity.Property(e => e.Basdef).HasColumnName("BASDEF");
            entity.Property(e => e.Baseje).HasColumnName("BASEJE");
            entity.Property(e => e.Cosrep).HasColumnName("COSREP");
            entity.Property(e => e.Estreg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS")
                .HasColumnName("ESTREG");
            entity.Property(e => e.Estrep)
                .HasMaxLength(50)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS")
                .HasColumnName("ESTREP");
            entity.Property(e => e.Fecact)
                .HasMaxLength(14)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS")
                .HasColumnName("FECACT");
            entity.Property(e => e.Fecuej)
                .HasMaxLength(50)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS")
                .HasColumnName("FECUEJ");
            entity.Property(e => e.Iderep)
                .HasMaxLength(20)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS")
                .HasColumnName("IDEREP");
            entity.Property(e => e.Nomrep)
                .HasMaxLength(50)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS")
                .HasColumnName("NOMREP");
            entity.Property(e => e.Numagp).HasColumnName("NUMAGP");
            entity.Property(e => e.Numeje).HasColumnName("NUMEJE");
            entity.Property(e => e.Numusu).HasColumnName("NUMUSU");
            entity.Property(e => e.Oridat)
                .HasMaxLength(1)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS")
                .HasColumnName("ORIDAT");
            entity.Property(e => e.Repbas).HasColumnName("REPBAS");
            entity.Property(e => e.Reppub)
                .HasMaxLength(1)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS")
                .HasColumnName("REPPUB");
            entity.Property(e => e.Tipgen)
                .HasMaxLength(1)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS")
                .HasColumnName("TIPGEN");
            entity.Property(e => e.Tiprep)
                .HasMaxLength(1)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS")
                .HasColumnName("TIPREP");
            entity.Property(e => e.Usacos)
                .HasMaxLength(1)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS")
                .HasColumnName("USACOS");
            entity.Property(e => e.Usuact).HasColumnName("USUACT");
        });

        modelBuilder.Entity<RneRepositorio>(entity =>
        {
            entity.HasKey(e => e.Numrpt).HasName("RNE_REPOSITORIO_CP");

            entity.ToTable("RNE_REPOSITORIO");

            entity.Property(e => e.Numrpt).HasColumnName("NUMRPT");
            entity.Property(e => e.Desrpt)
                .HasMaxLength(50)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS")
                .HasColumnName("DESRPT");
            entity.Property(e => e.Estreg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS")
                .HasColumnName("ESTREG");
            entity.Property(e => e.Fecact)
                .HasMaxLength(14)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS")
                .HasColumnName("FECACT");
            entity.Property(e => e.Fisbit)
                .HasMaxLength(50)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS")
                .HasColumnName("FISBIT");
            entity.Property(e => e.Fisfil)
                .HasMaxLength(50)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS")
                .HasColumnName("FISFIL");
            entity.Property(e => e.Usuact).HasColumnName("USUACT");
            entity.Property(e => e.Virbit)
                .HasMaxLength(50)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS")
                .HasColumnName("VIRBIT");
            entity.Property(e => e.Virfil)
                .HasMaxLength(50)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS")
                .HasColumnName("VIRFIL");
        });

        modelBuilder.Entity<RneTabla>(entity =>
        {
            entity.HasKey(e => new { e.Numtab, e.Numrep }).HasName("RNE_TABLA_CP");

            entity.ToTable("RNE_TABLA");

            entity.Property(e => e.Numtab)
                .ValueGeneratedOnAdd()
                .HasColumnName("NUMTAB");
            entity.Property(e => e.Numrep).HasColumnName("NUMREP");
            entity.Property(e => e.Estreg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS")
                .HasColumnName("ESTREG");
            entity.Property(e => e.Fecact)
                .HasMaxLength(14)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS")
                .HasColumnName("FECACT");
            entity.Property(e => e.Idetab)
                .HasMaxLength(1)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS")
                .HasColumnName("IDETAB");
            entity.Property(e => e.Nomtab)
                .HasMaxLength(50)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS")
                .HasColumnName("NOMTAB");
            entity.Property(e => e.Ordtab).HasColumnName("ORDTAB");
            entity.Property(e => e.Sensql)
                .HasMaxLength(5000)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS")
                .HasColumnName("SENSQL");
            entity.Property(e => e.Tiptab)
                .HasMaxLength(1)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS")
                .HasColumnName("TIPTAB");
            entity.Property(e => e.Usuact).HasColumnName("USUACT");
        });

        modelBuilder.Entity<RneUsuario>(entity =>
        {
            entity.HasKey(e => e.Numusu).HasName("rne_usuario_CP");

            entity.ToTable("RNE_USUARIO");

            entity.Property(e => e.Numusu).HasColumnName("NUMUSU");
            entity.Property(e => e.Apemat)
                .HasMaxLength(50)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS")
                .HasColumnName("APEMAT");
            entity.Property(e => e.Apepat)
                .HasMaxLength(50)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS")
                .HasColumnName("APEPAT");
            entity.Property(e => e.Corele)
                .HasMaxLength(50)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS")
                .HasColumnName("CORELE");
            entity.Property(e => e.Estreg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS")
                .HasColumnName("ESTREG");
            entity.Property(e => e.Fecact)
                .HasMaxLength(14)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS")
                .HasColumnName("FECACT");
            entity.Property(e => e.Indblo)
                .HasMaxLength(1)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS")
                .HasColumnName("INDBLO");
            entity.Property(e => e.Indcor)
                .HasMaxLength(1)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS")
                .HasColumnName("INDCOR");
            entity.Property(e => e.Nombre)
                .HasMaxLength(50)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS")
                .HasColumnName("NOMBRE");
            entity.Property(e => e.Passwo)
                .HasMaxLength(50)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS")
                .HasColumnName("PASSWO");
            entity.Property(e => e.Sadmd5)
                .HasMaxLength(256)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS")
                .HasColumnName("SADMD5");
            entity.Property(e => e.Servad)
                .HasMaxLength(256)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS")
                .HasColumnName("SERVAD");
            entity.Property(e => e.Userna)
                .HasMaxLength(50)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS")
                .HasColumnName("USERNA");
            entity.Property(e => e.Usuact).HasColumnName("USUACT");
        });

        modelBuilder.Entity<RneUsuarioAgrupacion>(entity =>
        {
            entity.HasKey(e => new { e.Numusu, e.Numagp }).HasName("RNE_USUARIO_AGRUPACION_CP");

            entity.ToTable("RNE_USUARIO_AGRUPACION");

            entity.Property(e => e.Numusu).HasColumnName("NUMUSU");
            entity.Property(e => e.Numagp).HasColumnName("NUMAGP");
            entity.Property(e => e.Estreg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS")
                .HasColumnName("ESTREG");
            entity.Property(e => e.Fecact)
                .HasMaxLength(14)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS")
                .HasColumnName("FECACT");
            entity.Property(e => e.Usuact).HasColumnName("USUACT");
        });

        modelBuilder.Entity<RneUsuarioPerfil>(entity =>
        {
            entity.HasKey(e => new { e.Numusu, e.Numpfi }).HasName("RNE_USUARIO_PERFIL_CP");

            entity.ToTable("RNE_USUARIO_PERFIL");

            entity.Property(e => e.Numusu).HasColumnName("NUMUSU");
            entity.Property(e => e.Numpfi).HasColumnName("NUMPFI");
            entity.Property(e => e.Estreg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS")
                .HasColumnName("ESTREG");
            entity.Property(e => e.Fecact)
                .HasMaxLength(14)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS")
                .HasColumnName("FECACT");
            entity.Property(e => e.Usuact).HasColumnName("USUACT");
        });

        modelBuilder.Entity<RneValor>(entity =>
        {
            entity.HasKey(e => new { e.Numfil, e.Numrep, e.Numpro, e.Numval }).HasName("RNE_VALOR_CP");

            entity.ToTable("RNE_VALOR");

            entity.Property(e => e.Numfil).HasColumnName("NUMFIL");
            entity.Property(e => e.Numrep).HasColumnName("NUMREP");
            entity.Property(e => e.Numpro).HasColumnName("NUMPRO");
            entity.Property(e => e.Numval)
                .ValueGeneratedOnAdd()
                .HasColumnName("NUMVAL");
            entity.Property(e => e.Estreg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS")
                .HasColumnName("ESTREG");
            entity.Property(e => e.Fecact)
                .HasMaxLength(14)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS")
                .HasColumnName("FECACT");
            entity.Property(e => e.Numcol).HasColumnName("NUMCOL");
            entity.Property(e => e.Sensql)
                .HasMaxLength(2000)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS")
                .HasColumnName("SENSQL");
            entity.Property(e => e.Usuact).HasColumnName("USUACT");
            entity.Property(e => e.Vinfec)
                .HasMaxLength(14)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS")
                .HasColumnName("VINFEC");
            entity.Property(e => e.Vinnum).HasColumnName("VINNUM");
            entity.Property(e => e.Vintex)
                .HasMaxLength(50)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS")
                .HasColumnName("VINTEX");
            entity.Property(e => e.Vtefec)
                .HasMaxLength(14)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS")
                .HasColumnName("VTEFEC");
            entity.Property(e => e.Vtenum).HasColumnName("VTENUM");
            entity.Property(e => e.Vtetex)
                .HasMaxLength(50)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS")
                .HasColumnName("VTETEX");
        });

        modelBuilder.Entity<SysSequence>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("SYS_SEQUENCES");

            entity.Property(e => e.Name)
                .HasMaxLength(30)
                .IsUnicode(false)
                .HasColumnName("NAME");
            entity.Property(e => e.Value)
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("VALUE");
        });

        modelBuilder.Entity<TabSdoVacTmp>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("TabSdoVacTmp");

            entity.Property(e => e.AuxEmpresa)
                .HasMaxLength(120)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.CtoId).HasColumnType("numeric(18, 0)");
            entity.Property(e => e.CtoNumero).HasColumnType("numeric(18, 0)");
            entity.Property(e => e.EntRazonSocial)
                .HasMaxLength(120)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EntRut)
                .HasMaxLength(12)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.FlegDatFecBase)
                .HasColumnType("datetime")
                .HasColumnName("FLegDatFecBase");
            entity.Property(e => e.FlegDefDiasBase).HasColumnName("FLegDefDiasBase");
            entity.Property(e => e.FlegMabDiasPro).HasColumnName("FLegMabDiasPro");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("pEmpId");
        });

        modelBuilder.Entity<TesTArchivoFormato>(entity =>
        {
            entity.HasKey(e => e.FrmCbaId).HasName("FK_TesI_ArchivoFormato_I01");

            entity.ToTable("TesT_ArchivoFormato");

            entity.HasIndex(e => new { e.InstCod, e.FrmFormato }, "TesI_ArchivoFormato_I01").IsUnique();

            entity.Property(e => e.FrmCbaId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.FrmFormato)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
        });

        modelBuilder.Entity<TesTArchivoNomina>(entity =>
        {
            entity.HasKey(e => new { e.PFrmCbaId, e.TipoRegistro, e.Secuencia }).HasName("TesI_ArchivoNomina_PK");

            entity.ToTable("TesT_ArchivoNomina");

            entity.Property(e => e.PFrmCbaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pFrmCbaId");
            entity.Property(e => e.IndAtributoControl)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.IndComparacion)
                .HasMaxLength(2)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PFormatoFechaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pFormatoFechaId");
            entity.Property(e => e.ValorPorOmision)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<TesTBitacoraCheque>(entity =>
        {
            entity.HasKey(e => new { e.PEmpId, e.PCtaCteBcoId, e.TdoId, e.MovTesNumero, e.MovTesEstado }).HasName("TesI_BitacoraCheque_PK");

            entity.ToTable("TesT_BitacoraCheque");

            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PCtaCteBcoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtaCteBcoId");
            entity.Property(e => e.MovTesNumero)
                .HasMaxLength(25)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.MovTesFecEstado).HasColumnType("datetime");
            entity.Property(e => e.MovTesFecVenc).HasColumnType("datetime");
            entity.Property(e => e.MovTesGlosa)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PCabOpeId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCabOpeId");
            entity.Property(e => e.PCtaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtaId");
            entity.Property(e => e.PMovTesId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMovTesId");
        });

        modelBuilder.Entity<TesTBitacoraReqPago>(entity =>
        {
            entity.HasKey(e => e.BitRpid).HasName("TesI_BitacoraReqPago_PK");

            entity.ToTable("TesT_BitacoraReqPago");

            entity.HasIndex(e => new { e.IdFuncionalidad, e.BitRpidentificador }, "TesI_BitacoraReqPago_I01").HasFillFactor(90);

            entity.Property(e => e.BitRpid)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("BitRPId");
            entity.Property(e => e.BitRpfecha)
                .HasColumnType("datetime")
                .HasColumnName("BitRPFecha");
            entity.Property(e => e.BitRpglosa)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("BitRPGlosa");
            entity.Property(e => e.BitRpglosaCampoMod)
                .HasMaxLength(120)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("BitRPGlosaCampoMod");
            entity.Property(e => e.BitRpidentificador)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("BitRPIdentificador");
            entity.Property(e => e.BitRpmontoAntiguo).HasColumnName("BitRPMontoAntiguo");
            entity.Property(e => e.BitRpmontoNuevo).HasColumnName("BitRPMontoNuevo");
            entity.Property(e => e.BitRppEntIdAnt)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("BitRPpEntIdAnt");
            entity.Property(e => e.BitRppEntIdNue)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("BitRPpEntIdNue");
            entity.Property(e => e.BitRpsaldoAntiguo).HasColumnName("BitRPSaldoAntiguo");
            entity.Property(e => e.BitRpsaldoNuevo).HasColumnName("BitRPSaldoNuevo");
            entity.Property(e => e.BitRpusuario)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("BitRPUsuario");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionalidad)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcionalidad");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
        });

        modelBuilder.Entity<TesTCabeceraEmi>(entity =>
        {
            entity.HasKey(e => e.CabEmiId).HasName("TesI_CabeceraEmi_PK");

            entity.ToTable("TesT_CabeceraEmi");

            entity.HasIndex(e => new { e.PEmpId, e.DivCodigo, e.UniCodigo, e.PerId, e.PTipoOpeId, e.CabOpeNumero }, "TesI_CabeceraEmi_I01").IsUnique();

            entity.HasIndex(e => e.PCabCompId, "TesI_CabeceraEmi_I02").HasFillFactor(90);

            entity.HasIndex(e => e.CabOpeOwner, "TesI_CabeceraEmi_I03").HasFillFactor(90);

            entity.HasIndex(e => e.ConEstCod, "TesI_CabeceraEmi_I04").HasFillFactor(90);

            entity.HasIndex(e => new { e.SisCodOri, e.PEmpId, e.ConEstCod, e.CabOpeFecha }, "TesI_CabeceraEmi_I05").HasFillFactor(90);

            entity.Property(e => e.CabEmiId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.CabOpeActFec).HasColumnType("datetime");
            entity.Property(e => e.CabOpeActUsuario)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.CabOpeAprFec).HasColumnType("datetime");
            entity.Property(e => e.CabOpeAprUsuario)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.CabOpeDigFec).HasColumnType("datetime");
            entity.Property(e => e.CabOpeDigUsuario)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.CabOpeFecReversa).HasColumnType("datetime");
            entity.Property(e => e.CabOpeFecha).HasColumnType("datetime");
            entity.Property(e => e.CabOpeGlosa)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.CabOpeOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PCabCompId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCabCompId");
            entity.Property(e => e.PCabOpeIdReversa)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCabOpeIdReversa");
            entity.Property(e => e.PCabReferenciaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCabReferenciaId");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PEntId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntId");
            entity.Property(e => e.PMonedaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMonedaId");
            entity.Property(e => e.PTipoOpeId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTipoOpeId");

            entity.HasOne(d => d.PTipoOpe).WithMany(p => p.TesTCabeceraEmis)
                .HasForeignKey(d => d.PTipoOpeId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_CabOpeTipoOpeIdEmi");
        });

        modelBuilder.Entity<TesTChequeHistorico>(entity =>
        {
            entity.HasKey(e => e.MovTesHisId).HasName("TesI_ChequeHistorico_PK");

            entity.ToTable("TesT_ChequeHistorico");

            entity.HasIndex(e => new { e.PEmpId, e.PCtaCteBcoId, e.TdoId, e.MovTesNumero }, "TesI_ChequeHistorico_I01").IsUnique();

            entity.Property(e => e.MovTesHisId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.MovTesFecEstado).HasColumnType("datetime");
            entity.Property(e => e.MovTesFecVenc).HasColumnType("datetime");
            entity.Property(e => e.MovTesGlosa)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.MovTesNumero)
                .HasMaxLength(25)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PCabOpeId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCabOpeId");
            entity.Property(e => e.PCtaCteBcoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtaCteBcoId");
            entity.Property(e => e.PCtaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtaId");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PMovTesId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMovTesId");
        });

        modelBuilder.Entity<TesTClasificaFinanciero>(entity =>
        {
            entity.HasKey(e => new { e.PPdcId, e.ClaCtaNivel1, e.ClaCtaNivel2, e.ClaCtaNivel3, e.ClaCtaNivel4, e.ClaCtaNivel5, e.ClaCtaNivel6, e.ClaCtaNivel7, e.CfiCodigo }).HasName("TesI_ClasificaFinanciero_PK");

            entity.ToTable("TesT_ClasificaFinanciero");

            entity.HasIndex(e => e.ClaIdentity, "TesI_ClasificaFinanciero_I01").IsUnique();

            entity.Property(e => e.PPdcId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pPdcId");
            entity.Property(e => e.ClaCtaNodoNombre)
                .HasMaxLength(40)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.ClaIdentity)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
        });

        modelBuilder.Entity<TesTCodigosFin>(entity =>
        {
            entity.HasKey(e => e.CfiId).HasName("TesI_CodigosFinp_PK");

            entity.ToTable("TesT_CodigosFin", tb => tb.HasTrigger("Fin700v7_v7_TesT_CodigosFin_Delete"));

            entity.HasIndex(e => e.CfiCodigo, "ConI_CodigosFin_I01").IsUnique();

            entity.Property(e => e.CfiId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.CfiFecVigencia).HasColumnType("datetime");
            entity.Property(e => e.CfiGlosa)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
        });

        modelBuilder.Entity<TesTCtaCteBanFormato>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("TesT_CtaCteBanFormato");

            entity.HasIndex(e => e.PCtaCteBcoId, "TesT_Ctactebanformato_I1").IsUnique();

            entity.Property(e => e.PCtaCteBcoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtaCteBcoId");
            entity.Property(e => e.TesFormatoGlosa)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<TesTCtaCtesBancaria>(entity =>
        {
            entity.HasKey(e => e.CtaCteBcoId).HasName("TesI_CtaCtesBancarias_PK");

            entity.ToTable("TesT_CtaCtesBancarias", tb => tb.HasTrigger("Fin700v7_v7_TesT_CtaCtesBancarias_Delete"));

            entity.HasIndex(e => new { e.PEmpId, e.InstCod, e.CodCtaCteBco }, "TesI_CtaCtesBancarias_I01").IsUnique();

            entity.Property(e => e.CtaCteBcoId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.CodCtaCteBco)
                .HasMaxLength(15)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.CodCtaCteOrigen)
                .HasMaxLength(15)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.FecVigencia).HasColumnType("datetime");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PCtaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtaId");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PEntConId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntConId");
            entity.Property(e => e.PMonedaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMonedaId");
        });

        modelBuilder.Entity<TesTCtaCtesBancariasdet>(entity =>
        {
            entity.HasKey(e => e.CtaCteBcoDetId).HasName("TesI_CtaCtesBancariasDet_PK");

            entity.ToTable("TesT_CtaCtesBancariasdet");

            entity.HasIndex(e => new { e.PCtaCteBcoId, e.NumChequera }, "TesI_CtaCtesBancariasDet_I01").IsUnique();

            entity.Property(e => e.CtaCteBcoDetId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.FecVigencia).HasColumnType("datetime");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PCtaCteBcoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtaCteBcoId");
        });

        modelBuilder.Entity<TesTDetalleEmi>(entity =>
        {
            entity.HasKey(e => new { e.PCabEmiId, e.PMovCceId, e.PMovTesId }).HasName("TesI_DetalleEmi_01");

            entity.ToTable("TesT_DetalleEmi");

            entity.HasIndex(e => new { e.PMovCceId, e.PCabEmiId, e.PMovTesId }, "Test_DetalleEmi_idx010");

            entity.Property(e => e.PCabEmiId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCabEmiId");
            entity.Property(e => e.PMovCceId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMovCceId");
            entity.Property(e => e.PMovTesId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMovTesId");
            entity.Property(e => e.PCabOpeId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCabOpeId");
        });

        modelBuilder.Entity<TesTDiccionarioNomina>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("TesT_DiccionarioNomina");

            entity.Property(e => e.AtributoDestino)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.AtributoOrigen)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.AtributoTraduccion)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.Descripcion)
                .HasMaxLength(50)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.IndDecimal)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.IndEntero)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.IndFecha)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.IndSigno)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.IndTraduccion)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.TablaDestino)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.TablaTraduccion)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.TipoDato)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<TesTFormatoNomina>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("TesT_FormatoNomina");

            entity.Property(e => e.FormNomDes)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<TesTHomologaNominaPago>(entity =>
        {
            entity.HasKey(e => e.FormatoHomologaId).HasName("TesI_HomologaNomiPago01");

            entity.ToTable("TesT_HomologaNominaPago");

            entity.Property(e => e.FormatoHomologaId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.AtributoHomologa)
                .HasMaxLength(40)
                .IsUnicode(false);
            entity.Property(e => e.PCodFormatoNomina).HasColumnName("pCodFormatoNomina");
            entity.Property(e => e.ValorCliente)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.ValorNomina)
                .HasMaxLength(20)
                .IsUnicode(false);
        });

        modelBuilder.Entity<TesTInstiFinan>(entity =>
        {
            entity.HasKey(e => e.InstCod).HasName("TesI_InstiFinan_PK");

            entity.ToTable("TesT_InstiFinan", tb => tb.HasTrigger("Fin700v7_v7_TesT_InstiFinan_Delete"));

            entity.Property(e => e.InstCod).ValueGeneratedNever();
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PEntId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntId");
        });

        modelBuilder.Entity<TesTMatrizBancaria>(entity =>
        {
            entity.HasKey(e => e.PInstId).HasName("TesI_MatrizBancarias_PK");

            entity.ToTable("TesT_MatrizBancarias");

            entity.Property(e => e.PInstId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pInstId");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
        });

        modelBuilder.Entity<TesTMovimiento>(entity =>
        {
            entity.HasKey(e => e.MovTesId).HasName("TesI_Movimientos_PK");

            entity.ToTable("TesT_Movimientos");

            entity.HasIndex(e => new { e.PCabOpeIdOri, e.SisCodOri }, "TesI_Movimientos_I05").HasFillFactor(90);

            entity.HasIndex(e => new { e.PCabOpeId, e.SisCodOri }, "TesI_Movimientos_I07").HasFillFactor(90);

            entity.HasIndex(e => new { e.PEmpId, e.DivCodigo, e.PCtaId, e.PMonedaId, e.PEntId, e.EntSucNumero, e.PEntIdSec, e.EntSucNumeroSec, e.TdoId, e.MovTesNumero, e.MovTesNumCuota }, "TesI_Movimientos_I1").HasFillFactor(90);

            entity.HasIndex(e => new { e.PCabOpeId, e.CabOpeLinea }, "TesI_Movimientos_I2").HasFillFactor(90);

            entity.HasIndex(e => new { e.PCabCompId, e.PDetCompId, e.MovTesGlosa }, "TesI_Movimientos_I3");

            entity.HasIndex(e => e.MovTesOwner, "TesI_Movimientos_I4").HasFillFactor(90);

            entity.HasIndex(e => new { e.PEmpId, e.DivCodigo, e.MovTesConNumero, e.PCtaId, e.MovTesId }, "TesT_Movimientos_idx030");

            entity.HasIndex(e => new { e.PerId, e.MovTesCalFecha, e.PEmpId, e.DivCodigo, e.PCtaId, e.PMonedaId, e.PEntId, e.EntSucNumero, e.PEntIdSec, e.EntSucNumeroSec, e.TdoId, e.MovTesNumero, e.MovTesNumCuota }, "TesT_Movimientos_idx031");

            entity.HasIndex(e => new { e.MovTesCalFecha, e.PEmpId, e.DivCodigo, e.PCtaId, e.PMonedaId, e.PEntId, e.EntSucNumero, e.PEntIdSec, e.EntSucNumeroSec, e.TdoId, e.MovTesNumero, e.MovTesNumCuota }, "TesT_Movimientos_idx033");

            entity.Property(e => e.MovTesId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.MovTesCalFecha).HasColumnType("datetime");
            entity.Property(e => e.MovTesConFecha).HasColumnType("datetime");
            entity.Property(e => e.MovTesDocRef)
                .HasMaxLength(25)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.MovTesFecEstado).HasColumnType("datetime");
            entity.Property(e => e.MovTesFecProyectada).HasColumnType("datetime");
            entity.Property(e => e.MovTesFecVenc).HasColumnType("datetime");
            entity.Property(e => e.MovTesGlosa)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.MovTesNumero)
                .HasMaxLength(25)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.MovTesOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PCabCompId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCabCompId");
            entity.Property(e => e.PCabOpeId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCabOpeId");
            entity.Property(e => e.PCabOpeIdOri)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCabOpeIdOri");
            entity.Property(e => e.PCreId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCreId");
            entity.Property(e => e.PCtaCteBcoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtaCteBcoId");
            entity.Property(e => e.PCtaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtaId");
            entity.Property(e => e.PDetCompId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pDetCompId");
            entity.Property(e => e.PDetReferenciaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pDetReferenciaId");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PEmpIdDestino)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpIdDestino");
            entity.Property(e => e.PEntId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntId");
            entity.Property(e => e.PEntIdPago)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntIdPago");
            entity.Property(e => e.PEntIdSec)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntIdSec");
            entity.Property(e => e.PEntIdTer)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntIdTer");
            entity.Property(e => e.PLineaProdId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pLineaProdId");
            entity.Property(e => e.PMonedaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMonedaId");
            entity.Property(e => e.PPartidaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pPartidaId");
            entity.Property(e => e.PTprId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTprId");
            entity.Property(e => e.PryNumero)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();

            entity.HasOne(d => d.DivCodigoNavigation).WithMany(p => p.TesTMovimientos)
                .HasForeignKey(d => d.DivCodigo)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_TesMovDivCodigo");

            entity.HasOne(d => d.PEmp).WithMany(p => p.TesTMovimientos)
                .HasForeignKey(d => d.PEmpId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_TesMovpEmpId");

            entity.HasOne(d => d.PMoneda).WithMany(p => p.TesTMovimientos)
                .HasForeignKey(d => d.PMonedaId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_TesMovMonedaId");

            entity.HasOne(d => d.UniCodigoNavigation).WithMany(p => p.TesTMovimientos)
                .HasForeignKey(d => d.UniCodigo)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_TesMovUniCodigo");
        });

        modelBuilder.Entity<TesTMovimientosCf>(entity =>
        {
            entity.HasKey(e => e.MovTesCfId).HasName("TesI_MovimientosCf_PK");

            entity.ToTable("TesT_MovimientosCF");

            entity.HasIndex(e => new { e.PMovTesId, e.CabOpeLineaCorr }, "TesI_MovimientosCf_I01").IsUnique();

            entity.Property(e => e.MovTesCfId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PCabOpeId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCabOpeId");
            entity.Property(e => e.PMovTesId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMovTesId");

            entity.HasOne(d => d.PCabOpe).WithMany(p => p.TesTMovimientosCfs)
                .HasForeignKey(d => d.PCabOpeId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_TESMCFCabOpeId");

            entity.HasOne(d => d.PMovTes).WithMany(p => p.TesTMovimientosCfs)
                .HasForeignKey(d => d.PMovTesId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_TESMCFMovTesId");
        });

        modelBuilder.Entity<TesTPlanFinanciero>(entity =>
        {
            entity.HasKey(e => e.PdcId).HasName("TesI_PlanFinanciero_PK");

            entity.ToTable("TesT_PlanFinanciero");

            entity.Property(e => e.PdcId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.PdcNomNivel1)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PdcNomNivel2)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PdcNomNivel3)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PdcNomNivel4)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PdcNomNivel5)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PdcNomNivel6)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PdcNomNivel7)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PdcNomPlan)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PdcOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<TesTPlaza>(entity =>
        {
            entity.HasKey(e => e.PlaCod).HasName("TESI_PLazas_PK");

            entity.ToTable("TesT_Plazas");

            entity.Property(e => e.PlaCod).ValueGeneratedNever();
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PlaGlosa)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<TesTRelFormaPago>(entity =>
        {
            entity.HasKey(e => e.PFormaPagoId);

            entity.ToTable("TesT_RelFormaPago");

            entity.Property(e => e.PFormaPagoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pFormaPagoId");
        });

        modelBuilder.Entity<TesTSaldosCajaBanco>(entity =>
        {
            entity.HasKey(e => new { e.PEmpId, e.DivCodigo, e.UniCodigo, e.InstCod, e.PCtaCteBcoId, e.PCtaId, e.PMonedaId, e.FechaSaldo }).HasName("TesI_SaldosCajaBanco1");

            entity.ToTable("TesT_SaldosCajaBanco");

            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PCtaCteBcoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtaCteBcoId");
            entity.Property(e => e.PCtaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtaId");
            entity.Property(e => e.PMonedaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMonedaId");
            entity.Property(e => e.FechaSaldo).HasColumnType("datetime");
            entity.Property(e => e.Saldo).HasColumnType("money");
            entity.Property(e => e.SdoMtoDebe).HasColumnType("money");
            entity.Property(e => e.SdoMtoHaber).HasColumnType("money");
            entity.Property(e => e.SdoMtoImpuDebe).HasColumnType("money");
            entity.Property(e => e.SdoMtoImpuHaber).HasColumnType("money");
        });

        modelBuilder.Entity<TesTSucursalBancaria>(entity =>
        {
            entity.HasKey(e => e.SucBcoId).HasName("TesI_SucursalBancarias_PK");

            entity.ToTable("TesT_SucursalBancarias");

            entity.HasIndex(e => new { e.PInstId, e.PEntId, e.EntSucNumero }, "TesI_SucursalBancarias_I01").IsUnique();

            entity.Property(e => e.SucBcoId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PEntId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntId");
            entity.Property(e => e.PInstId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pInstId");
            entity.Property(e => e.PPlaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pPlaId");
        });

        modelBuilder.Entity<TmpApeV7>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("tmp_ape_v7");

            entity.Property(e => e.ComGlosa)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.ComLinea).ValueGeneratedOnAdd();
            entity.Property(e => e.Empid).HasColumnName("empid");
            entity.Property(e => e.MovCceMontoConvDebe).HasColumnType("numeric(18, 4)");
            entity.Property(e => e.MovCceMontoConvHaber).HasColumnType("numeric(18, 4)");
            entity.Property(e => e.MovCceMontoImpuDebe).HasColumnType("numeric(18, 4)");
            entity.Property(e => e.MovCceMontoImpuHaber).HasColumnType("numeric(18, 4)");
            entity.Property(e => e.MovCceMontoLocalDebe).HasColumnType("numeric(18, 4)");
            entity.Property(e => e.MovCceMontoLocalHaber).HasColumnType("numeric(18, 4)");
            entity.Property(e => e.PCabCompId).HasColumnName("pCabCompId");
            entity.Property(e => e.PCreId).HasColumnName("pCreId");
            entity.Property(e => e.PCtaId).HasColumnName("pCtaId");
            entity.Property(e => e.PMonedaId).HasColumnName("pMonedaId");
            entity.Property(e => e.Perid).HasColumnName("perid");
            entity.Property(e => e.Permes).HasColumnName("permes");
        });

        modelBuilder.Entity<TmpApeV7Linea>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("tmp_ape_v7_linea");

            entity.Property(e => e.Empid).HasColumnName("empid");
            entity.Property(e => e.MinLinea).HasColumnName("min_linea");
            entity.Property(e => e.PCabCompId).HasColumnName("pCabCompId");
            entity.Property(e => e.Perid).HasColumnName("perid");
        });

        modelBuilder.Entity<TmpApeV7Re>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("tmp_ape_v7_res");

            entity.Property(e => e.ComGlosa)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.ComLinea).ValueGeneratedOnAdd();
            entity.Property(e => e.Empid).HasColumnName("empid");
            entity.Property(e => e.MovCceMontoConvDebe).HasColumnType("numeric(18, 4)");
            entity.Property(e => e.MovCceMontoConvHaber).HasColumnType("numeric(18, 4)");
            entity.Property(e => e.MovCceMontoImpuDebe).HasColumnType("numeric(18, 4)");
            entity.Property(e => e.MovCceMontoImpuHaber).HasColumnType("numeric(18, 4)");
            entity.Property(e => e.MovCceMontoLocalDebe).HasColumnType("numeric(18, 4)");
            entity.Property(e => e.MovCceMontoLocalHaber).HasColumnType("numeric(18, 4)");
            entity.Property(e => e.PCabCompId).HasColumnName("pCabCompId");
            entity.Property(e => e.PCreId).HasColumnName("pCreId");
            entity.Property(e => e.PCtaId).HasColumnName("pCtaId");
            entity.Property(e => e.PMonedaId).HasColumnName("pMonedaId");
            entity.Property(e => e.Perid).HasColumnName("perid");
            entity.Property(e => e.Permes).HasColumnName("permes");
        });

        modelBuilder.Entity<TmpCcpTcompromiso>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("tmpCcpTCompromisos");

            entity.Property(e => e.OpeCcpId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.PConceptoCcpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pConceptoCcpId");
            entity.Property(e => e.PCtoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtoId");
        });

        modelBuilder.Entity<TmpCcpTmovimiento>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("tmpCcpTMovimientos");

            entity.Property(e => e.DetCcpId).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.POpeccpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pOPeccpId");
            entity.Property(e => e.POpeccpIdNuevo)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pOPeccpIdNuevo");
        });

        modelBuilder.Entity<TmpCertRentum>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("Tmp_CertRenta");

            entity.Property(e => e.CerOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EntRazonSocial)
                .HasMaxLength(120)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EntRut)
                .HasMaxLength(12)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PerMes)
                .HasMaxLength(10)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<TmpCorrCompDeltum>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("tmp_corr_comp_delta");

            entity.Property(e => e.MaxCorr).HasColumnName("max_corr");
            entity.Property(e => e.MinCorr).HasColumnName("min_corr");
            entity.Property(e => e.Pcorid)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pcorid");
            entity.Property(e => e.Pempid)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pempid");
            entity.Property(e => e.Perid).HasColumnName("perid");
        });

        modelBuilder.Entity<TmpTAfiBienesDetIfr>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("TmpT_AfiBienesDetIFRS");

            entity.Property(e => e.AfiCmdepAcumEje).HasColumnName("AfiCMDepAcumEje");
            entity.Property(e => e.AfiCodAgrup)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.AfiCodAnterior)
                .HasMaxLength(15)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.AfiCodBarraBien)
                .HasMaxLength(40)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.AfiCodSerie)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.AfiCodigo).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.AfiCorrMonVleje).HasColumnName("AfiCorrMonVLEje");
            entity.Property(e => e.AfiDctoDigitacion).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.AfiDctoLegal)
                .HasMaxLength(25)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.AfiDescripcion)
                .HasMaxLength(140)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.AfiDescripcionOpe)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.AfiEstadoDes)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.AfiFechaAdq).HasColumnType("datetime");
            entity.Property(e => e.AfiFechaIngreso).HasColumnType("datetime");
            entity.Property(e => e.AfiGrupoDes)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.AfiMarca)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.AfiModelo)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.AfiNomPeriodo)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.AfiNomPeriodoInc)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.AfiNumFactura)
                .HasMaxLength(25)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.AfiResponsable).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.AfiResponsableGl)
                .HasMaxLength(120)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.AfiRutProv)
                .HasMaxLength(12)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.AfiSecuencia).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.AfiSubGrpDes)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.AfiSvuhoras).HasColumnName("AfiSVUHoras");
            entity.Property(e => e.AfiSvuhorasReal).HasColumnName("AfiSVUHorasReal");
            entity.Property(e => e.AfiTotalSgrupo).HasColumnName("AfiTotalSGrupo");
            entity.Property(e => e.AfiUbiFisicaCod).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.AfiUbiFisicaDes)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.AfiUnidadDes)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.AfiValorResidualCm).HasColumnName("AfiValorResidualCM");
            entity.Property(e => e.AfiVuhorasOriginal)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("AfiVUHorasOriginal");
            entity.Property(e => e.CabOpeFecha).HasColumnType("datetime");
            entity.Property(e => e.CodOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.ConEstGlosa)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.CreNombre)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.DivGlosa)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PAfiOpeDetId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pAfiOpeDetId");
            entity.Property(e => e.PCodigoBienId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCodigoBienId");
            entity.Property(e => e.PDatContId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pDatContId");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PMonedaIdAdq)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMonedaIdAdq");
            entity.Property(e => e.UniNombre)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<TmpTAfiBienesResumenIfr>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("TmpT_AfiBienesResumenIFRS");

            entity.Property(e => e.AfiCmdepAcumEje).HasColumnName("AfiCMDepAcumEje");
            entity.Property(e => e.AfiCodigo).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.AfiCorrMonVleje).HasColumnName("AfiCorrMonVLEje");
            entity.Property(e => e.AfiGrupoDes)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.AfiSecuencia).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.AfiSubGrpDes)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.AfiTotalSgrupo).HasColumnName("AfiTotalSGrupo");
            entity.Property(e => e.AfiValorResidualCm).HasColumnName("AfiValorResidualCM");
            entity.Property(e => e.CodOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.DivGlosa)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.UniNombre)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<TmpTAfiClasCcugedet11Ifr>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("TmpT_AfiClasCCUGEDet11IFRS");

            entity.Property(e => e.AfiCodigo).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.AfiCorrelativo).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.AfiDescripcion)
                .HasMaxLength(140)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.AfiGlosaNivelUge)
                .HasMaxLength(40)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("AfiGlosaNivelUGE");
            entity.Property(e => e.AfiSecuencia).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.ClaCreNodoNombre)
                .HasMaxLength(40)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.ClaCreRespNombre)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.CodOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.DivGlosa)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PClaIdentity).HasColumnName("pClaIdentity");
            entity.Property(e => e.PCreId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCreId");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PPcrId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pPcrId");
        });

        modelBuilder.Entity<TmpTAfiClasCcugedet1Ifr>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("TmpT_AfiClasCCUGEDet1IFRS");

            entity.Property(e => e.AfiCodigo).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.AfiCorrelativo).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.AfiDescripcion)
                .HasMaxLength(140)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.AfiGlosaNivelUge)
                .HasMaxLength(40)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("AfiGlosaNivelUGE");
            entity.Property(e => e.AfiSecuencia).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.ClaCreNodoNombre)
                .HasMaxLength(40)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.ClaCreRespNombre)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.CodOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.DivGlosa)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PClaIdentity).HasColumnName("pClaIdentity");
            entity.Property(e => e.PCreId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCreId");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PPcrId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pPcrId");
        });

        modelBuilder.Entity<TmpTAfiClasCcugedet22Ifr>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("TmpT_AfiClasCCUGEDet22IFRS");

            entity.Property(e => e.AfiCodigo).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.AfiCorrelativo).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.AfiDescripcion)
                .HasMaxLength(140)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.AfiGlosaNivelUge)
                .HasMaxLength(40)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("AfiGlosaNivelUGE");
            entity.Property(e => e.AfiSecuencia).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.ClaCreNodoNombre)
                .HasMaxLength(40)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.ClaCreRespNombre)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.CodOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.DivGlosa)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PClaIdentity).HasColumnName("pClaIdentity");
            entity.Property(e => e.PCreId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCreId");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PPcrId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pPcrId");
        });

        modelBuilder.Entity<TmpTAfiClasCcugedet2Ifr>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("TmpT_AfiClasCCUGEDet2IFRS");

            entity.Property(e => e.AfiCodigo).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.AfiCorrelativo).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.AfiDescripcion)
                .HasMaxLength(140)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.AfiGlosaNivelUge)
                .HasMaxLength(40)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("AfiGlosaNivelUGE");
            entity.Property(e => e.AfiSecuencia).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.ClaCreNodoNombre)
                .HasMaxLength(40)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.ClaCreRespNombre)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.CodOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.DivGlosa)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PClaIdentity).HasColumnName("pClaIdentity");
            entity.Property(e => e.PCreId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCreId");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PPcrId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pPcrId");
        });

        modelBuilder.Entity<TmpTAfiDistribUgedet1Ifr>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("TmpT_AfiDistribUGEDet1IFRS");

            entity.Property(e => e.AfiCodigo).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.AfiCorrelativo).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.AfiDescripcion)
                .HasMaxLength(140)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.AfiGlosaNivelUge)
                .HasMaxLength(40)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("AfiGlosaNivelUGE");
            entity.Property(e => e.AfiSecuencia).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.ClaCreNodoNombre)
                .HasMaxLength(40)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.ClaCreRespCodigo)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.ClaCreRespNombre)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.CodOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.DivGlosa)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PClaIdentity).HasColumnName("pClaIdentity");
            entity.Property(e => e.PCodigoBienId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCodigoBienId");
            entity.Property(e => e.PCreId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCreId");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PPcrId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pPcrId");
        });

        modelBuilder.Entity<TmpTAfiDistribUgedet2Ifr>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("TmpT_AfiDistribUGEDet2IFRS");

            entity.Property(e => e.AfiCodigo).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.AfiCorrelativo).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.AfiDescripcion)
                .HasMaxLength(140)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.AfiGlosaNivelUge)
                .HasMaxLength(40)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("AfiGlosaNivelUGE");
            entity.Property(e => e.AfiSecuencia).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.ClaCreNodoNombre)
                .HasMaxLength(40)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.ClaCreRespCodigo)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.ClaCreRespNombre)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.CodOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.DivGlosa)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PClaIdentity).HasColumnName("pClaIdentity");
            entity.Property(e => e.PCodigoBienId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCodigoBienId");
            entity.Property(e => e.PCreId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCreId");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PPcrId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pPcrId");
        });

        modelBuilder.Entity<TmpTAfiInfContDep1Ifr>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("TmpT_AfiInfContDep1IFRS");

            entity.Property(e => e.AfiCmdepAcumEje).HasColumnName("AfiCMDepAcumEje");
            entity.Property(e => e.AfiCmdepAcumPer).HasColumnName("AfiCMDepAcumPer");
            entity.Property(e => e.AfiCodigo).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.AfiCorrMonVleje).HasColumnName("AfiCorrMonVLEje");
            entity.Property(e => e.AfiCorrMonetVlper).HasColumnName("AfiCorrMonetVLPer");
            entity.Property(e => e.AfiDescripcion)
                .HasMaxLength(140)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.AfiFechaIngreso).HasColumnType("datetime");
            entity.Property(e => e.AfiGrupoDes)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.AfiSaldoVueje).HasColumnName("AfiSaldoVUEje");
            entity.Property(e => e.AfiSaldoVureal).HasColumnName("AfiSaldoVUReal");
            entity.Property(e => e.AfiSecuencia).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.AfiSubGrpDes)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.AfiValorResidualCm).HasColumnName("AfiValorResidualCM");
            entity.Property(e => e.CodOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.DivGlosa)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PCodigoBienId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCodigoBienId");
            entity.Property(e => e.PDatContId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pDatContId");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.UniNombre)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<TmpTAfiInfContDep2Ifr>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("TmpT_AfiInfContDep2IFRS");

            entity.Property(e => e.AfiCmdepAcumEje).HasColumnName("AfiCMDepAcumEje");
            entity.Property(e => e.AfiCmdepAcumPer).HasColumnName("AfiCMDepAcumPer");
            entity.Property(e => e.AfiCodigo).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.AfiCorrMonVleje).HasColumnName("AfiCorrMonVLEje");
            entity.Property(e => e.AfiCorrMonetVlper).HasColumnName("AfiCorrMonetVLPer");
            entity.Property(e => e.AfiGrupoDes)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.AfiSecuencia).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.AfiSubGrpDes)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.AfiValorResidualCm).HasColumnName("AfiValorResidualCM");
            entity.Property(e => e.CodOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.DivGlosa)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PCodigoBienId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCodigoBienId");
            entity.Property(e => e.PDatContId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pDatContId");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.UniNombre)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<TmpTAfiInfPorBccosto>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("TmpT_AfiInfPorBCCosto");

            entity.Property(e => e.AfiCodAnterior)
                .HasMaxLength(15)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.AfiCodBarraBien)
                .HasMaxLength(40)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.AfiCodigo).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.AfiDescripcion)
                .HasMaxLength(140)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.AfiDescripcionOpe)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.AfiEstadoDes)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.AfiFechaAdq).HasColumnType("datetime");
            entity.Property(e => e.AfiFechaIngreso).HasColumnType("datetime");
            entity.Property(e => e.AfiFechaInventario).HasColumnType("datetime");
            entity.Property(e => e.AfiGrupoDes)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.AfiNumFactura)
                .HasMaxLength(25)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.AfiResponsableGl)
                .HasMaxLength(120)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.AfiRutProv)
                .HasMaxLength(12)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.AfiSecuencia).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.AfiSubGrpDes)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.AfiUbiFisicaCod).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.AfiUbiFisicaDes)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.AfiUnidadDes)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.CabOpeFecha).HasColumnType("datetime");
            entity.Property(e => e.CodOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.CreNombre)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.DivGlosa)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EntRutResp)
                .HasMaxLength(12)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PAfiOpeDetId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pAfiOpeDetId");
            entity.Property(e => e.PCodigoBienId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCodigoBienId");
            entity.Property(e => e.PCreId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCreId");
            entity.Property(e => e.PDatContId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pDatContId");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PEntIdProv)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntIdProv");
            entity.Property(e => e.PEntIdResp)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntIdResp");
            entity.Property(e => e.UniNombre)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<TmpTAfiInfProyCalculoDet>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("TmpT_AfiInfProyCalculoDet");

            entity.Property(e => e.AfiCmdepAcumEje).HasColumnName("AfiCMDepAcumEje");
            entity.Property(e => e.AfiCmdepAcumPer).HasColumnName("AfiCMDepAcumPer");
            entity.Property(e => e.AfiCodigo).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.AfiCorrMonVleje).HasColumnName("AfiCorrMonVLEje");
            entity.Property(e => e.AfiCorrMonetVlper).HasColumnName("AfiCorrMonetVLPer");
            entity.Property(e => e.AfiDescripcion)
                .HasMaxLength(140)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.AfiFechaIngreso).HasColumnType("datetime");
            entity.Property(e => e.AfiGrupoDes)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.AfiSaldoVueje).HasColumnName("AfiSaldoVUEje");
            entity.Property(e => e.AfiSaldoVureal).HasColumnName("AfiSaldoVUReal");
            entity.Property(e => e.AfiSecuencia).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.AfiSubGrpDes)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.AfiValorResidualCm).HasColumnName("AfiValorResidualCM");
            entity.Property(e => e.CodOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.DivGlosa)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PCodigoBienId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCodigoBienId");
            entity.Property(e => e.PDatContId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pDatContId");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.UniNombre)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<TmpTAfiInfProyCalculoRe>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("TmpT_AfiInfProyCalculoRes");

            entity.Property(e => e.AfiCmdepAcumEje).HasColumnName("AfiCMDepAcumEje");
            entity.Property(e => e.AfiCmdepAcumPer).HasColumnName("AfiCMDepAcumPer");
            entity.Property(e => e.AfiCodigo).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.AfiCorrMonVleje).HasColumnName("AfiCorrMonVLEje");
            entity.Property(e => e.AfiCorrMonetVlper).HasColumnName("AfiCorrMonetVLPer");
            entity.Property(e => e.AfiGrupoDes)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.AfiSecuencia).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.AfiSubGrpDes)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.AfiValorResidualCm).HasColumnName("AfiValorResidualCM");
            entity.Property(e => e.CodOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.DivGlosa)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PCodigoBienId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCodigoBienId");
            entity.Property(e => e.PDatContId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pDatContId");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.UniNombre)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<TmpTAfiProcDistribuyeDeter>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("TmpT_AfiProcDistribuyeDeter");

            entity.HasIndex(e => e.CodOwner, "TmpI_AfiProcDistribuyeDeter1");

            entity.Property(e => e.AfiCodigoUge).HasColumnName("AfiCodigoUGE");
            entity.Property(e => e.AfiGlosaLarga)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.CodOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PCodigoBienId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCodigoBienId");
            entity.Property(e => e.PCreId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCreId");
            entity.Property(e => e.PDatContId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pDatContId");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PPdcId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pPdcId");
        });

        modelBuilder.Entity<TmpTAfiTinformeAdicion>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("TmpT_AfiTInformeAdicion");

            entity.Property(e => e.AfiCodAnterior)
                .HasMaxLength(15)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.AfiCodigo).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.AfiDescripcion)
                .HasMaxLength(140)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.AfiGlosa)
                .HasMaxLength(100)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.AfiGrupoDes)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.AfiSecuencia).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.AfiUbiFisicaCod).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.AfiUbiFisicaDes)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.CabOpeFecha).HasColumnType("datetime");
            entity.Property(e => e.CodOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.CreNombre)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.DivGlosa)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PCodigoBienId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCodigoBienId");
            entity.Property(e => e.PDatContId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pDatContId");
            entity.Property(e => e.PerGlosa)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.UniNombre)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<TmpTAfiVhorasConsumidum>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("TmpT_AfiVHorasConsumida");

            entity.HasIndex(e => e.CodOwner, "TmpT_AfiVHorasConsumida").HasFillFactor(90);

            entity.Property(e => e.AfiCodigo).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.AfiSecuencia).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.AfiVuhorasConsumida).HasColumnName("AfiVUHorasConsumida");
            entity.Property(e => e.CodOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
        });

        modelBuilder.Entity<TmpTCajaBcoRegenera>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("TmpT_CajaBcoRegenera");

            entity.Property(e => e.Descripcion)
                .HasMaxLength(50)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.Fecha).HasColumnType("datetime");
            entity.Property(e => e.FechaSaldo).HasColumnType("datetime");
            entity.Property(e => e.PCtaCteBcoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtaCteBcoId");
            entity.Property(e => e.PCtaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtaId");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PMonedaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMonedaId");
            entity.Property(e => e.SdoMtoDebe).HasColumnType("money");
            entity.Property(e => e.SdoMtoHaber).HasColumnType("money");
        });

        modelBuilder.Entity<TmpTCalculoAporte>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("TmpT_CalculoAporte");

            entity.HasIndex(e => new { e.PDatContId, e.AfiTipoCalculoCod, e.PAfiAporteId, e.EjeAno, e.PerMes }, "TmpI_CalculoAporte01").IsUnique();

            entity.Property(e => e.AfiCmdepAcumEje).HasColumnName("AfiCMDepAcumEje");
            entity.Property(e => e.AfiCmdepAcumPer).HasColumnName("AfiCMDepAcumPer");
            entity.Property(e => e.AfiCorrMonVleje).HasColumnName("AfiCorrMonVLEje");
            entity.Property(e => e.AfiCorrMonetVlper).HasColumnName("AfiCorrMonetVLPer");
            entity.Property(e => e.AfiMesesAdep).HasColumnName("AfiMesesADep");
            entity.Property(e => e.AfiSaldoVuejeAdi).HasColumnName("AfiSaldoVUEjeAdi");
            entity.Property(e => e.AfiSaldoVurealAdi).HasColumnName("AfiSaldoVURealAdi");
            entity.Property(e => e.AfiValorAdep).HasColumnName("AfiValorADep");
            entity.Property(e => e.PAfiAporteId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pAfiAporteId");
            entity.Property(e => e.PDatContId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pDatContId");
        });

        modelBuilder.Entity<TmpTCargoBancario>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("TmpT_CargoBancario");

            entity.Property(e => e.APago).HasColumnName("aPago");
            entity.Property(e => e.AuxFechaInicio).HasColumnType("datetime");
            entity.Property(e => e.CodOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.CtaIdHaber).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.CtaIdIva).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.DocGlosaPas)
                .HasMaxLength(255)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EntRazonSocial)
                .HasMaxLength(120)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EntRut)
                .HasMaxLength(12)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.FechaEmision).HasColumnType("datetime");
            entity.Property(e => e.FechaVenc).HasColumnType("datetime");
            entity.Property(e => e.MonSimbolo)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.NumDoctoPasivo)
                .HasMaxLength(25)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PCreId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCreId");
            entity.Property(e => e.PEntId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntId");
            entity.Property(e => e.PMonedaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMonedaId");
            entity.Property(e => e.PPasDetDocumentoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pPasDetDocumentoId");
            entity.Property(e => e.PPasDocumentoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pPasDocumentoId");
            entity.Property(e => e.PTprId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTprId");
            entity.Property(e => e.Pagosolointereses).HasColumnName("pagosolointereses");
            entity.Property(e => e.PryNumero)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<TmpTCcpCuotasMov>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("TmpT_CcpCuotasMov");

            entity.HasIndex(e => e.POpeCcpId, "U1_TmpCcp_CuotasMov").HasFillFactor(90);

            entity.Property(e => e.ConCcpCod).HasColumnName("ConCCpCod");
            entity.Property(e => e.ConCcpGlosa)
                .HasMaxLength(40)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.DetCcpFechaVenc).HasColumnType("datetime");
            entity.Property(e => e.DetCcpOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PConcRemId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pConcRemId");
            entity.Property(e => e.PCtoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtoId");
            entity.Property(e => e.PDetCcpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pDetCcpId");
            entity.Property(e => e.POpeCcpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pOpeCcpId");
        });

        modelBuilder.Entity<TmpTCentrosAsociado>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("TmpT_CentrosAsociados");

            entity.Property(e => e.FldUserCode)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("fld_UserCode");
        });

        modelBuilder.Entity<TmpTConInfExcel>(entity =>
        {
            entity.HasKey(e => e.ConInfId).HasName("TmpI_ConInfExcel_PK");

            entity.ToTable("TmpT_ConInfExcel");

            entity.Property(e => e.ConInfId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("ConInfID");
            entity.Property(e => e.ConInfFecha).HasColumnType("datetime");
            entity.Property(e => e.ConInfNomInforme)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.ConInfUsuario)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.ConInfValorParametro).HasColumnType("text");
            entity.Property(e => e.IdFuncionalidad)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcionalidad");
        });

        modelBuilder.Entity<TmpTCorreccionInd>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("TmpT_CorreccionIND");

            entity.Property(e => e.Factor).HasColumnType("money");
            entity.Property(e => e.SaldoAcreedor).HasColumnType("money");
            entity.Property(e => e.SaldoActualizado).HasColumnType("money");
            entity.Property(e => e.SaldoCorreccion).HasColumnType("money");
            entity.Property(e => e.SaldoDeudor).HasColumnType("money");
            entity.Property(e => e.TesDocOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<TmpTCorreccionIpc>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("TmpT_CorreccionIPC");

            entity.Property(e => e.SalMtoImpuDebe).HasColumnType("money");
            entity.Property(e => e.SalMtoImpuHaber).HasColumnType("money");
            entity.Property(e => e.SalMtoLocalDebe).HasColumnType("money");
            entity.Property(e => e.SalMtoLocalHaber).HasColumnType("money");
            entity.Property(e => e.TesDocOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<TmpTCuenta>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("TmpT_Cuentas");

            entity.Property(e => e.FldUserCode)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("fld_UserCode");
            entity.Property(e => e.PCtaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtaId");
        });

        modelBuilder.Entity<TmpTCuentasAsociada>(entity =>
        {
            entity.HasKey(e => new { e.PCtaId, e.FldUserCode }).HasName("TmpT_CuentasAsociadas01");

            entity.ToTable("TmpT_CuentasAsociadas");

            entity.Property(e => e.PCtaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtaId");
            entity.Property(e => e.FldUserCode)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("fld_UserCode");
        });

        modelBuilder.Entity<TmpTDetaEmbarqueCalc>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("TmpT_DetaEmbarqueCalc");

            entity.Property(e => e.CodOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.DetEmbCantFac).HasColumnType("money");
            entity.Property(e => e.DetEmbCostoDirTotFinal).HasColumnName("DetEmbCostoDirTot_Final");
            entity.Property(e => e.DetEmbCostoDirTotMod).HasColumnName("DetEmbCostoDirTot_Mod");
            entity.Property(e => e.DetEmbPorcIncTotMod).HasColumnName("DetEmbPorcIncTot_Mod");
            entity.Property(e => e.PBodegaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pBodegaId");
            entity.Property(e => e.PEmbarqueCabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmbarqueCabId");
            entity.Property(e => e.PEmbarqueDetId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmbarqueDetId");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.POcCabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pOcCabId");
        });

        modelBuilder.Entity<TmpTDlgImprimeDocto>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("TmpT_DlgImprimeDocto");

            entity.HasIndex(e => e.CodOwner, "Idx_TmpT_DlgImprimeDocto").HasFillFactor(90);

            entity.Property(e => e.CiuNombre)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.CiuNombreSec)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.CmuNombre)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.CmuNombreSec)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.CodOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.CondPagoDes)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.DlcFecDocto).HasColumnType("datetime");
            entity.Property(e => e.DlcFecVecto).HasColumnType("datetime");
            entity.Property(e => e.DlgGlosaItem)
                .HasMaxLength(90)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.DvcFecOrdenC).HasColumnType("datetime");
            entity.Property(e => e.DvcNumOrdenC)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.DvcTipoRefer)
                .HasMaxLength(15)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EntDirDireccion)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EntDirDireccionSec)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EntRazonSocial)
                .HasMaxLength(120)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EntRazonSocialSec)
                .HasMaxLength(120)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EntRut)
                .HasMaxLength(12)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EntRutSec)
                .HasMaxLength(12)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EntSucDescripcion)
                .HasMaxLength(120)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EntSucDescripcionSec)
                .HasMaxLength(120)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.IndDlgMe).HasColumnName("IndDlgME");
            entity.Property(e => e.MonGlosa)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.MontoEscrito)
                .HasMaxLength(140)
                .IsUnicode(false);
            entity.Property(e => e.PCondPagoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCondPagoId");
            entity.Property(e => e.PDoctoLegalCabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pDoctoLegalCabId");
            entity.Property(e => e.PDoctoLegalDetId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pDoctoLegalDetId");
            entity.Property(e => e.PEntId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntId");
            entity.Property(e => e.PEntIdSec)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntIdSec");
            entity.Property(e => e.PMonedaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMonedaId");
            entity.Property(e => e.PProductoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pProductoId");
            entity.Property(e => e.PProductoKitId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pProductoKitId");
            entity.Property(e => e.PUnidadEmisoraDetId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pUnidadEmisoraDetId");
            entity.Property(e => e.PUnidadMed2Id)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pUnidadMed2Id");
            entity.Property(e => e.PUnidadMedId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pUnidadMedId");
            entity.Property(e => e.PUnidadMedKitId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pUnidadMedKitId");
            entity.Property(e => e.PVendedorId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pVendedorId");
            entity.Property(e => e.ProductoCod)
                .HasMaxLength(25)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.ProductoDes)
                .HasMaxLength(50)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.ProductoKitCod)
                .HasMaxLength(25)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.ProductoKitDes)
                .HasMaxLength(50)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.RegNombre)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.RegNombreSec)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.UnidadMedCod)
                .HasMaxLength(10)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.UnidadMedKitCod)
                .HasMaxLength(10)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.UnidadMedida2)
                .HasMaxLength(10)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.UserVenResp)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<TmpTDlgLibro>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("TmpT_DlgLibro");

            entity.Property(e => e.CodOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EntRazonSocial)
                .HasMaxLength(120)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EntRut)
                .HasMaxLength(12)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.FechaDocumento).HasColumnType("datetime");
            entity.Property(e => e.LibCodAutorizacionRec)
                .HasMaxLength(10)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.LibFolioDocto).HasColumnType("numeric(10, 0)");
            entity.Property(e => e.LibFolioDoctoRefer).HasColumnType("numeric(10, 0)");
            entity.Property(e => e.LibFolioNotificacion).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.LibIndAnulado)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.LibLibroCvid)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("LibLibroCVId");
            entity.Property(e => e.MtoIvaAfijo).HasColumnName("MtoIvaAFijo");
            entity.Property(e => e.MtoNetoAfijo).HasColumnName("MtoNetoAFijo");
            entity.Property(e => e.PCdoReferenciaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCdoReferenciaId");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PLibId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pLibId");
            entity.Property(e => e.TipoAccionLcv).HasColumnName("TipoAccionLCV");
        });

        modelBuilder.Entity<TmpTDlgLibroImp>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("TmpT_DlgLibroImp");

            entity.Property(e => e.PLibLibroCvid)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pLibLibroCVId");
        });

        modelBuilder.Entity<TmpTFinDetalle>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("TmpT_FinDetalles");

            entity.HasIndex(e => e.CodOwner, "TmpI_FinDetalles").HasFillFactor(90);

            entity.Property(e => e.CodOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.CtaNombre)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.MonGlosa)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PCtaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtaId");
            entity.Property(e => e.PMonedaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMonedaId");
        });

        modelBuilder.Entity<TmpTFinMovimiento>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("TmpT_FinMovimientos");

            entity.HasIndex(e => e.CodOwner, "TmpI_FinMovimientos01").HasFillFactor(90);

            entity.Property(e => e.CodCtaCteBco)
                .HasMaxLength(15)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.CodOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.DocCceNumero)
                .HasMaxLength(25)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EntRazonSocial)
                .HasMaxLength(120)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.MonSimbolo)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.MovCceFecVenc).HasColumnType("datetime");
            entity.Property(e => e.PMovCceId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMovCceId");
            entity.Property(e => e.TdoNomCorto)
                .HasMaxLength(10)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<TmpTFinMovimientosCce>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("TmpT_FinMovimientosCce");

            entity.HasIndex(e => e.CodOwner, "TmpI_FinMovimientosCce").HasFillFactor(90);

            entity.Property(e => e.CodOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.DocCceCtaCteBco)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.DocCceFecLib).HasColumnType("datetime");
            entity.Property(e => e.DocCceFecProyectada).HasColumnType("datetime");
            entity.Property(e => e.DocCceNumero)
                .HasMaxLength(25)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.DocCceUserCobResp)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.DocCceUserVenResp)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.MovCceDigFec).HasColumnType("datetime");
            entity.Property(e => e.MovCceDocRef)
                .HasMaxLength(25)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.MovCceFecEstado).HasColumnType("datetime");
            entity.Property(e => e.MovCceFecPagoPropuesta).HasColumnType("datetime");
            entity.Property(e => e.MovCceFecVenc).HasColumnType("datetime");
            entity.Property(e => e.MovCceGlosa)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PCreId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCreId");
            entity.Property(e => e.PCtaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtaId");
            entity.Property(e => e.PEmpIdDestino)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpIdDestino");
            entity.Property(e => e.PEntId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntId");
            entity.Property(e => e.PEntIdPago)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntIdPago");
            entity.Property(e => e.PEntIdSec)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntIdSec");
            entity.Property(e => e.PEntIdTer)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntIdTer");
            entity.Property(e => e.PFormaPagoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pFormaPagoId");
            entity.Property(e => e.PLineaProdId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pLineaProdId");
            entity.Property(e => e.PMonedaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMonedaId");
            entity.Property(e => e.PMovTesId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMovTesId");
            entity.Property(e => e.PPartidaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pPartidaId");
            entity.Property(e => e.PTprId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTprId");
            entity.Property(e => e.PryNumero)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<TmpTFinMovimientosTe>(entity =>
        {
            entity.HasKey(e => e.CodOwner).HasName("TmpI_FinMovimientosTes01");

            entity.ToTable("TmpT_FinMovimientosTes");

            entity.Property(e => e.CodOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.MovTesDocRef)
                .HasMaxLength(25)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.MovTesFecEstado).HasColumnType("datetime");
            entity.Property(e => e.MovTesFecProyectada).HasColumnType("datetime");
            entity.Property(e => e.MovTesFecVenc).HasColumnType("datetime");
            entity.Property(e => e.MovTesGlosa)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.MovTesNumero)
                .HasMaxLength(25)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PCabOpeId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCabOpeId");
            entity.Property(e => e.PCreId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCreId");
            entity.Property(e => e.PCtaCteBcoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtaCteBcoId");
            entity.Property(e => e.PCtaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtaId");
            entity.Property(e => e.PEmpIdDestino)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpIdDestino");
            entity.Property(e => e.PEntId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntId");
            entity.Property(e => e.PEntIdPago)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntIdPago");
            entity.Property(e => e.PEntIdSec)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntIdSec");
            entity.Property(e => e.PEntIdTer)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntIdTer");
            entity.Property(e => e.PLineaProdId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pLineaProdId");
            entity.Property(e => e.PMonedaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMonedaId");
            entity.Property(e => e.PPartidaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pPartidaId");
            entity.Property(e => e.PTprId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTprId");
            entity.Property(e => e.PryNumero)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<TmpTFinOperacione>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("TmpT_FinOperaciones");

            entity.HasIndex(e => e.CodOwner, "TmpI_FinOperaciones01").HasFillFactor(90);

            entity.Property(e => e.CabOpeActFec).HasColumnType("datetime");
            entity.Property(e => e.CabOpeActUsuario)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.CabOpeAprFec).HasColumnType("datetime");
            entity.Property(e => e.CabOpeAprUsuario)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.CabOpeDigFec).HasColumnType("datetime");
            entity.Property(e => e.CabOpeDigUsuario)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.CabOpeFecReversa).HasColumnType("datetime");
            entity.Property(e => e.CabOpeFecha).HasColumnType("datetime");
            entity.Property(e => e.CabOpeGlosa)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.CodOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EmpId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.OpeGlosa)
                .HasMaxLength(40)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PCabOpeId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCabOpeId");
            entity.Property(e => e.TcoGlosaCorta)
                .HasMaxLength(10)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<TmpTFinTotale>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("TmpT_FinTotales");

            entity.HasIndex(e => e.CodOwner, "TmpI_FinTotales").HasFillFactor(90);

            entity.Property(e => e.CodOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<TmpTInterfazAux>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("TmpT_InterfazAux");

            entity.Property(e => e.AfiCmdepAcumEjeIng).HasColumnName("AfiCMDepAcumEjeIng");
            entity.Property(e => e.AfiCodAgrup)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.AfiCodAnterior)
                .HasMaxLength(15)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.AfiCodBarraBien)
                .HasMaxLength(40)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.AfiCodSerie)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.AfiCodigo).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.AfiCorrMonVlejeIng).HasColumnName("AfiCorrMonVLEjeIng");
            entity.Property(e => e.AfiDctoLegal)
                .HasMaxLength(25)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.AfiDescripcion)
                .HasMaxLength(140)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.AfiFechaAdq).HasColumnType("datetime");
            entity.Property(e => e.AfiFechaIngreso).HasColumnType("datetime");
            entity.Property(e => e.AfiMarca)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.AfiMesesAdep).HasColumnName("AfiMesesADep");
            entity.Property(e => e.AfiModelo)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.AfiNacImp)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.AfiOpeCod).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.AfiSecuencia).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.AfiUbiFisicaCod).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EntRut)
                .HasMaxLength(12)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EntRut2)
                .HasMaxLength(12)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.IdFuncionalidad)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcionalidad");
            entity.Property(e => e.IntBitArchivo)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.IntIntId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.IntTmpOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PMonedaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMonedaId");
            entity.Property(e => e.PTprId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTprId");
            entity.Property(e => e.ProductoCod)
                .HasMaxLength(25)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PryNumero)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<TmpTLcoDoctoLegal>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("TmpT_LcoDoctoLegal");

            entity.Property(e => e.CabLlgId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.CodOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.ConEstGlosa)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EntRazonSocial)
                .HasMaxLength(120)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.LlgDocActFecha).HasColumnType("datetime");
            entity.Property(e => e.LlgDocActUsuario)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.LlgDocAprFecha).HasColumnType("datetime");
            entity.Property(e => e.LlgDocAprUsuario)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.LlgDocDigFecha).HasColumnType("datetime");
            entity.Property(e => e.LlgDocDigUsuario)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.LlgDocFecha).HasColumnType("datetime");
            entity.Property(e => e.LlgDocFechaIng).HasColumnType("datetime");
            entity.Property(e => e.LlgDocMtoImpuTotal).HasColumnType("money");
            entity.Property(e => e.LlgDocNumDoc)
                .HasMaxLength(25)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.MonSimbolo)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.OpeGlosa)
                .HasMaxLength(40)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PEntIdSec)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntIdSec");
            entity.Property(e => e.PEntIdTer)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntIdTer");
        });

        modelBuilder.Entity<TmpTPeriodoCol>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("TmpT_PeriodoCol");

            entity.Property(e => e.PerGlosa)
                .HasMaxLength(60)
                .IsUnicode(false);
        });

        modelBuilder.Entity<TmpTRegistroEnvioMail>(entity =>
        {
            entity.HasKey(e => new { e.PRecepcionDetId, e.FechaMail }).HasName("TmpT_ResulReclamosDte_01");

            entity.ToTable("TmpT_RegistroEnvioMail");

            entity.Property(e => e.PRecepcionDetId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pRecepcionDetId");
            entity.Property(e => e.FechaMail)
                .HasColumnType("datetime")
                .HasColumnName("FechaMAil");
        });

        modelBuilder.Entity<TmpTRemConfigPer>(entity =>
        {
            entity.HasKey(e => new { e.CodOwner, e.PEmpId, e.PCtaId, e.TdoId }).HasName("Pk_TmpT_RemConfigPer");

            entity.ToTable("TmpT_RemConfigPer");

            entity.Property(e => e.CodOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PCtaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtaId");
            entity.Property(e => e.PConcRemId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pConcRemId");
        });

        modelBuilder.Entity<TmpTRequePago>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("TmpT_RequePago");

            entity.Property(e => e.FldUserCode)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("fld_UserCode");
            entity.Property(e => e.PCreId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCreId");
            entity.Property(e => e.PCtaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtaId");
            entity.Property(e => e.PDocCceId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pDocCceId");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PMonedaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMonedaId");
            entity.Property(e => e.PMovCceId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMovCceId");
            entity.Property(e => e.Rut)
                .HasMaxLength(12)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.Saldo).HasColumnType("money");
        });

        modelBuilder.Entity<TmpTResulReclamosDte>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("TmpT_ResulReclamosDte");

            entity.HasIndex(e => e.CodOwner, "TmpT_ResulReclamosDte_01");

            entity.Property(e => e.CodError).HasColumnName("Cod_Error");
            entity.Property(e => e.CodOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.GlosaError255)
                .HasMaxLength(255)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PRecepcionDetId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pRecepcionDetId");
            entity.Property(e => e.RutEmisor)
                .HasMaxLength(12)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<TmpTRevEgreso>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("TmpT_RevEgresos");

            entity.Property(e => e.CabOpeOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PCabOpeId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCabOpeId");
            entity.Property(e => e.PMovCceId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMovCceId");
        });

        modelBuilder.Entity<TmpTRhuConceptosCont>(entity =>
        {
            entity.HasKey(e => e.TmpConcCon).HasName("PK_RhuConceptosCont");

            entity.ToTable("TmpT_RhuConceptosCont");

            entity.HasIndex(e => e.CodOwner, "TmpI_RhuConceptosCont_idx02");

            entity.HasIndex(e => new { e.PCtaIdAporte, e.CodOwner }, "TmpT_RhuConceptosCont_idx03");

            entity.HasIndex(e => new { e.TbMnombre, e.CodOwner }, "TmpT_RhuConceptosCont_idx04");

            entity.HasIndex(e => new { e.PConcRemId, e.PItmGruConId }, "TmpT_RhuConceptosCont_idx05");

            entity.HasIndex(e => new { e.CodOwner, e.TbMnombre, e.PItmGruConId, e.PConcRemId, e.TmpConcCon, e.CtaUsaRut, e.AtrMnombre, e.XCtaUsaRut }, "TmpT_RhuConceptosCont_idx070");

            entity.HasIndex(e => new { e.PItmGruConId, e.PConcRemId, e.CodOwner, e.TbMnombre, e.TmpConcCon, e.CtaUsaRut, e.AtrMnombre, e.XCtaUsaRut }, "TmpT_RhuConceptosCont_idx071");

            entity.Property(e => e.TmpConcCon)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.AtrMnombre)
                .HasMaxLength(32)
                .IsUnicode(false)
                .HasColumnName("AtrMNombre");
            entity.Property(e => e.CnRtipoVariable)
                .HasMaxLength(8)
                .IsUnicode(false)
                .HasColumnName("CnRTipoVariable");
            entity.Property(e => e.CodOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PCdiId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCdiId");
            entity.Property(e => e.PCdiIdAporte)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCdiIdAporte");
            entity.Property(e => e.PCfiId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCfiId");
            entity.Property(e => e.PCfiIdAporte)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCfiIdAporte");
            entity.Property(e => e.PConcRemId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pConcRemId");
            entity.Property(e => e.PConceptoCcpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pConceptoCcpId");
            entity.Property(e => e.PConceptoCcpIdAporte)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pConceptoCcpIdAporte");
            entity.Property(e => e.PCtaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtaId");
            entity.Property(e => e.PCtaIdAporte)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtaIdAporte");
            entity.Property(e => e.PEntIdTer)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntIdTer");
            entity.Property(e => e.PEntIdTerAporte)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntIdTerAporte");
            entity.Property(e => e.PItmGruConId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pItmGruConId");
            entity.Property(e => e.PLineaProdId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pLineaProdId");
            entity.Property(e => e.PLineaProdIdAporte)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pLineaProdIdAporte");
            entity.Property(e => e.PTprId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTprId");
            entity.Property(e => e.PTprIdAporte)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTprIdAporte");
            entity.Property(e => e.PryNumero)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PryNumeroAporte)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.Rut)
                .HasMaxLength(12)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.TbMnombre)
                .HasMaxLength(32)
                .IsUnicode(false)
                .HasColumnName("TbMNombre");
            entity.Property(e => e.TipoImputacion)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.TipoOrigen).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.TipoOrigenAporte).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.XCreCodigo).HasColumnName("xCreCodigo");
            entity.Property(e => e.XCtaMultiMoneda).HasColumnName("xCtaMultiMoneda");
            entity.Property(e => e.XCtaUsaCentroResp).HasColumnName("xCtaUsaCentroResp");
            entity.Property(e => e.XCtaUsaConcepto).HasColumnName("xCtaUsaConcepto");
            entity.Property(e => e.XCtaUsaProyecto).HasColumnName("xCtaUsaProyecto");
            entity.Property(e => e.XCtaUsaRut).HasColumnName("xCtaUsaRut");
            entity.Property(e => e.XRut)
                .HasMaxLength(12)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("xRut");
            entity.Property(e => e.XTauId).HasColumnName("xTauId");
        });

        modelBuilder.Entity<TmpTRhuConceptosCopium>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("TmpT_RhuConceptosCopia");

            entity.Property(e => e.CnRcodigo)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("CnRCodigo");
            entity.Property(e => e.CodOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PConcRemId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pConcRemId");
        });

        modelBuilder.Entity<TmpTRhuConceptosValor>(entity =>
        {
            entity.HasKey(e => e.TmpConcConVal).HasName("TmpI_RhuConceptosValor");

            entity.ToTable("TmpT_RhuConceptosValor");

            entity.HasIndex(e => e.CodOwner, "TmpI_RhuConceptosValor_idx02");

            entity.HasIndex(e => new { e.PTmpConcCon, e.CodOwner }, "TmpT_RhuConceptosValor_idx03");

            entity.HasIndex(e => new { e.PCtoId, e.CodOwner }, "TmpT_RhuConceptosValor_idx04");

            entity.Property(e => e.TmpConcConVal)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.CodOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.DocCceNumero)
                .HasMaxLength(25)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EntId2).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EntRut)
                .HasMaxLength(12)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.LqDorigenMov)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("LqDOrigenMov");
            entity.Property(e => e.LqDrefOrigenId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("LqDRefOrigenId");
            entity.Property(e => e.PAntAfpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pAntAfpId");
            entity.Property(e => e.PAntPrevId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pAntPrevId");
            entity.Property(e => e.PAntSaludId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pAntSaludId");
            entity.Property(e => e.PConcRemId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pConcRemId");
            entity.Property(e => e.PCreId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCreId");
            entity.Property(e => e.PCtoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtoId");
            entity.Property(e => e.PDocCceId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pDocCceId");
            entity.Property(e => e.PEntId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntId");
            entity.Property(e => e.PItmGruConId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pItmGruConId");
            entity.Property(e => e.PLiqId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pLiqId");
            entity.Property(e => e.PLiqTotId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pLiqTotId");
            entity.Property(e => e.PMonedaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMonedaId");
            entity.Property(e => e.PTmpConcCon)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTmpConcCon");
            entity.Property(e => e.PTprId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTprId");
            entity.Property(e => e.PliqDetId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pliqDetId");
            entity.Property(e => e.PryNumero)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.Rut)
                .HasMaxLength(12)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<TmpTRhuConfigLiquidacion>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("TmpT_RhuConfigLiquidacion");

            entity.Property(e => e.CnRCnRactDatoAtrMidAtrMnombre)
                .HasMaxLength(32)
                .IsUnicode(false)
                .HasColumnName("CnR_CnRActDatoAtrMId_AtrMNombre");
            entity.Property(e => e.CnRCnRactDatoAtrMidTbMnombre)
                .HasMaxLength(32)
                .IsUnicode(false)
                .HasColumnName("CnR_CnRActDatoAtrMId_TbMNombre");
            entity.Property(e => e.CnRCnRactDatoTbMidTbMnombre)
                .HasMaxLength(32)
                .IsUnicode(false)
                .HasColumnName("CnR_CnRActDatoTbMId_TbMNombre");
            entity.Property(e => e.CnRCnRcodigo)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("CnR_CnRCodigo");
            entity.Property(e => e.CnRCnRdescripcion)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("CnR_CnRDescripcion");
            entity.Property(e => e.CnRCnRindCalculoDif).HasColumnName("CnR_CnRIndCalculoDif");
            entity.Property(e => e.CnRCnRindCorrUtmacc).HasColumnName("CnR_CnRIndCorrUTMAcc");
            entity.Property(e => e.CnRCnRindReliquidacion).HasColumnName("CnR_CnRIndReliquidacion");
            entity.Property(e => e.CnRCnRnivActualizacion).HasColumnName("CnR_CnRNivActualizacion");
            entity.Property(e => e.CnRCnRtipo)
                .HasMaxLength(8)
                .IsUnicode(false)
                .HasColumnName("CnR_CnRTipo");
            entity.Property(e => e.CnRCnRtipoDato).HasColumnName("CnR_CnRTipoDato");
            entity.Property(e => e.CnRCnRtipoFormula)
                .HasMaxLength(8)
                .IsUnicode(false)
                .HasColumnName("CnR_CnRTipoFormula");
            entity.Property(e => e.CnRCnRtipoVariable)
                .HasMaxLength(8)
                .IsUnicode(false)
                .HasColumnName("CnR_CnRTipoVariable");
            entity.Property(e => e.CnRPEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("CnR_pEmpId");
            entity.Property(e => e.CpRCprFecIniVigencia)
                .HasColumnType("datetime")
                .HasColumnName("CpR_CPrFecIniVigencia");
            entity.Property(e => e.CpRCprFecTerVigencia)
                .HasColumnType("datetime")
                .HasColumnName("CpR_CPrFecTerVigencia");
            entity.Property(e => e.CpRCprPrioridadCalc).HasColumnName("CpR_CPrPrioridadCalc");
            entity.Property(e => e.CpeCnRtipoAplicabilidad)
                .HasMaxLength(8)
                .IsUnicode(false)
                .HasColumnName("Cpe_CnRTipoAplicabilidad");
            entity.Property(e => e.CpeCpeBaseImprConcIdCnRcodigo)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("Cpe_CPeBaseImprConcId_CnRCodigo");
            entity.Property(e => e.CpeCpeEstado).HasColumnName("Cpe_CPeEstado");
            entity.Property(e => e.CpeCpeFecIniVigencia)
                .HasColumnType("datetime")
                .HasColumnName("Cpe_CPeFecIniVigencia");
            entity.Property(e => e.CpeCpeFecTerVigencia)
                .HasColumnType("datetime")
                .HasColumnName("Cpe_CPeFecTerVigencia");
            entity.Property(e => e.CpeCpeFormula)
                .HasMaxLength(3000)
                .IsUnicode(false)
                .HasColumnName("Cpe_CPeFormula");
            entity.Property(e => e.CpeCpeHabLiquidoRec).HasColumnName("Cpe_CPeHabLiquidoRec");
            entity.Property(e => e.CpeCpeHabLiquidoUso).HasColumnName("Cpe_CPeHabLiquidoUso");
            entity.Property(e => e.CpeCpeIndCentralizacion).HasColumnName("Cpe_CPeIndCentralizacion");
            entity.Property(e => e.CpeCpeIndGrabacion).HasColumnName("Cpe_CPeIndGrabacion");
            entity.Property(e => e.CpeCpeIndHabLiquido).HasColumnName("Cpe_CPeIndHabLiquido");
            entity.Property(e => e.CpeCpeIndUsoMovtoMes).HasColumnName("Cpe_CPeIndUsoMovtoMes");
            entity.Property(e => e.CpeCpeIndUsoPermte).HasColumnName("Cpe_CPeIndUsoPermte");
            entity.Property(e => e.CpeCpeOriDatoAtrMidAtrMnombre)
                .HasMaxLength(32)
                .IsUnicode(false)
                .HasColumnName("Cpe_CPeOriDatoAtrMId_AtrMNombre");
            entity.Property(e => e.CpeCpeOriDatoAtrMidTbMnombre)
                .HasMaxLength(32)
                .IsUnicode(false)
                .HasColumnName("Cpe_CPeOriDatoAtrMId_TbMNombre");
            entity.Property(e => e.CpeCpeRefAplicTbMidTbMnombre)
                .HasMaxLength(32)
                .IsUnicode(false)
                .HasColumnName("Cpe_CPeRefAplicTbMId_TbMNombre");
            entity.Property(e => e.CpeCpeReliqDesdePerId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("Cpe_CPeReliqDesdePerId");
            entity.Property(e => e.CpeCpeReliqHastaPerId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("Cpe_CPeReliqHastaPerId");
            entity.Property(e => e.CpeCpeTipoAjuste).HasColumnName("Cpe_CPeTipoAjuste");
            entity.Property(e => e.CpeCpeTopeConcRemIdCnRcodigo)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("Cpe_CPeTopeConcRemId_CnRCodigo");
            entity.Property(e => e.CpeCpeTopeTipo)
                .HasMaxLength(8)
                .IsUnicode(false)
                .HasColumnName("Cpe_CPeTopeTipo");
            entity.Property(e => e.CpeCpeTopeValor).HasColumnName("Cpe_CPeTopeValor");
            entity.Property(e => e.TotCttIndAfecPerDev).HasColumnName("Tot_CTtIndAfecPerDev");
            entity.Property(e => e.TotCttIndAfecPerLiq).HasColumnName("Tot_CTtIndAfecPerLiq");
            entity.Property(e => e.TotCttTipoOperacion)
                .HasMaxLength(8)
                .IsUnicode(false)
                .HasColumnName("Tot_CTtTipoOperacion");
            entity.Property(e => e.TotPConcRemIdCnRcodigo)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("Tot_pConcRemId_CnRCodigo");
        });

        modelBuilder.Entity<TmpTRhuContrato>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("TmpT_RhuContratos");

            entity.Property(e => e.CodOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PCtoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtoId");
            entity.Property(e => e.PFicPerId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pFicPerId");
        });

        modelBuilder.Entity<TmpTRhuCtoDistrib>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("TmpT_RhuCtoDistrib");

            entity.Property(e => e.CodOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.DpaPorcentaje).HasColumnName("DPaPorcentaje");
            entity.Property(e => e.PCtoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtoId");
            entity.Property(e => e.PEntId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntId");
            entity.Property(e => e.PEntSucId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntSucId");
            entity.Property(e => e.PFormaPagoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pFormaPagoId");
            entity.Property(e => e.PProcRemId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pProcRemId");
        });

        modelBuilder.Entity<TmpTRhuCuotasCtaCte>(entity =>
        {
            entity.HasKey(e => new { e.CodOwner, e.PNomConcId, e.PMovCceId }).HasName("TmpT_RhuCuotasCtaCte_I01");

            entity.ToTable("TmpT_RhuCuotasCtaCte");

            entity.Property(e => e.CodOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PNomConcId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pNomConcId");
            entity.Property(e => e.PMovCceId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMovCceId");
            entity.Property(e => e.PCtaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtaId");
            entity.Property(e => e.PCtoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtoId");
            entity.Property(e => e.Saldo).HasColumnType("money");
        });

        modelBuilder.Entity<TmpTRhuDrtDeclRent>(entity =>
        {
            entity.HasKey(e => e.DrtTmpId);

            entity.ToTable("TmpT_RhuDRtDeclRent");

            entity.HasIndex(e => new { e.CodOwner, e.PFicPerId, e.PerMes, e.DrtTmpId, e.DrtTipoJornada }, "TmpT_RhuDRtDeclRent_idx03").IsDescending(true, false, false, false, false);

            entity.HasIndex(e => new { e.CodOwner, e.PFicPerId, e.PerMes, e.DrtTipoJornada }, "TmpT_RhuDRtDeclRent_idx030");

            entity.HasIndex(e => new { e.CodOwner, e.PEmpId, e.PFicPerId, e.DrtColDeclItmId, e.DrtConcRemId, e.DrtPerIdDev, e.DrtPerIdPag, e.DrtTblOrigen, e.DrtIdRefOrigen }, "U1_TmpT_RhuDRtDeclRent").IsUnique();

            entity.Property(e => e.DrtTmpId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("DRtTmpId");
            entity.Property(e => e.CodOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.DrtColDeclItmId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("DRtColDeclItmId");
            entity.Property(e => e.DrtConcRemId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("DRtConcRemId");
            entity.Property(e => e.DrtIdRefOrigen)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("DRtIdRefOrigen");
            entity.Property(e => e.DrtPerIdDev).HasColumnName("DRtPerIdDev");
            entity.Property(e => e.DrtPerIdPag).HasColumnName("DRtPerIdPag");
            entity.Property(e => e.DrtTblOrigen)
                .HasMaxLength(32)
                .IsUnicode(false)
                .HasColumnName("DRtTblOrigen");
            entity.Property(e => e.DrtTipoJornada)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("DRtTipoJornada");
            entity.Property(e => e.DrtValor).HasColumnName("DRtValor");
            entity.Property(e => e.DrtValorAct).HasColumnName("DRtValorAct");
            entity.Property(e => e.PCtoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtoId");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PFicPerId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pFicPerId");
        });

        modelBuilder.Entity<TmpTRhuDrtSolicitudCertif>(entity =>
        {
            entity.HasKey(e => new { e.CodOwner, e.PEmpId, e.PFicPerId }).HasName("PkTmp_DRtSolicitudCertif");

            entity.ToTable("TmpT_RhuDRtSolicitudCertif");

            entity.Property(e => e.CodOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PFicPerId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pFicPerId");
        });

        modelBuilder.Entity<TmpTRhuInfCodigo>(entity =>
        {
            entity.HasKey(e => new { e.CodOwner, e.TipoId, e.PIdParametro }).HasName("Pk_RhuInfCodigos");

            entity.ToTable("TmpT_RhuInfCodigos");

            entity.Property(e => e.CodOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.TipoId)
                .HasMaxLength(10)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("TipoID");
            entity.Property(e => e.PIdParametro)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pIdParametro");
        });

        modelBuilder.Entity<TmpTRhuLineaLiquidacion>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("TmpT_RhuLineaLiquidacion");

            entity.HasIndex(e => new { e.PLiqId, e.CodOwner }, "TmpI_RhuLineaLiquidacion_idx01");

            entity.HasIndex(e => new { e.CodOwner, e.PLiqId }, "TmpI_RhuLineaLiquidacion_idx02");

            entity.Property(e => e.CodOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PLiqId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pLiqId");
        });

        modelBuilder.Entity<TmpTRhuRemAftramoCalculado>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("TmpT_RhuRemAFTramoCalculado");

            entity.Property(e => e.AftramoEst)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("AFTramoEst");
            entity.Property(e => e.AftramoTipCto).HasColumnName("AFTramoTipCto");
            entity.Property(e => e.LqTtimponibleProm).HasColumnName("LqTTImponibleProm");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PFicPerId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pFicPerId");
            entity.Property(e => e.PTramoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTramoId");
            entity.Property(e => e.PTramoIdNew)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTramoIdNew");
        });

        modelBuilder.Entity<TmpTRhuRemAntPrevConsultum>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("TmpT_RhuRemAntPrevConsulta");

            entity.HasIndex(e => e.CodOwner, "I1_TmpT_RhuRemAntPrevCon").HasFillFactor(90);

            entity.Property(e => e.CodOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PAntAfpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pAntAfpId");
            entity.Property(e => e.PAntSaludId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pAntSaludId");
            entity.Property(e => e.PFicPerId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pFicPerId");
            entity.Property(e => e.PInsParId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pInsParId");
            entity.Property(e => e.PreIndPrevisional)
                .HasMaxLength(8)
                .IsUnicode(false);
        });

        modelBuilder.Entity<TmpTRhuRemCalcConcCto>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("TmpT_RhuRemCalcConcCto");

            entity.HasIndex(e => new { e.CodOwner, e.EjeAno, e.PerMes, e.PCtoId, e.CnRcodigo, e.CnTorigenMov }, "TmpT_RhuRemCalcConcCto_idx01");

            entity.Property(e => e.CnRcodigo)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("CnRCodigo");
            entity.Property(e => e.CnTanoMesIniDev).HasColumnName("CnTAnoMesIniDev");
            entity.Property(e => e.CnTanoMesTerDev).HasColumnName("CnTAnoMesTerDev");
            entity.Property(e => e.CnTbaseAlfNum)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("CnTBaseAlfNum");
            entity.Property(e => e.CnTbaseNum).HasColumnName("CnTBaseNum");
            entity.Property(e => e.CnTformula)
                .HasColumnType("text")
                .HasColumnName("CnTFormula");
            entity.Property(e => e.CnTindFormula).HasColumnName("CnTIndFormula");
            entity.Property(e => e.CnTindValorInf).HasColumnName("CnTIndValorInf");
            entity.Property(e => e.CnTmdaId)
                .HasColumnType("money")
                .HasColumnName("CnTMdaId");
            entity.Property(e => e.CnTorigenMov)
                .HasMaxLength(10)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("CnTOrigenMov");
            entity.Property(e => e.CnTprioridadCalc).HasColumnName("CnTPrioridadCalc");
            entity.Property(e => e.CnTrefOrigen)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("CnTRefOrigen");
            entity.Property(e => e.CnTvalorAlNum)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("CnTValorAlNum");
            entity.Property(e => e.CnTvalorAplicado).HasColumnName("CnTValorAplicado");
            entity.Property(e => e.CnTvalorFecha)
                .HasColumnType("datetime")
                .HasColumnName("CnTValorFecha");
            entity.Property(e => e.CnTvalorHora).HasColumnName("CnTValorHora");
            entity.Property(e => e.CnTvalorNumerico).HasColumnName("CnTValorNumerico");
            entity.Property(e => e.CodOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.LqDorigenMov)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("LqDOrigenMov");
            entity.Property(e => e.PCtoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtoId");
            entity.Property(e => e.TmpConcId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
        });

        modelBuilder.Entity<TmpTRhuRemCalcCto>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("TmpT_RhuRemCalcCtos");

            entity.HasIndex(e => new { e.CodOwner, e.SecCalculo }, "I1_TmpT_RhuRemCalcCtos");

            entity.HasIndex(e => new { e.CodOwner, e.PCtoId }, "I2_TmpT_RhuRemCalcCtos").IsUnique();

            entity.HasIndex(e => e.TmpCalcId, "PK_TmpT_RhuRemCalcCtos").IsUnique();

            entity.HasIndex(e => new { e.CodOwner, e.PLiqId, e.PCtoId, e.TmpCalcId }, "TmpT_RhuRemCalcCtos_idx010");

            entity.Property(e => e.CodOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.LqTestadoCentraliz)
                .HasMaxLength(8)
                .IsUnicode(false)
                .HasColumnName("LqTEstadoCentraliz");
            entity.Property(e => e.LqTestadoPago)
                .HasMaxLength(8)
                .IsUnicode(false)
                .HasColumnName("LqTEstadoPago");
            entity.Property(e => e.PAntAfpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pAntAfpId");
            entity.Property(e => e.PAntPrevId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pAntPrevId");
            entity.Property(e => e.PAntSaludId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pAntSaludId");
            entity.Property(e => e.PCreId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCreId");
            entity.Property(e => e.PCtoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtoId");
            entity.Property(e => e.PFicPerId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pFicPerId");
            entity.Property(e => e.PLiqId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pLiqId");
            entity.Property(e => e.PProcRemPerId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pProcRemPerId");
            entity.Property(e => e.TmpCalcId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
        });

        modelBuilder.Entity<TmpTRhuRemCalcVarCto>(entity =>
        {
            entity.HasKey(e => e.TmpVarId);

            entity.ToTable("TmpT_RhuRemCalcVarCto");

            entity.HasIndex(e => new { e.CodOwner, e.PCtoId, e.VarCodigo, e.VarItemArreglo }, "I1_TmpT_RhuRemCalcVarCto").IsUnique();

            entity.HasIndex(e => new { e.CodOwner, e.PRemAtrMid, e.TbMnombre, e.AtrMnombre }, "I2_TmpT_RhuRemCalcVarCto");

            entity.HasIndex(e => new { e.CodOwner, e.PCtoId, e.EjeAno, e.PerMes }, "I3_TmpT_RhuRemCalcVarCto");

            entity.HasIndex(e => new { e.CodOwner, e.EjeAno, e.PerMes, e.PCtoId, e.TbMnombre }, "I4_TmpT_RhuRemCalcVarCto");

            entity.HasIndex(e => new { e.CodOwner, e.PerMes, e.PCtoId, e.TbMnombre, e.EjeAno, e.PRemAtrMid, e.AtrMnombre }, "TmpT_RhuRemCalcVarCto_idx010");

            entity.Property(e => e.TmpVarId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.AtrMnombre)
                .HasMaxLength(32)
                .IsUnicode(false)
                .HasColumnName("AtrMNombre");
            entity.Property(e => e.CodOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PCtoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtoId");
            entity.Property(e => e.PItmParId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pItmParId");
            entity.Property(e => e.PRemAtrMid)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pRemAtrMId");
            entity.Property(e => e.TbMnombre)
                .HasMaxLength(32)
                .IsUnicode(false)
                .HasColumnName("TbMNombre");
            entity.Property(e => e.VarCodigo)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("varCodigo");
            entity.Property(e => e.VarFecha)
                .HasColumnType("datetime")
                .HasColumnName("varFecha");
            entity.Property(e => e.VarHora).HasColumnName("varHora");
            entity.Property(e => e.VarIndArreglo).HasColumnName("varIndArreglo");
            entity.Property(e => e.VarItemArreglo).HasColumnName("varItemArreglo");
            entity.Property(e => e.VarString)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("varString");
            entity.Property(e => e.VarValor).HasColumnName("varValor");
            entity.Property(e => e.VitValPar1).HasColumnType("money");
            entity.Property(e => e.VitValPar10).HasColumnType("money");
            entity.Property(e => e.VitValPar2).HasColumnType("money");
            entity.Property(e => e.VitValPar3).HasColumnType("money");
            entity.Property(e => e.VitValPar4).HasColumnType("money");
            entity.Property(e => e.VitValPar5).HasColumnType("money");
            entity.Property(e => e.VitValPar6).HasColumnType("money");
            entity.Property(e => e.VitValPar7).HasColumnType("money");
            entity.Property(e => e.VitValPar8).HasColumnType("money");
            entity.Property(e => e.VitValPar9).HasColumnType("money");
        });

        modelBuilder.Entity<TmpTRhuRemCalcVarInf>(entity =>
        {
            entity.HasKey(e => e.TmpVarId);

            entity.ToTable("TmpT_RhuRemCalcVarInf");

            entity.HasIndex(e => new { e.PRemAtrMid, e.TbMnombre, e.AtrMnombre }, "I2_TmpT_RhuRemCalcVarInf").HasFillFactor(90);

            entity.HasIndex(e => new { e.CodOwner, e.PCtoId, e.EjeAno, e.PerMes }, "I3_TmpT_RhuRemCalcVarInf").HasFillFactor(90);

            entity.HasIndex(e => new { e.CodOwner, e.EjeAno, e.PerMes, e.PCtoId, e.TbMnombre }, "I4_TmpT_RhuRemCalcVarInf").HasFillFactor(90);

            entity.Property(e => e.TmpVarId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.AtrMnombre)
                .HasMaxLength(32)
                .IsUnicode(false)
                .HasColumnName("AtrMNombre");
            entity.Property(e => e.CodOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PCtoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtoId");
            entity.Property(e => e.PItmParId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pItmParId");
            entity.Property(e => e.PRemAtrMid)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pRemAtrMId");
            entity.Property(e => e.TbMnombre)
                .HasMaxLength(32)
                .IsUnicode(false)
                .HasColumnName("TbMNombre");
            entity.Property(e => e.VarCodigo)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("varCodigo");
            entity.Property(e => e.VarFecha)
                .HasColumnType("datetime")
                .HasColumnName("varFecha");
            entity.Property(e => e.VarHora).HasColumnName("varHora");
            entity.Property(e => e.VarIndArreglo).HasColumnName("varIndArreglo");
            entity.Property(e => e.VarItemArreglo).HasColumnName("varItemArreglo");
            entity.Property(e => e.VarString)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("varString");
            entity.Property(e => e.VarValor).HasColumnName("varValor");
            entity.Property(e => e.VitValPar1).HasColumnType("money");
            entity.Property(e => e.VitValPar10).HasColumnType("money");
            entity.Property(e => e.VitValPar2).HasColumnType("money");
            entity.Property(e => e.VitValPar3).HasColumnType("money");
            entity.Property(e => e.VitValPar4).HasColumnType("money");
            entity.Property(e => e.VitValPar5).HasColumnType("money");
            entity.Property(e => e.VitValPar6).HasColumnType("money");
            entity.Property(e => e.VitValPar7).HasColumnType("money");
            entity.Property(e => e.VitValPar8).HasColumnType("money");
            entity.Property(e => e.VitValPar9).HasColumnType("money");
        });

        modelBuilder.Entity<TmpTRhuRemConcConsultum>(entity =>
        {
            entity.HasKey(e => e.TmpVarId);

            entity.ToTable("TmpT_RhuRemConcConsulta");

            entity.HasIndex(e => new { e.CodOwner, e.PCtoId, e.VarCodigo, e.VarItemArreglo }, "I1_TmpT_RhuRemConcConsulta").IsUnique();

            entity.HasIndex(e => new { e.PRemAtrMid, e.TbMnombre, e.AtrMnombre }, "I2_TmpT_RhuRemConcConsulta").HasFillFactor(90);

            entity.Property(e => e.TmpVarId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.AtrMnombre)
                .HasMaxLength(32)
                .IsUnicode(false)
                .HasColumnName("AtrMNombre");
            entity.Property(e => e.CnMfecVigencia)
                .HasColumnType("datetime")
                .HasColumnName("CnMFecVigencia");
            entity.Property(e => e.CodOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PConcRemId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pConcRemId");
            entity.Property(e => e.PCtoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtoId");
            entity.Property(e => e.PItmParId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pItmParId");
            entity.Property(e => e.PRemAtrMid)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pRemAtrMId");
            entity.Property(e => e.TbMnombre)
                .HasMaxLength(32)
                .IsUnicode(false)
                .HasColumnName("TbMNombre");
            entity.Property(e => e.VarCodigo)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("varCodigo");
            entity.Property(e => e.VarFecha)
                .HasColumnType("datetime")
                .HasColumnName("varFecha");
            entity.Property(e => e.VarHora).HasColumnName("varHora");
            entity.Property(e => e.VarIndArreglo).HasColumnName("varIndArreglo");
            entity.Property(e => e.VarItemArreglo).HasColumnName("varItemArreglo");
            entity.Property(e => e.VarString)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("varString");
            entity.Property(e => e.VarValor).HasColumnName("varValor");
            entity.Property(e => e.VitValPar1).HasColumnType("money");
            entity.Property(e => e.VitValPar10).HasColumnType("money");
            entity.Property(e => e.VitValPar2).HasColumnType("money");
            entity.Property(e => e.VitValPar3).HasColumnType("money");
            entity.Property(e => e.VitValPar4).HasColumnType("money");
            entity.Property(e => e.VitValPar5).HasColumnType("money");
            entity.Property(e => e.VitValPar6).HasColumnType("money");
            entity.Property(e => e.VitValPar7).HasColumnType("money");
            entity.Property(e => e.VitValPar8).HasColumnType("money");
            entity.Property(e => e.VitValPar9).HasColumnType("money");
        });

        modelBuilder.Entity<TmpTRhuRemCtoMovtoInf>(entity =>
        {
            entity.HasKey(e => new { e.CodOwner, e.PCtoId });

            entity.ToTable("TmpT_RhuRemCtoMovtoInf");

            entity.Property(e => e.CodOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PCtoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtoId");
        });

        modelBuilder.Entity<TmpTRhuRemDatPrevired>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("TmpT_RhuRemDatPrevired");

            entity.Property(e => e.ArcPrevId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.CgoNombre)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.ClmIindAccesorio).HasColumnName("ClmIIndAccesorio");
            entity.Property(e => e.CodOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.ConcAdiIsa).HasColumnType("money");
            entity.Property(e => e.ConcApoSus).HasColumnType("money");
            entity.Property(e => e.ConcBonGogCcaf)
                .HasColumnType("money")
                .HasColumnName("ConcBonGogCCAF");
            entity.Property(e => e.ConcBonoGob).HasColumnType("money");
            entity.Property(e => e.ConcCfnroI).HasColumnName("ConcCFNroI");
            entity.Property(e => e.ConcCfnroM).HasColumnName("ConcCFNroM");
            entity.Property(e => e.ConcCfnroS).HasColumnName("ConcCFNroS");
            entity.Property(e => e.ConcCfval)
                .HasColumnType("money")
                .HasColumnName("ConcCFVal");
            entity.Property(e => e.ConcCfvalR)
                .HasColumnType("money")
                .HasColumnName("ConcCFValR");
            entity.Property(e => e.ConcCjCfinv)
                .HasColumnType("money")
                .HasColumnName("ConcCjCFInv");
            entity.Property(e => e.ConcCjCfmat)
                .HasColumnType("money")
                .HasColumnName("ConcCjCFMat");
            entity.Property(e => e.ConcCjCfsim)
                .HasColumnType("money")
                .HasColumnName("ConcCjCFSim");
            entity.Property(e => e.ConcCjLegPre).HasColumnType("money");
            entity.Property(e => e.ConcCjSmedApo)
                .HasColumnType("money")
                .HasColumnName("ConcCjSMedApo");
            entity.Property(e => e.ConcCjSmedCre)
                .HasColumnType("money")
                .HasColumnName("ConcCjSMedCre");
            entity.Property(e => e.ConcCodCcaf).HasColumnName("ConcCodCCAF");
            entity.Property(e => e.ConcCodDes).HasColumnType("money");
            entity.Property(e => e.ConcCodSucCcaf)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("ConcCodSucCCAF");
            entity.Property(e => e.ConcCotIsa).HasColumnType("money");
            entity.Property(e => e.ConcCotIsl).HasColumnType("money");
            entity.Property(e => e.ConcCotObl).HasColumnType("money");
            entity.Property(e => e.ConcCotPac).HasColumnType("money");
            entity.Property(e => e.ConcCrePer).HasColumnType("money");
            entity.Property(e => e.ConcCtaAho).HasColumnType("money");
            entity.Property(e => e.ConcCtaAhoOtr).HasColumnType("money");
            entity.Property(e => e.ConcDesCfa)
                .HasColumnType("money")
                .HasColumnName("ConcDesCFA");
            entity.Property(e => e.ConcDesDen).HasColumnType("money");
            entity.Property(e => e.ConcDesFam).HasColumnType("money");
            entity.Property(e => e.ConcDesLea).HasColumnType("money");
            entity.Property(e => e.ConcDesOtr).HasColumnType("money");
            entity.Property(e => e.ConcDesSeg).HasColumnType("money");
            entity.Property(e => e.ConcIndPes)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.ConcLeyBon).HasColumnType("money");
            entity.Property(e => e.ConcMtoDes).HasColumnType("money");
            entity.Property(e => e.ConcMtoFon).HasColumnType("money");
            entity.Property(e => e.ConcMtoGes).HasColumnType("money");
            entity.Property(e => e.ConcMtoSis)
                .HasColumnType("money")
                .HasColumnName("ConcMtoSIS");
            entity.Property(e => e.ConcMtoTrP).HasColumnType("money");
            entity.Property(e => e.ConcMutAcc).HasColumnType("money");
            entity.Property(e => e.ConcMutImp).HasColumnType("money");
            entity.Property(e => e.ConcMutSeg).HasColumnType("money");
            entity.Property(e => e.ConcNoAfil).HasColumnType("money");
            entity.Property(e => e.ConcOblIps)
                .HasColumnType("money")
                .HasColumnName("ConcOblIPS");
            entity.Property(e => e.ConcOtrosCcaf1)
                .HasColumnType("money")
                .HasColumnName("ConcOtrosCCAF1");
            entity.Property(e => e.ConcOtrosCcaf2)
                .HasColumnType("money")
                .HasColumnName("ConcOtrosCCAF2");
            entity.Property(e => e.ConcReCfval)
                .HasColumnType("money")
                .HasColumnName("ConcReCFVal");
            entity.Property(e => e.ConcRegPre)
                .HasMaxLength(10)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.ConcRtaCcaf)
                .HasColumnType("money")
                .HasColumnName("ConcRtaCCAF");
            entity.Property(e => e.ConcRtaDes).HasColumnType("money");
            entity.Property(e => e.ConcRtaImp).HasColumnType("money");
            entity.Property(e => e.ConcRtaIps)
                .HasColumnType("money")
                .HasColumnName("ConcRtaIPS");
            entity.Property(e => e.ConcRtaIsa).HasColumnType("money");
            entity.Property(e => e.ConcRtaSis).HasColumnType("money");
            entity.Property(e => e.ConcRtaSus).HasColumnType("money");
            entity.Property(e => e.ConcSegEmp).HasColumnType("money");
            entity.Property(e => e.ConcSegTra).HasColumnType("money");
            entity.Property(e => e.ConcTasAnt).HasColumnType("money");
            entity.Property(e => e.ConcTasDes).HasColumnType("money");
            entity.Property(e => e.ConcTasSus).HasColumnType("money");
            entity.Property(e => e.EntConApeMaterno)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EntConApePaterno)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EntConNombres)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EntRut)
                .HasMaxLength(12)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.FicFecNacimiento).HasColumnType("datetime");
            entity.Property(e => e.IlgFecIniMovtoPers)
                .HasColumnType("datetime")
                .HasColumnName("ILgFecIniMovtoPers");
            entity.Property(e => e.IlgFecTerMovtoPers)
                .HasColumnType("datetime")
                .HasColumnName("ILgFecTerMovtoPers");
            entity.Property(e => e.IlgSexCodigo)
                .HasMaxLength(4)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("ILgSexCodigo");
            entity.Property(e => e.PAntAfpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pAntAfpId");
            entity.Property(e => e.PAntPrevId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pAntPrevId");
            entity.Property(e => e.PAntSaludId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pAntSaludId");
            entity.Property(e => e.PCtoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtoId");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PFicPerId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pFicPerId");
            entity.Property(e => e.PLiqId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pLiqId");
            entity.Property(e => e.PreviRedPerIni).HasColumnType("datetime");
            entity.Property(e => e.PreviRedPerIniIndSust).HasColumnType("datetime");
            entity.Property(e => e.PreviRedPerTer).HasColumnType("datetime");
            entity.Property(e => e.PreviRedPerTerIndSust).HasColumnType("datetime");
            entity.Property(e => e.SalFun)
                .HasMaxLength(15)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.TraCodTramo)
                .HasMaxLength(8)
                .IsUnicode(false);
        });

        modelBuilder.Entity<TmpTRhuRemDprCto>(entity =>
        {
            entity.HasKey(e => new { e.CodOwner, e.PCtoId }).HasName("TmpT_RhuRemDprCto_idx");

            entity.ToTable("TmpT_RhuRemDprCto");

            entity.Property(e => e.CodOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PCtoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtoId");
        });

        modelBuilder.Entity<TmpTRhuRemInfAfp>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("TmpT_RhuRemInfAFP");

            entity.HasIndex(e => new { e.CodOwner, e.PAfpParId, e.PItmIntegroId }, "TmpT_RhuRemInfAFP").HasFillFactor(90);

            entity.Property(e => e.AfpRazonSocial)
                .HasMaxLength(120)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.CodOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.FicEntRazonSocial)
                .HasMaxLength(120)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.IlgAporteComisionAfp)
                .HasColumnType("money")
                .HasColumnName("IlgAporteComisionAFP");
            entity.Property(e => e.IlgAporteComisionAfpacc)
                .HasColumnType("money")
                .HasColumnName("IlgAporteComisionAFPAcc");
            entity.Property(e => e.IlgComisionFp).HasColumnName("ILgComisionFP");
            entity.Property(e => e.IlgFecIniMovtoPers)
                .HasColumnType("datetime")
                .HasColumnName("ILgFecIniMovtoPers");
            entity.Property(e => e.IlgFecTerMovtoPers)
                .HasColumnType("datetime")
                .HasColumnName("ILgFecTerMovtoPers");
            entity.Property(e => e.IlgRutEntidadPag)
                .HasMaxLength(12)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("ILgRutEntidadPag");
            entity.Property(e => e.IlgSecDeclaracion).HasColumnName("ILgSecDeclaracion");
            entity.Property(e => e.IlgSegCesTrabajador).HasColumnName("ILgSegCesTrabajador");
            entity.Property(e => e.IlgTipMovtoPers)
                .HasMaxLength(10)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("ILgTipMovtoPers");
            entity.Property(e => e.ItmDescripcion)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PAfpParId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pAfpParId");
            entity.Property(e => e.PItmIntegroId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pItmIntegroId");
            entity.Property(e => e.PLiqId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pLiqId");
            entity.Property(e => e.PerRut)
                .HasMaxLength(12)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PreIndPrevisional)
                .HasMaxLength(8)
                .IsUnicode(false);
            entity.Property(e => e.RemunImpFondo).HasColumnName("Remun_Imp_Fondo");
            entity.Property(e => e.RemunImpSegC).HasColumnName("Remun_Imp_SegC");
            entity.Property(e => e.RutEmpleador)
                .HasMaxLength(12)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<TmpTRhuRemInfCompara>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("TmpT_RhuRemInfCompara");

            entity.Property(e => e.CnRcodigo)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("CnRCodigo");
            entity.Property(e => e.CnRdescripcion)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("CnRDescripcion");
            entity.Property(e => e.CnRtipoFormula)
                .HasMaxLength(8)
                .IsUnicode(false)
                .HasColumnName("CnRTipoFormula");
            entity.Property(e => e.CodOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.CodigoCorte)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.ColColumna)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.Coldescripcion)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.DescripCorte)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.LqDvalor).HasColumnName("LqDValor");
            entity.Property(e => e.LqDvalorAnt).HasColumnName("LqDValorAnt");
            entity.Property(e => e.LqTmontoLiquido).HasColumnName("LqTMontoLiquido");
            entity.Property(e => e.LqTmontoLiquidoAnt).HasColumnName("LqTMontoLiquidoAnt");
            entity.Property(e => e.PConcRemId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pConcRemId");
            entity.Property(e => e.PCtoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtoId");
            entity.Property(e => e.PerGlosa)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PrRdescripcion)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("PrRDescripcion");
            entity.Property(e => e.XPerGlosa)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("xPerGlosa");
        });

        modelBuilder.Entity<TmpTRhuRemInfGasto>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("TmpT_RhuRemInfGastos");

            entity.Property(e => e.CodOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.CreNombre)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.CtoNumero).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EntRazonSocial)
                .HasMaxLength(120)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EntRut)
                .HasMaxLength(12)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.LugDescripcion)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PCreId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCreId");
            entity.Property(e => e.PCtoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtoId");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PItmGruConId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pItmGruConId");
            entity.Property(e => e.PLiqId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pLiqId");
            entity.Property(e => e.PLugId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pLugId");
        });

        modelBuilder.Entity<TmpTRhuRemInfIne>(entity =>
        {
            entity.HasKey(e => e.IneinfId);

            entity.ToTable("TmpT_RhuRemInfINE");

            entity.Property(e => e.IneinfId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("INEInfId");
            entity.Property(e => e.CodOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EntRut)
                .HasMaxLength(12)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.IneaportesPatrSegTrab).HasColumnName("INEAportesPatrSegTrab");
            entity.Property(e => e.InecodCmo).HasColumnName("INECodCMO");
            entity.Property(e => e.InecomPagPorVentas).HasColumnName("INEComPagPorVentas");
            entity.Property(e => e.Inecuadro).HasColumnName("INECuadro");
            entity.Property(e => e.InededucLegOblig).HasColumnName("INEDeducLegOblig");
            entity.Property(e => e.InedesvinculadosEmpresa).HasColumnName("INEDesvinculadosEmpresa");
            entity.Property(e => e.InegasServBienCap).HasColumnName("INEGasServBienCap");
            entity.Property(e => e.Inehonorario).HasColumnName("INEHonorario");
            entity.Property(e => e.InehorasExtraOrdinarias).HasColumnName("INEHorasExtraOrdinarias");
            entity.Property(e => e.InehorasOrdinarias).HasColumnName("INEHorasOrdinarias");
            entity.Property(e => e.IneincentivosPremiosPagTrab).HasColumnName("INEIncentivosPremiosPagTrab");
            entity.Property(e => e.IneindemTermRelac).HasColumnName("INEIndemTermRelac");
            entity.Property(e => e.InelicenciaEmpresa).HasColumnName("INELicenciaEmpresa");
            entity.Property(e => e.InenuevoContratoEmpresa).HasColumnName("INENuevoContratoEmpresa");
            entity.Property(e => e.IneotrosCostosManoObra).HasColumnName("INEOtrosCostosManoObra");
            entity.Property(e => e.IneotrosSueldoBasPer).HasColumnName("INEOtrosSueldoBasPer");
            entity.Property(e => e.InepagDirecTrabSegSoc).HasColumnName("INEPagDirecTrabSegSoc");
            entity.Property(e => e.InepagEspeciesVivTra).HasColumnName("INEPagEspeciesVivTra");
            entity.Property(e => e.InepagosHorasExtr).HasColumnName("INEPagosHorasExtr");
            entity.Property(e => e.InepagosTratoTrabEntidad).HasColumnName("INEPagosTratoTrabEntidad");
            entity.Property(e => e.InepartGratAdiNoMens).HasColumnName("INEPartGratAdiNoMens");
            entity.Property(e => e.InereemGasTrabGasTrab).HasColumnName("INEReemGasTrabGasTrab");
            entity.Property(e => e.Inesexo)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("INESexo");
            entity.Property(e => e.InesubTraspPorEmpleador).HasColumnName("INESubTraspPorEmpleador");
            entity.Property(e => e.Inesubcontratados).HasColumnName("INESubcontratados");
            entity.Property(e => e.InesueldoBaseFijoSem).HasColumnName("INESueldoBaseFijoSem");
            entity.Property(e => e.InesueldosSalariosFuncOc).HasColumnName("INESueldosSalariosFuncOc");
            entity.Property(e => e.InetipoContrato)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("INETipoContrato");
            entity.Property(e => e.PCtoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtoId");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PFicPerId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pFicPerId");
        });

        modelBuilder.Entity<TmpTRhuRemInfPago>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("TmpT_RhuRemInfPago");

            entity.HasIndex(e => e.CodOwner, "I1_TmpT_RhuRemInfPago");

            entity.HasIndex(e => e.PLiqId, "I2_TmpT_RhuRemInfPago");

            entity.Property(e => e.AfpRazonSocial)
                .HasMaxLength(120)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.CgoNombre)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.CjAcodSuperInt).HasColumnName("CjACodSuperInt");
            entity.Property(e => e.CjArazonSocial)
                .HasMaxLength(120)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("CjARazonSocial");
            entity.Property(e => e.CodOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.CreNombre)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.CtoFecVigencia).HasColumnType("datetime");
            entity.Property(e => e.CtoNumero).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EntRut)
                .HasMaxLength(12)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EntSucCodCtaCteBco)
                .HasMaxLength(15)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.FicEntRazonSocial)
                .HasMaxLength(120)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.IlgSueldoBase).HasColumnName("ILgSueldoBase");
            entity.Property(e => e.InfPagId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.IsaRazonSocial)
                .HasMaxLength(120)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.LiqFecPago).HasColumnType("datetime");
            entity.Property(e => e.LqTalcanceLiquido).HasColumnName("LqTAlcanceLiquido");
            entity.Property(e => e.LqTdiasPago).HasColumnName("LqTDiasPago");
            entity.Property(e => e.LqTmontoLiquido).HasColumnName("LqTMontoLiquido");
            entity.Property(e => e.LqTotrosDesctos).HasColumnName("LqTOtrosDesctos");
            entity.Property(e => e.LqTtafectoImpto).HasColumnName("LqTTAfectoImpto");
            entity.Property(e => e.LqTtafectoImptoAcc).HasColumnName("LqTTAfectoImptoAcc");
            entity.Property(e => e.LqTtdescLegales).HasColumnName("LqTTDescLegales");
            entity.Property(e => e.LqTthaberes).HasColumnName("LqTTHaberes");
            entity.Property(e => e.LqTthaberesAcc).HasColumnName("LqTTHaberesAcc");
            entity.Property(e => e.LqTtimponTopeAcc).HasColumnName("LqTTImponTopeAcc");
            entity.Property(e => e.LqTtimponible).HasColumnName("LqTTImponible");
            entity.Property(e => e.LqTtimpuestosAcc).HasColumnName("LqTTImpuestosAcc");
            entity.Property(e => e.LqTtprevPensionAcc).HasColumnName("LqTTPrevPensionAcc");
            entity.Property(e => e.LqTtprevSaludAcc).HasColumnName("LqTTPrevSaludAcc");
            entity.Property(e => e.LqTtprevSegCesAcc).HasColumnName("LqTTPrevSegCesAcc");
            entity.Property(e => e.LqTttributable).HasColumnName("LqTTTributable");
            entity.Property(e => e.LugDescripcion)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.LugPagItmDesc)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.LugarIntegroGlosa)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PAfpParId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pAfpParId");
            entity.Property(e => e.PCjAparId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCjAParId");
            entity.Property(e => e.PCtoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtoId");
            entity.Property(e => e.PFicPerId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pFicPerId");
            entity.Property(e => e.PIsaParId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pIsaParId");
            entity.Property(e => e.PItmIntegroId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pItmIntegroId");
            entity.Property(e => e.PItmLugarPagoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pItmLugarPagoId");
            entity.Property(e => e.PLiqId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pLiqId");
            entity.Property(e => e.PLugId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pLugId");
            entity.Property(e => e.PProcRemPerId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pProcRemPerId");
            entity.Property(e => e.PerGlosa)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PrRdescripcion)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("PrRDescripcion");
            entity.Property(e => e.PreIndPrevisional)
                .HasMaxLength(8)
                .IsUnicode(false);
        });

        modelBuilder.Entity<TmpTRhuRemInfPagoDet>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("TmpT_RhuRemInfPagoDet");

            entity.HasIndex(e => new { e.CodOwner, e.PInfPagId, e.PConcPerId }, "Idx_InfPagoRecibo");

            entity.Property(e => e.CodOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.DetCalcGlosa).HasColumnType("text");
            entity.Property(e => e.PConcPerId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pConcPerId");
            entity.Property(e => e.PInfPagId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pInfPagId");
        });

        modelBuilder.Entity<TmpTRhuRemInfPagoRecibo>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("TmpT_RhuRemInfPagoRecibo");

            entity.HasIndex(e => new { e.CodOwner, e.PInfPagId, e.IdenCorrelativo }, "PK_TmpT_RhuRemInfPagRec").IsUnique();

            entity.Property(e => e.CodOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.IlgBaseReciboDesc)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("ILgBaseReciboDesc");
            entity.Property(e => e.IlgBaseReciboHaber)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("ILgBaseReciboHaber");
            entity.Property(e => e.IlgCnRcodigoDesc)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("ILgCnRCodigoDesc");
            entity.Property(e => e.IlgCnRcodigoHaber)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("ILgCnRCodigoHaber");
            entity.Property(e => e.IlgCnRdescripcionDesc)
                .HasMaxLength(100)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("ILgCnRDescripcionDesc");
            entity.Property(e => e.IlgCnRdescripcionHaber)
                .HasMaxLength(100)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("ILgCnRDescripcionHaber");
            entity.Property(e => e.IlgLqDvalorDeflacDesc).HasColumnName("ILgLqDValorDeflacDesc");
            entity.Property(e => e.IlgLqDvalorDeflacHaber).HasColumnName("ILgLqDValorDeflacHaber");
            entity.Property(e => e.IlgLqDvalorDesc).HasColumnName("ILgLqDValorDesc");
            entity.Property(e => e.IlgLqDvalorHaber).HasColumnName("ILgLqDValorHaber");
            entity.Property(e => e.InfPagIdRec)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.PInfPagId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pInfPagId");
        });

        modelBuilder.Entity<TmpTRhuRemInfRentasDev>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("TmpT_RhuRemInfRentasDev");

            entity.Property(e => e.CodOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.CtoFecVigencia).HasColumnType("datetime");
            entity.Property(e => e.CtoNumero).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.FicEntRazonSocial)
                .HasMaxLength(120)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.IlgCotTrabPesadoAcc).HasColumnName("ILgCotTrabPesadoAcc");
            entity.Property(e => e.IlgSegCesEmpresaAcc).HasColumnName("ILgSegCesEmpresaAcc");
            entity.Property(e => e.IlgTsaludFonasaAcc).HasColumnName("ILgTSaludFonasaAcc");
            entity.Property(e => e.InsIndFonasa)
                .HasMaxLength(8)
                .IsUnicode(false)
                .HasColumnName("InsIndFONASA");
            entity.Property(e => e.LqTperId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("LqTPerId");
            entity.Property(e => e.LqTperIdDev)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("LqTPerIdDev");
            entity.Property(e => e.LqTtafectoImptoAcc).HasColumnName("LqTTAfectoImptoAcc");
            entity.Property(e => e.LqTtaporteMutAcc).HasColumnName("LqTTAporteMutAcc");
            entity.Property(e => e.LqTtaporteMutAccDev).HasColumnName("LqTTAporteMutAccDev");
            entity.Property(e => e.LqTtcajaSalud).HasColumnName("LqTTCajaSalud");
            entity.Property(e => e.LqTtcajaSaludDev).HasColumnName("LqTTCajaSaludDev");
            entity.Property(e => e.LqTtcomision).HasColumnName("LqTTComision");
            entity.Property(e => e.LqTtcomisionDev).HasColumnName("LqTTComisionDev");
            entity.Property(e => e.LqTtfonasaSalud).HasColumnName("LqTTFonasaSalud");
            entity.Property(e => e.LqTthaberesDev).HasColumnName("LqTTHaberesDev");
            entity.Property(e => e.LqTtimponibleDev).HasColumnName("LqTTImponibleDev");
            entity.Property(e => e.LqTtimpuestos).HasColumnName("LqTTImpuestos");
            entity.Property(e => e.LqTtimpuestosAcc).HasColumnName("LqTTImpuestosAcc");
            entity.Property(e => e.LqTtimpuestosDev).HasColumnName("LqTTImpuestosDev");
            entity.Property(e => e.LqTtimpuestosDevAct).HasColumnName("LqTTImpuestosDevAct");
            entity.Property(e => e.LqTtprevObligatorio).HasColumnName("LqTTPrevObligatorio");
            entity.Property(e => e.LqTtprevPensionDev).HasColumnName("LqTTPrevPensionDev");
            entity.Property(e => e.LqTtprevSaludDev).HasColumnName("LqTTPrevSaludDev");
            entity.Property(e => e.LqTtprevSegCesDev).HasColumnName("LqTTPrevSegCesDev");
            entity.Property(e => e.LqTttasaImptoAcc).HasColumnName("LqTTTasaImptoAcc");
            entity.Property(e => e.LqTttributableDev).HasColumnName("LqTTTributableDev");
            entity.Property(e => e.PCtoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtoId");
            entity.Property(e => e.PFicPerId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pFicPerId");
            entity.Property(e => e.PLiqId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pLiqId");
            entity.Property(e => e.PProcRemPerId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pProcRemPerId");
            entity.Property(e => e.PerGlosaFinal)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PerGlosaInicial)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PerRut)
                .HasMaxLength(12)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<TmpTRhuRemLegalesAnt>(entity =>
        {
            entity.HasKey(e => e.IlgAntId);

            entity.ToTable("TmpT_RhuRemLegalesAnt");

            entity.HasIndex(e => new { e.CodOwner, e.PerRut, e.CtoNumero }, "I1_TmpT_RhuRemLegalesAnt");

            entity.Property(e => e.IlgAntId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("ILgAntId");
            entity.Property(e => e.AfcRazonSocial)
                .HasMaxLength(120)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.AfpFun)
                .HasMaxLength(15)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.AfpRazonSocial)
                .HasMaxLength(120)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.CgoNombre)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.CjAcodSuperInt).HasColumnName("CjACodSuperInt");
            entity.Property(e => e.CjArazonSocial)
                .HasMaxLength(120)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("CjARazonSocial");
            entity.Property(e => e.CjCcodSuperInt).HasColumnName("CjCCodSuperInt");
            entity.Property(e => e.CjCrazonSocial)
                .HasMaxLength(120)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("CjCRazonSocial");
            entity.Property(e => e.CodOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.CreNombre)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.CtoNumero).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.FicEntRazonSocial)
                .HasMaxLength(120)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.FicFecNacimiento).HasColumnType("datetime");
            entity.Property(e => e.IlgSalPlan)
                .HasColumnType("money")
                .HasColumnName("ILgSalPlan");
            entity.Property(e => e.IlgSaludPorcentaje).HasColumnName("ILgSaludPorcentaje");
            entity.Property(e => e.IlgSecDeclaracion).HasColumnName("ILgSecDeclaracion");
            entity.Property(e => e.IlgSexCodigo)
                .HasMaxLength(4)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("ILgSexCodigo");
            entity.Property(e => e.IlgTasaAccidentes).HasColumnName("ILgTasaAccidentes");
            entity.Property(e => e.IlgTasaAdiAccidentes).HasColumnName("ILgTasaAdiAccidentes");
            entity.Property(e => e.InfRcodigo)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("InfRCodigo");
            entity.Property(e => e.IsaRazonSocial)
                .HasMaxLength(120)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.LiqFecPago).HasColumnType("datetime");
            entity.Property(e => e.LqTperId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("LqTPerId");
            entity.Property(e => e.LugDescripcion)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.LugIntegroItmDesc)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.LugPagItmDesc)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.MutCmuNombre)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.MutDirDireccion)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.MutRazonSocial)
                .HasMaxLength(120)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.MutSucDescripcion)
                .HasMaxLength(120)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PAfcParId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pAfcParId");
            entity.Property(e => e.PAfpParId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pAfpParId");
            entity.Property(e => e.PCjAparId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCjAParId");
            entity.Property(e => e.PCjCparId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCjCParId");
            entity.Property(e => e.PCtoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtoId");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PFicPerId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pFicPerId");
            entity.Property(e => e.PIsaParId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pIsaParId");
            entity.Property(e => e.PItmIntegroId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pItmIntegroId");
            entity.Property(e => e.PItmLugarPagoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pItmLugarPagoId");
            entity.Property(e => e.PLiqId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pLiqId");
            entity.Property(e => e.PLugId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pLugId");
            entity.Property(e => e.PMonedaPlanId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMonedaPlanId");
            entity.Property(e => e.PMutParId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMutParId");
            entity.Property(e => e.PMutualEntSucId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMutualEntSucId");
            entity.Property(e => e.PTramoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTramoId");
            entity.Property(e => e.PTramoIdNew)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTramoIdNew");
            entity.Property(e => e.PerGlosa)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PerRut)
                .HasMaxLength(12)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PliqDetId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pliqDetId");
            entity.Property(e => e.PrRcodigo)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("PrRCodigo");
            entity.Property(e => e.PrRdescripcion)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("PrRDescripcion");
            entity.Property(e => e.PreIndCotizacion).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.PreIndPrevisional)
                .HasMaxLength(8)
                .IsUnicode(false);
            entity.Property(e => e.RutEntidad)
                .HasMaxLength(12)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Rut_Entidad");
            entity.Property(e => e.SalFun)
                .HasMaxLength(15)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.SalPlan).HasColumnType("money");
            entity.Property(e => e.TraCodTramo)
                .HasMaxLength(8)
                .IsUnicode(false);
            entity.Property(e => e.VinCodExCajaCja).HasColumnName("VinCodExCajaCJA");
            entity.Property(e => e.VinCodRegimenAntCja).HasColumnName("VinCodRegimenAntCJA");
            entity.Property(e => e.VinComisionFijaAfp)
                .HasColumnType("money")
                .HasColumnName("VinComisionFijaAFP");
            entity.Property(e => e.VinComisionMayorAfp).HasColumnName("VinComisionMayorAFP");
            entity.Property(e => e.VinComisionSegAfp).HasColumnName("VinComisionSegAFP");
            entity.Property(e => e.VinTasaImposicionCja).HasColumnName("VinTasaImposicionCJA");
        });

        modelBuilder.Entity<TmpTRhuRemLegalesDet>(entity =>
        {
            entity.HasKey(e => e.IlgDetId);

            entity.ToTable("TmpT_RhuRemLegalesDet");

            entity.Property(e => e.IlgDetId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("ILgDetId");
            entity.Property(e => e.CodOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.IlgAhoVoluntario).HasColumnName("ILgAhoVoluntario");
            entity.Property(e => e.IlgAporteComisionAfp)
                .HasColumnType("money")
                .HasColumnName("IlgAporteComisionAFP");
            entity.Property(e => e.IlgAporteComisionAfpacc)
                .HasColumnType("money")
                .HasColumnName("IlgAporteComisionAFPAcc");
            entity.Property(e => e.IlgAporteMutual).HasColumnName("ILgAporteMutual");
            entity.Property(e => e.IlgAporteMutualAcc).HasColumnName("ILgAporteMutualAcc");
            entity.Property(e => e.IlgApv).HasColumnName("ILgAPV");
            entity.Property(e => e.IlgBonifLey15386).HasColumnName("ILgBonifLey15386");
            entity.Property(e => e.IlgBonifLey889).HasColumnName("ILgBonifLey889");
            entity.Property(e => e.IlgCodPrestamoFonasa)
                .HasMaxLength(15)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("ILgCodPrestamoFonasa");
            entity.Property(e => e.IlgComisionFp).HasColumnName("ILgComisionFP");
            entity.Property(e => e.IlgComisionFpacc).HasColumnName("ILgComisionFPAcc");
            entity.Property(e => e.IlgCotCajaAnt).HasColumnName("ILgCotCajaAnt");
            entity.Property(e => e.IlgCotCajaAntAcc).HasColumnName("ILgCotCajaAntAcc");
            entity.Property(e => e.IlgCotFondoDesahucio).HasColumnName("ILgCotFondoDesahucio");
            entity.Property(e => e.IlgCotIndSust).HasColumnName("ILgCotIndSust");
            entity.Property(e => e.IlgCotLegalSalud).HasColumnName("ILgCotLegalSalud");
            entity.Property(e => e.IlgCotLegalSaludAcc).HasColumnName("ILgCotLegalSaludAcc");
            entity.Property(e => e.IlgCotObligatoria).HasColumnName("ILgCotObligatoria");
            entity.Property(e => e.IlgCotObligatoriaAcc).HasColumnName("ILgCotObligatoriaAcc");
            entity.Property(e => e.IlgCotTrabPesado).HasColumnName("ILgCotTrabPesado");
            entity.Property(e => e.IlgCotTrabPesadoAcc).HasColumnName("ILgCotTrabPesadoAcc");
            entity.Property(e => e.IlgCotVoluntaria).HasColumnName("ILgCotVoluntaria");
            entity.Property(e => e.IlgDepConvenido).HasColumnName("ILgDepConvenido");
            entity.Property(e => e.IlgImponTopeUfmes).HasColumnName("IlgImponTopeUFMes");
            entity.Property(e => e.IlgImponTopeUfmesAcc).HasColumnName("IlgImponTopeUFMesAcc");
            entity.Property(e => e.IlgLey18566).HasColumnName("ILgLey18566");
            entity.Property(e => e.IlgLey18566Acc).HasColumnName("ILgLey18566Acc");
            entity.Property(e => e.IlgMayorImpuesto).HasColumnName("ILgMayorImpuesto");
            entity.Property(e => e.IlgOtrosAportes).HasColumnName("ILgOtrosAportes");
            entity.Property(e => e.IlgPorcIndSust).HasColumnName("ILgPorcIndSust");
            entity.Property(e => e.IlgSalPlan)
                .HasColumnType("money")
                .HasColumnName("ILgSalPlan");
            entity.Property(e => e.IlgSegCesEmpresa).HasColumnName("ILgSegCesEmpresa");
            entity.Property(e => e.IlgSegCesEmpresaAcc).HasColumnName("ILgSegCesEmpresaAcc");
            entity.Property(e => e.IlgSegCesEmpresaSolid).HasColumnName("ILgSegCesEmpresaSolid");
            entity.Property(e => e.IlgSegCesEmpresaSolidAcc).HasColumnName("ILgSegCesEmpresaSolidAcc");
            entity.Property(e => e.IlgSegCesTrabajador).HasColumnName("ILgSegCesTrabajador");
            entity.Property(e => e.IlgSegCesTrabajadorAcc).HasColumnName("ILgSegCesTrabajadorAcc");
            entity.Property(e => e.IlgSueldoBase).HasColumnName("ILgSueldoBase");
            entity.Property(e => e.IlgTadiSaludNoRebaja).HasColumnName("ILgTAdiSaludNoRebaja");
            entity.Property(e => e.IlgTadiSaludRebaja).HasColumnName("ILgTAdiSaludRebaja");
            entity.Property(e => e.IlgTasigFamInv).HasColumnName("ILgTAsigFamInv");
            entity.Property(e => e.IlgTasigFamInvRetr).HasColumnName("ILgTAsigFamInvRetr");
            entity.Property(e => e.IlgTasigFamMat).HasColumnName("ILgTAsigFamMat");
            entity.Property(e => e.IlgTasigFamMatRetr).HasColumnName("ILgTAsigFamMatRetr");
            entity.Property(e => e.IlgTasigFamNor).HasColumnName("ILgTAsigFamNor");
            entity.Property(e => e.IlgTasigFamNorRetr).HasColumnName("ILgTAsigFamNorRetr");
            entity.Property(e => e.IlgTconvDntCcaf).HasColumnName("ILgTConvDntCCAF");
            entity.Property(e => e.IlgTimponTopeAcc).HasColumnName("ILgTImponTopeAcc");
            entity.Property(e => e.IlgTimponTopeSalAcc).HasColumnName("ILgTImponTopeSalAcc");
            entity.Property(e => e.IlgTimponTopeSegCacc).HasColumnName("ILgTImponTopeSegCAcc");
            entity.Property(e => e.IlgTleasingCcaf).HasColumnName("ILgTLeasingCCAF");
            entity.Property(e => e.IlgTotrosCcaf).HasColumnName("ILgTOtrosCCAF");
            entity.Property(e => e.IlgTprestamoCcaf).HasColumnName("ILgTPrestamoCCAF");
            entity.Property(e => e.IlgTprestamoFonasa).HasColumnName("ILgTPrestamoFonasa");
            entity.Property(e => e.IlgTsaludCaja).HasColumnName("ILgTSaludCaja");
            entity.Property(e => e.IlgTsaludCajaAcc).HasColumnName("ILgTSaludCajaAcc");
            entity.Property(e => e.IlgTsaludFonasa).HasColumnName("ILgTSaludFonasa");
            entity.Property(e => e.IlgTsaludFonasaAcc).HasColumnName("ILgTSaludFonasaAcc");
            entity.Property(e => e.IlgTsegVidaCcaf).HasColumnName("ILgTSegVidaCCAF");
            entity.Property(e => e.IlgTtopeIndSust).HasColumnName("ILgTTopeIndSust");
            entity.Property(e => e.LqTalcanceLiquido).HasColumnName("LqTAlcanceLiquido");
            entity.Property(e => e.LqTdiasLicencia).HasColumnName("LqTDiasLicencia");
            entity.Property(e => e.LqTdiasPago).HasColumnName("LqTDiasPago");
            entity.Property(e => e.LqTmontoLiquido).HasColumnName("LqTMontoLiquido");
            entity.Property(e => e.LqTnumCargasInvRetr).HasColumnName("LqTNumCargasInvRetr");
            entity.Property(e => e.LqTnumCargasMat).HasColumnName("LqTNumCargasMat");
            entity.Property(e => e.LqTnumCargasMatRetr).HasColumnName("LqTNumCargasMatRetr");
            entity.Property(e => e.LqTnumCargasNorRetr).HasColumnName("LqTNumCargasNorRetr");
            entity.Property(e => e.LqTotrosDesctos).HasColumnName("LqTOtrosDesctos");
            entity.Property(e => e.LqTperIdDev)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("LqTPerIdDev");
            entity.Property(e => e.LqTtafectoImpto).HasColumnName("LqTTAfectoImpto");
            entity.Property(e => e.LqTtafectoImptoAcc).HasColumnName("LqTTAfectoImptoAcc");
            entity.Property(e => e.LqTtdepConvInf).HasColumnName("LqTTDepConvInf");
            entity.Property(e => e.LqTtdescLegales).HasColumnName("LqTTDescLegales");
            entity.Property(e => e.LqTthaberes).HasColumnName("LqTTHaberes");
            entity.Property(e => e.LqTthaberesAcc).HasColumnName("LqTTHaberesAcc");
            entity.Property(e => e.LqTtimponInf).HasColumnName("LqTTImponInf");
            entity.Property(e => e.LqTtimponTope).HasColumnName("LqTTImponTope");
            entity.Property(e => e.LqTtimponTopeSal).HasColumnName("LqTTImponTopeSal");
            entity.Property(e => e.LqTtimponTopeSegC).HasColumnName("LqTTImponTopeSegC");
            entity.Property(e => e.LqTtimponible).HasColumnName("LqTTImponible");
            entity.Property(e => e.LqTtimponibleAcc).HasColumnName("LqTTImponibleAcc");
            entity.Property(e => e.LqTtimpuestos).HasColumnName("LqTTImpuestos");
            entity.Property(e => e.LqTtimpuestosAcc).HasColumnName("LqTTImpuestosAcc");
            entity.Property(e => e.LqTtnoImponible).HasColumnName("LqTTNoImponible");
            entity.Property(e => e.LqTtnoImponibleAcc).HasColumnName("LqTTNoImponibleAcc");
            entity.Property(e => e.LqTtnoTributable).HasColumnName("LqTTNoTributable");
            entity.Property(e => e.LqTtprevPension).HasColumnName("LqTTPrevPension");
            entity.Property(e => e.LqTtprevPensionAcc).HasColumnName("LqTTPrevPensionAcc");
            entity.Property(e => e.LqTtprevSalud).HasColumnName("LqTTPrevSalud");
            entity.Property(e => e.LqTtprevSaludAcc).HasColumnName("LqTTPrevSaludAcc");
            entity.Property(e => e.LqTtprevSegCes).HasColumnName("LqTTPrevSegCes");
            entity.Property(e => e.LqTtprevSegCesAcc).HasColumnName("LqTTPrevSegCesAcc");
            entity.Property(e => e.LqTttributable).HasColumnName("LqTTTributable");
            entity.Property(e => e.LqTttributableAcc).HasColumnName("LqTTTributableAcc");
            entity.Property(e => e.PIlgAntId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pILgAntId");
            entity.Property(e => e.PerDevGlosa)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<TmpTRhuRemLegalesMov>(entity =>
        {
            entity.HasKey(e => e.IlgMovId);

            entity.ToTable("TmpT_RhuRemLegalesMov");

            entity.Property(e => e.IlgMovId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("ILgMovId");
            entity.Property(e => e.CodOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.IlgCmuNombre)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("ILgCmuNombre");
            entity.Property(e => e.IlgCodSucEntidadPag).HasColumnName("ILgCodSucEntidadPag");
            entity.Property(e => e.IlgDescSucEntidadPag)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("ILgDescSucEntidadPag");
            entity.Property(e => e.IlgFecIniMovtoPers)
                .HasColumnType("datetime")
                .HasColumnName("ILgFecIniMovtoPers");
            entity.Property(e => e.IlgFecTerMovtoPers)
                .HasColumnType("datetime")
                .HasColumnName("ILgFecTerMovtoPers");
            entity.Property(e => e.IlgRegId)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("ILgRegId");
            entity.Property(e => e.IlgRutEntidadPag)
                .HasMaxLength(12)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("ILgRutEntidadPag");
            entity.Property(e => e.IlgSecMovto).HasColumnName("ILgSecMovto");
            entity.Property(e => e.IlgTipMovtoPers)
                .HasMaxLength(10)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("ILgTipMovtoPers");
            entity.Property(e => e.PCtoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtoId");
            entity.Property(e => e.PFicPerId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pFicPerId");
        });

        modelBuilder.Entity<TmpTRhuRemMovApv>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("TmpT_RhuRemMovAPV");

            entity.Property(e => e.ApvFecTermino).HasColumnType("datetime");
            entity.Property(e => e.ApvFecVigencia).HasColumnType("datetime");
            entity.Property(e => e.ApvNumPoliza)
                .HasMaxLength(15)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.ApvValor).HasColumnType("money");
            entity.Property(e => e.ClmIindAccesorio).HasColumnName("ClmIIndAccesorio");
            entity.Property(e => e.CodOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.DepConvValor).HasColumnType("money");
            entity.Property(e => e.IlgApvcAhorroVol).HasColumnName("ILgApvcAhorroVol");
            entity.Property(e => e.IlgApvcAporteEmp).HasColumnName("ILgApvcAporteEmp");
            entity.Property(e => e.IlgApvcAporteTrab).HasColumnName("ILgApvcAporteTrab");
            entity.Property(e => e.IlgMovId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("ILgMovId");
            entity.Property(e => e.IlgSecApv).HasColumnName("ILgSecAPV");
            entity.Property(e => e.PCtoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtoId");
            entity.Property(e => e.PEntId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntId");
            entity.Property(e => e.PFicPerId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pFicPerId");
            entity.Property(e => e.PInsParId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pInsParId");
            entity.Property(e => e.PreviRedCodInsApv).HasColumnName("PreviRedCodInsAPV");
            entity.Property(e => e.PreviRedFormaPagoApv).HasColumnName("PreviRedFormaPagoAPV");
        });

        modelBuilder.Entity<TmpTRhuRemNomIntBitacora>(entity =>
        {
            entity.HasKey(e => new { e.PNomConcId, e.NcnImpNombreArchivo }).HasName("RhuI_TmpNomIntBitacora");

            entity.ToTable("TmpT_RhuRemNomIntBitacora");

            entity.Property(e => e.PNomConcId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pNomConcId");
            entity.Property(e => e.NcnImpNombreArchivo)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.NcnImpBitFec).HasColumnType("datetime");
            entity.Property(e => e.NcnImpBitUsuario)
                .HasMaxLength(150)
                .IsUnicode(false);
        });

        modelBuilder.Entity<TmpTRhuRemNomInterfaz>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("TmpT_RhuRemNomInterfaz");

            entity.Property(e => e.NcnImpNombreArchivo)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.NcnImpRegistro).HasColumnType("text");
            entity.Property(e => e.PNomConcId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pNomConcId");
        });

        modelBuilder.Entity<TmpTRhuRemNominasConcDet>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("TmpT_RhuRemNominasConcDet");

            entity.Property(e => e.CodOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.NcnDestadoProc)
                .HasMaxLength(8)
                .IsUnicode(false)
                .HasColumnName("NcnDEstadoProc");
            entity.Property(e => e.NcnDindValorInf).HasColumnName("NcnDIndValorInf");
            entity.Property(e => e.NcnDmdaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("NcnDMdaId");
            entity.Property(e => e.NcnDpCreId).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.NcnDperIdIniDev).HasColumnName("NcnDPerIdIniDev");
            entity.Property(e => e.NcnDperIdTerDev).HasColumnName("NcnDPerIdTerDev");
            entity.Property(e => e.NcnDpryId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("NcnDPryId");
            entity.Property(e => e.NcnDrefOrigen)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("NcnDRefOrigen");
            entity.Property(e => e.NcnDtprId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("NcnDTPrId");
            entity.Property(e => e.NcnDvalAlfNum)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("NcnDValAlfNum");
            entity.Property(e => e.NcnDvalBaseAlf)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("NcnDValBaseAlf");
            entity.Property(e => e.NcnDvalBaseNum)
                .HasColumnType("numeric(25, 18)")
                .HasColumnName("NcnDValBaseNum");
            entity.Property(e => e.NcnDvalFecha)
                .HasColumnType("datetime")
                .HasColumnName("NcnDValFecha");
            entity.Property(e => e.NcnDvalHora).HasColumnName("NcnDValHora");
            entity.Property(e => e.NcnDvalNumerico).HasColumnName("NcnDValNumerico");
            entity.Property(e => e.NomConcDetId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.PConcRemId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pConcRemId");
            entity.Property(e => e.PCtoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtoId");
            entity.Property(e => e.PNomConcId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pNomConcId");
        });

        modelBuilder.Entity<TmpTRhuRemPreviText>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("TmpT_RhuRemPreviText");

            entity.Property(e => e.ClmIindAccesorio).HasColumnName("ClmIIndAccesorio");
            entity.Property(e => e.CodOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.LineaInfPrev).HasColumnType("text");
            entity.Property(e => e.PCtoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtoId");
            entity.Property(e => e.PFicPerId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pFicPerId");
            entity.Property(e => e.PLiqId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pLiqId");
        });

        modelBuilder.Entity<TmpTRhuRemPrevired>(entity =>
        {
            entity.HasKey(e => e.ArcPrevId);

            entity.ToTable("TmpT_RhuRemPrevired");

            entity.HasIndex(e => new { e.CodOwner, e.PEmpId, e.PFicPerId, e.PCtoId, e.PreviRedSecRut, e.PreviRedSecMto }, "I1_TmpT_RhuRemPrevired").HasFillFactor(90);

            entity.Property(e => e.ArcPrevId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.CgoNombre)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.CjAcodSuperInt).HasColumnName("CjACodSuperInt");
            entity.Property(e => e.CjCcodSuperInt).HasColumnName("CjCCodSuperInt");
            entity.Property(e => e.ClmIindAccesorio).HasColumnName("ClmIIndAccesorio");
            entity.Property(e => e.CodOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EntConApeMaterno)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EntConApePaterno)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EntConNombres)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EntRut)
                .HasMaxLength(12)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.FicFecNacimiento).HasColumnType("datetime");
            entity.Property(e => e.IlgAhoVoluntario).HasColumnName("ILgAhoVoluntario");
            entity.Property(e => e.IlgAporteComisionAfp)
                .HasColumnType("money")
                .HasColumnName("IlgAporteComisionAFP");
            entity.Property(e => e.IlgAporteComisionAfpacc)
                .HasColumnType("money")
                .HasColumnName("IlgAporteComisionAFPAcc");
            entity.Property(e => e.IlgAporteMutual).HasColumnName("ILgAporteMutual");
            entity.Property(e => e.IlgApv).HasColumnName("ILgAPV");
            entity.Property(e => e.IlgBonifLey15386).HasColumnName("ILgBonifLey15386");
            entity.Property(e => e.IlgCodPrestamoFonasa)
                .HasMaxLength(15)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("ILgCodPrestamoFonasa");
            entity.Property(e => e.IlgComisionFp).HasColumnName("ILgComisionFP");
            entity.Property(e => e.IlgCotCajaAnt).HasColumnName("ILgCotCajaAnt");
            entity.Property(e => e.IlgCotFondoDesahucio).HasColumnName("ILgCotFondoDesahucio");
            entity.Property(e => e.IlgCotIndSust).HasColumnName("ILgCotIndSust");
            entity.Property(e => e.IlgCotLegalSalud).HasColumnName("ILgCotLegalSalud");
            entity.Property(e => e.IlgCotObligatoria).HasColumnName("ILgCotObligatoria");
            entity.Property(e => e.IlgCotTrabPesado).HasColumnName("ILgCotTrabPesado");
            entity.Property(e => e.IlgCotTrabPesadoAemp).HasColumnName("ILgCotTrabPesadoAEmp");
            entity.Property(e => e.IlgDepConvenido).HasColumnName("ILgDepConvenido");
            entity.Property(e => e.IlgFecIniMovtoPers)
                .HasColumnType("datetime")
                .HasColumnName("ILgFecIniMovtoPers");
            entity.Property(e => e.IlgFecTerMovtoPers)
                .HasColumnType("datetime")
                .HasColumnName("ILgFecTerMovtoPers");
            entity.Property(e => e.IlgLey18566).HasColumnName("ILgLey18566");
            entity.Property(e => e.IlgPorcIndSust).HasColumnName("ILgPorcIndSust");
            entity.Property(e => e.IlgRutEntidadPag)
                .HasMaxLength(12)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("ILgRutEntidadPag");
            entity.Property(e => e.IlgSalPlan)
                .HasColumnType("money")
                .HasColumnName("ILgSalPlan");
            entity.Property(e => e.IlgSegCesEmpresa).HasColumnName("ILgSegCesEmpresa");
            entity.Property(e => e.IlgSegCesTrabajador).HasColumnName("ILgSegCesTrabajador");
            entity.Property(e => e.IlgSexCodigo)
                .HasMaxLength(4)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("ILgSexCodigo");
            entity.Property(e => e.IlgTadiSalud).HasColumnName("ILgTAdiSalud");
            entity.Property(e => e.IlgTasigFam).HasColumnName("IlgTAsigFam");
            entity.Property(e => e.IlgTasigFamInv).HasColumnName("ILgTAsigFamInv");
            entity.Property(e => e.IlgTasigFamInvRetr).HasColumnName("ILgTAsigFamInvRetr");
            entity.Property(e => e.IlgTasigFamMat).HasColumnName("ILgTAsigFamMat");
            entity.Property(e => e.IlgTasigFamMatRetr).HasColumnName("ILgTAsigFamMatRetr");
            entity.Property(e => e.IlgTasigFamNor).HasColumnName("ILgTAsigFamNor");
            entity.Property(e => e.IlgTasigFamNorRetr).HasColumnName("ILgTAsigFamNorRetr");
            entity.Property(e => e.IlgTasigFamR).HasColumnName("ILgTAsigFamR");
            entity.Property(e => e.IlgTccafdescAf).HasColumnName("ILgTCCAFDescAF");
            entity.Property(e => e.IlgTconvDntCcaf).HasColumnName("ILgTConvDntCCAF");
            entity.Property(e => e.IlgTcotCcafnoIsap).HasColumnName("ILgTCotCCAFNoIsap");
            entity.Property(e => e.IlgTimponibleDesahucio).HasColumnName("ILgTImponibleDesahucio");
            entity.Property(e => e.IlgTipMovtoPers)
                .HasMaxLength(10)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("ILgTipMovtoPers");
            entity.Property(e => e.IlgTisapre).HasColumnName("ILgTIsapre");
            entity.Property(e => e.IlgTleasingCcaf).HasColumnName("ILgTLeasingCCAF");
            entity.Property(e => e.IlgTotrosCcaf).HasColumnName("ILgTOtrosCCAF");
            entity.Property(e => e.IlgTpagoInp).HasColumnName("ILgTPagoINP");
            entity.Property(e => e.IlgTprestamoCcaf).HasColumnName("ILgTPrestamoCCAF");
            entity.Property(e => e.IlgTprestamoFonasa).HasColumnName("ILgTPrestamoFonasa");
            entity.Property(e => e.IlgTreintAf).HasColumnName("ILgTReintAF");
            entity.Property(e => e.IlgTsaludCaja).HasColumnName("ILgTSaludCaja");
            entity.Property(e => e.IlgTsaludFonasa).HasColumnName("ILgTSaludFonasa");
            entity.Property(e => e.IlgTsegVidaCcaf).HasColumnName("ILgTSegVidaCCAF");
            entity.Property(e => e.IlgTtopeIndSust).HasColumnName("ILgTTopeIndSust");
            entity.Property(e => e.LqTdiasPago).HasColumnName("LqTDiasPago");
            entity.Property(e => e.LqTnumCargasInvRetr).HasColumnName("LqTNumCargasInvRetr");
            entity.Property(e => e.LqTnumCargasMat).HasColumnName("LqTNumCargasMat");
            entity.Property(e => e.LqTnumCargasMatRetr).HasColumnName("LqTNumCargasMatRetr");
            entity.Property(e => e.LqTnumCargasNorRetr).HasColumnName("LqTNumCargasNorRetr");
            entity.Property(e => e.LqTtafectoImpto).HasColumnName("LqTTAfectoImpto");
            entity.Property(e => e.LqTtimponTope).HasColumnName("LqTTImponTope");
            entity.Property(e => e.LqTtimponTopeMut).HasColumnName("LqTTImponTopeMut");
            entity.Property(e => e.LqTtimponTopeSal).HasColumnName("LqTTImponTopeSal");
            entity.Property(e => e.LqTtimponTopeSegC).HasColumnName("LqTTImponTopeSegC");
            entity.Property(e => e.LqTtimponible).HasColumnName("LqTTImponible");
            entity.Property(e => e.LqTtimpuestos).HasColumnName("LqTTImpuestos");
            entity.Property(e => e.LqTttributable).HasColumnName("LqTTTributable");
            entity.Property(e => e.PAntAfpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pAntAfpId");
            entity.Property(e => e.PAntPrevId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pAntPrevId");
            entity.Property(e => e.PAntSaludId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pAntSaludId");
            entity.Property(e => e.PCtoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtoId");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PFicPerId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pFicPerId");
            entity.Property(e => e.PLiqId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pLiqId");
            entity.Property(e => e.PreviRedCcosSucAge)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("PreviRedCCosSucAge");
            entity.Property(e => e.PreviRedCodInsApv).HasColumnName("PreviRedCodInsAPV");
            entity.Property(e => e.PreviRedCredAfamEmp).HasColumnName("PreviRedCredAFamEmp");
            entity.Property(e => e.PreviRedFormaPagoApv).HasColumnName("PreviRedFormaPagoAPV");
            entity.Property(e => e.PreviRedInpotrosAp).HasColumnName("PreviRedINPOtrosAp");
            entity.Property(e => e.PreviRedNperIndSust).HasColumnName("PreviRedNPerIndSust");
            entity.Property(e => e.PreviRedPerIni).HasColumnType("datetime");
            entity.Property(e => e.PreviRedPerIniIndSust).HasColumnType("datetime");
            entity.Property(e => e.PreviRedPerTer).HasColumnType("datetime");
            entity.Property(e => e.PreviRedPerTerIndSust).HasColumnType("datetime");
            entity.Property(e => e.PreviRedRegPrev)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.SalFun)
                .HasMaxLength(15)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.SalPlan).HasColumnType("money");
            entity.Property(e => e.TraCodTramo)
                .HasMaxLength(8)
                .IsUnicode(false);
            entity.Property(e => e.VinCodExCajaCja).HasColumnName("VinCodExCajaCJA");
            entity.Property(e => e.VinCodExCajaCjadsh).HasColumnName("VinCodExCajaCJADsh");
            entity.Property(e => e.VinTasaDesahucioCja).HasColumnName("VinTasaDesahucioCJA");
            entity.Property(e => e.VinTasaImposicionCja).HasColumnName("VinTasaImposicionCJA");
        });

        modelBuilder.Entity<TmpTRhuRemProcCentraliza>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("TmpT_RhuRemProcCentraliza");

            entity.Property(e => e.CodOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.DocCceNumero)
                .HasMaxLength(25)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EntId2).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EntRut)
                .HasMaxLength(12)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.GlosaErrorValida).HasColumnType("text");
            entity.Property(e => e.PCdiId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCdiId");
            entity.Property(e => e.PCdiIdAporte)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCdiIdAporte");
            entity.Property(e => e.PCfiId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCfiId");
            entity.Property(e => e.PCfiIdAporte)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCfiIdAporte");
            entity.Property(e => e.PConcRemId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pConcRemId");
            entity.Property(e => e.PCreId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCreId");
            entity.Property(e => e.PCtaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtaId");
            entity.Property(e => e.PCtaIdAporte)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtaIdAporte");
            entity.Property(e => e.PCtoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtoId");
            entity.Property(e => e.PEntId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntId");
            entity.Property(e => e.PItmGruConId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pItmGruConId");
            entity.Property(e => e.PLineaProdId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pLineaProdId");
            entity.Property(e => e.PLineaProdIdAporte)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pLineaProdIdAporte");
            entity.Property(e => e.PLiqId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pLiqId");
            entity.Property(e => e.PLiqTotId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pLiqTotId");
            entity.Property(e => e.PMonedaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMonedaId");
            entity.Property(e => e.PMovCceId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMovCceId");
            entity.Property(e => e.PMovCceIdAp)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMovCceIdAp");
            entity.Property(e => e.PTprId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTprId");
            entity.Property(e => e.PTprIdAporte)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTprIdAporte");
            entity.Property(e => e.PliqDetId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pliqDetId");
            entity.Property(e => e.PryNumero)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PryNumeroAporte)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.Rut)
                .HasMaxLength(12)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.TipoImputacion)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.TipoOrigen).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.TipoOrigenAporte).HasColumnType("numeric(9, 0)");
        });

        modelBuilder.Entity<TmpTRhuRemProcConsultum>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("TmpT_RhuRemProcConsulta");

            entity.Property(e => e.CantProcesados).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.CnRcodigo)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("CnRCodigo");
            entity.Property(e => e.CnTbaseAlfNum)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("CnTBaseAlfNum");
            entity.Property(e => e.CnTbaseNum).HasColumnName("CnTBaseNum");
            entity.Property(e => e.CnTformula)
                .HasColumnType("text")
                .HasColumnName("CnTFormula");
            entity.Property(e => e.CnTindFormula).HasColumnName("CnTIndFormula");
            entity.Property(e => e.CnTindValorInf).HasColumnName("CnTIndValorInf");
            entity.Property(e => e.CnTmdaId)
                .HasColumnType("money")
                .HasColumnName("CnTMdaId");
            entity.Property(e => e.CnTorigenMov)
                .HasMaxLength(10)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("CnTOrigenMov");
            entity.Property(e => e.CnTprioridadCalc).HasColumnName("CnTPrioridadCalc");
            entity.Property(e => e.CnTrefOrigen)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("CnTRefOrigen");
            entity.Property(e => e.CnTvalorAlNum)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("CnTValorAlNum");
            entity.Property(e => e.CnTvalorAplicado).HasColumnName("CnTValorAplicado");
            entity.Property(e => e.CnTvalorFecha)
                .HasColumnType("datetime")
                .HasColumnName("CnTValorFecha");
            entity.Property(e => e.CnTvalorHora).HasColumnName("CnTValorHora");
            entity.Property(e => e.CnTvalorNumerico).HasColumnName("CnTValorNumerico");
            entity.Property(e => e.CodOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.LqDorigenMov)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("LqDOrigenMov");
            entity.Property(e => e.NcnCodOrigen)
                .HasMaxLength(8)
                .IsUnicode(false);
            entity.Property(e => e.PConcRemId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pConcRemId");
            entity.Property(e => e.PCtoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtoId");
            entity.Property(e => e.PItmOrigenAhId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pItmOrigenAhId");
            entity.Property(e => e.TmpConcId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
        });

        modelBuilder.Entity<TmpTRhuRemProcPago>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("TmpT_RhuRemProcPagos");

            entity.Property(e => e.CodOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.LqDrefOrigenId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("LqDRefOrigenId");
            entity.Property(e => e.PCdiId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCdiId");
            entity.Property(e => e.PCfiId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCfiId");
            entity.Property(e => e.PCtaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtaId");
            entity.Property(e => e.PEntId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntId");
            entity.Property(e => e.PFormaPagoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pFormaPagoId");
            entity.Property(e => e.PItmTipEntOri)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pItmTipEntOri");
            entity.Property(e => e.PLineaProdId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pLineaProdId");
            entity.Property(e => e.PLiqId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pLiqId");
            entity.Property(e => e.PTprId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTprId");
            entity.Property(e => e.PryNumero)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.TipoImputacion)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<TmpTRhuRemProcesosCon>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("TmpT_RhuRemProcesosCons");

            entity.Property(e => e.CodOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.CprPrioridadCalc).HasColumnName("CPrPrioridadCalc");
            entity.Property(e => e.PProcConcId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pProcConcId");
            entity.Property(e => e.XCprPrioridadCalc).HasColumnName("xCPrPrioridadCalc");
        });

        modelBuilder.Entity<TmpTRhuRemSimulacion>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("TmpT_RhuRemSimulacion");

            entity.HasIndex(e => e.CodOwner, "I1_TmpT_RhuRemSimulacion");

            entity.Property(e => e.CnRcodigo)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("CnRCodigo");
            entity.Property(e => e.CnRdescripcion)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("CnRDescripcion");
            entity.Property(e => e.CnRtipoFormula)
                .HasMaxLength(8)
                .IsUnicode(false)
                .HasColumnName("CnRTipoFormula");
            entity.Property(e => e.CodOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.LqDorigenMov)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("LqDOrigenMov");
            entity.Property(e => e.LqDrefOrigenId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("LqDRefOrigenId");
            entity.Property(e => e.LqDvalBaseAlf)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("LqDValBaseAlf");
            entity.Property(e => e.LqDvalBaseFec)
                .HasColumnType("datetime")
                .HasColumnName("LqDValBaseFec");
            entity.Property(e => e.LqDvalBaseNum).HasColumnName("LqDValBaseNum");
            entity.Property(e => e.LqDvalor).HasColumnName("LqDValor");
            entity.Property(e => e.LqTperId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("LqTPerId");
            entity.Property(e => e.LqTperIdDev)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("LqTPerIdDev");
            entity.Property(e => e.PConcRemId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pConcRemId");
            entity.Property(e => e.PFicPerId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pFicPerId");
            entity.Property(e => e.PerGlosa)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PerGlosaDev)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<TmpTRhuRemTramoAsigFam>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("TmpT_RhuRemTramoAsigFam");

            entity.Property(e => e.PTramoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTramoId");
            entity.Property(e => e.TraDesdePesos).HasColumnType("money");
            entity.Property(e => e.TraTopePesos).HasColumnType("money");
        });

        modelBuilder.Entity<TmpTTesDetCorrMon>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("TmpT_TesDetCorrMon");

            entity.HasIndex(e => e.CodOwner, "TmpI_TesDetalleDoc01").HasFillFactor(90);

            entity.Property(e => e.CodOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.DocCceNumero)
                .HasMaxLength(25)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EntRut)
                .HasMaxLength(12)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EntRutSec)
                .HasMaxLength(12)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.MovCceGlosa)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PMonedaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMonedaId");
        });

        modelBuilder.Entity<TmpTWmsXml>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("TmpT_WMS_XML");

            entity.Property(e => e.WmsIdDocto)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("Wms_IdDocto");
            entity.Property(e => e.WmsXmlEnviado)
                .HasColumnType("text")
                .HasColumnName("Wms_XmlEnviado");
        });

        modelBuilder.Entity<TmptRhuRemIdMov>(entity =>
        {
            entity.HasKey(e => new { e.CodOwner, e.PMovCceId }).HasName("Tmpt_RhuRemIdMov_Idx");

            entity.ToTable("Tmpt_RhuRemIdMov");

            entity.Property(e => e.CodOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PMovCceId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMovCceId");
        });

        modelBuilder.Entity<TmptSeleccion>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("Tmpt_Seleccion");

            entity.Property(e => e.FldUserCode)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("fld_UserCode");
            entity.Property(e => e.PCtoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtoId");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
        });

        modelBuilder.Entity<TmptWmsRecepImportada>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("Tmpt_Wms_RecepImportadas");

            entity.Property(e => e.PEmbarqueCabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmbarqueCabId");
            entity.Property(e => e.POcCabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pOcCabId");
            entity.Property(e => e.POpeLogtCabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pOpeLogtCabId");
        });

        modelBuilder.Entity<UruTContFacNoPagada>(entity =>
        {
            entity.HasKey(e => new { e.PEmpId, e.DivCodigo, e.EjeAno, e.PerId, e.PCabOpeId }).HasName("UruI_ContFacNoPagadas_PK");

            entity.ToTable("UruT_ContFacNoPagadas");

            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PCabOpeId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCabOpeId");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
        });

        modelBuilder.Entity<UruTRegistroReversa>(entity =>
        {
            entity.HasKey(e => new { e.PEmpId, e.DivCodigo, e.UniCodigo, e.PerId }).HasName("UruI_RegistroReversa_PK");

            entity.ToTable("UruT_RegistroReversa");

            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
        });

        modelBuilder.Entity<UsuAcceso>(entity =>
        {
            entity.HasKey(e => new { e.IdAdm, e.IdAcceso });

            entity.ToTable("USU_ACCESOS");

            entity.HasIndex(e => e.FecAcceso, "IDX_ACCESOS_FECHA").HasFillFactor(90);

            entity.HasIndex(e => e.IdFuncionalidad, "IDX_ACCESOS_FUNCIONALIDAD").HasFillFactor(90);

            entity.HasIndex(e => e.IdUsuario, "IDX_ACCESOS_USUARIO").HasFillFactor(90);

            entity.Property(e => e.IdAdm).HasColumnName("ID_ADM");
            entity.Property(e => e.IdAcceso)
                .HasColumnType("numeric(20, 0)")
                .HasColumnName("ID_ACCESO");
            entity.Property(e => e.Descripcion)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("DESCRIPCION");
            entity.Property(e => e.FecAcceso)
                .HasColumnType("datetime")
                .HasColumnName("FEC_ACCESO");
            entity.Property(e => e.IdFuncionalidad)
                .HasMaxLength(16)
                .IsUnicode(false)
                .HasColumnName("ID_FUNCIONALIDAD");
            entity.Property(e => e.IdUsuario)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("ID_USUARIO");
            entity.Property(e => e.Ip)
                .HasMaxLength(32)
                .IsUnicode(false)
                .HasColumnName("IP");
        });

        modelBuilder.Entity<UsuFuncionalidade>(entity =>
        {
            entity.HasKey(e => e.IdFuncionalidad).HasName("PK_FUNCIONALIDAD");

            entity.ToTable("USU_FUNCIONALIDADES");

            entity.Property(e => e.IdFuncionalidad)
                .HasMaxLength(16)
                .IsUnicode(false)
                .HasColumnName("ID_FUNCIONALIDAD");
            entity.Property(e => e.Descripcion)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("DESCRIPCION");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasColumnName("ESTADO_REG");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("FEC_ESTADO_REG");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("FEC_ING_REG");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("FEC_ULT_MODIF_REG");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .HasColumnName("ID_FUNCION_ULT_MODIF_REG");
            entity.Property(e => e.IdProcesoNegocio)
                .HasMaxLength(16)
                .IsUnicode(false)
                .HasColumnName("ID_PROCESO_NEGOCIO");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("ID_USUARIO_ING_REG");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("ID_USUARIO_ULT_MODIF_REG");
        });

        modelBuilder.Entity<UsuFuncionalidadesComin>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("USU_FUNCIONALIDADES_COMIN");

            entity.Property(e => e.Descripcion)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("DESCRIPCION");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasColumnName("ESTADO_REG");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("FEC_ESTADO_REG");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("FEC_ING_REG");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("FEC_ULT_MODIF_REG");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .HasColumnName("ID_FUNCION_ULT_MODIF_REG");
            entity.Property(e => e.IdFuncionalidad)
                .HasMaxLength(16)
                .IsUnicode(false)
                .HasColumnName("ID_FUNCIONALIDAD");
            entity.Property(e => e.IdProcesoNegocio)
                .HasMaxLength(16)
                .IsUnicode(false)
                .HasColumnName("ID_PROCESO_NEGOCIO");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("ID_USUARIO_ING_REG");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("ID_USUARIO_ULT_MODIF_REG");
        });

        modelBuilder.Entity<UsuFuncionalidadesRole>(entity =>
        {
            entity.HasKey(e => new { e.IdFuncionalidad, e.IdAdm, e.IdRol }).HasName("PK_FUNCIONALIDAD_ROL");

            entity.ToTable("USU_FUNCIONALIDADES_ROLES");

            entity.Property(e => e.IdFuncionalidad)
                .HasMaxLength(16)
                .IsUnicode(false)
                .HasColumnName("ID_FUNCIONALIDAD");
            entity.Property(e => e.IdAdm).HasColumnName("ID_ADM");
            entity.Property(e => e.IdRol)
                .HasMaxLength(16)
                .IsUnicode(false)
                .HasColumnName("ID_ROL");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasColumnName("ESTADO_REG");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("FEC_ESTADO_REG");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("FEC_ING_REG");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("FEC_ULT_MODIF_REG");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .HasColumnName("ID_FUNCION_ULT_MODIF_REG");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("ID_USUARIO_ING_REG");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("ID_USUARIO_ULT_MODIF_REG");
        });

        modelBuilder.Entity<UsuHistClave>(entity =>
        {
            entity.HasKey(e => new { e.Fec, e.IdAdm, e.IdUsuario }).HasName("USU_HIST_CLAVE_PK");

            entity.ToTable("USU_HIST_CLAVE");

            entity.Property(e => e.Fec)
                .HasColumnType("datetime")
                .HasColumnName("FEC");
            entity.Property(e => e.IdAdm).HasColumnName("ID_ADM");
            entity.Property(e => e.IdUsuario)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("ID_USUARIO");
            entity.Property(e => e.Clave)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("CLAVE");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasColumnName("ESTADO_REG");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("FEC_ESTADO_REG");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("FEC_ING_REG");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("FEC_ULT_MODIF_REG");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .HasColumnName("ID_FUNCION_ULT_MODIF_REG");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("ID_USUARIO_ING_REG");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("ID_USUARIO_ULT_MODIF_REG");
            entity.Property(e => e.Tipo).HasColumnName("TIPO");
        });

        modelBuilder.Entity<UsuMenu>(entity =>
        {
            entity.HasKey(e => e.IdMenu);

            entity.ToTable("USU_MENUS");

            entity.Property(e => e.IdMenu)
                .ValueGeneratedNever()
                .HasColumnName("ID_MENU");
            entity.Property(e => e.Descripcion)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("DESCRIPCION");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasColumnName("ESTADO_REG");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("FEC_ESTADO_REG");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("FEC_ING_REG");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("FEC_ULT_MODIF_REG");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .HasColumnName("ID_FUNCION_ULT_MODIF_REG");
            entity.Property(e => e.IdPadre).HasColumnName("ID_PADRE");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("ID_USUARIO_ING_REG");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("ID_USUARIO_ULT_MODIF_REG");
            entity.Property(e => e.Orden).HasColumnName("ORDEN");
            entity.Property(e => e.Url)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("URL");
        });

        modelBuilder.Entity<UsuMenusComin>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("usu_menus_comin");

            entity.Property(e => e.Descripcion)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("DESCRIPCION");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasColumnName("ESTADO_REG");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("FEC_ESTADO_REG");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("FEC_ING_REG");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("FEC_ULT_MODIF_REG");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .HasColumnName("ID_FUNCION_ULT_MODIF_REG");
            entity.Property(e => e.IdMenu).HasColumnName("ID_MENU");
            entity.Property(e => e.IdPadre).HasColumnName("ID_PADRE");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("ID_USUARIO_ING_REG");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("ID_USUARIO_ULT_MODIF_REG");
            entity.Property(e => e.Orden).HasColumnName("ORDEN");
            entity.Property(e => e.Url)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("URL");
        });

        modelBuilder.Entity<UsuMenusFuncionalidade>(entity =>
        {
            entity.HasKey(e => new { e.IdMenu, e.IdFuncionalidad }).HasName("PK_USU_MENUS_FUN");

            entity.ToTable("USU_MENUS_FUNCIONALIDADES");

            entity.Property(e => e.IdMenu).HasColumnName("ID_MENU");
            entity.Property(e => e.IdFuncionalidad)
                .HasMaxLength(16)
                .IsUnicode(false)
                .HasColumnName("ID_FUNCIONALIDAD");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasColumnName("ESTADO_REG");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("FEC_ESTADO_REG");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("FEC_ING_REG");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("FEC_ULT_MODIF_REG");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .HasColumnName("ID_FUNCION_ULT_MODIF_REG");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("ID_USUARIO_ING_REG");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("ID_USUARIO_ULT_MODIF_REG");
            entity.Property(e => e.Orden).HasColumnName("ORDEN");
        });

        modelBuilder.Entity<UsuMenusFuncionalidadesComin>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("USU_MENUS_FUNCIONALIDADES_COMIN");

            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasColumnName("ESTADO_REG");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("FEC_ESTADO_REG");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("FEC_ING_REG");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("FEC_ULT_MODIF_REG");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .HasColumnName("ID_FUNCION_ULT_MODIF_REG");
            entity.Property(e => e.IdFuncionalidad)
                .HasMaxLength(16)
                .IsUnicode(false)
                .HasColumnName("ID_FUNCIONALIDAD");
            entity.Property(e => e.IdMenu).HasColumnName("ID_MENU");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("ID_USUARIO_ING_REG");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("ID_USUARIO_ULT_MODIF_REG");
            entity.Property(e => e.Orden).HasColumnName("ORDEN");
        });

        modelBuilder.Entity<UsuPerfile>(entity =>
        {
            entity.HasKey(e => new { e.IdAdm, e.IdPerfil });

            entity.ToTable("USU_PERFILES");

            entity.Property(e => e.IdAdm).HasColumnName("ID_ADM");
            entity.Property(e => e.IdPerfil)
                .HasMaxLength(16)
                .IsUnicode(false)
                .HasColumnName("ID_PERFIL");
            entity.Property(e => e.Descripcion)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("DESCRIPCION");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasColumnName("ESTADO_REG");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("FEC_ESTADO_REG");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("FEC_ING_REG");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("FEC_ULT_MODIF_REG");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .HasColumnName("ID_FUNCION_ULT_MODIF_REG");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("ID_USUARIO_ING_REG");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("ID_USUARIO_ULT_MODIF_REG");
        });

        modelBuilder.Entity<UsuPerfilesRole>(entity =>
        {
            entity.HasKey(e => new { e.IdAdm, e.IdPerfil, e.IdRol });

            entity.ToTable("USU_PERFILES_ROLES");

            entity.Property(e => e.IdAdm).HasColumnName("ID_ADM");
            entity.Property(e => e.IdPerfil)
                .HasMaxLength(16)
                .IsUnicode(false)
                .HasColumnName("ID_PERFIL");
            entity.Property(e => e.IdRol)
                .HasMaxLength(16)
                .IsUnicode(false)
                .HasColumnName("ID_ROL");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasColumnName("ESTADO_REG");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("FEC_ESTADO_REG");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("FEC_ING_REG");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("FEC_ULT_MODIF_REG");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .HasColumnName("ID_FUNCION_ULT_MODIF_REG");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("ID_USUARIO_ING_REG");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("ID_USUARIO_ULT_MODIF_REG");

            entity.HasOne(d => d.Id).WithMany(p => p.UsuPerfilesRoles)
                .HasForeignKey(d => new { d.IdAdm, d.IdPerfil })
                .HasConstraintName("FK_USU_PERFILES_ROLES_USU_PERFILES");
        });

        modelBuilder.Entity<UsuProcesosnegocio>(entity =>
        {
            entity.HasKey(e => e.IdProcesoNegocio).HasName("PK_PROCESONEGOCIO");

            entity.ToTable("USU_PROCESOSNEGOCIO");

            entity.Property(e => e.IdProcesoNegocio)
                .HasMaxLength(16)
                .IsUnicode(false)
                .HasColumnName("ID_PROCESO_NEGOCIO");
            entity.Property(e => e.Descripcion)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("DESCRIPCION");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasColumnName("ESTADO_REG");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("FEC_ESTADO_REG");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("FEC_ING_REG");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("FEC_ULT_MODIF_REG");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .HasColumnName("ID_FUNCION_ULT_MODIF_REG");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("ID_USUARIO_ING_REG");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("ID_USUARIO_ULT_MODIF_REG");
        });

        modelBuilder.Entity<UsuRecurso>(entity =>
        {
            entity.HasKey(e => e.IdRecurso);

            entity.ToTable("USU_RECURSO");

            entity.HasIndex(e => e.Recurso, "IX_USU_RECURSO_RECURSO").HasFillFactor(90);

            entity.HasIndex(e => e.Tipo, "IX_USU_RECURSO_TIPO").HasFillFactor(90);

            entity.Property(e => e.IdRecurso)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("ID_RECURSO");
            entity.Property(e => e.Recurso)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("RECURSO");
            entity.Property(e => e.Tipo)
                .HasMaxLength(16)
                .IsUnicode(false)
                .HasColumnName("TIPO");

            entity.HasMany(d => d.IdFuncionalidads).WithMany(p => p.IdRecursos)
                .UsingEntity<Dictionary<string, object>>(
                    "UsuRecursoFuncionalidade",
                    r => r.HasOne<UsuFuncionalidade>().WithMany()
                        .HasForeignKey("IdFuncionalidad")
                        .HasConstraintName("FK_RECFUN_RECURSO"),
                    l => l.HasOne<UsuRecurso>().WithMany()
                        .HasForeignKey("IdRecurso")
                        .HasConstraintName("FK_RECFUN_FUNCIONALIDADES"),
                    j =>
                    {
                        j.HasKey("IdRecurso", "IdFuncionalidad");
                        j.ToTable("USU_RECURSO_FUNCIONALIDADES");
                        j.IndexerProperty<string>("IdRecurso")
                            .HasMaxLength(500)
                            .IsUnicode(false)
                            .HasColumnName("ID_RECURSO");
                        j.IndexerProperty<string>("IdFuncionalidad")
                            .HasMaxLength(16)
                            .IsUnicode(false)
                            .HasColumnName("ID_FUNCIONALIDAD");
                    });
        });

        modelBuilder.Entity<UsuRole>(entity =>
        {
            entity.HasKey(e => new { e.IdAdm, e.IdRol }).HasName("PK_ROLES");

            entity.ToTable("USU_ROLES");

            entity.Property(e => e.IdAdm).HasColumnName("ID_ADM");
            entity.Property(e => e.IdRol)
                .HasMaxLength(16)
                .IsUnicode(false)
                .HasColumnName("ID_ROL");
            entity.Property(e => e.Descripcion)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("DESCRIPCION");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasColumnName("ESTADO_REG");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("FEC_ESTADO_REG");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("FEC_ING_REG");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("FEC_ULT_MODIF_REG");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .HasColumnName("ID_FUNCION_ULT_MODIF_REG");
            entity.Property(e => e.IdProcesoNegocio)
                .HasMaxLength(16)
                .IsUnicode(false)
                .HasColumnName("ID_PROCESO_NEGOCIO");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("ID_USUARIO_ING_REG");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("ID_USUARIO_ULT_MODIF_REG");
            entity.Property(e => e.IndAdminPn)
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasColumnName("IND_ADMIN_PN");
            entity.Property(e => e.TipoRolWorkflow)
                .HasMaxLength(4)
                .IsUnicode(false)
                .HasColumnName("TIPO_ROL_WORKFLOW");
        });

        modelBuilder.Entity<UsuSesione>(entity =>
        {
            entity.HasKey(e => new { e.IdAdm, e.IdUsuario, e.IdSesion });

            entity.ToTable("USU_SESIONES");

            entity.Property(e => e.IdAdm).HasColumnName("ID_ADM");
            entity.Property(e => e.IdUsuario)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("ID_USUARIO");
            entity.Property(e => e.IdSesion)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(20, 0)")
                .HasColumnName("ID_SESION");
            entity.Property(e => e.DireccionIp)
                .HasMaxLength(32)
                .IsUnicode(false)
                .HasColumnName("DIRECCION_IP");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasColumnName("ESTADO_REG");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("FEC_ESTADO_REG");
            entity.Property(e => e.FecFin)
                .HasColumnType("datetime")
                .HasColumnName("FEC_FIN");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("FEC_ING_REG");
            entity.Property(e => e.FecInicio)
                .HasColumnType("datetime")
                .HasColumnName("FEC_INICIO");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("FEC_ULT_MODIF_REG");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .HasColumnName("ID_FUNCION_ULT_MODIF_REG");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("ID_USUARIO_ING_REG");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("ID_USUARIO_ULT_MODIF_REG");

            entity.HasOne(d => d.Id).WithMany(p => p.UsuSesiones)
                .HasForeignKey(d => new { d.IdUsuario, d.IdAdm })
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_USUARIOS_SESIONES");
        });

        modelBuilder.Entity<UsuUserControl>(entity =>
        {
            entity.HasKey(e => e.NomUserControl).HasName("USU_USER_CONTROL_PK");

            entity.ToTable("USU_USER_CONTROL");

            entity.Property(e => e.NomUserControl)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("NOM_USER_CONTROL");
            entity.Property(e => e.Descripcion)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("DESCRIPCION");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasColumnName("ESTADO_REG");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("FEC_ESTADO_REG");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("FEC_ING_REG");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("FEC_ULT_MODIF_REG");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .HasColumnName("ID_FUNCION_ULT_MODIF_REG");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("ID_USUARIO_ING_REG");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("ID_USUARIO_ULT_MODIF_REG");
        });

        modelBuilder.Entity<UsuUserControlComin>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("USU_USER_CONTROL_COMIN");

            entity.Property(e => e.Descripcion)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("DESCRIPCION");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasColumnName("ESTADO_REG");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("FEC_ESTADO_REG");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("FEC_ING_REG");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("FEC_ULT_MODIF_REG");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .HasColumnName("ID_FUNCION_ULT_MODIF_REG");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("ID_USUARIO_ING_REG");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("ID_USUARIO_ULT_MODIF_REG");
            entity.Property(e => e.NomUserControl)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("NOM_USER_CONTROL");
        });

        modelBuilder.Entity<UsuUserControlFuncionalidad>(entity =>
        {
            entity.HasKey(e => new { e.NomUserControl, e.IdFuncionalidad }).HasName("PK_USER_CONTROL_FUNCIONALIDAD");

            entity.ToTable("USU_USER_CONTROL_FUNCIONALIDAD");

            entity.Property(e => e.NomUserControl)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("NOM_USER_CONTROL");
            entity.Property(e => e.IdFuncionalidad)
                .HasMaxLength(16)
                .IsUnicode(false)
                .HasColumnName("ID_FUNCIONALIDAD");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasColumnName("ESTADO_REG");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("FEC_ESTADO_REG");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("FEC_ING_REG");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("FEC_ULT_MODIF_REG");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .HasColumnName("ID_FUNCION_ULT_MODIF_REG");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("ID_USUARIO_ING_REG");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("ID_USUARIO_ULT_MODIF_REG");
            entity.Property(e => e.Inicial).HasColumnName("INICIAL");
            entity.Property(e => e.Modo)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("MODO");
        });

        modelBuilder.Entity<UsuUserControlFuncionalidadComin>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("USU_USER_CONTROL_FUNCIONALIDAD_COMIN");

            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasColumnName("ESTADO_REG");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("FEC_ESTADO_REG");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("FEC_ING_REG");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("FEC_ULT_MODIF_REG");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .HasColumnName("ID_FUNCION_ULT_MODIF_REG");
            entity.Property(e => e.IdFuncionalidad)
                .HasMaxLength(16)
                .IsUnicode(false)
                .HasColumnName("ID_FUNCIONALIDAD");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("ID_USUARIO_ING_REG");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("ID_USUARIO_ULT_MODIF_REG");
            entity.Property(e => e.Inicial).HasColumnName("INICIAL");
            entity.Property(e => e.Modo)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("MODO");
            entity.Property(e => e.NomUserControl)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("NOM_USER_CONTROL");
        });

        modelBuilder.Entity<UsuUsuario>(entity =>
        {
            entity.HasKey(e => new { e.IdUsuario, e.IdAdm }).HasName("PK_PERSONA");

            entity.ToTable("USU_USUARIOS", tb => tb.HasTrigger("Fin700v7_v7_usu_usuarios_UpdateT"));

            entity.Property(e => e.IdUsuario)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("ID_USUARIO");
            entity.Property(e => e.IdAdm).HasColumnName("ID_ADM");
            entity.Property(e => e.CantIntentos).HasColumnName("CANT_INTENTOS");
            entity.Property(e => e.Clave)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("CLAVE");
            entity.Property(e => e.CodAgencia).HasColumnName("COD_AGENCIA");
            entity.Property(e => e.CodArea).HasColumnName("COD_AREA");
            entity.Property(e => e.CodCargo).HasColumnName("COD_CARGO");
            entity.Property(e => e.CodComuna).HasColumnName("COD_COMUNA");
            entity.Property(e => e.CodSafp)
                .HasMaxLength(16)
                .IsUnicode(false)
                .HasColumnName("COD_SAFP");
            entity.Property(e => e.Direccion)
                .HasMaxLength(45)
                .IsUnicode(false)
                .HasColumnName("DIRECCION");
            entity.Property(e => e.Email)
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasColumnName("EMAIL");
            entity.Property(e => e.Estado)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("ESTADO");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasColumnName("ESTADO_REG");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("FEC_ESTADO_REG");
            entity.Property(e => e.FecExpClave)
                .HasColumnType("datetime")
                .HasColumnName("FEC_EXP_CLAVE");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("FEC_ING_REG");
            entity.Property(e => e.FecUltIngreso)
                .HasColumnType("datetime")
                .HasColumnName("FEC_ULT_INGRESO");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("FEC_ULT_MODIF_REG");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .HasColumnName("ID_FUNCION_ULT_MODIF_REG");
            entity.Property(e => e.IdPersona)
                .HasMaxLength(15)
                .IsUnicode(false)
                .HasColumnName("ID_PERSONA");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("ID_USUARIO_ING_REG");
            entity.Property(e => e.IdUsuarioJefe)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("ID_USUARIO_JEFE");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("ID_USUARIO_ULT_MODIF_REG");
            entity.Property(e => e.IndBloqueo)
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasColumnName("IND_BLOQUEO");
            entity.Property(e => e.Nombre)
                .HasMaxLength(30)
                .IsUnicode(false)
                .HasColumnName("NOMBRE");
            entity.Property(e => e.Telefono)
                .HasMaxLength(15)
                .IsUnicode(false)
                .HasColumnName("TELEFONO");
        });

        modelBuilder.Entity<UsuUsuariosPerfile>(entity =>
        {
            entity.HasKey(e => new { e.IdAdm, e.IdUsuario, e.IdPerfil });

            entity.ToTable("USU_USUARIOS_PERFILES");

            entity.Property(e => e.IdAdm).HasColumnName("ID_ADM");
            entity.Property(e => e.IdUsuario)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("ID_USUARIO");
            entity.Property(e => e.IdPerfil)
                .HasMaxLength(16)
                .IsUnicode(false)
                .HasColumnName("ID_PERFIL");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasColumnName("ESTADO_REG");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("FEC_ESTADO_REG");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("FEC_ING_REG");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("FEC_ULT_MODIF_REG");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .HasColumnName("ID_FUNCION_ULT_MODIF_REG");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("ID_USUARIO_ING_REG");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("ID_USUARIO_ULT_MODIF_REG");

            entity.HasOne(d => d.Id).WithMany(p => p.UsuUsuariosPerfiles)
                .HasForeignKey(d => new { d.IdAdm, d.IdPerfil })
                .HasConstraintName("FK_USU_USUARIOS_PERFILES_USU_PERFILES");
        });

        modelBuilder.Entity<UsuUsuariosRole>(entity =>
        {
            entity.HasKey(e => new { e.IdUsuario, e.IdAdm, e.IdRol }).HasName("PK_PERSONA_ROL");

            entity.ToTable("USU_USUARIOS_ROLES");

            entity.Property(e => e.IdUsuario)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("ID_USUARIO");
            entity.Property(e => e.IdAdm).HasColumnName("ID_ADM");
            entity.Property(e => e.IdRol)
                .HasMaxLength(16)
                .IsUnicode(false)
                .HasColumnName("ID_ROL");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasColumnName("ESTADO_REG");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("FEC_ESTADO_REG");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("FEC_ING_REG");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("FEC_ULT_MODIF_REG");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .HasColumnName("ID_FUNCION_ULT_MODIF_REG");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("ID_USUARIO_ING_REG");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("ID_USUARIO_ULT_MODIF_REG");
        });

        modelBuilder.Entity<VenTDoctoLegalCar>(entity =>
        {
            entity.HasKey(e => e.DoctoLegalCarId).HasName("VenT_DoctoLegalCar_PK");

            entity.ToTable("VenT_DoctoLegalCar");

            entity.Property(e => e.DoctoLegalCarId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.CliRut)
                .HasMaxLength(12)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.DlcFecDespacho).HasColumnType("datetime");
            entity.Property(e => e.DlcFecDocto).HasColumnType("datetime");
            entity.Property(e => e.DlcFecVecto).HasColumnType("datetime");
            entity.Property(e => e.PBodegaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pBodegaId");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PTipoOpeId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTipoOpeId");
            entity.Property(e => e.PVenId).HasColumnName("pVenId");
        });

        modelBuilder.Entity<VenTDoctoLegalDet>(entity =>
        {
            entity.HasKey(e => e.DoctoLegalDetId).HasName("VenT_DoctoLegalDet_PK");

            entity.ToTable("VenT_DoctoLegalDet");

            entity.Property(e => e.DoctoLegalDetId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.DvdAfectoExento)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PCdiId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCdiId");
            entity.Property(e => e.PCreId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCreId");
            entity.Property(e => e.PDoctoLegalCarId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pDoctoLegalCarId");
            entity.Property(e => e.PProductoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pProductoId");
            entity.Property(e => e.PTprId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTprId");
            entity.Property(e => e.PUnidadMedId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pUnidadMedId");
            entity.Property(e => e.PryNumero)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.TipoCodigo)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<VenTRutaDespacho>(entity =>
        {
            entity.HasKey(e => e.RutaDespId).HasName("VenT_RutaDespacho_PK");

            entity.ToTable("VenT_RutaDespacho");

            entity.Property(e => e.RutaDespId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.PTipoVehId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTipoVehId");
            entity.Property(e => e.RutaDespDes)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<VtaTAduanaTransporte>(entity =>
        {
            entity.HasKey(e => new { e.PEntSucId, e.AtrIndEntidad }).HasName("Pk_VtaT_AduanaTransporte");

            entity.ToTable("VtaT_AduanaTransporte");

            entity.Property(e => e.PEntSucId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntSucId");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PEntId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntId");
        });

        modelBuilder.Entity<VtaTAgrupaVendedorCab>(entity =>
        {
            entity.HasKey(e => e.AgrupaVendedorCabId).HasName("Pk_VtaT_AgrupaVendedorCab");

            entity.ToTable("VtaT_AgrupaVendedorCab");

            entity.Property(e => e.AgrupaVendedorCabId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.AvcGlosa)
                .HasMaxLength(40)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.AvcResponsableId).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
        });

        modelBuilder.Entity<VtaTAgrupaVendedorDet>(entity =>
        {
            entity.HasKey(e => new { e.PAgrupaVendedorCabId, e.PVendedorId }).HasName("Pk_VtaT_AgrupaVendedorDet");

            entity.ToTable("VtaT_AgrupaVendedorDet");

            entity.Property(e => e.PAgrupaVendedorCabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pAgrupaVendedorCabId");
            entity.Property(e => e.PVendedorId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pVendedorId");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
        });

        modelBuilder.Entity<VtaTAsociaNegocioVisacion>(entity =>
        {
            entity.HasKey(e => e.AsociaNegVisacionId).HasName("Pk_VtaT_AsociaNegVisacion");

            entity.ToTable("VtaT_AsociaNegocioVisacion");

            entity.Property(e => e.AsociaNegVisacionId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PGrupoVisacionCabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pGrupoVisacionCabId");
            entity.Property(e => e.PNegocioVtaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pNegocioVtaId");
        });

        modelBuilder.Entity<VtaTAsociaPuertoBodega>(entity =>
        {
            entity.HasKey(e => new { e.PEmpId, e.PPuertoId, e.PBodegaId }).HasName("Pk_VtaT_AsociaPuertoBodega");

            entity.ToTable("VtaT_AsociaPuertoBodega");

            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PPuertoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pPuertoId");
            entity.Property(e => e.PBodegaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pBodegaId");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
        });

        modelBuilder.Entity<VtaTBitacoraDocumento>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("VtaT_BitacoraDocumento");

            entity.Property(e => e.BidDatoAntiguo)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.BidDatoNuevo)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.BidGlosa)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.BitacoraDocumentoId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.IdFuncionalidad)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcionalidad");
            entity.Property(e => e.IdUsuario)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario");
            entity.Property(e => e.PDocReferenciaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pDocReferenciaId");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
        });

        modelBuilder.Entity<VtaTBitacoraVisacion>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("VtaT_BitacoraVisacion");

            entity.Property(e => e.BidGlosa)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.BidGlosaMotivo)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.BitacoraVisacionId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionalidad)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcionalidad");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PCabReferenciaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCabReferenciaId");
            entity.Property(e => e.PDetReferenciaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pDetReferenciaId");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PGlbMotivoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pGlbMotivoId");
        });

        modelBuilder.Entity<VtaTBodegaVentum>(entity =>
        {
            entity.HasKey(e => new { e.PBodegaId, e.UniCodigo }).HasName("Pk_VtaT_BodegaVenta");

            entity.ToTable("VtaT_BodegaVenta");

            entity.Property(e => e.PBodegaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pBodegaId");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
        });

        modelBuilder.Entity<VtaTClausulasVentum>(entity =>
        {
            entity.HasKey(e => e.ClausulaVentaId).HasName("VtaT_ClausulasVenta_PK");

            entity.ToTable("VtaT_ClausulasVenta");

            entity.Property(e => e.ClausulaVentaId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.DescriClauVta)
                .HasMaxLength(90)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.DescriClauVtaI)
                .HasMaxLength(90)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("DescriClauVta_I");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
        });

        modelBuilder.Entity<VtaTClienteComercial>(entity =>
        {
            entity.HasKey(e => new { e.PEntId, e.PEmpId }).HasName("VtaT_ClienteComercial_PK");

            entity.ToTable("VtaT_ClienteComercial", tb => tb.HasTrigger("VtaT_ClienteComercial_Delete"));

            entity.Property(e => e.PEntId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntId");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.CliComentarioConvDevol)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.CliDiaSemana)
                .HasMaxLength(5)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.CliFrecuenciaDevol)
                .HasMaxLength(90)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.CliIndConvDevol).HasColumnName("CLiIndConvDevol");
            entity.Property(e => e.CliObsDocumento)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.CliObsGenerica)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.CliOrdenDia)
                .HasMaxLength(10)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.CliPorcDespacho).HasColumnType("money");
            entity.Property(e => e.CliPorcDevol).HasColumnType("money");
            entity.Property(e => e.CliTipoAjusteFec)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.CliVigenciaConvDevol).HasColumnType("datetime");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PIdiomaEspId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pIdiomaEspId");
            entity.Property(e => e.PListaPreCabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pListaPreCabId");
            entity.Property(e => e.PVendedorId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pVendedorId");
        });

        modelBuilder.Entity<VtaTClienteCredito>(entity =>
        {
            entity.HasKey(e => new { e.PEntId, e.PEmpId }).HasName("Vtat_ClienteCredito_PK");

            entity.ToTable("VtaT_ClienteCredito", tb => tb.HasTrigger("VtaT_ClienteCredito_Delete"));

            entity.Property(e => e.PEntId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntId");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.CcoIntCobrador)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.CliIndCredito)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.Fecha).HasColumnType("datetime");
            entity.Property(e => e.FechaDate).HasColumnType("datetime");
            entity.Property(e => e.GlosaBloqueo)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.GlosaVisa)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PCondPagoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCondPagoId");
            entity.Property(e => e.PMonedaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMonedaId");
            entity.Property(e => e.PMonedaPatrimId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMonedaPatrimId");
        });

        modelBuilder.Entity<VtaTClienteDireccion>(entity =>
        {
            entity.HasKey(e => new { e.PEntDirId, e.PEmpId, e.PEntId }).HasName("Pk_VtaT_ClienteDireccion");

            entity.ToTable("VtaT_ClienteDireccion", tb => tb.HasTrigger("VtaT_ClienteDireccion_Delete"));

            entity.HasIndex(e => new { e.PEntId, e.PEmpId }, "Idx_VtaT_ClienteDireccion").HasFillFactor(90);

            entity.Property(e => e.PEntDirId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntDirId");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PEntId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntId");
            entity.Property(e => e.AgenteTransporte)
                .HasMaxLength(40)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.DireccionExportacion)
                .HasMaxLength(254)
                .IsUnicode(false);
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.MedioTransporte)
                .HasMaxLength(40)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PRutaDespId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pRutaDespId");
        });

        modelBuilder.Entity<VtaTClienteSucursal>(entity =>
        {
            entity.HasKey(e => new { e.PEntSucId, e.PEmpId }).HasName("Vtat_ClienteSucursal_PK");

            entity.ToTable("VtaT_ClienteSucursal", tb => tb.HasTrigger("VtaT_ClienteSucursal_Delete"));

            entity.Property(e => e.PEntSucId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntSucId");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.CliSucReferencia)
                .HasMaxLength(80)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PEntId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntId");
            entity.Property(e => e.PEntSucCompraId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntSucCompraId");
            entity.Property(e => e.PListaPreCabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pListaPreCabId");
            entity.Property(e => e.PMonedaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMonedaId");
            entity.Property(e => e.PVendedorId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pVendedorId");
        });

        modelBuilder.Entity<VtaTConfiguracion>(entity =>
        {
            entity.HasKey(e => new { e.PEmpId, e.EjeAno });

            entity.ToTable("VtaT_Configuracion");

            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.CfgVtaConsolidaLcredito).HasColumnName("CfgVtaConsolidaLCredito");
            entity.Property(e => e.CfgVtaImprimeGlosaNp).HasColumnName("CfgVtaImprimeGlosaNP");
            entity.Property(e => e.CfgVtaImprimeProductoDesNp).HasColumnName("CfgVtaImprimeProductoDesNP");
            entity.Property(e => e.CfgVtaIndCcosto).HasColumnName("CfgVtaIndCCosto");
            entity.Property(e => e.CfgVtaUsaReaperturaNp).HasColumnName("CfgVtaUsaReaperturaNP");
            entity.Property(e => e.CorrelativoNp).HasColumnName("CorrelativoNP");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PCconsumoId)
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("pCConsumoId");
            entity.Property(e => e.PCondPagoId)
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("pCondPagoId");
            entity.Property(e => e.PListaPreCabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pListaPreCabId");
            entity.Property(e => e.UsaCorrNp).HasColumnName("UsaCorrNP");
        });

        modelBuilder.Entity<VtaTConfiguracionDe>(entity =>
        {
            entity.HasKey(e => new { e.PEmpId, e.EjeAno, e.CfgVtaCodigoDescto });

            entity.ToTable("VtaT_ConfiguracionDes");

            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.CfgVtaGlosaDescto)
                .HasMaxLength(40)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
        });

        modelBuilder.Entity<VtaTConfiguracionExp>(entity =>
        {
            entity.HasKey(e => new { e.PEmpId, e.EjeAno });

            entity.ToTable("VtaT_ConfiguracionExp");

            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.CfgVtapContraCtaFsoId).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.CfgVtapServicioFleteId).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.CfgVtapServicioOtroGastoId).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.CfgVtapServicioSeguroId).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
        });

        modelBuilder.Entity<VtaTConsignaLiquidaCab>(entity =>
        {
            entity.HasKey(e => e.ConsignaLiquidaCabId).HasName("Pk_VtaT_ConsignaLiquidaCab");

            entity.ToTable("VtaT_ConsignaLiquidaCab");

            entity.HasIndex(e => e.PEmbarqueCabId, "Idx_VtaT_EmbarqueLiquida").HasFillFactor(90);

            entity.Property(e => e.ConsignaLiquidaCabId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.CodOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.FechaParidad).HasColumnType("datetime");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.LccFecDocto).HasColumnType("datetime");
            entity.Property(e => e.LccFecPagoAcordado).HasColumnType("datetime");
            entity.Property(e => e.LccObservacion)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.LccReferenciaDocto)
                .HasMaxLength(50)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PEmbarqueCabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmbarqueCabId");
        });

        modelBuilder.Entity<VtaTConsignaLiquidaCabCtc>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("VtaT_ConsignaLiquidaCabCtc");

            entity.HasIndex(e => new { e.PConsignaLiquidaCabId, e.PConsignaTransfiereCabId }, "Idx_VtaT_ConsignaLiquidaCabCtc").HasFillFactor(90);

            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.PConsignaLiquidaCabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pConsignaLiquidaCabId");
            entity.Property(e => e.PConsignaTransfiereCabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pConsignaTransfiereCabId");
        });

        modelBuilder.Entity<VtaTConsignaLiquidaCabDoc>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("VtaT_ConsignaLiquidaCabDoc");

            entity.HasIndex(e => e.PConsignaLiquidaCabId, "Idx_VtaT_ConsignaLiquidaCabDoc").HasFillFactor(90);

            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.LcdArchivoDocto)
                .HasMaxLength(90)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.LcdObservacion)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.LcdRutaDocto)
                .HasMaxLength(90)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PConsignaLiquidaCabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pConsignaLiquidaCabId");
        });

        modelBuilder.Entity<VtaTConsignaLiquidaCabGto>(entity =>
        {
            entity.HasKey(e => new { e.PConsignaLiquidaCabId, e.PTipoGastoId }).HasName("Pk_VtaT_ConsignaLiquidaGto");

            entity.ToTable("VtaT_ConsignaLiquidaCabGto");

            entity.Property(e => e.PConsignaLiquidaCabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pConsignaLiquidaCabId");
            entity.Property(e => e.PTipoGastoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTipoGastoId");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
        });

        modelBuilder.Entity<VtaTConsignaLiquidaDet>(entity =>
        {
            entity.HasKey(e => e.ConsignaLiquidaDetId).HasName("Pk_VtaT_ConsignaLiquidaDet");

            entity.ToTable("VtaT_ConsignaLiquidaDet");

            entity.HasIndex(e => e.PConsignaLiquidaCabId, "Idx_VtaT_ConsignaLiquidaDet").HasFillFactor(90);

            entity.HasIndex(e => new { e.PConsignaLiquidaCabId, e.PDoctoVentaDetId }, "Uk_Vtat_ConsignaLiquidaDet").IsUnique();

            entity.Property(e => e.ConsignaLiquidaDetId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PConsignaLiquidaCabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pConsignaLiquidaCabId");
            entity.Property(e => e.PDoctoVentaDetId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pDoctoVentaDetId");
        });

        modelBuilder.Entity<VtaTConsignaTransfiereCab>(entity =>
        {
            entity.HasKey(e => e.ConsignaTransfiereCabId).HasName("Pk_VtaT_ConsignaTransfiereCab");

            entity.ToTable("VtaT_ConsignaTransfiereCab");

            entity.HasIndex(e => new { e.PEmbarqueCabId, e.PEntId }, "Idx_VtaT_EmbarqueClienteTransfiere").HasFillFactor(90);

            entity.HasIndex(e => e.PEmbarqueCabId, "Idx_VtaT_EmbarqueTransfiere").HasFillFactor(90);

            entity.Property(e => e.ConsignaTransfiereCabId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.CodOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.CtcFecDocto).HasColumnType("datetime");
            entity.Property(e => e.CtcFecPagoAcordado).HasColumnType("datetime");
            entity.Property(e => e.CtcObservacion)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.CtcReferenciaDocto)
                .HasMaxLength(50)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.CtcReferenciaFecPago)
                .HasMaxLength(50)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.FechaParidad).HasColumnType("datetime");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PEmbarqueCabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmbarqueCabId");
            entity.Property(e => e.PEntId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntId");
            entity.Property(e => e.PEntSucId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntSucId");
            entity.Property(e => e.PMonedaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMonedaId");
        });

        modelBuilder.Entity<VtaTConsignaTransfiereCabDoc>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("VtaT_ConsignaTransfiereCabDoc");

            entity.HasIndex(e => e.PConsignaTransfiereCabId, "Idx_VtaT_ConsignaTransfiereCabDoc").HasFillFactor(90);

            entity.Property(e => e.CtdArchivoDocto)
                .HasMaxLength(90)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.CtdObservacion)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.CtdRutaDocto)
                .HasMaxLength(90)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.PConsignaTransfiereCabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pConsignaTransfiereCabId");
        });

        modelBuilder.Entity<VtaTConsignaTransfiereDet>(entity =>
        {
            entity.HasKey(e => e.ConsignaTransfiereDetId).HasName("Pk_VtaT_ConsignaTransfiereDet");

            entity.ToTable("VtaT_ConsignaTransfiereDet");

            entity.HasIndex(e => e.PConsignaTransfiereCabId, "Idx_VtaT_ConsignaTransfiereDet").HasFillFactor(90);

            entity.HasIndex(e => new { e.PConsignaTransfiereCabId, e.PDoctoVentaDetId }, "Uk_Vtat_ConsignaTransfiereDet").IsUnique();

            entity.Property(e => e.ConsignaTransfiereDetId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PConsignaTransfiereCabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pConsignaTransfiereCabId");
            entity.Property(e => e.PDoctoVentaDetId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pDoctoVentaDetId");
        });

        modelBuilder.Entity<VtaTConsignatarioNotificador>(entity =>
        {
            entity.HasKey(e => new { e.PEmpId, e.PEntId, e.PEntSucId, e.PEntSucConsigNotifId, e.CnoTipoEntidad }).HasName("Pk_VtaT_ConsignatarioNotificador_PK");

            entity.ToTable("VtaT_ConsignatarioNotificador");

            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PEntId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntId");
            entity.Property(e => e.PEntSucId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntSucId");
            entity.Property(e => e.PEntSucConsigNotifId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntSucConsigNotifId");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PEntConConsigNotifId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntConConsigNotifId");
            entity.Property(e => e.PEntConsigNotifId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntConsigNotifId");
        });

        modelBuilder.Entity<VtaTCotizacionCab>(entity =>
        {
            entity.HasKey(e => e.CotizacionCabId).HasName("Pk_VtaT_CotizacionCab");

            entity.ToTable("VtaT_CotizacionCab");

            entity.Property(e => e.CotizacionCabId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.CodOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.DvcAtencionAcot)
                .HasMaxLength(70)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("DvcAtencionACot");
            entity.Property(e => e.DvcFecDespacho).HasColumnType("datetime");
            entity.Property(e => e.DvcFecOrdenC).HasColumnType("datetime");
            entity.Property(e => e.DvcFechaVigencia).HasColumnType("datetime");
            entity.Property(e => e.DvcGlosaPerdida)
                .HasMaxLength(255)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.DvcNumOrdenC)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.DvcTipoFecha)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.FechaDocumento).HasColumnType("datetime");
            entity.Property(e => e.FechaParidad).HasColumnType("datetime");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PCdiId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCdiId");
            entity.Property(e => e.PCondPagoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCondPagoId");
            entity.Property(e => e.PContratoid)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pContratoid");
            entity.Property(e => e.PConvenioId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pConvenioId");
            entity.Property(e => e.PCreId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCreId");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PEntId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntId");
            entity.Property(e => e.PEntIdSec)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntIdSec");
            entity.Property(e => e.PEntSucId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntSucId");
            entity.Property(e => e.PEntSucIdSec)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntSucIdSec");
            entity.Property(e => e.PGlbMotivoIdPerdida)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pGlbMotivoIdPerdida");
            entity.Property(e => e.PMonedaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMonedaId");
            entity.Property(e => e.PNegocioVtaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pNegocioVtaId");
            entity.Property(e => e.PPedidoMaterialId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pPedidoMaterialId");
            entity.Property(e => e.PTprId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTprId");
            entity.Property(e => e.PVendedorDigitaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pVendedorDigitaId");
            entity.Property(e => e.PVendedorId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pVendedorId");
            entity.Property(e => e.PryNumero)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<VtaTCotizacionDet>(entity =>
        {
            entity.HasKey(e => e.CotizacionDetId).HasName("Pk_VtaT_CotizacionDet");

            entity.ToTable("VtaT_CotizacionDet");

            entity.HasIndex(e => e.PCotizacionCabId, "Idx_Vtat_CotizacionDet");

            entity.Property(e => e.CotizacionDetId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.CodigoArticuloSku)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.DvdFecDespacho).HasColumnType("datetime");
            entity.Property(e => e.DvdGlosaPerdida)
                .HasMaxLength(255)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.DvdUsuarioPrecio)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PBodegaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pBodegaId");
            entity.Property(e => e.PCategoriaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCategoriaId");
            entity.Property(e => e.PCdiId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCdiId");
            entity.Property(e => e.PCotizacionCabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCotizacionCabId");
            entity.Property(e => e.PCotizacionDetId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCotizacionDetId");
            entity.Property(e => e.PCreId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCreId");
            entity.Property(e => e.PDoctoVentaDetId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pDoctoVentaDetId");
            entity.Property(e => e.PDoctoVentaKitId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pDoctoVentaKitId");
            entity.Property(e => e.PDvcDirId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pDvcDirId");
            entity.Property(e => e.PEntSucId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntSucId");
            entity.Property(e => e.PGlbMotivoIdPerdida)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pGlbMotivoIdPerdida");
            entity.Property(e => e.PListaPreCabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pListaPreCabId");
            entity.Property(e => e.PPedidoMaterialDetId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pPedidoMaterialDetId");
            entity.Property(e => e.PProductoCodId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pProductoCodId");
            entity.Property(e => e.PProductoEspTecId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pProductoEspTecId");
            entity.Property(e => e.PProductoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pProductoId");
            entity.Property(e => e.PProductoKitId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pProductoKitId");
            entity.Property(e => e.PRebateId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pRebateId");
            entity.Property(e => e.PServicioId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pServicioId");
            entity.Property(e => e.PTprId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTprId");
            entity.Property(e => e.PUnidadMedId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pUnidadMedId");
            entity.Property(e => e.PUnidadMedStockId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pUnidadMedStockId");
            entity.Property(e => e.PryNumero)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<VtaTCotizacionDetGlo>(entity =>
        {
            entity.HasKey(e => new { e.PCotizacionDetId, e.DvgLinea }).HasName("Pk_VtaT_CotizacionDetGlo");

            entity.ToTable("VtaT_CotizacionDetGlo");

            entity.HasIndex(e => e.PCotizacionCabId, "Idx_VtaT_CotizacionDetGlo");

            entity.Property(e => e.PCotizacionDetId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCotizacionDetId");
            entity.Property(e => e.DvgGlosaItem)
                .HasMaxLength(90)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PCotizacionCabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCotizacionCabId");
        });

        modelBuilder.Entity<VtaTCotizacionDetImp>(entity =>
        {
            entity.HasKey(e => new { e.PCotizacionDetId, e.PImpuestoId }).HasName("Pk_VtaT_CotizacionDetImp");

            entity.ToTable("VtaT_CotizacionDetImp");

            entity.HasIndex(e => e.PCotizacionCabId, "Idx_VtaT_CotizacionDetImp");

            entity.Property(e => e.PCotizacionDetId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCotizacionDetId");
            entity.Property(e => e.PImpuestoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pImpuestoId");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PCotizacionCabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCotizacionCabId");
        });

        modelBuilder.Entity<VtaTCuentaVisacion>(entity =>
        {
            entity.HasKey(e => new { e.PEmpId, e.PCtaId, e.TcvCodigo });

            entity.ToTable("VtaT_CuentaVisacion");

            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PCtaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCtaId");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
        });

        modelBuilder.Entity<VtaTDevolucionCab>(entity =>
        {
            entity.HasKey(e => e.DevolucionCabId).HasName("Pk_VtaT_DevolucionCab");

            entity.ToTable("VtaT_DevolucionCab");

            entity.Property(e => e.DevolucionCabId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.CodOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.DpcObservacion)
                .HasMaxLength(255)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.FechaDocumento).HasColumnType("datetime");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PBodegaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pBodegaId");
            entity.Property(e => e.PCdiId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCdiId");
            entity.Property(e => e.PCreId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCreId");
            entity.Property(e => e.PDoctoLegalCabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pDoctoLegalCabId");
            entity.Property(e => e.PDoctoLegalCabNcid)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pDoctoLegalCabNCId");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PMonedaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMonedaId");
            entity.Property(e => e.POpeLogtCabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pOpeLogtCabId");
            entity.Property(e => e.PTprId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTprId");
            entity.Property(e => e.PVendedorDigitaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pVendedorDigitaId");
            entity.Property(e => e.PVendedorId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pVendedorId");
            entity.Property(e => e.PryNumero)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<VtaTDevolucionDet>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("VtaT_DevolucionDet");

            entity.Property(e => e.DevolucionDetId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PCdiId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCdiId");
            entity.Property(e => e.PCreId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCreId");
            entity.Property(e => e.PDetReferenciaKitId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pDetReferenciaKitId");
            entity.Property(e => e.PDevolucionCabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pDevolucionCabId");
            entity.Property(e => e.PDoctoLegalDetId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pDoctoLegalDetId");
            entity.Property(e => e.POpeLogtDetId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pOpeLogtDetId");
            entity.Property(e => e.PProductoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pProductoId");
            entity.Property(e => e.PProductoKitId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pProductoKitId");
            entity.Property(e => e.PServicioId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pServicioId");
            entity.Property(e => e.PTprId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTprId");
            entity.Property(e => e.PUnidadMedId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pUnidadMedId");
            entity.Property(e => e.PUnidadMedStockId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pUnidadMedStockId");
            entity.Property(e => e.PryNumero)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<VtaTDoctoEmbExp>(entity =>
        {
            entity.HasKey(e => e.EmbId).HasName("VtaT_DoctoEmbExp_PK");

            entity.ToTable("VtaT_DoctoEmbExp");

            entity.Property(e => e.EmbId).HasColumnType("numeric(18, 0)");
            entity.Property(e => e.ConocimientoEmb)
                .HasMaxLength(50)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.DescFactura)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.EntregaCliente)
                .HasMaxLength(50)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EntregaTransp)
                .HasMaxLength(50)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EspacioRes)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.FechaDespacho).HasColumnType("datetime");
            entity.Property(e => e.FechaEmbarque).HasColumnType("datetime");
            entity.Property(e => e.FechaEntregaCli).HasColumnType("datetime");
            entity.Property(e => e.FechaEntregaTras).HasColumnType("datetime");
            entity.Property(e => e.FechaParidad).HasColumnType("datetime");
            entity.Property(e => e.FechaParidadSeg).HasColumnType("datetime");
            entity.Property(e => e.FechaReserva).HasColumnType("datetime");
            entity.Property(e => e.FechaStacking).HasColumnType("datetime");
            entity.Property(e => e.Nave)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.NroReserva)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.ObsInstructivo)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.Observaciones)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.PAgenteAduanaId)
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("pAgenteAduanaId");
            entity.Property(e => e.PAgenteAduanaSucId)
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("pAgenteAduanaSucId");
            entity.Property(e => e.PCodigoCiaId)
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("pCodigoCiaId");
            entity.Property(e => e.PCodigoCiaSucId)
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("pCodigoCiaSucId");
            entity.Property(e => e.PDoctoVentaCabId)
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("pDoctoVentaCabId");
            entity.Property(e => e.PMonedaId)
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("pMonedaId");
            entity.Property(e => e.PMonedaIdSeg)
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("pMonedaIdSeg");
            entity.Property(e => e.PPuertoDestino)
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("pPuertoDestino");
            entity.Property(e => e.PPuertoOrigen)
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("pPuertoOrigen");
            entity.Property(e => e.TipoCambioPar).HasColumnType("money");
            entity.Property(e => e.TipoCambioParSeg).HasColumnType("money");
        });

        modelBuilder.Entity<VtaTDoctoVentaCab>(entity =>
        {
            entity.HasKey(e => e.DoctoVentaCabId).HasName("Pk_VtaT_DoctoVentaCab");

            entity.ToTable("VtaT_DoctoVentaCab");

            entity.HasIndex(e => new { e.PPedidoMaterialId, e.DoctoVentaCabId }, "VtaT_DoctoVentaCab_idx060");

            entity.Property(e => e.DoctoVentaCabId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.CodOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.DvcAtencionAcot)
                .HasMaxLength(70)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("DvcAtencionACot");
            entity.Property(e => e.DvcFecDespacho).HasColumnType("datetime");
            entity.Property(e => e.DvcFecOrdenC).HasColumnType("datetime");
            entity.Property(e => e.DvcNumOrdenC)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.DvcObsDespacho)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.DvcObsDt)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("DvcObsDT");
            entity.Property(e => e.DvcTipoFecha)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EntMail)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.FechaDocumento).HasColumnType("datetime");
            entity.Property(e => e.FechaParidad).HasColumnType("datetime");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PCdiId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCdiId");
            entity.Property(e => e.PCondPagoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCondPagoId");
            entity.Property(e => e.PContratoid)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pContratoid");
            entity.Property(e => e.PConvenioCabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pConvenioCabId");
            entity.Property(e => e.PConvenioId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pConvenioId");
            entity.Property(e => e.PCreId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCreId");
            entity.Property(e => e.PDoctoVentaCabOrigenId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pDoctoVentaCabOrigenId");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PEntDirDespachoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntDirDespachoId");
            entity.Property(e => e.PEntDirId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntDirId");
            entity.Property(e => e.PEntId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntId");
            entity.Property(e => e.PEntIdSec)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntIdSec");
            entity.Property(e => e.PEntSucId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntSucId");
            entity.Property(e => e.PEntSucIdSec)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntSucIdSec");
            entity.Property(e => e.PMonedaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMonedaId");
            entity.Property(e => e.PNegocioVtaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pNegocioVtaId");
            entity.Property(e => e.PPedidoMaterialId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pPedidoMaterialId");
            entity.Property(e => e.PTprId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTprId");
            entity.Property(e => e.PVendedorDigitaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pVendedorDigitaId");
            entity.Property(e => e.PVendedorId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pVendedorId");
            entity.Property(e => e.PryNumero)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<VtaTDoctoVentaCabExp>(entity =>
        {
            entity.HasKey(e => e.PDoctoVentaCabId).HasName("Pk_VtaT_DoctoVentaCabExp");

            entity.ToTable("VtaT_DoctoVentaCabExp");

            entity.Property(e => e.PDoctoVentaCabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pDoctoVentaCabId");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PClausulaVenta)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pClausulaVenta");
            entity.Property(e => e.PEntConConsignatarioId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntConConsignatarioId");
            entity.Property(e => e.PEntConNotificadorId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntConNotificadorId");
            entity.Property(e => e.PEntConsignatarioId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntConsignatarioId");
            entity.Property(e => e.PEntDirConsignatarioId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntDirConsignatarioId");
            entity.Property(e => e.PEntDirNotificadorId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntDirNotificadorId");
            entity.Property(e => e.PEntNotificadorId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntNotificadorId");
            entity.Property(e => e.PEntSucConsignatarioId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntSucConsignatarioId");
            entity.Property(e => e.PEntSucNotificadorId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntSucNotificadorId");
            entity.Property(e => e.PIdiomaEspId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pIdiomaEspId");
            entity.Property(e => e.PUnidadMedClienteId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pUnidadMedClienteId");
        });

        modelBuilder.Entity<VtaTDoctoVentaCabPro>(entity =>
        {
            entity.HasKey(e => e.DoctoVentaCabProId).HasName("Pk_VtaT_DoctoVentaCabPro");

            entity.ToTable("VtaT_DoctoVentaCabPro");

            entity.HasIndex(e => e.PDoctoVentaCabId, "Idx_Vtat_DoctoVentaCabPro");

            entity.Property(e => e.DoctoVentaCabProId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.DvpFecProyectada).HasColumnType("datetime");
            entity.Property(e => e.DvpObservacion)
                .HasMaxLength(255)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PCdiId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCdiId");
            entity.Property(e => e.PCreId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCreId");
            entity.Property(e => e.PDoctoVentaCabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pDoctoVentaCabId");
            entity.Property(e => e.PServicioId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pServicioId");
            entity.Property(e => e.PTprId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTprId");
            entity.Property(e => e.PUnidadMedId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pUnidadMedId");
            entity.Property(e => e.PryNumero)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<VtaTDoctoVentaCabProDlg>(entity =>
        {
            entity.HasKey(e => new { e.PDoctoVentaCabProId, e.PDoctoLegalCabId }).HasName("Pk_VtaT_DoctoVentaCabProDlg");

            entity.ToTable("VtaT_DoctoVentaCabProDlg");

            entity.Property(e => e.PDoctoVentaCabProId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pDoctoVentaCabProId");
            entity.Property(e => e.PDoctoLegalCabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pDoctoLegalCabId");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.PDoctoVentaCabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pDoctoVentaCabId");
        });

        modelBuilder.Entity<VtaTDoctoVentaDet>(entity =>
        {
            entity.HasKey(e => e.DoctoVentaDetId).HasName("Pk_VtaT_DoctoVentaDet");

            entity.ToTable("VtaT_DoctoVentaDet");

            entity.HasIndex(e => e.PDoctoVentaCabId, "Idx_Vtat_DoctoVentaDet").HasFillFactor(90);

            entity.Property(e => e.DoctoVentaDetId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.CodEtiqueta)
                .HasMaxLength(80)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.CodigoArticuloSku)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.DvdFecDespacho).HasColumnType("datetime");
            entity.Property(e => e.DvdGlosaMotivo)
                .HasMaxLength(255)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.DvdUsuarioPrecio)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PBodegaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pBodegaId");
            entity.Property(e => e.PCategoriaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCategoriaId");
            entity.Property(e => e.PCdiId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCdiId");
            entity.Property(e => e.PConvenioDetId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pConvenioDetId");
            entity.Property(e => e.PCreId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCreId");
            entity.Property(e => e.PDetReferenciaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pDetReferenciaId");
            entity.Property(e => e.PDoctoVentaCabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pDoctoVentaCabId");
            entity.Property(e => e.PDoctoVentaDetIdOrigen)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pDoctoVentaDetIdOrigen");
            entity.Property(e => e.PDoctoVentaKitId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pDoctoVentaKitId");
            entity.Property(e => e.PDvcDirId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pDvcDirId");
            entity.Property(e => e.PEmbarqueCabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmbarqueCabId");
            entity.Property(e => e.PEntSucId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntSucId");
            entity.Property(e => e.PGlbMotivoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pGlbMotivoId");
            entity.Property(e => e.PListaPreCabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pListaPreCabId");
            entity.Property(e => e.PMonedaCostoEstimadoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMonedaCostoEstimadoId");
            entity.Property(e => e.PMonedaCostoRealId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMonedaCostoRealId");
            entity.Property(e => e.PPedidoMaterialDetId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pPedidoMaterialDetId");
            entity.Property(e => e.PProductoCodId)
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("pProductoCodId");
            entity.Property(e => e.PProductoEspTecId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pProductoEspTecId");
            entity.Property(e => e.PProductoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pProductoId");
            entity.Property(e => e.PProductoKitId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pProductoKitId");
            entity.Property(e => e.PRebateId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pRebateId");
            entity.Property(e => e.PReservaEnvioCabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pReservaEnvioCabId");
            entity.Property(e => e.PServicioId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pServicioId");
            entity.Property(e => e.PTprId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTprId");
            entity.Property(e => e.PUnidadMedId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pUnidadMedId");
            entity.Property(e => e.PUnidadMedStockId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pUnidadMedStockId");
            entity.Property(e => e.PryNumero)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<VtaTDoctoVentaDetCon>(entity =>
        {
            entity.HasKey(e => e.DoctoVentaDetConId).HasName("Pk_VtaT_DoctoVentaDetCon");

            entity.ToTable("VtaT_DoctoVentaDetCon");

            entity.HasIndex(e => e.PDoctoVentaCabId, "Idx_VtaT_DoctoVentaDetCon");

            entity.Property(e => e.DoctoVentaDetConId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PCdiId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCdiId");
            entity.Property(e => e.PCreId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCreId");
            entity.Property(e => e.PDoctoVentaCabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pDoctoVentaCabId");
            entity.Property(e => e.PDoctoVentaCabProId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pDoctoVentaCabProId");
            entity.Property(e => e.PDoctoVentaDetId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pDoctoVentaDetId");
            entity.Property(e => e.PTprId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTprId");
            entity.Property(e => e.PryNumero)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<VtaTDoctoVentaDetGlo>(entity =>
        {
            entity.HasKey(e => new { e.PDoctoVentaCabId, e.PDoctoVentaDetId, e.PDoctoVentaCabProId, e.DvgLinea, e.DlgTipoGlosa }).HasName("Pk_VtaT_DoctoVentaDetGlo");

            entity.ToTable("VtaT_DoctoVentaDetGlo");

            entity.HasIndex(e => e.PDoctoVentaCabId, "Idx_VtaT_DoctoVentaDetGlo").HasFillFactor(90);

            entity.Property(e => e.PDoctoVentaCabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pDoctoVentaCabId");
            entity.Property(e => e.PDoctoVentaDetId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pDoctoVentaDetId");
            entity.Property(e => e.PDoctoVentaCabProId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pDoctoVentaCabProId");
            entity.Property(e => e.DvgGlosaItem)
                .HasMaxLength(90)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
        });

        modelBuilder.Entity<VtaTDoctoVentaDetImp>(entity =>
        {
            entity.HasKey(e => new { e.PDoctoVentaDetId, e.PImpuestoId }).HasName("Pk_VtaT_DoctoVentaDetImp");

            entity.ToTable("VtaT_DoctoVentaDetImp");

            entity.HasIndex(e => e.PDoctoVentaCabId, "Idx_VtaT_DoctoVentaDetImp").HasFillFactor(90);

            entity.Property(e => e.PDoctoVentaDetId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pDoctoVentaDetId");
            entity.Property(e => e.PImpuestoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pImpuestoId");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PDoctoVentaCabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pDoctoVentaCabId");
        });

        modelBuilder.Entity<VtaTDoctoVentaEmail>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("VtaT_DoctoVentaEmail");

            entity.Property(e => e.EmailAddress)
                .HasMaxLength(100)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EmailAdressNpid)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("EmailAdressNPID");
            entity.Property(e => e.PDoctoVentaCabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pDoctoVentaCabId");
        });

        modelBuilder.Entity<VtaTEmbarqueCab>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("VtaT_EmbarqueCab");

            entity.HasIndex(e => e.EmbarqueCabId, "Pk_VtaT_EmbarqueCab").IsUnique();

            entity.Property(e => e.CodOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.DescriClauVta)
                .HasMaxLength(90)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EmbarqueCabId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EmcConocimiento)
                .HasMaxLength(50)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EmcEspacioReservado)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EmcFecConocimiento).HasColumnType("datetime");
            entity.Property(e => e.EmcFecEmbarque).HasColumnType("datetime");
            entity.Property(e => e.EmcFecLugarEntregaCli).HasColumnType("datetime");
            entity.Property(e => e.EmcFecLugarEntregaTran).HasColumnType("datetime");
            entity.Property(e => e.EmcFecReserva).HasColumnType("datetime");
            entity.Property(e => e.EmcFecStacking).HasColumnType("datetime");
            entity.Property(e => e.EmcGlosaBl)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.EmcGlosaInstructivo)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.EmcLugarEntregaCli)
                .HasMaxLength(50)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EmcLugarEntregaTran)
                .HasMaxLength(50)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EmcNave)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EmcNumReserva)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EmcObsPiePagina)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.EmcObservacion)
                .HasMaxLength(90)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PBodegaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pBodegaId");
            entity.Property(e => e.PDoctoLegalCabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pDoctoLegalCabId");
            entity.Property(e => e.PDoctoVentaCabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pDoctoVentaCabId");
            entity.Property(e => e.PEntAduanaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntAduanaId");
            entity.Property(e => e.PEntCiaTransId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntCiaTransId");
            entity.Property(e => e.PEntDirId)
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("pEntDirId");
            entity.Property(e => e.PEntFleteId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntFleteId");
            entity.Property(e => e.PEntOtroGastoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntOtroGastoId");
            entity.Property(e => e.PEntSeguroId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntSeguroId");
            entity.Property(e => e.PEntSucAduanaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntSucAduanaId");
            entity.Property(e => e.PEntSucCiaTransId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntSucCiaTransId");
            entity.Property(e => e.PMonedaFleteId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMonedaFleteId");
            entity.Property(e => e.PMonedaOtroGastoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMonedaOtroGastoId");
            entity.Property(e => e.PMonedaSeguroId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMonedaSeguroId");
            entity.Property(e => e.PPuertoDestino)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pPuertoDestino");
            entity.Property(e => e.PPuertoOrigen)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pPuertoOrigen");
            entity.Property(e => e.PReservaEnvioCabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pReservaEnvioCabId");
            entity.Property(e => e.PUnidadMedClienteId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pUnidadMedClienteId");
        });

        modelBuilder.Entity<VtaTEmbarqueCabCon>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("VtaT_EmbarqueCabCon");

            entity.HasIndex(e => new { e.PEmbarqueCabId, e.EmcIndPago, e.PServicioId }, "Pk_VtaT_EmbarqueCabCon").IsUnique();

            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PCdiId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCdiId");
            entity.Property(e => e.PCreId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCreId");
            entity.Property(e => e.PEmbarqueCabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmbarqueCabId");
            entity.Property(e => e.PServicioId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pServicioId");
            entity.Property(e => e.PTprId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTprId");
            entity.Property(e => e.PryNumero)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<VtaTEmbarqueDet>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("VtaT_EmbarqueDet");

            entity.HasIndex(e => e.PEmbarqueCabId, "Idx_Vtat_EmbarqueDet").HasFillFactor(90);

            entity.HasIndex(e => e.EmbarqueDetId, "Pk_VtaT_EmbarqueDet").IsUnique();

            entity.Property(e => e.EmbarqueDetId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EmdArchivoDocto)
                .HasMaxLength(90)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EmdEmisorDocto)
                .HasMaxLength(90)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EmdFecDocto).HasColumnType("datetime");
            entity.Property(e => e.EmdFolioDocto)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EmdRutaDocto)
                .HasMaxLength(90)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PEmbarqueCabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmbarqueCabId");
            entity.Property(e => e.PMonedaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMonedaId");
        });

        modelBuilder.Entity<VtaTEmpresaConsolidum>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("VtaT_EmpresaConsolida");

            entity.HasIndex(e => new { e.PEmpId, e.PEmpIdConsolida }, "Pk_VtaT_EmpresaConsolida").IsUnique();

            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PEmpIdConsolida)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpIdConsolida");
        });

        modelBuilder.Entity<VtaTEstadoStock>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("VtaT_EstadoStock");

            entity.HasIndex(e => new { e.PEmpId, e.ConEstCod }, "Pk_VtaT_EstadoStock").IsUnique();

            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
        });

        modelBuilder.Entity<VtaTGrupoAdmCredito>(entity =>
        {
            entity.HasKey(e => e.GrupoAdmCredito).HasName("VtaT_GrupoAdmCredito_PK");

            entity.ToTable("VtaT_GrupoAdmCredito");

            entity.Property(e => e.GrupoAdmCredito)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.PCliHolding)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCliHolding");
            entity.Property(e => e.PMonedaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMonedaId");
            entity.Property(e => e.PVendHolding)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pVendHolding");
        });

        modelBuilder.Entity<VtaTGrupoVisacionCab>(entity =>
        {
            entity.HasKey(e => e.GrupoVisacionCabId).HasName("Pk_VtaT_GrupoVisacionCabId");

            entity.ToTable("VtaT_GrupoVisacionCab");

            entity.Property(e => e.GrupoVisacionCabId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.GvcGlosa)
                .HasMaxLength(40)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
        });

        modelBuilder.Entity<VtaTGrupoVisacionCabVi>(entity =>
        {
            entity.HasKey(e => new { e.PGrupoVisacionCabId, e.TpeCodigo }).HasName("Pk_VtaT_GrupoVisacionCabVis");

            entity.ToTable("VtaT_GrupoVisacionCabVis");

            entity.Property(e => e.PGrupoVisacionCabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pGrupoVisacionCabId");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
        });

        modelBuilder.Entity<VtaTGrupoVisacionDet>(entity =>
        {
            entity.HasKey(e => new { e.PGrupoVisacionCabId, e.UserVisador }).HasName("Pk_VtaT_GrupoVisacionDetId");

            entity.ToTable("VtaT_GrupoVisacionDet");

            entity.Property(e => e.PGrupoVisacionCabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pGrupoVisacionCabId");
            entity.Property(e => e.UserVisador)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
        });

        modelBuilder.Entity<VtaTMarca>(entity =>
        {
            entity.HasKey(e => e.MarcaId).HasName("VtaT_Marca_PK");

            entity.ToTable("VtaT_Marca");

            entity.Property(e => e.MarcaId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.DescripcionMarca)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.FechaVigencia).HasColumnType("datetime");
            entity.Property(e => e.MarcaProducto)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<VtaTMarcaEmpresa>(entity =>
        {
            entity.HasKey(e => e.MarcaEmpresaId).HasName("VtaT_MarcaEmpresa_PK");

            entity.ToTable("VtaT_MarcaEmpresa");

            entity.Property(e => e.MarcaEmpresaId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.PCreId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCreId");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PMarcaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMarcaId");
        });

        modelBuilder.Entity<VtaTMarcaEmpresaVendedor>(entity =>
        {
            entity.HasKey(e => new { e.PMarcaEmpresaId, e.PVendedorId }).HasName("VtaT_MarcaEmpresaVendedor_PK");

            entity.ToTable("VtaT_MarcaEmpresaVendedor");

            entity.Property(e => e.PMarcaEmpresaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMarcaEmpresaId");
            entity.Property(e => e.PVendedorId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pVendedorId");
        });

        modelBuilder.Entity<VtaTMotivo>(entity =>
        {
            entity.HasKey(e => e.Motivo).HasName("VtaT_Motivos_PK");

            entity.ToTable("VtaT_Motivos");

            entity.Property(e => e.Descripcion)
                .HasMaxLength(50)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<VtaTPuerto>(entity =>
        {
            entity.HasKey(e => e.PuertoId).HasName("VtaT_Puertos_PK");

            entity.ToTable("VtaT_Puertos");

            entity.Property(e => e.PuertoId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.NombrePuerto)
                .HasMaxLength(50)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PPaisId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pPaisId");
        });

        modelBuilder.Entity<VtaTReservaEnvioCab>(entity =>
        {
            entity.HasKey(e => e.ReservaEnvioCabId).HasName("Pk_VtaT_ReservaEnvioCab");

            entity.ToTable("VtaT_ReservaEnvioCab");

            entity.Property(e => e.ReservaEnvioCabId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.CodOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PEntCiaTransId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntCiaTransId");
            entity.Property(e => e.PEntSucCiaTransId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntSucCiaTransId");
            entity.Property(e => e.PPuertoDestino)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pPuertoDestino");
            entity.Property(e => e.PPuertoOrigen)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pPuertoOrigen");
            entity.Property(e => e.PTransporteId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTransporteId");
            entity.Property(e => e.RecEspacioReservado)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.RecFecArribo).HasColumnType("datetime");
            entity.Property(e => e.RecFecReserva).HasColumnType("datetime");
            entity.Property(e => e.RecFecSalida).HasColumnType("datetime");
            entity.Property(e => e.RecFecStacking).HasColumnType("datetime");
            entity.Property(e => e.RecGlosa)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.RecNumReserva)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<VtaTRutaDespacho>(entity =>
        {
            entity.HasKey(e => e.RdeId).HasName("VtaT_RutaDespacho_PK");

            entity.ToTable("VtaT_RutaDespacho");

            entity.Property(e => e.RdeId).ValueGeneratedNever();
            entity.Property(e => e.PTipoVehId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTipoVehId");
            entity.Property(e => e.RdeGlosa)
                .HasMaxLength(40)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<VtaTSolicitudAjusteCab>(entity =>
        {
            entity.HasKey(e => e.SolicitudAjusteCabId).HasName("Pk_VtaT_SolicitudAjusteCab");

            entity.ToTable("VtaT_SolicitudAjusteCab");

            entity.Property(e => e.SolicitudAjusteCabId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.CodOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.FechaDocumento).HasColumnType("datetime");
            entity.Property(e => e.FechaParidad).HasColumnType("datetime");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PCdiId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCdiId");
            entity.Property(e => e.PCreId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCreId");
            entity.Property(e => e.PDoctoLegalCabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pDoctoLegalCabId");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PEntId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntId");
            entity.Property(e => e.PEntSucId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntSucId");
            entity.Property(e => e.PMonedaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMonedaId");
            entity.Property(e => e.PNegocioVtaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pNegocioVtaId");
            entity.Property(e => e.PTipoOpeId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTipoOpeId");
            entity.Property(e => e.PTprId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTprId");
            entity.Property(e => e.PVendedorDigitaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pVendedorDigitaId");
            entity.Property(e => e.PVendedorId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pVendedorId");
            entity.Property(e => e.PryNumero)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.SacFecVecto).HasColumnType("datetime");
            entity.Property(e => e.SacObservacion)
                .HasMaxLength(90)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<VtaTSolicitudAjusteCabDlg>(entity =>
        {
            entity.HasKey(e => new { e.PSolicitudAjusteCabId, e.PDoctoLegalCabId }).HasName("Pk_VtaT_SolicitudAjusteCabDlg");

            entity.ToTable("VtaT_SolicitudAjusteCabDlg");

            entity.Property(e => e.PSolicitudAjusteCabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pSolicitudAjusteCabId");
            entity.Property(e => e.PDoctoLegalCabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pDoctoLegalCabId");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
        });

        modelBuilder.Entity<VtaTSolicitudAjusteDet>(entity =>
        {
            entity.HasKey(e => e.SolicitudAjusteDetId).HasName("Pk_VtaT_SolicitudAjusteDet");

            entity.ToTable("VtaT_SolicitudAjusteDet");

            entity.HasIndex(e => e.PSolicitudAjusteCabId, "Idx_VtaT_SolicitudAjusteDet").HasFillFactor(90);

            entity.Property(e => e.SolicitudAjusteDetId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PCdiId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCdiId");
            entity.Property(e => e.PCreId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCreId");
            entity.Property(e => e.PDetReferenciaKitId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pDetReferenciaKitId");
            entity.Property(e => e.PDoctoLegalDetId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pDoctoLegalDetId");
            entity.Property(e => e.PProductoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pProductoId");
            entity.Property(e => e.PProductoKitId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pProductoKitId");
            entity.Property(e => e.PServicioId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pServicioId");
            entity.Property(e => e.PSolicitudAjusteCabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pSolicitudAjusteCabId");
            entity.Property(e => e.PTprId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTprId");
            entity.Property(e => e.PryNumero)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<VtaTSolicitudAjusteDetCon>(entity =>
        {
            entity.HasKey(e => e.SolicitudAjusteDetConId).HasName("VtaI_SolicitudAjusteDetCon01");

            entity.ToTable("VtaT_SolicitudAjusteDetCon");

            entity.HasIndex(e => e.PSolicitudAjusteCabId, "Idx_VtaT_SolicitudAjusteDetCon");

            entity.HasIndex(e => new { e.PSolicitudAjusteDetId, e.PCreId, e.PCdiId, e.PTprId, e.PryNumero }, "Pk_VtaT_SolicitudAjusteDetCon").IsUnique();

            entity.Property(e => e.SolicitudAjusteDetConId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PCdiId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCdiId");
            entity.Property(e => e.PCreId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCreId");
            entity.Property(e => e.PSolicitudAjusteCabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pSolicitudAjusteCabId");
            entity.Property(e => e.PSolicitudAjusteDetId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pSolicitudAjusteDetId");
            entity.Property(e => e.PTprId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTprId");
            entity.Property(e => e.PryNumero)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<VtaTSolicitudAjusteDetGlo>(entity =>
        {
            entity.HasKey(e => new { e.PSolicitudAjusteDetId, e.SagLinea }).HasName("Pk_VtaT_SolicitudAjusteDetGlo");

            entity.ToTable("VtaT_SolicitudAjusteDetGlo");

            entity.HasIndex(e => e.PSolicitudAjusteCabId, "Idx_VtaT_SolicitudAjusteDetGlo").HasFillFactor(90);

            entity.Property(e => e.PSolicitudAjusteDetId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pSolicitudAjusteDetId");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PSolicitudAjusteCabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pSolicitudAjusteCabId");
            entity.Property(e => e.SagGlosaItem)
                .HasMaxLength(90)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<VtaTSolicitudAjusteDetImp>(entity =>
        {
            entity.HasKey(e => new { e.PSolicitudAjusteDetId, e.PImpuestoId }).HasName("Pk_VtaT_SolicitudAjusteDetImp");

            entity.ToTable("VtaT_SolicitudAjusteDetImp");

            entity.HasIndex(e => e.PSolicitudAjusteCabId, "Idx_VtaT_SolicitudAjusteDetImp");

            entity.Property(e => e.PSolicitudAjusteDetId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pSolicitudAjusteDetId");
            entity.Property(e => e.PImpuestoId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pImpuestoId");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PSolicitudAjusteCabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pSolicitudAjusteCabId");
        });

        modelBuilder.Entity<VtaTTipoBitacora>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("VtaT_TipoBitacora");

            entity.Property(e => e.BidGlosa)
                .HasMaxLength(255)
                .IsUnicode(false);
        });

        modelBuilder.Entity<VtaTTipoCliente>(entity =>
        {
            entity.HasKey(e => e.TipoCliente).HasName("VtaT_TipoCliente_PK");

            entity.ToTable("VtaT_TipoCliente");

            entity.Property(e => e.Descripcion)
                .HasMaxLength(50)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<VtaTTipoCtaVisacion>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("VtaT_TipoCtaVisacion");

            entity.Property(e => e.TdeGlosa)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<VtaTTipoDescuento>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("VtaT_TipoDescuento");

            entity.Property(e => e.TdeGlosa)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<VtaTTipoDevolucion>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("VtaT_TipoDevolucion");

            entity.Property(e => e.TdpGlosa)
                .HasMaxLength(40)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<VtaTTipoDiferido>(entity =>
        {
            entity.HasKey(e => e.TdfCodigo).HasName("Pk_VtaT_TipoDiferido");

            entity.ToTable("VtaT_TipoDiferido");

            entity.Property(e => e.TdfGlosa)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<VtaTTipoDoctoExp>(entity =>
        {
            entity.HasKey(e => e.TdoId).HasName("Pk_VtaT_TIpoDOctoExp");

            entity.ToTable("VtaT_TipoDoctoExp");

            entity.Property(e => e.TdoId).ValueGeneratedNever();
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
        });

        modelBuilder.Entity<VtaTTipoDoctoGenerico>(entity =>
        {
            entity.HasKey(e => e.TdgCodigo).HasName("Pk_Vtat_TipoDoctoGenerico");

            entity.ToTable("VtaT_TipoDoctoGenerico");

            entity.Property(e => e.TdgGlosa)
                .HasMaxLength(40)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<VtaTTipoFuncionalidad>(entity =>
        {
            entity.HasKey(e => e.TfuCodigo).HasName("Pk_VtaT_TipoFuncionalidad");

            entity.ToTable("VtaT_TipoFuncionalidad");

            entity.Property(e => e.TfuGlosa)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<VtaTTipoGasto>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("VtaT_TipoGasto");

            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.TgaGlosa)
                .HasMaxLength(40)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.TipoGastoId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
        });

        modelBuilder.Entity<VtaTTipoInforme>(entity =>
        {
            entity.HasKey(e => new { e.PEmpId, e.IdFuncionalidad }).HasName("Pk_Vtat_TipoInforme");

            entity.ToTable("VtaT_TipoInforme");

            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.IdFuncionalidad)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcionalidad");
            entity.Property(e => e.TivNombreRdl)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.TivNombreReporte)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<VtaTTipoModalidadVentum>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("VtaT_TipoModalidadVenta");

            entity.Property(e => e.TmvGlosa)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<VtaTTipoNegocio>(entity =>
        {
            entity.HasKey(e => e.NegocioVtaId).HasName("Pk_VtaT_TipoNegocio");

            entity.ToTable("VtaT_TipoNegocio", tb => tb.HasTrigger("VtaT_TipoNegocio_Update"));

            entity.Property(e => e.NegocioVtaId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.NegocioVtaGlosa)
                .HasMaxLength(40)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.NgvContraCtaFactura).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.NgvContraCtaGuia).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.NgvIndBloqueaCcosto).HasColumnName("NgvIndBloqueaCCosto");
            entity.Property(e => e.PCreId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCreId");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PMonedaId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pMonedaId");
            entity.Property(e => e.PTipoOpeId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTipoOpeId");
        });

        modelBuilder.Entity<VtaTTipoNegocioGenerico>(entity =>
        {
            entity.HasKey(e => e.TngCodigo).HasName("Pk_VtaT_TipoNegocioGenerico");

            entity.ToTable("VtaT_TipoNegocioGenerico");

            entity.Property(e => e.TngGlosa)
                .HasMaxLength(40)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<VtaTTipoParidad>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("VtaT_TipoParidad");

            entity.Property(e => e.TpdGlosa)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<VtaTTipoPendiente>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("VtaT_TipoPendiente");

            entity.Property(e => e.TpeGlosa)
                .HasMaxLength(40)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.TpeGlosaCorta)
                .HasMaxLength(10)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<VtaTTipoReajuste>(entity =>
        {
            entity.HasKey(e => e.TirId).HasName("VtaT_TipoReajuste_PK");

            entity.ToTable("VtaT_TipoReajuste");

            entity.Property(e => e.TirGlosa)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<VtaTTipoResponsable>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("VtaT_TipoResponsable");

            entity.Property(e => e.TreGlosa)
                .HasMaxLength(40)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<VtaTTipoVentum>(entity =>
        {
            entity.HasKey(e => e.TnpCodigo).HasName("Pk_VtaT_TipoVenta");

            entity.ToTable("VtaT_TipoVenta");

            entity.Property(e => e.TnpCodigo).ValueGeneratedNever();
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.TnpGlosa)
                .HasMaxLength(40)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<VtaTTipoVisacion>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("VtaT_TipoVisacion");

            entity.Property(e => e.TvsGlosa)
                .HasMaxLength(40)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<VtaTTipoVisacionRol>(entity =>
        {
            entity.HasKey(e => new { e.IdRol, e.TvsCodigo }).HasName("VtaT_TipoVisacionRol_PK");

            entity.ToTable("VtaT_TipoVisacionRol");

            entity.Property(e => e.IdRol)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Rol");
        });

        modelBuilder.Entity<VtaTTransporteCium>(entity =>
        {
            entity.HasKey(e => e.TransporteId).HasName("Pk_VtaT_TransporteCia");

            entity.ToTable("VtaT_TransporteCia");

            entity.HasIndex(e => e.PEntCiaTransId, "Idk_VtaT_TransporteCia");

            entity.Property(e => e.TransporteId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PEntCiaTransId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntCiaTransId");
            entity.Property(e => e.TransporteCodigo)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.TransporteGlosa)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<VtaTUbicacionDt>(entity =>
        {
            entity.HasKey(e => e.UblCodigo).HasName("VtaT_UbicacionDT_PK");

            entity.ToTable("VtaT_UbicacionDT");

            entity.Property(e => e.UblCodigo).ValueGeneratedNever();
            entity.Property(e => e.UblGlosa)
                .HasMaxLength(30)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<VtaTVendedor>(entity =>
        {
            entity.HasKey(e => new { e.PEmpId, e.IdUsuario }).HasName("Pk_VtaT_Usuario");

            entity.ToTable("VtaT_Vendedor", tb => tb.HasTrigger("VtaT_Vendedor_Delete"));

            entity.HasIndex(e => e.VendedorId, "Pk_VtaT_VendedorId").IsUnique();

            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.IdUsuario)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Estado_Reg");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Estado_Reg");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ing_Reg");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("Fec_Ult_Modif_Reg");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Funcion_Ult_Modif_Reg");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ing_Reg");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_Usuario_Ult_Modif_Reg");
            entity.Property(e => e.PCreId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pCreId");
            entity.Property(e => e.PEntId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntId");
            entity.Property(e => e.VenFecCertVigencia).HasColumnType("datetime");
            entity.Property(e => e.VenFecToken).HasColumnType("datetime");
            entity.Property(e => e.VenRazonSocialCert)
                .HasMaxLength(120)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.VenToken)
                .HasMaxLength(60)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.VendedorId)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(9, 0)");
        });

        modelBuilder.Entity<WflAlarma>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("WFL_ALARMA");

            entity.Property(e => e.Atactivada).HasColumnName("ATACTIVADA");
            entity.Property(e => e.Atalarmaid).HasColumnName("ATALARMAID");
            entity.Property(e => e.Atcopiaalarmada).HasColumnName("ATCOPIAALARMADA");
            entity.Property(e => e.Atdiaginicio)
                .HasMaxLength(16)
                .IsUnicode(false)
                .HasColumnName("ATDIAGINICIO");
            entity.Property(e => e.Atfechafinal).HasColumnName("ATFECHAFINAL");
            entity.Property(e => e.Atfechafinalposible).HasColumnName("ATFECHAFINALPOSIBLE");
            entity.Property(e => e.Atfechainicial).HasColumnName("ATFECHAINICIAL");
            entity.Property(e => e.Atflechaalarma).HasColumnName("ATFLECHAALARMA");
            entity.Property(e => e.Atllaveexp)
                .HasMaxLength(16)
                .IsUnicode(false)
                .HasColumnName("ATLLAVEEXP");
            entity.Property(e => e.Atproyid).HasColumnName("ATPROYID");
            entity.Property(e => e.Attareainicio).HasColumnName("ATTAREAINICIO");
            entity.Property(e => e.Atversionid).HasColumnName("ATVERSIONID");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasColumnName("ESTADO_REG");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("FEC_ESTADO_REG");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("FEC_ING_REG");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("FEC_ULT_MODIF_REG");
            entity.Property(e => e.IdAdm).HasColumnName("ID_ADM");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .HasColumnName("ID_FUNCION_ULT_MODIF_REG");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("ID_USUARIO_ING_REG");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("ID_USUARIO_ULT_MODIF_REG");
        });

        modelBuilder.Entity<WflCopiaexp>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("WFL_COPIAEXP");

            entity.Property(e => e.Atasignada).HasColumnName("ATASIGNADA");
            entity.Property(e => e.Atatributos)
                .HasColumnType("text")
                .HasColumnName("ATATRIBUTOS");
            entity.Property(e => e.Atcarpetaactual)
                .HasMaxLength(16)
                .IsUnicode(false)
                .HasColumnName("ATCARPETAACTUAL");
            entity.Property(e => e.Atcopiaexpid).HasColumnName("ATCOPIAEXPID");
            entity.Property(e => e.Atdescripcion)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("ATDESCRIPCION");
            entity.Property(e => e.Atdiagactual)
                .HasMaxLength(16)
                .IsUnicode(false)
                .HasColumnName("ATDIAGACTUAL");
            entity.Property(e => e.Atesdespachable).HasColumnName("ATESDESPACHABLE");
            entity.Property(e => e.Atfecha).HasColumnName("ATFECHA");
            entity.Property(e => e.Atllaveexpid)
                .HasMaxLength(16)
                .IsUnicode(false)
                .HasColumnName("ATLLAVEEXPID");
            entity.Property(e => e.Atobs)
                .HasColumnType("text")
                .HasColumnName("ATOBS");
            entity.Property(e => e.Atpendpordesp).HasColumnName("ATPENDPORDESP");
            entity.Property(e => e.Atpersonaasignada)
                .HasMaxLength(16)
                .IsUnicode(false)
                .HasColumnName("ATPERSONAASIGNADA");
            entity.Property(e => e.Atproyid).HasColumnName("ATPROYID");
            entity.Property(e => e.Attareaactual).HasColumnName("ATTAREAACTUAL");
            entity.Property(e => e.Attipoexpasociado)
                .HasMaxLength(16)
                .IsUnicode(false)
                .HasColumnName("ATTIPOEXPASOCIADO");
            entity.Property(e => e.Atversionid).HasColumnName("ATVERSIONID");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasColumnName("ESTADO_REG");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("FEC_ESTADO_REG");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("FEC_ING_REG");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("FEC_ULT_MODIF_REG");
            entity.Property(e => e.IdAdm).HasColumnName("ID_ADM");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .HasColumnName("ID_FUNCION_ULT_MODIF_REG");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("ID_USUARIO_ING_REG");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("ID_USUARIO_ULT_MODIF_REG");
        });

        modelBuilder.Entity<WflCopiasporpersona>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("WFL_COPIASPORPERSONA");

            entity.Property(e => e.Atnumcopias).HasColumnName("ATNUMCOPIAS");
            entity.Property(e => e.Atpersonaid)
                .HasMaxLength(16)
                .IsUnicode(false)
                .HasColumnName("ATPERSONAID");
            entity.Property(e => e.Atproyid).HasColumnName("ATPROYID");
            entity.Property(e => e.Atversionid).HasColumnName("ATVERSIONID");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasColumnName("ESTADO_REG");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("FEC_ESTADO_REG");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("FEC_ING_REG");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("FEC_ULT_MODIF_REG");
            entity.Property(e => e.IdAdm).HasColumnName("ID_ADM");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .HasColumnName("ID_FUNCION_ULT_MODIF_REG");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("ID_USUARIO_ING_REG");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("ID_USUARIO_ULT_MODIF_REG");
        });

        modelBuilder.Entity<WflDiag>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("WFL_DIAG");

            entity.Property(e => e.Atdescripcion)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("ATDESCRIPCION");
            entity.Property(e => e.Atdiagid)
                .HasMaxLength(16)
                .IsUnicode(false)
                .HasColumnName("ATDIAGID");
            entity.Property(e => e.Atlapso).HasColumnName("ATLAPSO");
            entity.Property(e => e.Atproyid).HasColumnName("ATPROYID");
            entity.Property(e => e.Attitulodiag)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("ATTITULODIAG");
            entity.Property(e => e.Atversionid).HasColumnName("ATVERSIONID");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasColumnName("ESTADO_REG");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("FEC_ESTADO_REG");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("FEC_ING_REG");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("FEC_ULT_MODIF_REG");
            entity.Property(e => e.IdAdm).HasColumnName("ID_ADM");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .HasColumnName("ID_FUNCION_ULT_MODIF_REG");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("ID_USUARIO_ING_REG");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("ID_USUARIO_ULT_MODIF_REG");
        });

        modelBuilder.Entity<WflExp>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("WFL_EXP");

            entity.Property(e => e.Atdescripcion)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("ATDESCRIPCION");
            entity.Property(e => e.Atfechainicio).HasColumnName("ATFECHAINICIO");
            entity.Property(e => e.Atlistacd)
                .HasMaxLength(2000)
                .IsUnicode(false)
                .HasColumnName("ATLISTACD");
            entity.Property(e => e.Atllaveexpid)
                .HasMaxLength(16)
                .IsUnicode(false)
                .HasColumnName("ATLLAVEEXPID");
            entity.Property(e => e.Atobs)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("ATOBS");
            entity.Property(e => e.Atproyid).HasColumnName("ATPROYID");
            entity.Property(e => e.Attipoexpasociado)
                .HasMaxLength(16)
                .IsUnicode(false)
                .HasColumnName("ATTIPOEXPASOCIADO");
            entity.Property(e => e.Atversionid).HasColumnName("ATVERSIONID");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasColumnName("ESTADO_REG");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("FEC_ESTADO_REG");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("FEC_ING_REG");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("FEC_ULT_MODIF_REG");
            entity.Property(e => e.IdAdm).HasColumnName("ID_ADM");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .HasColumnName("ID_FUNCION_ULT_MODIF_REG");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("ID_USUARIO_ING_REG");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("ID_USUARIO_ULT_MODIF_REG");
        });

        modelBuilder.Entity<WflFlecha>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("WFL_FLECHA");

            entity.Property(e => e.Atdiagdestino)
                .HasMaxLength(16)
                .IsUnicode(false)
                .HasColumnName("ATDIAGDESTINO");
            entity.Property(e => e.Atdiagid)
                .HasMaxLength(16)
                .IsUnicode(false)
                .HasColumnName("ATDIAGID");
            entity.Property(e => e.Atflechaid).HasColumnName("ATFLECHAID");
            entity.Property(e => e.Atnombreflecha)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("ATNOMBREFLECHA");
            entity.Property(e => e.Atproyid).HasColumnName("ATPROYID");
            entity.Property(e => e.Attareadestino).HasColumnName("ATTAREADESTINO");
            entity.Property(e => e.Attareaorigen).HasColumnName("ATTAREAORIGEN");
            entity.Property(e => e.Attipoflecha).HasColumnName("ATTIPOFLECHA");
            entity.Property(e => e.Atversionid).HasColumnName("ATVERSIONID");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasColumnName("ESTADO_REG");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("FEC_ESTADO_REG");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("FEC_ING_REG");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("FEC_ULT_MODIF_REG");
            entity.Property(e => e.IdAdm).HasColumnName("ID_ADM");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .HasColumnName("ID_FUNCION_ULT_MODIF_REG");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("ID_USUARIO_ING_REG");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("ID_USUARIO_ULT_MODIF_REG");
        });

        modelBuilder.Entity<WflFlechaalarma>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("WFL_FLECHAALARMA");

            entity.Property(e => e.Atdiagalarmado)
                .HasMaxLength(16)
                .IsUnicode(false)
                .HasColumnName("ATDIAGALARMADO");
            entity.Property(e => e.Atdiagid)
                .HasMaxLength(16)
                .IsUnicode(false)
                .HasColumnName("ATDIAGID");
            entity.Property(e => e.Atflechaid).HasColumnName("ATFLECHAID");
            entity.Property(e => e.Atplazoalarma).HasColumnName("ATPLAZOALARMA");
            entity.Property(e => e.Atproyid).HasColumnName("ATPROYID");
            entity.Property(e => e.Atrolalarmado)
                .HasMaxLength(16)
                .IsUnicode(false)
                .HasColumnName("ATROLALARMADO");
            entity.Property(e => e.Atversionid).HasColumnName("ATVERSIONID");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasColumnName("ESTADO_REG");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("FEC_ESTADO_REG");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("FEC_ING_REG");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("FEC_ULT_MODIF_REG");
            entity.Property(e => e.IdAdm).HasColumnName("ID_ADM");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .HasColumnName("ID_FUNCION_ULT_MODIF_REG");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("ID_USUARIO_ING_REG");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("ID_USUARIO_ULT_MODIF_REG");
        });

        modelBuilder.Entity<WflFlechaflujo>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("WFL_FLECHAFLUJO");

            entity.Property(e => e.Atatributos)
                .HasColumnType("text")
                .HasColumnName("ATATRIBUTOS");
            entity.Property(e => e.Atcarpetadestino)
                .HasMaxLength(16)
                .IsUnicode(false)
                .HasColumnName("ATCARPETADESTINO");
            entity.Property(e => e.Atdiagid)
                .HasMaxLength(16)
                .IsUnicode(false)
                .HasColumnName("ATDIAGID");
            entity.Property(e => e.Atflechaid).HasColumnName("ATFLECHAID");
            entity.Property(e => e.Atflujoportpovdo).HasColumnName("ATFLUJOPORTPOVDO");
            entity.Property(e => e.Atproyid).HasColumnName("ATPROYID");
            entity.Property(e => e.Atterminatarea).HasColumnName("ATTERMINATAREA");
            entity.Property(e => e.Attipoexpinic).HasColumnName("ATTIPOEXPINIC");
            entity.Property(e => e.Attipoexpqueviaja)
                .HasMaxLength(16)
                .IsUnicode(false)
                .HasColumnName("ATTIPOEXPQUEVIAJA");
            entity.Property(e => e.Atversionid).HasColumnName("ATVERSIONID");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasColumnName("ESTADO_REG");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("FEC_ESTADO_REG");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("FEC_ING_REG");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("FEC_ULT_MODIF_REG");
            entity.Property(e => e.IdAdm).HasColumnName("ID_ADM");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .HasColumnName("ID_FUNCION_ULT_MODIF_REG");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("ID_USUARIO_ING_REG");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("ID_USUARIO_ULT_MODIF_REG");
        });

        modelBuilder.Entity<WflProy>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("WFL_PROY");

            entity.Property(e => e.Atcreador)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("ATCREADOR");
            entity.Property(e => e.Atfecha).HasColumnName("ATFECHA");
            entity.Property(e => e.Atnombreproy)
                .HasMaxLength(16)
                .IsUnicode(false)
                .HasColumnName("ATNOMBREPROY");
            entity.Property(e => e.Atobservaciones)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("ATOBSERVACIONES");
            entity.Property(e => e.Atproyid).HasColumnName("ATPROYID");
            entity.Property(e => e.Atversionid).HasColumnName("ATVERSIONID");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasColumnName("ESTADO_REG");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("FEC_ESTADO_REG");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("FEC_ING_REG");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("FEC_ULT_MODIF_REG");
            entity.Property(e => e.IdAdm).HasColumnName("ID_ADM");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .HasColumnName("ID_FUNCION_ULT_MODIF_REG");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("ID_USUARIO_ING_REG");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("ID_USUARIO_ULT_MODIF_REG");
        });

        modelBuilder.Entity<WflReasignacionLog>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("WFL_REASIGNACION_LOG");

            entity.Property(e => e.Atcopiaexpid).HasColumnName("ATCOPIAEXPID");
            entity.Property(e => e.Atllaveexpid)
                .HasMaxLength(16)
                .IsUnicode(false)
                .HasColumnName("ATLLAVEEXPID");
            entity.Property(e => e.Atobs)
                .HasColumnType("text")
                .HasColumnName("ATOBS");
            entity.Property(e => e.Atproyid).HasColumnName("ATPROYID");
            entity.Property(e => e.Atversionid).HasColumnName("ATVERSIONID");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("FEC_ING_REG");
            entity.Property(e => e.IdAdm).HasColumnName("ID_ADM");
        });

        modelBuilder.Entity<WflRegistro>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("WFL_REGISTRO");

            entity.Property(e => e.Atcopiaexpid).HasColumnName("ATCOPIAEXPID");
            entity.Property(e => e.Atcopiapadre).HasColumnName("ATCOPIAPADRE");
            entity.Property(e => e.Atdiagid)
                .HasMaxLength(16)
                .IsUnicode(false)
                .HasColumnName("ATDIAGID");
            entity.Property(e => e.Atfecha).HasColumnName("ATFECHA");
            entity.Property(e => e.Atflechaid).HasColumnName("ATFLECHAID");
            entity.Property(e => e.Atllaveexpid)
                .HasMaxLength(16)
                .IsUnicode(false)
                .HasColumnName("ATLLAVEEXPID");
            entity.Property(e => e.Atobservacion)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("ATOBSERVACION");
            entity.Property(e => e.Atperdestino)
                .HasMaxLength(16)
                .IsUnicode(false)
                .HasColumnName("ATPERDESTINO");
            entity.Property(e => e.Atperorigen)
                .HasMaxLength(16)
                .IsUnicode(false)
                .HasColumnName("ATPERORIGEN");
            entity.Property(e => e.Atproyid).HasColumnName("ATPROYID");
            entity.Property(e => e.Atregistroid).HasColumnName("ATREGISTROID");
            entity.Property(e => e.Atroldestino)
                .HasMaxLength(16)
                .IsUnicode(false)
                .HasColumnName("ATROLDESTINO");
            entity.Property(e => e.Atrolorigen)
                .HasMaxLength(16)
                .IsUnicode(false)
                .HasColumnName("ATROLORIGEN");
            entity.Property(e => e.Attareadestino).HasColumnName("ATTAREADESTINO");
            entity.Property(e => e.Attareaorigen).HasColumnName("ATTAREAORIGEN");
            entity.Property(e => e.Attipo).HasColumnName("ATTIPO");
            entity.Property(e => e.Atversionid).HasColumnName("ATVERSIONID");
            entity.Property(e => e.IdAdm).HasColumnName("ID_ADM");
        });

        modelBuilder.Entity<WflTarea>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("WFL_TAREA");

            entity.Property(e => e.Atatributos)
                .HasColumnType("text")
                .HasColumnName("ATATRIBUTOS");
            entity.Property(e => e.Atclase)
                .HasMaxLength(512)
                .IsUnicode(false)
                .HasColumnName("ATCLASE");
            entity.Property(e => e.Atclasegenid)
                .HasMaxLength(512)
                .IsUnicode(false)
                .HasColumnName("ATCLASEGENID");
            entity.Property(e => e.Atclasemanreg)
                .HasMaxLength(512)
                .IsUnicode(false)
                .HasColumnName("ATCLASEMANREG");
            entity.Property(e => e.Atclasemasivo)
                .HasMaxLength(512)
                .IsUnicode(false)
                .HasColumnName("ATCLASEMASIVO");
            entity.Property(e => e.Atcoordenadas)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("ATCOORDENADAS");
            entity.Property(e => e.Atdiagid)
                .HasMaxLength(16)
                .IsUnicode(false)
                .HasColumnName("ATDIAGID");
            entity.Property(e => e.Atmetodo)
                .HasMaxLength(24)
                .IsUnicode(false)
                .HasColumnName("ATMETODO");
            entity.Property(e => e.Atmetodogenid)
                .HasMaxLength(16)
                .IsUnicode(false)
                .HasColumnName("ATMETODOGENID");
            entity.Property(e => e.Atmetodomasivo)
                .HasMaxLength(16)
                .IsUnicode(false)
                .HasColumnName("ATMETODOMASIVO");
            entity.Property(e => e.Atmodulo)
                .HasMaxLength(64)
                .IsUnicode(false)
                .HasColumnName("ATMODULO");
            entity.Property(e => e.Atprocesonegocio)
                .HasMaxLength(16)
                .IsUnicode(false)
                .HasColumnName("ATPROCESONEGOCIO");
            entity.Property(e => e.Atproposito)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("ATPROPOSITO");
            entity.Property(e => e.Atproyid).HasColumnName("ATPROYID");
            entity.Property(e => e.Atregla)
                .HasMaxLength(16)
                .IsUnicode(false)
                .HasColumnName("ATREGLA");
            entity.Property(e => e.Atrolrequerido)
                .HasMaxLength(16)
                .IsUnicode(false)
                .HasColumnName("ATROLREQUERIDO");
            entity.Property(e => e.Attareaid).HasColumnName("ATTAREAID");
            entity.Property(e => e.Attipotarea).HasColumnName("ATTIPOTAREA");
            entity.Property(e => e.Attitulotarea)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("ATTITULOTAREA");
            entity.Property(e => e.Atversionid).HasColumnName("ATVERSIONID");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasColumnName("ESTADO_REG");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("FEC_ESTADO_REG");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("FEC_ING_REG");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("FEC_ULT_MODIF_REG");
            entity.Property(e => e.IdAdm).HasColumnName("ID_ADM");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .HasColumnName("ID_FUNCION_ULT_MODIF_REG");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("ID_USUARIO_ING_REG");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("ID_USUARIO_ULT_MODIF_REG");
        });

        modelBuilder.Entity<WflTareaconector>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("WFL_TAREACONECTOR");

            entity.Property(e => e.Atdiagid)
                .HasMaxLength(16)
                .IsUnicode(false)
                .HasColumnName("ATDIAGID");
            entity.Property(e => e.Atdiagqueconecta)
                .HasMaxLength(16)
                .IsUnicode(false)
                .HasColumnName("ATDIAGQUECONECTA");
            entity.Property(e => e.Atflechaqueconecta)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("ATFLECHAQUECONECTA");
            entity.Property(e => e.Atproyid).HasColumnName("ATPROYID");
            entity.Property(e => e.Attareaid).HasColumnName("ATTAREAID");
            entity.Property(e => e.Atversionid).HasColumnName("ATVERSIONID");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasColumnName("ESTADO_REG");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("FEC_ESTADO_REG");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("FEC_ING_REG");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("FEC_ULT_MODIF_REG");
            entity.Property(e => e.IdAdm).HasColumnName("ID_ADM");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .HasColumnName("ID_FUNCION_ULT_MODIF_REG");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("ID_USUARIO_ING_REG");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("ID_USUARIO_ULT_MODIF_REG");
        });

        modelBuilder.Entity<WflTareageneral>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("WFL_TAREAGENERAL");

            entity.Property(e => e.Atcarpetaparacopiaexp)
                .HasMaxLength(16)
                .IsUnicode(false)
                .HasColumnName("ATCARPETAPARACOPIAEXP");
            entity.Property(e => e.Atclaseformaasig)
                .HasMaxLength(512)
                .IsUnicode(false)
                .HasColumnName("ATCLASEFORMAASIG");
            entity.Property(e => e.Atdiagid)
                .HasMaxLength(16)
                .IsUnicode(false)
                .HasColumnName("ATDIAGID");
            entity.Property(e => e.Atformaasig).HasColumnName("ATFORMAASIG");
            entity.Property(e => e.Atmetodoformaasig)
                .HasMaxLength(24)
                .IsUnicode(false)
                .HasColumnName("ATMETODOFORMAASIG");
            entity.Property(e => e.Atproyid).HasColumnName("ATPROYID");
            entity.Property(e => e.Attareaid).HasColumnName("ATTAREAID");
            entity.Property(e => e.Attiempoesperado).HasColumnName("ATTIEMPOESPERADO");
            entity.Property(e => e.Atversionid).HasColumnName("ATVERSIONID");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasColumnName("ESTADO_REG");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("FEC_ESTADO_REG");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("FEC_ING_REG");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("FEC_ULT_MODIF_REG");
            entity.Property(e => e.IdAdm).HasColumnName("ID_ADM");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .HasColumnName("ID_FUNCION_ULT_MODIF_REG");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("ID_USUARIO_ING_REG");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("ID_USUARIO_ULT_MODIF_REG");
        });

        modelBuilder.Entity<WflTipoexp>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("WFL_TIPOEXP");

            entity.Property(e => e.Atatributos)
                .HasColumnType("text")
                .HasColumnName("ATATRIBUTOS");
            entity.Property(e => e.Atclase)
                .HasMaxLength(24)
                .IsUnicode(false)
                .HasColumnName("ATCLASE");
            entity.Property(e => e.Atdescripcion)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("ATDESCRIPCION");
            entity.Property(e => e.Atmetodo)
                .HasMaxLength(24)
                .IsUnicode(false)
                .HasColumnName("ATMETODO");
            entity.Property(e => e.Atrepresentacion).HasColumnName("ATREPRESENTACION");
            entity.Property(e => e.Attipoexpid)
                .HasMaxLength(16)
                .IsUnicode(false)
                .HasColumnName("ATTIPOEXPID");
            entity.Property(e => e.Attitulo)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("ATTITULO");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasColumnName("ESTADO_REG");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("FEC_ESTADO_REG");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("FEC_ING_REG");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("FEC_ULT_MODIF_REG");
            entity.Property(e => e.IdAdm).HasColumnName("ID_ADM");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .HasColumnName("ID_FUNCION_ULT_MODIF_REG");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("ID_USUARIO_ING_REG");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("ID_USUARIO_ULT_MODIF_REG");
        });

        modelBuilder.Entity<WmsTmpDetalleEmbarque>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("WMS_TmpDetalleEmbarque");

            entity.Property(e => e.Divcodigo).HasColumnName("divcodigo");
            entity.Property(e => e.Linea).HasColumnName("linea");
            entity.Property(e => e.PEmbarqueCabId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmbarqueCabId");
            entity.Property(e => e.Pempid)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pempid");
            entity.Property(e => e.Tiporecepcion)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("tiporecepcion");
            entity.Property(e => e.Unicodigo).HasColumnName("unicodigo");
        });

        modelBuilder.Entity<WsCcoTmpCarta>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("WsCco_TmpCartas");

            entity.HasIndex(e => e.CodOwner, "WsCcoI_TmpCartas01");

            entity.Property(e => e.CodOwner)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EntRazonSocial)
                .HasMaxLength(120)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.EntRut)
                .HasMaxLength(12)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.PEntId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEntId");
        });

        modelBuilder.Entity<WsTLineasModificada>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("wsT_LineasModificadas");

            entity.Property(e => e.POpeLogtCabId)
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("pOpeLogtCabId");
            entity.Property(e => e.TipoRecepcion)
                .HasMaxLength(3)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<WsTParametro>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("WsT_Parametros");

            entity.Property(e => e.IdFuncionalidadAjuEnt)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_FuncionalidadAjuEnt");
            entity.Property(e => e.IdFuncionalidadAjuSal)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_FuncionalidadAjuSal");
            entity.Property(e => e.IdFuncionalidadDesTra)
                .HasMaxLength(16)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("Id_FuncionalidadDesTra");
            entity.Property(e => e.PEmpId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pEmpId");
            entity.Property(e => e.PTipoOpeAjuEntId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTipoOpeAjuEntId");
            entity.Property(e => e.PTipoOpeAjuSalId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTipoOpeAjuSalId");
            entity.Property(e => e.PTipoOpeDesTraId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTipoOpeDesTraId");
            entity.Property(e => e.PTprId)
                .HasColumnType("numeric(9, 0)")
                .HasColumnName("pTprId");
            entity.Property(e => e.PryNumero)
                .HasMaxLength(20)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.TipoDoctoNcdefecto).HasColumnName("TipoDoctoNCDefecto");
            entity.Property(e => e.UnidadEmisoraDefecto).HasColumnType("numeric(9, 0)");
            entity.Property(e => e.UrldatosWms)
                .HasMaxLength(255)
                .IsUnicode(false)
                .IsFixedLength()
                .HasColumnName("URLDatosWMS");
        });

        modelBuilder.Entity<WstBodega>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("wst_Bodegas");

            entity.Property(e => e.PBodegaId)
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("pBodegaId");
        });

        modelBuilder.Entity<XparVtatDoctoventacab>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("XPAR_VTAT_DOCTOVENTACAB");

            entity.Property(e => e.Doctoventacabid)
                .HasColumnType("numeric(18, 0)")
                .HasColumnName("DOCTOVENTACABID");
            entity.Property(e => e.EstadoReg)
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasColumnName("ESTADO_REG");
            entity.Property(e => e.FecEstadoReg)
                .HasColumnType("datetime")
                .HasColumnName("FEC_ESTADO_REG");
            entity.Property(e => e.FecIngReg)
                .HasColumnType("datetime")
                .HasColumnName("FEC_ING_REG");
            entity.Property(e => e.FecUltModifReg)
                .HasColumnType("datetime")
                .HasColumnName("FEC_ULT_MODIF_REG");
            entity.Property(e => e.Fechareferencia1)
                .HasColumnType("datetime")
                .HasColumnName("FECHAREFERENCIA1");
            entity.Property(e => e.Fechareferencia2)
                .HasColumnType("datetime")
                .HasColumnName("FECHAREFERENCIA2");
            entity.Property(e => e.Fechareferencia3)
                .HasColumnType("datetime")
                .HasColumnName("FECHAREFERENCIA3");
            entity.Property(e => e.Fechareferencia4)
                .HasColumnType("datetime")
                .HasColumnName("FECHAREFERENCIA4");
            entity.Property(e => e.Fechareferencia5)
                .HasColumnType("datetime")
                .HasColumnName("FECHAREFERENCIA5");
            entity.Property(e => e.Folioreferencia1)
                .HasMaxLength(18)
                .IsUnicode(false)
                .HasColumnName("FOLIOREFERENCIA1");
            entity.Property(e => e.Folioreferencia2)
                .HasMaxLength(18)
                .IsUnicode(false)
                .HasColumnName("FOLIOREFERENCIA2");
            entity.Property(e => e.Folioreferencia3)
                .HasMaxLength(18)
                .IsUnicode(false)
                .HasColumnName("FOLIOREFERENCIA3");
            entity.Property(e => e.Folioreferencia4)
                .HasMaxLength(18)
                .IsUnicode(false)
                .HasColumnName("FOLIOREFERENCIA4");
            entity.Property(e => e.Folioreferencia5)
                .HasMaxLength(18)
                .IsUnicode(false)
                .HasColumnName("FOLIOREFERENCIA5");
            entity.Property(e => e.IdFuncionUltModifReg)
                .HasMaxLength(16)
                .IsUnicode(false)
                .HasColumnName("ID_FUNCION_ULT_MODIF_REG");
            entity.Property(e => e.IdUsuarioIngReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("ID_USUARIO_ING_REG");
            entity.Property(e => e.IdUsuarioUltModifReg)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("ID_USUARIO_ULT_MODIF_REG");
            entity.Property(e => e.Razonreferencia1)
                .HasMaxLength(90)
                .IsUnicode(false)
                .HasColumnName("RAZONREFERENCIA1");
            entity.Property(e => e.Razonreferencia2)
                .HasMaxLength(90)
                .IsUnicode(false)
                .HasColumnName("RAZONREFERENCIA2");
            entity.Property(e => e.Razonreferencia3)
                .HasMaxLength(90)
                .IsUnicode(false)
                .HasColumnName("RAZONREFERENCIA3");
            entity.Property(e => e.Razonreferencia4)
                .HasMaxLength(90)
                .IsUnicode(false)
                .HasColumnName("RAZONREFERENCIA4");
            entity.Property(e => e.Razonreferencia5)
                .HasMaxLength(90)
                .IsUnicode(false)
                .HasColumnName("RAZONREFERENCIA5");
            entity.Property(e => e.Tiporeferencia1)
                .HasMaxLength(3)
                .IsUnicode(false)
                .HasColumnName("TIPOREFERENCIA1");
            entity.Property(e => e.Tiporeferencia2)
                .HasMaxLength(3)
                .IsUnicode(false)
                .HasColumnName("TIPOREFERENCIA2");
            entity.Property(e => e.Tiporeferencia3)
                .HasMaxLength(3)
                .IsUnicode(false)
                .HasColumnName("TIPOREFERENCIA3");
            entity.Property(e => e.Tiporeferencia4)
                .HasMaxLength(3)
                .IsUnicode(false)
                .HasColumnName("TIPOREFERENCIA4");
            entity.Property(e => e.Tiporeferencia5)
                .HasMaxLength(3)
                .IsUnicode(false)
                .HasColumnName("TIPOREFERENCIA5");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}
